/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2015. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 */

#ifndef _AUDIO_HW_REG_H
#define _AUDIO_HW_REG_H

#define AFE_INTERNAL_SRAM_MAP_BASE (0xD1211000)
#define AFE_INTERNAL_SRAM_CM4_MAP_BASE (0xD1211000)
#define AFE_INTERNAL_SRAM_PHY_BASE  (0x11211000)
#define AFE_BASE                (0xD1210000)


#define AFE_IRQ1_FLAG 0x1
#define AFE_IRQ1_SOURCE 0x01
#define AFE_IRQ2_FLAG 0x2
#define AFE_IRQ2_SOURCE 0x02
#define AFE_IRQ7_FLAG 0x40
#define AFE_IRQ7_SOURCE 0x40
#define AFE_IRQ14_FLAG 0x4000
#define AFE_IRQ14_SOURCE 0x4000

#define DL3_ON       5

#define AFE_IRQ_MASK 0x7fff

#define AFE_DAC_CON0            (AFE_BASE + 0x0010)
#define AFE_DL1_BASE            (AFE_BASE + 0x0054)
#define AFE_DL1_CUR             (AFE_BASE + 0x005c)
#define AFE_DL1_END             (AFE_BASE + 0x0064)
#define AFE_DL3_CUR             (AFE_BASE + 0x0094)
#define AFE_AWB_BASE            (AFE_BASE + 0x0864)
#define AFE_AWB_END             (AFE_BASE + 0x0874)
#define AFE_AWB_CUR             (AFE_BASE + 0x086C)
#define AFE_AWB2_BASE           (AFE_BASE + 0x0880)
#define AFE_AWB2_END            (AFE_BASE + 0x0890)
#define AFE_AWB2_CUR            (AFE_BASE + 0x0888)
#define AFE_AWB2_BASE_MSB       (AFE_BASE + 0x087c)
#define AFE_AWB2_END_MSB        (AFE_BASE + 0x088c)
#define AFE_AWB2_CUR_MSB        (AFE_BASE + 0x0884)
#define AFE_VUL_D2_BASE         (AFE_BASE + 0x0350)
#define AFE_VUL_D2_END          (AFE_BASE + 0x0358)
#define AFE_VUL_D2_CUR          (AFE_BASE + 0x035C)
#define AFE_IRQ_MCU_STATUS      (AFE_BASE + 0x03A4)
#define AFE_IRQ_MCU_EN1         (AFE_BASE + 0x030C)
#define AFE_IRQ_MCU_EN          (AFE_BASE + 0x03B4)
#define AFE_IRQ_MCU_CLR         (AFE_BASE + 0x03A8)

#define AFE_IRQ_MCU_CON2        (AFE_BASE + 0x02E8)
#define AFE_IRQ_MCU_CNT14       (AFE_BASE + 0x060C)
#define AFE_IRQ_MCU_SCP_EN      (AFE_BASE + 0x03D4)
#define AFE_IRQ_MCU_CON         (AFE_BASE + 0x03A0)
#define AFE_IRQ_MCU_MISS_CLR    (AFE_BASE + 0x03F8)

#define AFE_MAXLENGTH           (AFE_BASE + 0x0F34)

#define SCP_IRQ_EN_REG          AFE_IRQ_MCU_SCP_EN
#define SCP_IRQ_EN_REG_MASK     (0xffffffff)
#define SCP_IRQ_SHIFT_BIT       (0)

enum {
	MT6779_IRQ_0,
	MT6779_IRQ_1,
	MT6779_IRQ_2,
	MT6779_IRQ_3,
	MT6779_IRQ_4,
	MT6779_IRQ_5,
	MT6779_IRQ_6,
	MT6779_IRQ_7,
	MT6779_IRQ_8,
	MT6779_IRQ_9,
	MT6779_IRQ_10,
	MT6779_IRQ_11,
	MT6779_IRQ_12,
	MT6779_IRQ_13,
	MT6779_IRQ_14,
	MT6779_IRQ_15,
	MT6779_IRQ_16,
	MT6779_IRQ_17,
	MT6779_IRQ_18,
	MT6779_IRQ_19,
	MT6779_IRQ_20,
	MT6779_IRQ_21,
	MT6779_IRQ_22,
	MT6779_IRQ_23,
	MT6779_IRQ_24,
	MT6779_IRQ_25,
	MT6779_IRQ_26,
	MT6779_IRQ_31,	/* used only for TDM */
	MT6779_IRQ_NUM,
};

enum {
	MT6779_MEMIF_DL1,
	MT6779_MEMIF_DL12,
	MT6779_MEMIF_DL2,
	MT6779_MEMIF_DL3,
	MT6779_MEMIF_DL4,
	MT6779_MEMIF_DL5,
	MT6779_MEMIF_DL6,
	MT6779_MEMIF_DL7,
	MT6779_MEMIF_DL8,
	MT6779_MEMIF_DAI,
	MT6779_MEMIF_DAI2,
	MT6779_MEMIF_MOD_DAI,
	MT6779_MEMIF_VUL12,
	MT6779_MEMIF_VUL2,
	MT6779_MEMIF_VUL3,
	MT6779_MEMIF_VUL4,
	MT6779_MEMIF_VUL5,
	MT6779_MEMIF_VUL6,
	MT6779_MEMIF_AWB,
	MT6779_MEMIF_AWB2,
	MT6779_MEMIF_HDMI,
	MT6779_MEMIF_NUM,
	MT6779_DAI_ADDA = MT6779_MEMIF_NUM,
	MT6779_DAI_ADDA_CH34,
	MT6779_DAI_VOW,
	MT6779_DAI_CONNSYS_I2S,
	MT6779_DAI_I2S_0,
	MT6779_DAI_I2S_1,
	MT6779_DAI_I2S_2,
	MT6779_DAI_I2S_3,
	MT6779_DAI_I2S_5,
	MT6779_DAI_HW_GAIN_1,
	MT6779_DAI_HW_GAIN_2,
	MT6779_DAI_PCM_1,
	MT6779_DAI_PCM_2,
	MT6779_DAI_TDM,
	MT6779_DAI_HOSTLESS_LPBK,
	MT6779_DAI_HOSTLESS_FM,
	MT6779_DAI_HOSTLESS_SPEECH,
	MT6779_DAI_HOSTLESS_SPH_ECHO_REF,
	MT6779_DAI_HOSTLESS_SPK_INIT,
	MT6779_DAI_HOSTLESS_IMPEDANCE,
	MT6779_DAI_HOSTLESS_UL1,
	MT6779_DAI_HOSTLESS_UL2,
	MT3886_DAI_HOSTLESS_UL3,
	MT3886_DAI_HOSTLESS_UL6,
	MT3886_DAI_HOSTLESS_DSP_DL,
	MT6779_DAI_NUM,
};

#endif  // _AUDIO_HW_REG_H
