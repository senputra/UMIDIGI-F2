/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "MTK-EM"
 * 	found in "MAPI-MIB v1.9.2.asn"
 * 	`asn1c -fcompound-names`
 */

#ifndef _MAPIMmInfo_H_
#define _MAPIMmInfo_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <BOOLEAN.h>
#include "MAPIAccessClassLevel.h"
#include "MAPIPpacDomainType.h"
#include "MAPIIdentityType.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* MAPIMmInfo */
typedef struct MAPIMmInfo {
    long    *t3212Value /* OPTIONAL */;
    long    *attFlag    /* OPTIONAL */;
    long    *mmCause    /* OPTIONAL */;
    long    *mmState    /* OPTIONAL */;
    struct MAPIMmInfo__mcc {
        A_SEQUENCE_OF(long) list;

        /* Context for parsing across buffer boundaries */
        asn_struct_ctx_t _asn_ctx;
    } *mcc;
    struct MAPIMmInfo__mnc {
        A_SEQUENCE_OF(long) list;

        /* Context for parsing across buffer boundaries */
        asn_struct_ctx_t _asn_ctx;
    } *mnc;
    struct MAPIMmInfo__loc {
        A_SEQUENCE_OF(long) list;

        /* Context for parsing across buffer boundaries */
        asn_struct_ctx_t _asn_ctx;
    } *loc;
    long    *rac    /* OPTIONAL */;
    struct MAPIMmInfo__tmsi {
        A_SEQUENCE_OF(long) list;

        /* Context for parsing across buffer boundaries */
        asn_struct_ctx_t _asn_ctx;
    } *tmsi;
    BOOLEAN_t   *t3212Running   /* OPTIONAL */;
    long    *t3212TimerValue    /* OPTIONAL */;
    long    *t3212PassedTime    /* OPTIONAL */;
    MAPIAccessClassLevel_t  *commonAccessClass  /* OPTIONAL */;
    MAPIAccessClassLevel_t  *csAccessClass  /* OPTIONAL */;
    MAPIAccessClassLevel_t  *psAccessClass  /* OPTIONAL */;
    MAPIPpacDomainType_t    *pagingForPpac  /* OPTIONAL */;
    MAPIPpacDomainType_t    *lrForPpac  /* OPTIONAL */;
    MAPIAccessClassLevel_t  *lrAccessClass  /* OPTIONAL */;
    MAPIIdentityType_t  *luReqMobileIdentity    /* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */

    /* Context for parsing across buffer boundaries */
    asn_struct_ctx_t _asn_ctx;
} MAPIMmInfo_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MAPIMmInfo;

#ifdef __cplusplus
}
#endif

#endif  /* _MAPIMmInfo_H_ */
#include <asn_internal.h>
