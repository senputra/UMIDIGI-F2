/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 *
 * MediaTek Inc. (C) 2019. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

#ifndef _H_DDP_HAL_
#define _H_DDP_HAL_

/* DISP Mutex */
#define DISP_MUTEX_TOTAL      (10)
#define DISP_MUTEX_DDP_FIRST  (0)
/* modify from 4 to 3, cause 4 is used for OVL0/OVL1 SW trigger */
#define DISP_MUTEX_DDP_LAST   (3)
#define DISP_MUTEX_DDP_COUNT  (DISP_MUTEX_DDP_LAST - DISP_MUTEX_DDP_FIRST + 1)
#define DISP_MUTEX_MDP_FIRST  (DISP_MUTEX_DDP_LAST + 1)
#define DISP_MUTEX_MDP_COUNT  (3)
#define __DISP_MUTEX_INT_MSK	((1 << (DISP_MUTEX_DDP_COUNT)) - 1)
#define DISP_MUTEX_INT_MSK	\
	((__DISP_MUTEX_INT_MSK << DISP_MUTEX_TOTAL) | __DISP_MUTEX_INT_MSK)

/* DISP MODULE */
enum DISP_MODULE_ENUM {
	DISP_MODULE_OVL0 = 0, /* must start from 0 */
	DISP_MODULE_OVL0_2L,
	DISP_MODULE_RDMA0,
	DISP_MODULE_WDMA0,
	DISP_MODULE_WDMA_VIRTUAL0,
	DISP_MODULE_WDMA_VIRTUAL1, /* 5 */
	DISP_MODULE_COLOR0,
	DISP_MODULE_CCORR0,
	DISP_MODULE_AAL0,
	DISP_MODULE_GAMMA0,
	DISP_MODULE_DITHER0, /* 10 */
	DISP_MODULE_DSI0,
	DISP_MODULE_DSI1,
	DISP_MODULE_DSIDUAL,
	DISP_MODULE_PWM0,
	DISP_MODULE_CONFIG, /* 15 */
	DISP_MODULE_MUTEX,
	DISP_MODULE_SMI_COMMON,
	DISP_MODULE_SMI_LARB0,
	DISP_MODULE_SMI_LARB1,
	DISP_MODULE_MIPI0, /* 20 */
	DISP_MODULE_MIPI1,
	DISP_MODULE_RSZ0,
	DISP_MODULE_RSZ0_VIRTUAL0,
	DISP_MODULE_RSZ0_VIRTUAL1,
	DISP_MODULE_UNKNOWN, /* 25 */
	DISP_MODULE_NUM
};

/* DISP MODULE */
enum DISP_MODULE_TYPE_ENUM {
	DISP_T_OVL = 0, /* must start from 0 */
	DISP_T_RSZ,
	DISP_T_RDMA,
	DISP_T_WDMA,
	DISP_T_COLOR,

	DISP_T_CCORR, /* 5 */
	DISP_T_AAL,
	DISP_T_GAMMA,
	DISP_T_DITHER,
	DISP_T_SPLIT,
	DISP_T_DSI,  /* 10 */

	DISP_T_PWM,
	DISP_T_DPI,
	DISP_T_UNKNOWN,
	DISP_T_NUM,

};

enum dst_module_type {
	DST_MOD_REAL_TIME,
	DST_MOD_WDMA,
};

static inline int check_ddp_module(enum DISP_MODULE_ENUM module)
{
	return module < DISP_MODULE_UNKNOWN;
}

enum DISP_REG_ENUM {
	DISP_REG_CONFIG,
	DISP_REG_OVL0,
	DISP_REG_OVL0_2L,
	DISP_REG_RDMA0,
	DISP_REG_WDMA0,
	DISP_REG_COLOR0, /* 5 */
	DISP_REG_CCORR0,
	DISP_REG_AAL0,
	DISP_REG_GAMMA0,
	DISP_REG_DITHER0,
	DISP_REG_DSI0, /* 10 */
    DISP_REG_DSI1,
	DISP_REG_RSZ0,
	DISP_REG_PWM0,
	DISP_REG_MUTEX,
	DISP_REG_SMI_LARB0, /* 15 */
	DISP_REG_SMI_LARB1,
	DISP_REG_SMI_COMMON,
	DISP_REG_MIPI0,
	DISP_REG_MIPI1,
	DISP_REG_NUM
};

enum OVL_LAYER_SOURCE {
	OVL_LAYER_SOURCE_MEM = 0,
	OVL_LAYER_SOURCE_RESERVED = 1,
	OVL_LAYER_SOURCE_SCL = 2,
	OVL_LAYER_SOURCE_PQ = 3,
};

enum OVL_LAYER_SECURE_MODE {
	OVL_LAYER_NORMAL_BUFFER = 0,
	OVL_LAYER_SECURE_BUFFER = 1,
	OVL_LAYER_PROTECTED_BUFFER = 2
};

enum CMDQ_SWITCH {
	CMDQ_DISABLE = 0,
	CMDQ_ENABLE
};

enum CMDQ_STATE {
	CMDQ_WAIT_LCM_TE,
	CMDQ_BEFORE_STREAM_SOF,
	CMDQ_WAIT_STREAM_EOF_EVENT,
	CMDQ_CHECK_IDLE_AFTER_STREAM_EOF,
	CMDQ_AFTER_STREAM_EOF,
	CMDQ_ESD_CHECK_READ,
	CMDQ_ESD_CHECK_CMP,
	CMDQ_ESD_ALLC_SLOT,
	CMDQ_ESD_FREE_SLOT,
	CMDQ_STOP_VDO_MODE,
	CMDQ_START_VDO_MODE,
	CMDQ_DSI_RESET,
	CMDQ_AFTER_STREAM_SOF,
	CMDQ_DSI_LFR_MODE,
	CMDQ_RESET_AFTER_STREAM_EOF,
};

enum DDP_IRQ_LEVEL {
	DDP_IRQ_LEVEL_ALL = 0,
	DDP_IRQ_LEVEL_NONE,
	DDP_IRQ_LEVEL_ERROR
};


#endif
