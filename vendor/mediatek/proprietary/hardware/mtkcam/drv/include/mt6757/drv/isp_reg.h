#ifndef _ISP_REG_H_
#define _ISP_REG_H_

//include for reg size
#include "camera_isp.h"

#ifndef MFALSE
#define MFALSE 0
#endif
#ifndef MTRUE
#define MTRUE 1
#endif
#ifndef MUINT8
typedef unsigned char MUINT8;
#endif

#ifndef MUINT32
typedef unsigned int MUINT32;
#endif
#ifndef MINT32
typedef int MINT32;
#endif
#ifndef MBOOL
typedef int MBOOL;
#endif

#define ISP_BITS(RegBase, RegName, FieldName)  (RegBase->RegName.Bits.FieldName)
#define ISP_REG(RegBase, RegName) (RegBase->RegName.Raw)

/**
    REG size for each module is 0x1000
*/
#define REG_SIZE        (ISP_REG_RANGE)
#define CAM_BASE_RANGE  (REG_SIZE)
#define CAM_BASE_RANGE_SPECIAL  (sizeof(cam_reg_t)) //for CQ special baseaddress
#define UNI_BASE_RANGE  (REG_SIZE)
#define DIP_BASE_RANGE_SPECIAL  (ISP_REG_PER_DIP_RANGE)
#define CAMSV_BASE_RANGE    (REG_SIZE)
#define FDVT_BASE_RANGE (REG_SIZE)
#define WPE_BASE_RANGE  (REG_SIZE)
#define RSC_BASE_RANGE  (REG_SIZE)
#define DPE_BASE_RANGE  (REG_SIZE)

typedef unsigned int FIELD;
typedef unsigned int UINT32;
typedef unsigned int u32;

/* auto insert ralf auto gen below */
#if 0
typedef volatile union _MIPI_REG_RX_ANA00_CSI0_
{
		volatile struct	/* 0x10217000 */
		{
				FIELD  RG_CSI0_LNRC_LDO_OUT_EN               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRC_INPUT_SEL                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRC_LPRX_IPLUS               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRC_LPRX_IMINUS              :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRC_HSRX_IPLUS               :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRC_HSRX_IMINUS              :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRC_RT_CODE                  :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                :  3;		/* 16..18, 0x00070000 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_EN            :  1;		/* 19..19, 0x00080000 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_CODE          :  4;		/* 20..23, 0x00F00000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA00_CSI0;	/* MIPI_RX_ANA00_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA04_CSI0_
{
		volatile struct	/* 0x10217004 */
		{
				FIELD  RG_CSI0_LNRD0_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD0_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD0_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD0_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD0_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD0_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD0_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD0_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD0_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD0_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD0_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA04_CSI0;	/* MIPI_RX_ANA04_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA08_CSI0_
{
		volatile struct	/* 0x10217008 */
		{
				FIELD  RG_CSI0_LNRD1_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD1_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD1_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD1_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD1_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD1_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD1_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD1_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD1_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD1_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD1_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA08_CSI0;	/* MIPI_RX_ANA08_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA0C_CSI0_
{
		volatile struct	/* 0x1021700C */
		{
				FIELD  RG_CSI0_LNRD2_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD2_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD2_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD2_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD2_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD2_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD2_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD2_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD2_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD2_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD2_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA0C_CSI0;	/* MIPI_RX_ANA0C_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA10_CSI0_
{
		volatile struct	/* 0x10217010 */
		{
				FIELD  RG_CSI0_LNRD3_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD3_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD3_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD3_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD3_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD3_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD3_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD3_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD3_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD3_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD3_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA10_CSI0;	/* MIPI_RX_ANA10_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA20_CSI0_
{
		volatile struct	/* 0x10217020 */
		{
				FIELD  RG_CSI0_LDO_CORE_EN                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD_HSRX_BCLK_INVERT         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_BCLK_SEL                      :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RG_CSI0_HSDET_GATING_EN               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RG_CSI0_4XCLK_INVERT                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RG_CSI0_4XCLK_DISABLE                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_CSI0_PRESERVE                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  RG_CSI0_DELAY_TSTEN                   :  1;		/* 12..12, 0x00001000 */
				FIELD  RG_CSI0_DELAY_POSDIV                  :  1;		/* 13..13, 0x00002000 */
				FIELD  RG_CSI0_DELAY_LDOEN                   :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  RG_CSI0_SPARE                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA20_CSI0;	/* MIPI_RX_ANA20_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA24_CSI0_
{
		volatile struct	/* 0x10217024 */
		{
				FIELD  RG_CSI0_BG_CORE_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_BG_CKEN                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_BG_DIV                        :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RG_CSI0_BG_FAST_CHARGE                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  RG_CSI0_BG_R1_TRIM                    :  4;		/*  8..11, 0x00000F00 */
				FIELD  RG_CSI0_BG_R2_TRIM                    :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_V12_SEL                       :  3;		/* 16..18, 0x00070000 */
				FIELD  RG_CSI0_V10_SEL                       :  3;		/* 19..21, 0x00380000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  RG_CSI0_V072_SEL                      :  3;		/* 24..26, 0x07000000 */
				FIELD  RG_CSI0_V04_SEL                       :  3;		/* 27..29, 0x38000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA24_CSI0;	/* MIPI_RX_ANA24_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA28_CSI0_
{
		volatile struct	/* 0x10217028 */
		{
				FIELD  RG_CSI0_V032_SEL                      :  3;		/*  0.. 2, 0x00000007 */
				FIELD  RG_CSI0_V02_SEL                       :  3;		/*  3.. 5, 0x00000038 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA28_CSI0;	/* MIPI_RX_ANA28_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA30_CSI0_
{
		volatile struct	/* 0x10217030 */
		{
				FIELD  DA_CSI0_LNRD_HSRX_SYNC_INIT           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  AD_CSI0_LNRD_HSDET                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  DA_CSI0_LNRC_LPRX_EN                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AD_CSI0_LNRC_LPRX_DP                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  AD_CSI0_LNRC_LPRX_DN                  :  1;		/*  6.. 6, 0x00000040 */
				FIELD  DA_CSI0_LNRC_HSRX_EN                  :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AD_CSI0_LNRC_HSRX_OFFSET_OUT          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DA_CSI0_LNRD0_LPRX_EN                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  AD_CSI0_LNRD0_LPRX_DP                 :  1;		/* 10..10, 0x00000400 */
				FIELD  AD_CSI0_LNRD0_LPRX_DN                 :  1;		/* 11..11, 0x00000800 */
				FIELD  DA_CSI0_LNRD0_HSRX_EN                 :  1;		/* 12..12, 0x00001000 */
				FIELD  AD_CSI0_LNRD0_HSRX_OFFSET_OUT         :  1;		/* 13..13, 0x00002000 */
				FIELD  DA_CSI0_LNRD1_LPRX_EN                 :  1;		/* 14..14, 0x00004000 */
				FIELD  AD_CSI0_LNRD1_LPRX_DP                 :  1;		/* 15..15, 0x00008000 */
				FIELD  AD_CSI0_LNRD1_LPRX_DN                 :  1;		/* 16..16, 0x00010000 */
				FIELD  DA_CSI0_LNRD1_HSRX_EN                 :  1;		/* 17..17, 0x00020000 */
				FIELD  AD_CSI0_LNRD1_HSRX_OFFSET_OUT         :  1;		/* 18..18, 0x00040000 */
				FIELD  DA_CSI0_LNRD2_LPRX_EN                 :  1;		/* 19..19, 0x00080000 */
				FIELD  AD_CSI0_LNRD2_LPRX_DP                 :  1;		/* 20..20, 0x00100000 */
				FIELD  AD_CSI0_LNRD2_LPRX_DN                 :  1;		/* 21..21, 0x00200000 */
				FIELD  DA_CSI0_LNRD2_HSRX_EN                 :  1;		/* 22..22, 0x00400000 */
				FIELD  AD_CSI0_LNRD2_HSRX_OFFSET_OUT         :  1;		/* 23..23, 0x00800000 */
				FIELD  DA_CSI0_LNRD3_LPRX_EN                 :  1;		/* 24..24, 0x01000000 */
				FIELD  AD_CSI0_LNRD3_LPRX_DP                 :  1;		/* 25..25, 0x02000000 */
				FIELD  AD_CSI0_LNRD3_LPRX_DN                 :  1;		/* 26..26, 0x04000000 */
				FIELD  DA_CSI0_LNRD3_HSRX_EN                 :  1;		/* 27..27, 0x08000000 */
				FIELD  AD_CSI0_LNRD3_HSRX_OFFSET_OUT         :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA30_CSI0;	/* MIPI_RX_ANA30_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA44_CSI0_
{
		volatile struct	/* 0x10217044 */
		{
				FIELD  MIPI_RX_MON_MUX                       :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA44_CSI0;	/* MIPI_RX_ANA44_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA4C_CSI0_
{
		volatile struct	/* 0x1021704C */
		{
				FIELD  RG_MIPI_GPI0_IES                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_MIPI_GPI0_SMT                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_MIPI_GPI0_PU                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RG_MIPI_GPI0_PD                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RG_MIPI_GPI0_RDSEL                    :  2;		/*  4.. 5, 0x00000030 */
				FIELD  RG_MIPI_GPI1_IES                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RG_MIPI_GPI1_SMT                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_MIPI_GPI1_PU                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_MIPI_GPI1_PD                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_MIPI_GPI1_RDSEL                    :  2;		/* 10..11, 0x00000C00 */
				FIELD  RG_MIPI_GPI2_IES                      :  1;		/* 12..12, 0x00001000 */
				FIELD  RG_MIPI_GPI2_SMT                      :  1;		/* 13..13, 0x00002000 */
				FIELD  RG_MIPI_GPI2_PU                       :  1;		/* 14..14, 0x00004000 */
				FIELD  RG_MIPI_GPI2_PD                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RG_MIPI_GPI2_RDSEL                    :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_MIPI_GPI3_IES                      :  1;		/* 18..18, 0x00040000 */
				FIELD  RG_MIPI_GPI3_SMT                      :  1;		/* 19..19, 0x00080000 */
				FIELD  RG_MIPI_GPI3_PU                       :  1;		/* 20..20, 0x00100000 */
				FIELD  RG_MIPI_GPI3_PD                       :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_MIPI_GPI3_RDSEL                    :  2;		/* 22..23, 0x00C00000 */
				FIELD  RG_MIPI_GPI4_IES                      :  1;		/* 24..24, 0x01000000 */
				FIELD  RG_MIPI_GPI4_SMT                      :  1;		/* 25..25, 0x02000000 */
				FIELD  RG_MIPI_GPI4_PU                       :  1;		/* 26..26, 0x04000000 */
				FIELD  RG_MIPI_GPI4_PD                       :  1;		/* 27..27, 0x08000000 */
				FIELD  RG_MIPI_GPI4_RDSEL                    :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA4C_CSI0;	/* MIPI_RX_ANA4C_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA50_CSI0_
{
		volatile struct	/* 0x10217050 */
		{
				FIELD  RG_MIPI_GPI5_IES                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_MIPI_GPI5_SMT                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_MIPI_GPI5_PU                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RG_MIPI_GPI5_PD                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RG_MIPI_GPI5_RDSEL                    :  2;		/*  4.. 5, 0x00000030 */
				FIELD  RG_MIPI_GPI6_IES                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RG_MIPI_GPI6_SMT                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_MIPI_GPI6_PU                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_MIPI_GPI6_PD                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_MIPI_GPI6_RDSEL                    :  2;		/* 10..11, 0x00000C00 */
				FIELD  RG_MIPI_GPI7_IES                      :  1;		/* 12..12, 0x00001000 */
				FIELD  RG_MIPI_GPI7_SMT                      :  1;		/* 13..13, 0x00002000 */
				FIELD  RG_MIPI_GPI7_PU                       :  1;		/* 14..14, 0x00004000 */
				FIELD  RG_MIPI_GPI7_PD                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RG_MIPI_GPI7_RDSEL                    :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_MIPI_GPI8_IES                      :  1;		/* 18..18, 0x00040000 */
				FIELD  RG_MIPI_GPI8_SMT                      :  1;		/* 19..19, 0x00080000 */
				FIELD  RG_MIPI_GPI8_PU                       :  1;		/* 20..20, 0x00100000 */
				FIELD  RG_MIPI_GPI8_PD                       :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_MIPI_GPI8_RDSEL                    :  2;		/* 22..23, 0x00C00000 */
				FIELD  RG_MIPI_GPI9_IES                      :  1;		/* 24..24, 0x01000000 */
				FIELD  RG_MIPI_GPI9_SMT                      :  1;		/* 25..25, 0x02000000 */
				FIELD  RG_MIPI_GPI9_PU                       :  1;		/* 26..26, 0x04000000 */
				FIELD  RG_MIPI_GPI9_PD                       :  1;		/* 27..27, 0x08000000 */
				FIELD  RG_MIPI_GPI9_RDSEL                    :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA50_CSI0;	/* MIPI_RX_ANA50_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA54_CSI0_
{
		volatile struct	/* 0x10217054 */
		{
				FIELD  APB_ASYNC_CNT_EN                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  APB_ASYNC_ERR                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  6;		/*  2.. 7, 0x000000FC */
				FIELD  APB_ASYNC_ERR_ADDR                    : 10;		/*  8..17, 0x0003FF00 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA54_CSI0;	/* MIPI_RX_ANA54_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA58_CSI0_
{
		volatile struct	/* 0x10217058 */
		{
				FIELD  csi0_byteclk_cnt                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA58_CSI0;	/* MIPI_RX_ANA58_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA78_CSI0_
{
		volatile struct	/* 0x10217078 */
		{
				FIELD  DA_CSI0_LNRC_HSRX_DELAY_EN            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRC_HSRX_DELAY_APPLY         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRC_HSRX_DELAY_CODE          :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA78_CSI0;	/* MIPI_RX_ANA78_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA7C_CSI0_
{
		volatile struct	/* 0x1021707C */
		{
				FIELD  DA_CSI0_LNRD0_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD0_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD0_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA7C_CSI0;	/* MIPI_RX_ANA7C_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA80_CSI0_
{
		volatile struct	/* 0x10217080 */
		{
				FIELD  DA_CSI0_LNRD1_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD1_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD1_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA80_CSI0;	/* MIPI_RX_ANA80_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA84_CSI0_
{
		volatile struct	/* 0x10217084 */
		{
				FIELD  DA_CSI0_LNRD2_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD2_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD2_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA84_CSI0;	/* MIPI_RX_ANA84_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA88_CSI0_
{
		volatile struct	/* 0x10217088 */
		{
				FIELD  DA_CSI0_LNRD3_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD3_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD3_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA88_CSI0;	/* MIPI_RX_ANA88_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA8C_CSI0_
{
		volatile struct	/* 0x1021708C */
		{
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA8C_CSI0;	/* MIPI_RX_ANA8C_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA90_CSI0_
{
		volatile struct	/* 0x10217090 */
		{
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA90_CSI0;	/* MIPI_RX_ANA90_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA94_CSI0_
{
		volatile struct	/* 0x10217094 */
		{
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA94_CSI0;	/* MIPI_RX_ANA94_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA98_CSI0_
{
		volatile struct	/* 0x10217098 */
		{
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA98_CSI0;	/* MIPI_RX_ANA98_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAA0_CSI0_
{
		volatile struct	/* 0x102170A0 */
		{
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_EN            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_APPLY         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_CODE          :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAA0_CSI0;	/* MIPI_RX_ANAA0_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAB0_CSI0_
{
		volatile struct	/* 0x102170B0 */
		{
				FIELD  Delay_APPLY_MODE                      :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  3;		/*  4.. 6, 0x00000070 */
				FIELD  DESKEW_SW_RST                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DESKEW_TRIGGER_MODE                   :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  DESKEW_ACC_MODE                       :  4;		/* 12..15, 0x0000F000 */
				FIELD  DESKEW_CSI2_RST_ENABLE                :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 13;		/* 17..29, 0x3FFE0000 */
				FIELD  DESKEW_IP_SEL                         :  1;		/* 30..30, 0x40000000 */
				FIELD  DESKEW_ENABLE                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAB0_CSI0;	/* MIPI_RX_ANAB0_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAB4_CSI0_
{
		volatile struct	/* 0x102170B4 */
		{
				FIELD  SYNC_CODE_MASK                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  EXPECTED_SYNC_CODE                    : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAB4_CSI0;	/* MIPI_RX_ANAB4_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAB8_CSI0_
{
		volatile struct	/* 0x102170B8 */
		{
				FIELD  DESKEW_SETUP_TIME                     :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  DESKEW_HOLD_TIME                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  DESKEW_TIME_OUT                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DESKEW_TIME_OUT_EN                    :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAB8_CSI0;	/* MIPI_RX_ANAB8_CSI0 */

typedef volatile union _MIPI_REG_RX_ANABC_CSI0_
{
		volatile struct	/* 0x102170BC */
		{
				FIELD  DESKEW_DETECTION_MODE                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  DESKEW_DETECTION_CNT                  :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  DESKEW_DELAY_APPLY_MODE               :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  DESKEW_LANE_NUMBER                    :  2;		/* 24..25, 0x03000000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANABC_CSI0;	/* MIPI_RX_ANABC_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAC0_CSI0_
{
		volatile struct	/* 0x102170C0 */
		{
				FIELD  DESKEW_INTERRUPT_ENABLE               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 23;		/*  8..30, 0x7FFFFF00 */
				FIELD  DESKEW_INTERRUPT_W1C_EN               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAC0_CSI0;	/* MIPI_RX_ANAC0_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAC4_CSI0_
{
		volatile struct	/* 0x102170C4 */
		{
				FIELD  DESKEW_INTERRUPT_STATUS               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAC4_CSI0;	/* MIPI_RX_ANAC4_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAC8_CSI0_
{
		volatile struct	/* 0x102170C8 */
		{
				FIELD  DESKEW_DEBUG_MUX_SELECT               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAC8_CSI0;	/* MIPI_RX_ANAC8_CSI0 */

typedef volatile union _MIPI_REG_RX_ANACC_CSI0_
{
		volatile struct	/* 0x102170CC */
		{
				FIELD  DESKEW_DEBUG_OUTPUTS                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANACC_CSI0;	/* MIPI_RX_ANACC_CSI0 */

typedef volatile union _MIPI_REG_RX_ANAD0_CSI0_
{
		volatile struct	/* 0x102170D0 */
		{
				FIELD  DESKEW_DELAY_LENGTH                   :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAD0_CSI0;	/* MIPI_RX_ANAD0_CSI0 */

typedef volatile union _MIPI_REG_RX_ANA00_CSI1_
{
		volatile struct	/* 0x10218000 */
		{
				FIELD  RG_CSI0_LNRC_LDO_OUT_EN               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRC_INPUT_SEL                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRC_LPRX_IPLUS               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRC_LPRX_IMINUS              :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRC_HSRX_IPLUS               :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRC_HSRX_IMINUS              :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRC_RT_CODE                  :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                :  3;		/* 16..18, 0x00070000 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_EN            :  1;		/* 19..19, 0x00080000 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_CODE          :  4;		/* 20..23, 0x00F00000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA00_CSI1;	/* MIPI_RX_ANA00_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA04_CSI1_
{
		volatile struct	/* 0x10218004 */
		{
				FIELD  RG_CSI0_LNRD0_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD0_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD0_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD0_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD0_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD0_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD0_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD0_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD0_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD0_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD0_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA04_CSI1;	/* MIPI_RX_ANA04_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA08_CSI1_
{
		volatile struct	/* 0x10218008 */
		{
				FIELD  RG_CSI0_LNRD1_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD1_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD1_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD1_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD1_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD1_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD1_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD1_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD1_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD1_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD1_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA08_CSI1;	/* MIPI_RX_ANA08_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA0C_CSI1_
{
		volatile struct	/* 0x1021800C */
		{
				FIELD  RG_CSI0_LNRD2_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD2_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD2_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD2_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD2_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD2_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD2_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD2_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD2_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD2_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD2_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA0C_CSI1;	/* MIPI_RX_ANA0C_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA10_CSI1_
{
		volatile struct	/* 0x10218010 */
		{
				FIELD  RG_CSI0_LNRD3_LDO_OUT_EN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  2;		/*  1.. 2, 0x00000006 */
				FIELD  RG_CSI0_LNRD3_INPUT_SEL               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  RG_CSI0_LNRD3_LPRX_IPLUS              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD3_LPRX_IMINUS             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD3_HSRX_IPLUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD3_HSRX_IMINUS             :  1;		/* 11..11, 0x00000800 */
				FIELD  RG_CSI0_LNRD3_RT_CODE                 :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_LNRD3_HSRX_EDGE_SEL           :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_CSI0_LNRD3_HSRX_FORCE_SYNC         :  2;		/* 18..19, 0x000C0000 */
				FIELD  RG_CSI0_LNRD3_HSRX_DET_SEL            :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_CSI0_LNRD3_HSRX_BYPASS_SYNC        :  1;		/* 22..22, 0x00400000 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_EN           :  1;		/* 23..23, 0x00800000 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_CODE         :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA10_CSI1;	/* MIPI_RX_ANA10_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA20_CSI1_
{
		volatile struct	/* 0x10218020 */
		{
				FIELD  RG_CSI0_LDO_CORE_EN                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD_HSRX_BCLK_INVERT         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_BCLK_SEL                      :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RG_CSI0_HSDET_GATING_EN               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RG_CSI0_4XCLK_INVERT                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RG_CSI0_4XCLK_DISABLE                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_CSI0_PRESERVE                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  RG_CSI0_DELAY_TSTEN                   :  1;		/* 12..12, 0x00001000 */
				FIELD  RG_CSI0_DELAY_POSDIV                  :  1;		/* 13..13, 0x00002000 */
				FIELD  RG_CSI0_DELAY_LDOEN                   :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  RG_CSI0_SPARE                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA20_CSI1;	/* MIPI_RX_ANA20_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA24_CSI1_
{
		volatile struct	/* 0x10218024 */
		{
				FIELD  RG_CSI0_BG_CORE_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_BG_CKEN                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_BG_DIV                        :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RG_CSI0_BG_FAST_CHARGE                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  RG_CSI0_BG_R1_TRIM                    :  4;		/*  8..11, 0x00000F00 */
				FIELD  RG_CSI0_BG_R2_TRIM                    :  4;		/* 12..15, 0x0000F000 */
				FIELD  RG_CSI0_V12_SEL                       :  3;		/* 16..18, 0x00070000 */
				FIELD  RG_CSI0_V10_SEL                       :  3;		/* 19..21, 0x00380000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  RG_CSI0_V072_SEL                      :  3;		/* 24..26, 0x07000000 */
				FIELD  RG_CSI0_V04_SEL                       :  3;		/* 27..29, 0x38000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA24_CSI1;	/* MIPI_RX_ANA24_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA28_CSI1_
{
		volatile struct	/* 0x10218028 */
		{
				FIELD  RG_CSI0_V032_SEL                      :  3;		/*  0.. 2, 0x00000007 */
				FIELD  RG_CSI0_V02_SEL                       :  3;		/*  3.. 5, 0x00000038 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA28_CSI1;	/* MIPI_RX_ANA28_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA30_CSI1_
{
		volatile struct	/* 0x10218030 */
		{
				FIELD  DA_CSI0_LNRD_HSRX_SYNC_INIT           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  AD_CSI0_LNRD_HSDET                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  DA_CSI0_LNRC_LPRX_EN                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AD_CSI0_LNRC_LPRX_DP                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  AD_CSI0_LNRC_LPRX_DN                  :  1;		/*  6.. 6, 0x00000040 */
				FIELD  DA_CSI0_LNRC_HSRX_EN                  :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AD_CSI0_LNRC_HSRX_OFFSET_OUT          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DA_CSI0_LNRD0_LPRX_EN                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  AD_CSI0_LNRD0_LPRX_DP                 :  1;		/* 10..10, 0x00000400 */
				FIELD  AD_CSI0_LNRD0_LPRX_DN                 :  1;		/* 11..11, 0x00000800 */
				FIELD  DA_CSI0_LNRD0_HSRX_EN                 :  1;		/* 12..12, 0x00001000 */
				FIELD  AD_CSI0_LNRD0_HSRX_OFFSET_OUT         :  1;		/* 13..13, 0x00002000 */
				FIELD  DA_CSI0_LNRD1_LPRX_EN                 :  1;		/* 14..14, 0x00004000 */
				FIELD  AD_CSI0_LNRD1_LPRX_DP                 :  1;		/* 15..15, 0x00008000 */
				FIELD  AD_CSI0_LNRD1_LPRX_DN                 :  1;		/* 16..16, 0x00010000 */
				FIELD  DA_CSI0_LNRD1_HSRX_EN                 :  1;		/* 17..17, 0x00020000 */
				FIELD  AD_CSI0_LNRD1_HSRX_OFFSET_OUT         :  1;		/* 18..18, 0x00040000 */
				FIELD  DA_CSI0_LNRD2_LPRX_EN                 :  1;		/* 19..19, 0x00080000 */
				FIELD  AD_CSI0_LNRD2_LPRX_DP                 :  1;		/* 20..20, 0x00100000 */
				FIELD  AD_CSI0_LNRD2_LPRX_DN                 :  1;		/* 21..21, 0x00200000 */
				FIELD  DA_CSI0_LNRD2_HSRX_EN                 :  1;		/* 22..22, 0x00400000 */
				FIELD  AD_CSI0_LNRD2_HSRX_OFFSET_OUT         :  1;		/* 23..23, 0x00800000 */
				FIELD  DA_CSI0_LNRD3_LPRX_EN                 :  1;		/* 24..24, 0x01000000 */
				FIELD  AD_CSI0_LNRD3_LPRX_DP                 :  1;		/* 25..25, 0x02000000 */
				FIELD  AD_CSI0_LNRD3_LPRX_DN                 :  1;		/* 26..26, 0x04000000 */
				FIELD  DA_CSI0_LNRD3_HSRX_EN                 :  1;		/* 27..27, 0x08000000 */
				FIELD  AD_CSI0_LNRD3_HSRX_OFFSET_OUT         :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA30_CSI1;	/* MIPI_RX_ANA30_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA44_CSI1_
{
		volatile struct	/* 0x10218044 */
		{
				FIELD  MIPI_RX_MON_MUX                       :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA44_CSI1;	/* MIPI_RX_ANA44_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA4C_CSI1_
{
		volatile struct	/* 0x1021804C */
		{
				FIELD  RG_MIPI_GPI0_IES                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_MIPI_GPI0_SMT                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_MIPI_GPI0_PU                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RG_MIPI_GPI0_PD                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RG_MIPI_GPI0_RDSEL                    :  2;		/*  4.. 5, 0x00000030 */
				FIELD  RG_MIPI_GPI1_IES                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RG_MIPI_GPI1_SMT                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_MIPI_GPI1_PU                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_MIPI_GPI1_PD                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_MIPI_GPI1_RDSEL                    :  2;		/* 10..11, 0x00000C00 */
				FIELD  RG_MIPI_GPI2_IES                      :  1;		/* 12..12, 0x00001000 */
				FIELD  RG_MIPI_GPI2_SMT                      :  1;		/* 13..13, 0x00002000 */
				FIELD  RG_MIPI_GPI2_PU                       :  1;		/* 14..14, 0x00004000 */
				FIELD  RG_MIPI_GPI2_PD                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RG_MIPI_GPI2_RDSEL                    :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_MIPI_GPI3_IES                      :  1;		/* 18..18, 0x00040000 */
				FIELD  RG_MIPI_GPI3_SMT                      :  1;		/* 19..19, 0x00080000 */
				FIELD  RG_MIPI_GPI3_PU                       :  1;		/* 20..20, 0x00100000 */
				FIELD  RG_MIPI_GPI3_PD                       :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_MIPI_GPI3_RDSEL                    :  2;		/* 22..23, 0x00C00000 */
				FIELD  RG_MIPI_GPI4_IES                      :  1;		/* 24..24, 0x01000000 */
				FIELD  RG_MIPI_GPI4_SMT                      :  1;		/* 25..25, 0x02000000 */
				FIELD  RG_MIPI_GPI4_PU                       :  1;		/* 26..26, 0x04000000 */
				FIELD  RG_MIPI_GPI4_PD                       :  1;		/* 27..27, 0x08000000 */
				FIELD  RG_MIPI_GPI4_RDSEL                    :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA4C_CSI1;	/* MIPI_RX_ANA4C_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA50_CSI1_
{
		volatile struct	/* 0x10218050 */
		{
				FIELD  RG_MIPI_GPI5_IES                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_MIPI_GPI5_SMT                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_MIPI_GPI5_PU                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RG_MIPI_GPI5_PD                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RG_MIPI_GPI5_RDSEL                    :  2;		/*  4.. 5, 0x00000030 */
				FIELD  RG_MIPI_GPI6_IES                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RG_MIPI_GPI6_SMT                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_MIPI_GPI6_PU                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_MIPI_GPI6_PD                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_MIPI_GPI6_RDSEL                    :  2;		/* 10..11, 0x00000C00 */
				FIELD  RG_MIPI_GPI7_IES                      :  1;		/* 12..12, 0x00001000 */
				FIELD  RG_MIPI_GPI7_SMT                      :  1;		/* 13..13, 0x00002000 */
				FIELD  RG_MIPI_GPI7_PU                       :  1;		/* 14..14, 0x00004000 */
				FIELD  RG_MIPI_GPI7_PD                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RG_MIPI_GPI7_RDSEL                    :  2;		/* 16..17, 0x00030000 */
				FIELD  RG_MIPI_GPI8_IES                      :  1;		/* 18..18, 0x00040000 */
				FIELD  RG_MIPI_GPI8_SMT                      :  1;		/* 19..19, 0x00080000 */
				FIELD  RG_MIPI_GPI8_PU                       :  1;		/* 20..20, 0x00100000 */
				FIELD  RG_MIPI_GPI8_PD                       :  1;		/* 21..21, 0x00200000 */
				FIELD  RG_MIPI_GPI8_RDSEL                    :  2;		/* 22..23, 0x00C00000 */
				FIELD  RG_MIPI_GPI9_IES                      :  1;		/* 24..24, 0x01000000 */
				FIELD  RG_MIPI_GPI9_SMT                      :  1;		/* 25..25, 0x02000000 */
				FIELD  RG_MIPI_GPI9_PU                       :  1;		/* 26..26, 0x04000000 */
				FIELD  RG_MIPI_GPI9_PD                       :  1;		/* 27..27, 0x08000000 */
				FIELD  RG_MIPI_GPI9_RDSEL                    :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA50_CSI1;	/* MIPI_RX_ANA50_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA54_CSI1_
{
		volatile struct	/* 0x10218054 */
		{
				FIELD  APB_ASYNC_CNT_EN                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  APB_ASYNC_ERR                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  6;		/*  2.. 7, 0x000000FC */
				FIELD  APB_ASYNC_ERR_ADDR                    : 10;		/*  8..17, 0x0003FF00 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA54_CSI1;	/* MIPI_RX_ANA54_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA58_CSI1_
{
		volatile struct	/* 0x10218058 */
		{
				FIELD  csi0_byteclk_cnt                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA58_CSI1;	/* MIPI_RX_ANA58_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA78_CSI1_
{
		volatile struct	/* 0x10218078 */
		{
				FIELD  DA_CSI0_LNRC_HSRX_DELAY_EN            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRC_HSRX_DELAY_APPLY         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRC_HSRX_DELAY_CODE          :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA78_CSI1;	/* MIPI_RX_ANA78_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA7C_CSI1_
{
		volatile struct	/* 0x1021807C */
		{
				FIELD  DA_CSI0_LNRD0_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD0_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD0_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA7C_CSI1;	/* MIPI_RX_ANA7C_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA80_CSI1_
{
		volatile struct	/* 0x10218080 */
		{
				FIELD  DA_CSI0_LNRD1_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD1_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD1_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA80_CSI1;	/* MIPI_RX_ANA80_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA84_CSI1_
{
		volatile struct	/* 0x10218084 */
		{
				FIELD  DA_CSI0_LNRD2_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD2_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD2_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA84_CSI1;	/* MIPI_RX_ANA84_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA88_CSI1_
{
		volatile struct	/* 0x10218088 */
		{
				FIELD  DA_CSI0_LNRD3_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD3_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD3_HSRX_DELAY_CODE         :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA88_CSI1;	/* MIPI_RX_ANA88_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA8C_CSI1_
{
		volatile struct	/* 0x1021808C */
		{
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD0_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA8C_CSI1;	/* MIPI_RX_ANA8C_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA90_CSI1_
{
		volatile struct	/* 0x10218090 */
		{
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD1_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA90_CSI1;	/* MIPI_RX_ANA90_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA94_CSI1_
{
		volatile struct	/* 0x10218094 */
		{
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD2_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA94_CSI1;	/* MIPI_RX_ANA94_CSI1 */

typedef volatile union _MIPI_REG_RX_ANA98_CSI1_
{
		volatile struct	/* 0x10218098 */
		{
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_EN           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_APPLY        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD3_HSRX_DELAY_CODE         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANA98_CSI1;	/* MIPI_RX_ANA98_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAA0_CSI1_
{
		volatile struct	/* 0x102180A0 */
		{
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_EN            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_APPLY         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRC_HSRX_DELAY_CODE          :  6;		/*  2.. 7, 0x000000FC */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAA0_CSI1;	/* MIPI_RX_ANAA0_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAB0_CSI1_
{
		volatile struct	/* 0x102180B0 */
		{
				FIELD  Delay_APPLY_MODE                      :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  3;		/*  4.. 6, 0x00000070 */
				FIELD  DESKEW_SW_RST                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DESKEW_TRIGGER_MODE                   :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  DESKEW_ACC_MODE                       :  4;		/* 12..15, 0x0000F000 */
				FIELD  DESKEW_CSI2_RST_ENABLE                :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 13;		/* 17..29, 0x3FFE0000 */
				FIELD  DESKEW_IP_SEL                         :  1;		/* 30..30, 0x40000000 */
				FIELD  DESKEW_ENABLE                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAB0_CSI1;	/* MIPI_RX_ANAB0_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAB4_CSI1_
{
		volatile struct	/* 0x102180B4 */
		{
				FIELD  SYNC_CODE_MASK                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  EXPECTED_SYNC_CODE                    : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAB4_CSI1;	/* MIPI_RX_ANAB4_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAB8_CSI1_
{
		volatile struct	/* 0x102180B8 */
		{
				FIELD  DESKEW_SETUP_TIME                     :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  DESKEW_HOLD_TIME                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  DESKEW_TIME_OUT                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DESKEW_TIME_OUT_EN                    :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAB8_CSI1;	/* MIPI_RX_ANAB8_CSI1 */

typedef volatile union _MIPI_REG_RX_ANABC_CSI1_
{
		volatile struct	/* 0x102180BC */
		{
				FIELD  DESKEW_DETECTION_MODE                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  DESKEW_DETECTION_CNT                  :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  DESKEW_DELAY_APPLY_MODE               :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  DESKEW_LANE_NUMBER                    :  2;		/* 24..25, 0x03000000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANABC_CSI1;	/* MIPI_RX_ANABC_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAC0_CSI1_
{
		volatile struct	/* 0x102180C0 */
		{
				FIELD  DESKEW_INTERRUPT_ENABLE               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 23;		/*  8..30, 0x7FFFFF00 */
				FIELD  DESKEW_INTERRUPT_W1C_EN               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAC0_CSI1;	/* MIPI_RX_ANAC0_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAC4_CSI1_
{
		volatile struct	/* 0x102180C4 */
		{
				FIELD  DESKEW_INTERRUPT_STATUS               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAC4_CSI1;	/* MIPI_RX_ANAC4_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAC8_CSI1_
{
		volatile struct	/* 0x102180C8 */
		{
				FIELD  DESKEW_DEBUG_MUX_SELECT               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAC8_CSI1;	/* MIPI_RX_ANAC8_CSI1 */

typedef volatile union _MIPI_REG_RX_ANACC_CSI1_
{
		volatile struct	/* 0x102180CC */
		{
				FIELD  DESKEW_DEBUG_OUTPUTS                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANACC_CSI1;	/* MIPI_RX_ANACC_CSI1 */

typedef volatile union _MIPI_REG_RX_ANAD0_CSI1_
{
		volatile struct	/* 0x102180D0 */
		{
				FIELD  DESKEW_DELAY_LENGTH                   :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_ANAD0_CSI1;	/* MIPI_RX_ANAD0_CSI1 */
#endif
typedef volatile union _IMG_REG_CG_CON_
{
		volatile struct	/* 0x15020000 */
		{
				FIELD  LARB7_CKPDN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COMM_CKPDN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DIP_CKPDN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FD_CKPDN                              :  1;		/*  3.. 3, 0x00000008 */
				FIELD  DPE_CKPDN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RSC_CKPDN                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  WPE_A_CKPDN                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  WPE_B_CKPDN                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  EAF_CKPDN                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  REV_CKPDN                             : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}IMG_REG_CG_CON;	/* IMG_CG_CON */

typedef volatile union _IMG_REG_CG_SET_
{
		volatile struct	/* 0x15020004 */
		{
				FIELD  LARB7_CKPDN_SET                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COMM_CKPDN_SET                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DIP_CKPDN_SET                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FD_CKPDN_SET                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  DPE_CKPDN_SET                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RSC_CKPDN_SET                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  WPE_A_CKPDN_SET                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  WPE_B_CKPDN_SET                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  EAF_CKPDN_SET                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  REV_CKPDN_SET                         : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}IMG_REG_CG_SET;	/* IMG_CG_SET */

typedef volatile union _IMG_REG_CG_CLR_
{
		volatile struct	/* 0x15020008 */
		{
				FIELD  LARB7_CKPDN_CLR                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COMM_CKPDN_CLR                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DIP_CKPDN_CLR                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FD_CKPDN_CLR                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  DPE_CKPDN_CLR                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RSC_CKPDN_CLR                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  WPE_A_CKPDN_CLR                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  WPE_B_CKPDN_CLR                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  EAF_CKPDN_CLR                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  REV_CKPDN_CLR                         : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}IMG_REG_CG_CLR;	/* IMG_CG_CLR */

typedef volatile union _IMG_REG_SW_RST_
{
		volatile struct	/* 0x1502000C */
		{
				FIELD  LARB7_PWR_HW_RST                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  LARB7_APB_HW_RST                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COMM_PWR_HW_RST                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  COMM_APB_HW_RST                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  DIP_PWR_HW_RST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  DIP_APB_HW_RST                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  FDVT_PWR_HW_RST                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  FDVT_APB_HW_RST                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DPE_PWR_HW_RST                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DPE_APB_HW_RST                        :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RSC_PWR_HW_RST                        :  1;		/* 10..10, 0x00000400 */
				FIELD  RSC_APB_HW_RST                        :  1;		/* 11..11, 0x00000800 */
				FIELD  WPE_A_PWR_HW_RST                      :  1;		/* 12..12, 0x00001000 */
				FIELD  WPE_A_APB_HW_RST                      :  1;		/* 13..13, 0x00002000 */
				FIELD  WPE_B_PWR_HW_RST                      :  1;		/* 14..14, 0x00004000 */
				FIELD  WPE_B_APB_HW_RST                      :  1;		/* 15..15, 0x00008000 */
				FIELD  EAF_PWR_HW_RST                        :  1;		/* 16..16, 0x00010000 */
				FIELD  EAF_APB_HW_RST                        :  1;		/* 17..17, 0x00020000 */
				FIELD  REV_PWR_HW_RST                        :  1;		/* 18..18, 0x00040000 */
				FIELD  REV_APB_HW_RST                        : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}IMG_REG_SW_RST;	/* IMG_SW_RST */

typedef volatile union _IMG_REG_SPARE0_
{
		volatile struct	/* 0x15020010 */
		{
				FIELD  IMG_SPARE00                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE0;	/* IMG_SPARE0 */

typedef volatile union _IMG_REG_SPARE1_
{
		volatile struct	/* 0x15020014 */
		{
				FIELD  IMG_SPARE01                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE1;	/* IMG_SPARE1 */

typedef volatile union _IMG_REG_SPARE2_
{
		volatile struct	/* 0x15020018 */
		{
				FIELD  IMG_SPARE02                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE2;	/* IMG_SPARE2 */

typedef volatile union _IMG_REG_SPARE3_
{
		volatile struct	/* 0x1502001C */
		{
				FIELD  IMG_SPARE03                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE3;	/* IMG_SPARE3 */

typedef volatile union _IMG_REG_SPARE4_
{
		volatile struct	/* 0x15020020 */
		{
				FIELD  IMG_SPARE04                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE4;	/* IMG_SPARE4 */

typedef volatile union _IMG_REG_SPARE5_
{
		volatile struct	/* 0x15020024 */
		{
				FIELD  IMG_SPARE05                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE5;	/* IMG_SPARE5 */

typedef volatile union _IMG_REG_SPARE6_
{
		volatile struct	/* 0x15020028 */
		{
				FIELD  IMG_SPARE06                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE6;	/* IMG_SPARE6 */

typedef volatile union _IMG_REG_SPARE7_
{
		volatile struct	/* 0x1502002C */
		{
				FIELD  IMG_SPARE07                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SPARE7;	/* IMG_SPARE7 */

typedef volatile union _IMG_REG_DBG_SEL_
{
		volatile struct	/* 0x15020030 */
		{
				FIELD  DBG_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DBG_SEL                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  REV                                   : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}IMG_REG_DBG_SEL;	/* IMG_DBG_SEL */

typedef volatile union _IMG_REG_MBIST_MODE0_
{
		volatile struct	/* 0x15020034 */
		{
				FIELD  IMG_MBIST_MODE00                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_MODE0;	/* IMG_MBIST_MODE0 */

typedef volatile union _IMG_REG_MBIST_MODE1_
{
		volatile struct	/* 0x15020038 */
		{
				FIELD  IMG_MBIST_MODE01                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_MODE1;	/* IMG_MBIST_MODE1 */

typedef volatile union _IMG_REG_MBIST_CTL_
{
		volatile struct	/* 0x1502003C */
		{
				FIELD  MBIST_BSEL                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  MBIST_BACKGROUND                      :  4;		/* 16..19, 0x000F0000 */
				FIELD  MBIST_RSTB                            :  1;		/* 20..20, 0x00100000 */
				FIELD  REV                                   : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_CTL;	/* IMG_MBIST_CTL */

typedef volatile union _IMG_REG_MBIST_FAIL0_
{
		volatile struct	/* 0x15020040 */
		{
				FIELD  IMG_MBIST_FAIL00                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL0;	/* IMG_MBIST_FAIL0 */

typedef volatile union _IMG_REG_MBIST_FAIL1_
{
		volatile struct	/* 0x15020044 */
		{
				FIELD  IMG_MBIST_FAIL01                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL1;	/* IMG_MBIST_FAIL1 */

typedef volatile union _IMG_REG_MBIST_FAIL2_
{
		volatile struct	/* 0x15020048 */
		{
				FIELD  IMG_MBIST_FAIL02                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL2;	/* IMG_MBIST_FAIL2 */

typedef volatile union _IMG_REG_MBIST_FAIL3_
{
		volatile struct	/* 0x1502004C */
		{
				FIELD  IMG_MBIST_FAIL03                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL3;	/* IMG_MBIST_FAIL3 */

typedef volatile union _IMG_REG_MBIST_FAIL4_
{
		volatile struct	/* 0x15020050 */
		{
				FIELD  IMG_MBIST_FAIL04                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL4;	/* IMG_MBIST_FAIL4 */

typedef volatile union _IMG_REG_MBIST_FAIL5_
{
		volatile struct	/* 0x15020054 */
		{
				FIELD  IMG_MBIST_FAIL05                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL5;	/* IMG_MBIST_FAIL5 */

typedef volatile union _IMG_REG_MBIST_FAIL6_
{
		volatile struct	/* 0x15020058 */
		{
				FIELD  IMG_MBIST_FAIL06                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL6;	/* IMG_MBIST_FAIL6 */

typedef volatile union _IMG_REG_MBIST_FAIL7_
{
		volatile struct	/* 0x1502005C */
		{
				FIELD  IMG_MBIST_FAIL07                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_MBIST_FAIL7;	/* IMG_MBIST_FAIL7 */

typedef volatile union _IMG_REG_SRAM_DELSEL0_
{
		volatile struct	/* 0x15020060 */
		{
				FIELD  SRAM_DELSEL0                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL0;	/* IMG_SRAM_DELSEL0 */

typedef volatile union _IMG_REG_SRAM_DELSEL1_
{
		volatile struct	/* 0x15020064 */
		{
				FIELD  SRAM_DELSEL1                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL1;	/* IMG_SRAM_DELSEL1 */

typedef volatile union _IMG_REG_SRAM_DELSEL2_
{
		volatile struct	/* 0x15020068 */
		{
				FIELD  SRAM_DELSEL2                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL2;	/* IMG_SRAM_DELSEL2 */

typedef volatile union _IMG_REG_SRAM_DELSEL3_
{
		volatile struct	/* 0x1502006C */
		{
				FIELD  SRAM_DELSEL3                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL3;	/* IMG_SRAM_DELSEL3 */

typedef volatile union _IMG_REG_SRAM_DELSEL4_
{
		volatile struct	/* 0x15020070 */
		{
				FIELD  SRAM_DELSEL4                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL4;	/* IMG_SRAM_DELSEL4 */

typedef volatile union _IMG_REG_SRAM_DELSEL5_
{
		volatile struct	/* 0x15020074 */
		{
				FIELD  SRAM_DELSEL5                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL5;	/* IMG_SRAM_DELSEL5 */

typedef volatile union _IMG_REG_SRAM_DELSEL6_
{
		volatile struct	/* 0x15020078 */
		{
				FIELD  SRAM_DELSEL6                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL6;	/* IMG_SRAM_DELSEL6 */

typedef volatile union _IMG_REG_SRAM_DELSEL7_
{
		volatile struct	/* 0x1502007C */
		{
				FIELD  SRAM_DELSEL7                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL7;	/* IMG_SRAM_DELSEL7 */

typedef volatile union _IMG_REG_SRAM_DELSEL8_
{
		volatile struct	/* 0x15020080 */
		{
				FIELD  SRAM_DELSEL8                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL8;	/* IMG_SRAM_DELSEL8 */

typedef volatile union _IMG_REG_SRAM_DELSEL9_
{
		volatile struct	/* 0x15020084 */
		{
				FIELD  SRAM_DELSEL9                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL9;	/* IMG_SRAM_DELSEL9 */

typedef volatile union _IMG_REG_SRAM_DELSEL10_
{
		volatile struct	/* 0x15020088 */
		{
				FIELD  SRAM_DELSEL10                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL10;	/* IMG_SRAM_DELSEL10 */

typedef volatile union _IMG_REG_SRAM_DELSEL11_
{
		volatile struct	/* 0x1502008C */
		{
				FIELD  SRAM_DELSEL11                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL11;	/* IMG_SRAM_DELSEL11 */

typedef volatile union _IMG_REG_SRAM_DELSEL12_
{
		volatile struct	/* 0x15020090 */
		{
				FIELD  SRAM_DELSEL12                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL12;	/* IMG_SRAM_DELSEL12 */

typedef volatile union _IMG_REG_SRAM_DELSEL13_
{
		volatile struct	/* 0x15020094 */
		{
				FIELD  SRAM_DELSEL13                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL13;	/* IMG_SRAM_DELSEL13 */

typedef volatile union _IMG_REG_SRAM_DELSEL14_
{
		volatile struct	/* 0x15020098 */
		{
				FIELD  SRAM_DELSEL14                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL14;	/* IMG_SRAM_DELSEL14 */

typedef volatile union _IMG_REG_SRAM_DELSEL15_
{
		volatile struct	/* 0x1502009C */
		{
				FIELD  SRAM_DELSEL15                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL15;	/* IMG_SRAM_DELSEL15 */

typedef volatile union _IMG_REG_SRAM_DELSEL16_
{
		volatile struct	/* 0x150200A0 */
		{
				FIELD  SRAM_DELSEL16                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL16;	/* IMG_SRAM_DELSEL16 */

typedef volatile union _IMG_REG_SRAM_DELSEL17_
{
		volatile struct	/* 0x150200A4 */
		{
				FIELD  SRAM_DELSEL17                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL17;	/* IMG_SRAM_DELSEL17 */

typedef volatile union _IMG_REG_SRAM_DELSEL18_
{
		volatile struct	/* 0x150200A8 */
		{
				FIELD  SRAM_DELSEL18                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL18;	/* IMG_SRAM_DELSEL18 */

typedef volatile union _IMG_REG_SRAM_DELSEL19_
{
		volatile struct	/* 0x150200AC */
		{
				FIELD  SRAM_DELSEL19                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL19;	/* IMG_SRAM_DELSEL19 */

typedef volatile union _IMG_REG_SRAM_DELSEL20_
{
		volatile struct	/* 0x150200B0 */
		{
				FIELD  SRAM_DELSEL20                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL20;	/* IMG_SRAM_DELSEL20 */

typedef volatile union _IMG_REG_SRAM_DELSEL21_
{
		volatile struct	/* 0x150200B4 */
		{
				FIELD  SRAM_DELSEL21                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL21;	/* IMG_SRAM_DELSEL21 */

typedef volatile union _IMG_REG_SRAM_DELSEL22_
{
		volatile struct	/* 0x150200B8 */
		{
				FIELD  SRAM_DELSEL22                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL22;	/* IMG_SRAM_DELSEL22 */

typedef volatile union _IMG_REG_SRAM_DELSEL23_
{
		volatile struct	/* 0x150200BC */
		{
				FIELD  SRAM_DELSEL23                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL23;	/* IMG_SRAM_DELSEL23 */

typedef volatile union _IMG_REG_SRAM_DELSEL24_
{
		volatile struct	/* 0x150200C0 */
		{
				FIELD  SRAM_DELSEL24                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL24;	/* IMG_SRAM_DELSEL24 */

typedef volatile union _IMG_REG_SRAM_DELSEL25_
{
		volatile struct	/* 0x150200C4 */
		{
				FIELD  SRAM_DELSEL25                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}IMG_REG_SRAM_DELSEL25;	/* IMG_SRAM_DELSEL25 */

typedef volatile union _FDVT_REG_DMA_SOFT_RSTSTAT_
{
		volatile struct	/* 0x1502B200 */
		{
				FIELD  WRO_SOFT_RST_STAT                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 15;		/*  1..15, 0x0000FFFE */
				FIELD  RPI_SOFT_RST_STAT                     :  1;		/* 16..16, 0x00010000 */
				FIELD  RBI_SOFT_RST_STAT                     :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_SOFT_RSTSTAT;	/* FDVT_DMA_SOFT_RSTSTAT */

typedef volatile union _FDVT_REG_VERTICAL_FLIP_EN_
{
		volatile struct	/* 0x1502B204 */
		{
				FIELD  WRO_V_FLIP_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 15;		/*  1..15, 0x0000FFFE */
				FIELD  RPI_V_FLIP_EN                         :  1;		/* 16..16, 0x00010000 */
				FIELD  RBI_V_FLIP_EN                         :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_VERTICAL_FLIP_EN;	/* FDVT_VERTICAL_FLIP_EN */

typedef volatile union _FDVT_REG_DMA_SOFT_RESET_
{
		volatile struct	/* 0x1502B208 */
		{
				FIELD  WRO_SOFT_RST                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 15;		/*  1..15, 0x0000FFFE */
				FIELD  RPI_SOFT_RST                          :  1;		/* 16..16, 0x00010000 */
				FIELD  RBI_SOFT_RST                          :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 13;		/* 18..30, 0x7FFC0000 */
				FIELD  SEPARATE_SOFT_RST_EN                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_SOFT_RESET;	/* FDVT_DMA_SOFT_RESET */

typedef volatile union _FDVT_REG_LAST_ULTRA_EN_
{
		volatile struct	/* 0x1502B20C */
		{
				FIELD  WRO_LAST_ULTRA_EN                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 15;		/*  1..15, 0x0000FFFE */
				FIELD  RPI_LAST_ULTRA_EN                     :  1;		/* 16..16, 0x00010000 */
				FIELD  RBI_LAST_ULTRA_EN                     :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_LAST_ULTRA_EN;	/* FDVT_LAST_ULTRA_EN */

typedef volatile union _FDVT_REG_SPECIAL_FUN_EN_
{
		volatile struct	/* 0x1502B210 */
		{
				FIELD  SLOW_CNT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                :  7;		/* 16..22, 0x007F0000 */
				FIELD  CONTINUOUS_COM_CON                    :  2;		/* 23..24, 0x01800000 */
				FIELD  CONTINUOUS_COM_EN                     :  1;		/* 25..25, 0x02000000 */
				FIELD  rsv_26                                :  4;		/* 26..29, 0x3C000000 */
				FIELD  INTERLACE_MODE                        :  1;		/* 30..30, 0x40000000 */
				FIELD  SLOW_EN                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_SPECIAL_FUN_EN;	/* FDVT_SPECIAL_FUN_EN */

typedef volatile union _FDVT_REG_WRO_BASE_ADDR_
{
		volatile struct	/* 0x1502B230 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_BASE_ADDR;	/* FDVT_WRO_BASE_ADDR */

typedef volatile union _FDVT_REG_WRO_BASE_ADDR_2_
{
		volatile struct	/* 0x1502B234 */
		{
				FIELD  BASE_ADDR_2                           :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_BASE_ADDR_2;	/* FDVT_WRO_BASE_ADDR_2 */

typedef volatile union _FDVT_REG_WRO_OFST_ADDR_
{
		volatile struct	/* 0x1502B238 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_OFST_ADDR;	/* FDVT_WRO_OFST_ADDR */

typedef volatile union _FDVT_REG_WRO_OFST_ADDR_2_
{
		volatile struct	/* 0x1502B23C */
		{
				FIELD  OFFSET_ADDR_2                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_OFST_ADDR_2;	/* FDVT_WRO_OFST_ADDR_2 */

typedef volatile union _FDVT_REG_WRO_XSIZE_
{
		volatile struct	/* 0x1502B240 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_XSIZE;	/* FDVT_WRO_XSIZE */

typedef volatile union _FDVT_REG_WRO_YSIZE_
{
		volatile struct	/* 0x1502B244 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_YSIZE;	/* FDVT_WRO_YSIZE */

typedef volatile union _FDVT_REG_WRO_STRIDE_
{
		volatile struct	/* 0x1502B248 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_STRIDE;	/* FDVT_WRO_STRIDE */

typedef volatile union _FDVT_REG_WRO_CON_
{
		volatile struct	/* 0x1502B24C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_CON;	/* FDVT_WRO_CON */

typedef volatile union _FDVT_REG_WRO_CON2_
{
		volatile struct	/* 0x1502B250 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_CON2;	/* FDVT_WRO_CON2 */

typedef volatile union _FDVT_REG_WRO_CON3_
{
		volatile struct	/* 0x1502B254 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_CON3;	/* FDVT_WRO_CON3 */

typedef volatile union _FDVT_REG_RPI_BASE_ADDR_
{
		volatile struct	/* 0x1502B290 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_BASE_ADDR;	/* FDVT_RPI_BASE_ADDR */

typedef volatile union _FDVT_REG_RPI_BASE_ADDR_2_
{
		volatile struct	/* 0x1502B294 */
		{
				FIELD  BASE_ADDR_2                           :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_BASE_ADDR_2;	/* FDVT_RPI_BASE_ADDR_2 */

typedef volatile union _FDVT_REG_RPI_OFST_ADDR_
{
		volatile struct	/* 0x1502B298 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_OFST_ADDR;	/* FDVT_RPI_OFST_ADDR */

typedef volatile union _FDVT_REG_RPI_OFST_ADDR_2_
{
		volatile struct	/* 0x1502B29C */
		{
				FIELD  OFFSET_ADDR_2                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_OFST_ADDR_2;	/* FDVT_RPI_OFST_ADDR_2 */

typedef volatile union _FDVT_REG_RPI_XSIZE_
{
		volatile struct	/* 0x1502B2A0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_XSIZE;	/* FDVT_RPI_XSIZE */

typedef volatile union _FDVT_REG_RPI_YSIZE_
{
		volatile struct	/* 0x1502B2A4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_YSIZE;	/* FDVT_RPI_YSIZE */

typedef volatile union _FDVT_REG_RPI_STRIDE_
{
		volatile struct	/* 0x1502B2A8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_STRIDE;	/* FDVT_RPI_STRIDE */

typedef volatile union _FDVT_REG_RPI_CON_
{
		volatile struct	/* 0x1502B2AC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_CON;	/* FDVT_RPI_CON */

typedef volatile union _FDVT_REG_RPI_CON2_
{
		volatile struct	/* 0x1502B2B0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_CON2;	/* FDVT_RPI_CON2 */

typedef volatile union _FDVT_REG_RPI_CON3_
{
		volatile struct	/* 0x1502B2B4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_CON3;	/* FDVT_RPI_CON3 */

typedef volatile union _FDVT_REG_RBI_BASE_ADDR_
{
		volatile struct	/* 0x1502B2C0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_BASE_ADDR;	/* FDVT_RBI_BASE_ADDR */

typedef volatile union _FDVT_REG_RBI_BASE_ADDR_2_
{
		volatile struct	/* 0x1502B2C4 */
		{
				FIELD  BASE_ADDR_2                           :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_BASE_ADDR_2;	/* FDVT_RBI_BASE_ADDR_2 */

typedef volatile union _FDVT_REG_RBI_OFST_ADDR_
{
		volatile struct	/* 0x1502B2C8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_OFST_ADDR;	/* FDVT_RBI_OFST_ADDR */

typedef volatile union _FDVT_REG_RBI_OFST_ADDR_2_
{
		volatile struct	/* 0x1502B2CC */
		{
				FIELD  OFFSET_ADDR_2                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_OFST_ADDR_2;	/* FDVT_RBI_OFST_ADDR_2 */

typedef volatile union _FDVT_REG_RBI_XSIZE_
{
		volatile struct	/* 0x1502B2D0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_XSIZE;	/* FDVT_RBI_XSIZE */

typedef volatile union _FDVT_REG_RBI_YSIZE_
{
		volatile struct	/* 0x1502B2D4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_YSIZE;	/* FDVT_RBI_YSIZE */

typedef volatile union _FDVT_REG_RBI_STRIDE_
{
		volatile struct	/* 0x1502B2D8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_STRIDE;	/* FDVT_RBI_STRIDE */

typedef volatile union _FDVT_REG_RBI_CON_
{
		volatile struct	/* 0x1502B2DC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_CON;	/* FDVT_RBI_CON */

typedef volatile union _FDVT_REG_RBI_CON2_
{
		volatile struct	/* 0x1502B2E0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_CON2;	/* FDVT_RBI_CON2 */

typedef volatile union _FDVT_REG_RBI_CON3_
{
		volatile struct	/* 0x1502B2E4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_CON3;	/* FDVT_RBI_CON3 */

typedef volatile union _FDVT_REG_DMA_ERR_CTRL_
{
		volatile struct	/* 0x1502B300 */
		{
				FIELD  WRO_ERR                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 15;		/*  1..15, 0x0000FFFE */
				FIELD  RPI_ERR                               :  1;		/* 16..16, 0x00010000 */
				FIELD  RBI_ERR                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 13;		/* 18..30, 0x7FFC0000 */
				FIELD  ERR_CLR_MD                            :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_ERR_CTRL;	/* FDVT_DMA_ERR_CTRL */

typedef volatile union _FDVT_REG_WRO_ERR_STAT_
{
		volatile struct	/* 0x1502B304 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_WRO_ERR_STAT;	/* FDVT_WRO_ERR_STAT */

typedef volatile union _FDVT_REG_RPI_ERR_STAT_
{
		volatile struct	/* 0x1502B308 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RPI_ERR_STAT;	/* FDVT_RPI_ERR_STAT */

typedef volatile union _FDVT_REG_RBI_ERR_STAT_
{
		volatile struct	/* 0x1502B30C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_RBI_ERR_STAT;	/* FDVT_RBI_ERR_STAT */

typedef volatile union _FDVT_REG_DMA_DEBUG_ADDR_
{
		volatile struct	/* 0x1502B310 */
		{
				FIELD  DEBUG_ADDR                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_DEBUG_ADDR;	/* FDVT_DMA_DEBUG_ADDR */

typedef volatile union _FDVT_REG_DMA_RSV1_
{
		volatile struct	/* 0x1502B314 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_RSV1;	/* FDVT_DMA_RSV1 */

typedef volatile union _FDVT_REG_DMA_RSV2_
{
		volatile struct	/* 0x1502B318 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_RSV2;	/* FDVT_DMA_RSV2 */

typedef volatile union _FDVT_REG_DMA_RSV3_
{
		volatile struct	/* 0x1502B31C */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_RSV3;	/* FDVT_DMA_RSV3 */

typedef volatile union _FDVT_REG_DMA_RSV4_
{
		volatile struct	/* 0x1502B320 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_RSV4;	/* FDVT_DMA_RSV4 */

typedef volatile union _FDVT_REG_DMA_RSV5_
{
		volatile struct	/* 0x1502B324 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_RSV5;	/* FDVT_DMA_RSV5 */

typedef volatile union _FDVT_REG_DMA_RSV6_
{
		volatile struct	/* 0x1502B328 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_RSV6;	/* FDVT_DMA_RSV6 */

typedef volatile union _FDVT_REG_DMA_DEBUG_SEL_
{
		volatile struct	/* 0x1502B32C */
		{
				FIELD  DMA_TOP_SEL                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  R_W_DMA_TOP_SEL                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SUB_MODULE_SEL                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  6;		/* 24..29, 0x3F000000 */
				FIELD  ARBITER_BVALID_FULL                   :  1;		/* 30..30, 0x40000000 */
				FIELD  ARBITER_COM_FULL                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_DEBUG_SEL;	/* FDVT_DMA_DEBUG_SEL */

typedef volatile union _FDVT_REG_DMA_BW_SELF_TEST_
{
		volatile struct	/* 0x1502B330 */
		{
				FIELD  BW_SELF_TEST_EN_WRO                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}FDVT_REG_DMA_BW_SELF_TEST;	/* FDVT_DMA_BW_SELF_TEST */

typedef volatile union _CAM_UNI_REG_TOP_CTL_
{
		volatile struct	/* 0x1A003000 */
		{
				FIELD  INT_MRG                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_CTL;	/* CAM_UNI_TOP_CTL */

typedef volatile union _CAM_UNI_REG_TOP_MISC_
{
		volatile struct	/* 0x1A003004 */
		{
				FIELD  DB_LOAD_HOLD                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  DB_EN                                 :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  APB_CLK_GATE_BYPASS                   :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_MISC;	/* CAM_UNI_TOP_MISC */

typedef volatile union _CAM_UNI_REG_TOP_SW_CTL_
{
		volatile struct	/* 0x1A003008 */
		{
				FIELD  RAWI_SW_RST_Trig                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RAWI_SW_RST_ST                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RAWI_HW_RST                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_SW_RST_Trig                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FLKO_SW_RST_ST                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  FLKO_HW_RST                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  EISO_RSSO_SW_RST_Trig                 :  1;		/*  8.. 8, 0x00000100 */
				FIELD  EISO_RSSO_SW_RST_ST                   :  1;		/*  9.. 9, 0x00000200 */
				FIELD  EISO_RSSO_HW_RST                      :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  CTL_HW_RST                            :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_SW_CTL;	/* CAM_UNI_TOP_SW_CTL */

typedef volatile union _CAM_UNI_REG_TOP_RAWI_TRIG_
{
		volatile struct	/* 0x1A00300C */
		{
				FIELD  TOP_RAWI_TRIG                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_RAWI_TRIG;	/* CAM_UNI_TOP_RAWI_TRIG */

typedef volatile union _CAM_UNI_REG_TOP_MOD_EN_
{
		volatile struct	/* 0x1A003010 */
		{
				FIELD  UNP2_A_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  QBIN3_A_EN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGG3_A_EN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FLK_A_EN                              :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EIS_A_EN                              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SGG2_A_EN                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  HDS_A_EN                              :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RSS_A_EN                              :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GSE_A_EN                              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_MOD_EN;	/* CAM_UNI_TOP_MOD_EN */

typedef volatile union _CAM_UNI_REG_TOP_DMA_EN_
{
		volatile struct	/* 0x1A003014 */
		{
				FIELD  RAWI_A_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_EN                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_EN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_EN                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_EN;	/* CAM_UNI_TOP_DMA_EN */

typedef volatile union _CAM_UNI_REG_TOP_PATH_SEL_
{
		volatile struct	/* 0x1A003018 */
		{
				FIELD  HDS2_A_SEL                            :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  6;		/*  2.. 7, 0x000000FC */
				FIELD  FLK2_A_SEL                            :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  EIS_A_SEL                             :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_PATH_SEL;	/* CAM_UNI_TOP_PATH_SEL */

typedef volatile union _CAM_UNI_REG_TOP_FMT_SEL_
{
		volatile struct	/* 0x1A00301C */
		{
				FIELD  RAWI_FMT                              :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PIX_BUS_RAWI                          :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                : 22;		/* 10..31, 0xFFFFFC00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_FMT_SEL;	/* CAM_UNI_TOP_FMT_SEL */

typedef volatile union _CAM_UNI_REG_TOP_DMA_INT_EN_
{
		volatile struct	/* 0x1A003020 */
		{
				FIELD  DMA_ERR_INT_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_ERR_INT_EN                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_ERR_INT_EN                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_ERR_INT_EN                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 27;		/*  4..30, 0x7FFFFFF0 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_INT_EN;	/* CAM_UNI_TOP_DMA_INT_EN */

typedef volatile union _CAM_UNI_REG_TOP_DMA_INT_STATUS_
{
		volatile struct	/* 0x1A003024 */
		{
				FIELD  DMA_ERR_INT_STATUS                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_ERR_INT_STATUS                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_ERR_INT_STATUS                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_ERR_INT_STATUS                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_INT_STATUS;	/* CAM_UNI_TOP_DMA_INT_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_DMA_INT_STATUSX_
{
		volatile struct	/* 0x1A003028 */
		{
				FIELD  DMA_ERR_INT_STATUS                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_ERR_INT_STATUS                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_ERR_INT_STATUS                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_ERR_INT_STATUS                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_INT_STATUSX;	/* CAM_UNI_TOP_DMA_INT_STATUSX */

typedef volatile union _CAM_UNI_REG_TOP_DBG_SET_
{
		volatile struct	/* 0x1A00302C */
		{
				FIELD  DEBUG_MOD_SEL                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DEBUG_SEL                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  DEBUG_TOP_SEL                         :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DBG_SET;	/* CAM_UNI_TOP_DBG_SET */

typedef volatile union _CAM_UNI_REG_TOP_DBG_PORT_
{
		volatile struct	/* 0x1A003030 */
		{
				FIELD  TOP_DBG_PORT                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DBG_PORT;	/* CAM_UNI_TOP_DBG_PORT */

typedef volatile union _CAM_UNI_REG_TOP_DMA_CCU_INT_EN_
{
		volatile struct	/* 0x1A003034 */
		{
				FIELD  DMA_ERR_INT_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_ERR_INT_EN                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_ERR_INT_EN                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_ERR_INT_EN                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 27;		/*  4..30, 0x7FFFFFF0 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_CCU_INT_EN;	/* CAM_UNI_TOP_DMA_CCU_INT_EN */

typedef volatile union _CAM_UNI_REG_TOP_DMA_CCU_INT_STATUS_
{
		volatile struct	/* 0x1A003038 */
		{
				FIELD  DMA_ERR_INT_STATUS                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_ERR_INT_STATUS                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_ERR_INT_STATUS                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_ERR_INT_STATUS                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_CCU_INT_STATUS;	/* CAM_UNI_TOP_DMA_CCU_INT_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_MOD_DCM_DIS_
{
		volatile struct	/* 0x1A003040 */
		{
				FIELD  UNP2_A_DCM_DIS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  QBIN3_A_DCM_DIS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGG3_A_DCM_DIS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FLK_A_DCM_DIS                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EIS_A_DCM_DIS                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SGG2_A_DCM_DIS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  HDS_A_DCM_DIS                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RSS_A_DCM_DIS                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GSE_A_DCM_DIS                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_MOD_DCM_DIS;	/* CAM_UNI_TOP_MOD_DCM_DIS */

typedef volatile union _CAM_UNI_REG_TOP_DMA_DCM_DIS_
{
		volatile struct	/* 0x1A003044 */
		{
				FIELD  RAWI_A_DCM_DIS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_DCM_DIS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_DCM_DIS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_DCM_DIS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_DCM_DIS;	/* CAM_UNI_TOP_DMA_DCM_DIS */

typedef volatile union _CAM_UNI_REG_TOP_MOD_DCM_STATUS_
{
		volatile struct	/* 0x1A003050 */
		{
				FIELD  UNP2_A_DCM_STATUS                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  QBIN3_A_DCM_STATUS                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGG3_A_DCM_STATUS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FLK_A_DCM_STATUS                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EIS_A_DCM_STATUS                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SGG2_A_DCM_STATUS                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  HDS_A_DCM_STATUS                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RSS_A_DCM_STATUS                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GSE_A_DCM_STATUS                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_MOD_DCM_STATUS;	/* CAM_UNI_TOP_MOD_DCM_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_DMA_DCM_STATUS_
{
		volatile struct	/* 0x1A003054 */
		{
				FIELD  RAWI_A_DCM_STATUS                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_DCM_STATUS                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_DCM_STATUS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_DCM_STATUS                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_DCM_STATUS;	/* CAM_UNI_TOP_DMA_DCM_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_MOD_REQ_STATUS_
{
		volatile struct	/* 0x1A003060 */
		{
				FIELD  UNP2_A_REQ_STATUS                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  QBIN3_A_REQ_STATUS                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGG3_A_REQ_STATUS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FLK_A_REQ_STATUS                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EIS_A_REQ_STATUS                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SGG2_A_REQ_STATUS                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  HDS_A_REQ_STATUS                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RSS_A_REQ_STATUS                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GSE_A_REQ_STATUS                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_MOD_REQ_STATUS;	/* CAM_UNI_TOP_MOD_REQ_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_DMA_REQ_STATUS_
{
		volatile struct	/* 0x1A003064 */
		{
				FIELD  RAWI_A_REQ_STATUS                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_REQ_STATUS                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_REQ_STATUS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_REQ_STATUS                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_REQ_STATUS;	/* CAM_UNI_TOP_DMA_REQ_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_MOD_RDY_STATUS_
{
		volatile struct	/* 0x1A003070 */
		{
				FIELD  UNP2_A_RDY_STATUS                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  QBIN3_A_RDY_STATUS                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGG3_A_RDY_STATUS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FLK_A_RDY_STATUS                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EIS_A_RDY_STATUS                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SGG2_A_RDY_STATUS                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  HDS_A_RDY_STATUS                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RSS_A_RDY_STATUS                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GSE_A_RDY_STATUS                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_MOD_RDY_STATUS;	/* CAM_UNI_TOP_MOD_RDY_STATUS */

typedef volatile union _CAM_UNI_REG_TOP_DMA_RDY_STATUS_
{
		volatile struct	/* 0x1A003074 */
		{
				FIELD  RAWI_A_RDY_STATUS                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_A_RDY_STATUS                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  EISO_A_RDY_STATUS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_A_RDY_STATUS                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_TOP_DMA_RDY_STATUS;	/* CAM_UNI_TOP_DMA_RDY_STATUS */

typedef volatile union _CAM_UNI_REG_FBC_FLKO_A_CTL1_
{
		volatile struct	/* 0x1A003080 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FBC_FLKO_A_CTL1;	/* CAM_UNI_FBC_FLKO_A_CTL1 */

typedef volatile union _CAM_UNI_REG_FBC_FLKO_A_CTL2_
{
		volatile struct	/* 0x1A003084 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FBC_FLKO_A_CTL2;	/* CAM_UNI_FBC_FLKO_A_CTL2 */

typedef volatile union _CAM_UNI_REG_FBC_EISO_A_CTL1_
{
		volatile struct	/* 0x1A003088 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FBC_EISO_A_CTL1;	/* CAM_UNI_FBC_EISO_A_CTL1 */

typedef volatile union _CAM_UNI_REG_FBC_EISO_A_CTL2_
{
		volatile struct	/* 0x1A00308C */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FBC_EISO_A_CTL2;	/* CAM_UNI_FBC_EISO_A_CTL2 */

typedef volatile union _CAM_UNI_REG_FBC_RSSO_A_CTL1_
{
		volatile struct	/* 0x1A003090 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FBC_RSSO_A_CTL1;	/* CAM_UNI_FBC_RSSO_A_CTL1 */

typedef volatile union _CAM_UNI_REG_FBC_RSSO_A_CTL2_
{
		volatile struct	/* 0x1A003094 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FBC_RSSO_A_CTL2;	/* CAM_UNI_FBC_RSSO_A_CTL2 */

typedef volatile union _CAM_UNI_REG_DMA_SOFT_RSTSTAT_
{
		volatile struct	/* 0x1A003200 */
		{
				FIELD  EISO_SOFT_RST_STAT                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_SOFT_RST_STAT                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RSSO_A_SOFT_RST_STAT                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_B_SOFT_RST_STAT                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  RAWI_SOFT_RST_STAT                    :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_SOFT_RSTSTAT;	/* CAM_UNI_DMA_SOFT_RSTSTAT */

typedef volatile union _CAM_UNI_REG_VERTICAL_FLIP_EN_
{
		volatile struct	/* 0x1A003204 */
		{
				FIELD  EISO_V_FLIP_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_V_FLIP_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RSSO_A_V_FLIP_EN                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_B_V_FLIP_EN                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  RAWI_V_FLIP_EN                        :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_VERTICAL_FLIP_EN;	/* CAM_UNI_VERTICAL_FLIP_EN */

typedef volatile union _CAM_UNI_REG_DMA_SOFT_RESET_
{
		volatile struct	/* 0x1A003208 */
		{
				FIELD  EISO_SOFT_RST                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_SOFT_RST                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RSSO_A_SOFT_RST                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_B_SOFT_RST                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  RAWI_SOFT_RST                         :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 14;		/* 17..30, 0x7FFE0000 */
				FIELD  SEPARATE_SOFT_RST_EN                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_SOFT_RESET;	/* CAM_UNI_DMA_SOFT_RESET */

typedef volatile union _CAM_UNI_REG_LAST_ULTRA_EN_
{
		volatile struct	/* 0x1A00320C */
		{
				FIELD  EISO_LAST_ULTRA_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_LAST_ULTRA_EN                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RSSO_A_LAST_ULTRA_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_B_LAST_ULTRA_EN                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  RAWI_LAST_ULTRA_EN                    :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_LAST_ULTRA_EN;	/* CAM_UNI_LAST_ULTRA_EN */

typedef volatile union _CAM_UNI_REG_SPECIAL_FUN_EN_
{
		volatile struct	/* 0x1A003210 */
		{
				FIELD  SLOW_CNT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                :  4;		/* 16..19, 0x000F0000 */
				FIELD  CONTINUOUS_COM_CON                    :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  GCLAST_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  MULTI_PLANE_ID_EN                     :  1;		/* 24..24, 0x01000000 */
				FIELD  CONTINUOUS_COM_EN                     :  1;		/* 25..25, 0x02000000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  FIFO_CHANGE_EN                        :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  1;		/* 29..29, 0x20000000 */
				FIELD  INTERLACE_MODE                        :  1;		/* 30..30, 0x40000000 */
				FIELD  SLOW_EN                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SPECIAL_FUN_EN;	/* CAM_UNI_SPECIAL_FUN_EN */

typedef volatile union _CAM_UNI_REG_EISO_BASE_ADDR_
{
		volatile struct	/* 0x1A003220 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_BASE_ADDR;	/* CAM_UNI_EISO_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_EISO_OFST_ADDR_
{
		volatile struct	/* 0x1A003228 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_OFST_ADDR;	/* CAM_UNI_EISO_OFST_ADDR */

typedef volatile union _CAM_UNI_REG_EISO_XSIZE_
{
		volatile struct	/* 0x1A003230 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_XSIZE;	/* CAM_UNI_EISO_XSIZE */

typedef volatile union _CAM_UNI_REG_EISO_YSIZE_
{
		volatile struct	/* 0x1A003234 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_YSIZE;	/* CAM_UNI_EISO_YSIZE */

typedef volatile union _CAM_UNI_REG_EISO_STRIDE_
{
		volatile struct	/* 0x1A003238 */
		{
				FIELD  RSV                                   : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  5;		/* 19..23, 0x00F80000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_STRIDE;	/* CAM_UNI_EISO_STRIDE */

typedef volatile union _CAM_UNI_REG_EISO_CON_
{
		volatile struct	/* 0x1A00323C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_CON;	/* CAM_UNI_EISO_CON */

typedef volatile union _CAM_UNI_REG_EISO_CON2_
{
		volatile struct	/* 0x1A003240 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_CON2;	/* CAM_UNI_EISO_CON2 */

typedef volatile union _CAM_UNI_REG_EISO_CON3_
{
		volatile struct	/* 0x1A003244 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_CON3;	/* CAM_UNI_EISO_CON3 */

typedef volatile union _CAM_UNI_REG_FLKO_BASE_ADDR_
{
		volatile struct	/* 0x1A003250 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_BASE_ADDR;	/* CAM_UNI_FLKO_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_FLKO_OFST_ADDR_
{
		volatile struct	/* 0x1A003258 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_OFST_ADDR;	/* CAM_UNI_FLKO_OFST_ADDR */

typedef volatile union _CAM_UNI_REG_FLKO_XSIZE_
{
		volatile struct	/* 0x1A003260 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_XSIZE;	/* CAM_UNI_FLKO_XSIZE */

typedef volatile union _CAM_UNI_REG_FLKO_YSIZE_
{
		volatile struct	/* 0x1A003264 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_YSIZE;	/* CAM_UNI_FLKO_YSIZE */

typedef volatile union _CAM_UNI_REG_FLKO_STRIDE_
{
		volatile struct	/* 0x1A003268 */
		{
				FIELD  RSV                                   : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  7;		/* 17..23, 0x00FE0000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_STRIDE;	/* CAM_UNI_FLKO_STRIDE */

typedef volatile union _CAM_UNI_REG_FLKO_CON_
{
		volatile struct	/* 0x1A00326C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_CON;	/* CAM_UNI_FLKO_CON */

typedef volatile union _CAM_UNI_REG_FLKO_CON2_
{
		volatile struct	/* 0x1A003270 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_CON2;	/* CAM_UNI_FLKO_CON2 */

typedef volatile union _CAM_UNI_REG_FLKO_CON3_
{
		volatile struct	/* 0x1A003274 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_CON3;	/* CAM_UNI_FLKO_CON3 */

typedef volatile union _CAM_UNI_REG_RSSO_A_BASE_ADDR_
{
		volatile struct	/* 0x1A003280 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_BASE_ADDR;	/* CAM_UNI_RSSO_A_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_RSSO_A_OFST_ADDR_
{
		volatile struct	/* 0x1A003288 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_OFST_ADDR;	/* CAM_UNI_RSSO_A_OFST_ADDR */

typedef volatile union _CAM_UNI_REG_RSSO_A_XSIZE_
{
		volatile struct	/* 0x1A003290 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_XSIZE;	/* CAM_UNI_RSSO_A_XSIZE */

typedef volatile union _CAM_UNI_REG_RSSO_A_YSIZE_
{
		volatile struct	/* 0x1A003294 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_YSIZE;	/* CAM_UNI_RSSO_A_YSIZE */

typedef volatile union _CAM_UNI_REG_RSSO_A_STRIDE_
{
		volatile struct	/* 0x1A003298 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_STRIDE;	/* CAM_UNI_RSSO_A_STRIDE */

typedef volatile union _CAM_UNI_REG_RSSO_A_CON_
{
		volatile struct	/* 0x1A00329C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_CON;	/* CAM_UNI_RSSO_A_CON */

typedef volatile union _CAM_UNI_REG_RSSO_A_CON2_
{
		volatile struct	/* 0x1A0032A0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_CON2;	/* CAM_UNI_RSSO_A_CON2 */

typedef volatile union _CAM_UNI_REG_RSSO_A_CON3_
{
		volatile struct	/* 0x1A0032A4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_CON3;	/* CAM_UNI_RSSO_A_CON3 */

typedef volatile union _CAM_UNI_REG_RSSO_B_BASE_ADDR_
{
		volatile struct	/* 0x1A0032B0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_BASE_ADDR;	/* CAM_UNI_RSSO_B_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_RSSO_B_OFST_ADDR_
{
		volatile struct	/* 0x1A0032B8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_OFST_ADDR;	/* CAM_UNI_RSSO_B_OFST_ADDR */

typedef volatile union _CAM_UNI_REG_RSSO_B_XSIZE_
{
		volatile struct	/* 0x1A0032C0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_XSIZE;	/* CAM_UNI_RSSO_B_XSIZE */

typedef volatile union _CAM_UNI_REG_RSSO_B_YSIZE_
{
		volatile struct	/* 0x1A0032C4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_YSIZE;	/* CAM_UNI_RSSO_B_YSIZE */

typedef volatile union _CAM_UNI_REG_RSSO_B_STRIDE_
{
		volatile struct	/* 0x1A0032C8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_STRIDE;	/* CAM_UNI_RSSO_B_STRIDE */

typedef volatile union _CAM_UNI_REG_RSSO_B_CON_
{
		volatile struct	/* 0x1A0032CC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_CON;	/* CAM_UNI_RSSO_B_CON */

typedef volatile union _CAM_UNI_REG_RSSO_B_CON2_
{
		volatile struct	/* 0x1A0032D0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_CON2;	/* CAM_UNI_RSSO_B_CON2 */

typedef volatile union _CAM_UNI_REG_RSSO_B_CON3_
{
		volatile struct	/* 0x1A0032D4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_CON3;	/* CAM_UNI_RSSO_B_CON3 */

typedef volatile union _CAM_UNI_REG_RAWI_BASE_ADDR_
{
		volatile struct	/* 0x1A003340 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_BASE_ADDR;	/* CAM_UNI_RAWI_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_RAWI_OFST_ADDR_
{
		volatile struct	/* 0x1A003348 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_OFST_ADDR;	/* CAM_UNI_RAWI_OFST_ADDR */

typedef volatile union _CAM_UNI_REG_RAWI_XSIZE_
{
		volatile struct	/* 0x1A003350 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_XSIZE;	/* CAM_UNI_RAWI_XSIZE */

typedef volatile union _CAM_UNI_REG_RAWI_YSIZE_
{
		volatile struct	/* 0x1A003354 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_YSIZE;	/* CAM_UNI_RAWI_YSIZE */

typedef volatile union _CAM_UNI_REG_RAWI_STRIDE_
{
		volatile struct	/* 0x1A003358 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_STRIDE;	/* CAM_UNI_RAWI_STRIDE */

typedef volatile union _CAM_UNI_REG_RAWI_CON_
{
		volatile struct	/* 0x1A00335C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_CON;	/* CAM_UNI_RAWI_CON */

typedef volatile union _CAM_UNI_REG_RAWI_CON2_
{
		volatile struct	/* 0x1A003360 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_CON2;	/* CAM_UNI_RAWI_CON2 */

typedef volatile union _CAM_UNI_REG_RAWI_CON3_
{
		volatile struct	/* 0x1A003364 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_CON3;	/* CAM_UNI_RAWI_CON3 */

typedef volatile union _CAM_UNI_REG_DMA_ERR_CTRL_
{
		volatile struct	/* 0x1A003370 */
		{
				FIELD  EISO_ERR                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLKO_ERR                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RSSO_A_ERR                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RSSO_B_ERR                            :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  RAWI_ERR                              :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 14;		/* 17..30, 0x7FFE0000 */
				FIELD  ERR_CLR_MD                            :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_ERR_CTRL;	/* CAM_UNI_DMA_ERR_CTRL */

typedef volatile union _CAM_UNI_REG_EISO_ERR_STAT_
{
		volatile struct	/* 0x1A003374 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_ERR_STAT;	/* CAM_UNI_EISO_ERR_STAT */

typedef volatile union _CAM_UNI_REG_FLKO_ERR_STAT_
{
		volatile struct	/* 0x1A003378 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_ERR_STAT;	/* CAM_UNI_FLKO_ERR_STAT */

typedef volatile union _CAM_UNI_REG_RSSO_A_ERR_STAT_
{
		volatile struct	/* 0x1A00337C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_ERR_STAT;	/* CAM_UNI_RSSO_A_ERR_STAT */

typedef volatile union _CAM_UNI_REG_RSSO_B_ERR_STAT_
{
		volatile struct	/* 0x1A003380 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_ERR_STAT;	/* CAM_UNI_RSSO_B_ERR_STAT */

typedef volatile union _CAM_UNI_REG_RAWI_ERR_STAT_
{
		volatile struct	/* 0x1A003384 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RAWI_ERR_STAT;	/* CAM_UNI_RAWI_ERR_STAT */

typedef volatile union _CAM_UNI_REG_DMA_DEBUG_ADDR_
{
		volatile struct	/* 0x1A003388 */
		{
				FIELD  DEBUG_ADDR                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_DEBUG_ADDR;	/* CAM_UNI_DMA_DEBUG_ADDR */

typedef volatile union _CAM_UNI_REG_DMA_RSV1_
{
		volatile struct	/* 0x1A00338C */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_RSV1;	/* CAM_UNI_DMA_RSV1 */

typedef volatile union _CAM_UNI_REG_DMA_RSV2_
{
		volatile struct	/* 0x1A003390 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_RSV2;	/* CAM_UNI_DMA_RSV2 */

typedef volatile union _CAM_UNI_REG_DMA_RSV3_
{
		volatile struct	/* 0x1A003394 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_RSV3;	/* CAM_UNI_DMA_RSV3 */

typedef volatile union _CAM_UNI_REG_DMA_RSV4_
{
		volatile struct	/* 0x1A003398 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_RSV4;	/* CAM_UNI_DMA_RSV4 */

typedef volatile union _CAM_UNI_REG_DMA_RSV5_
{
		volatile struct	/* 0x1A00339C */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_RSV5;	/* CAM_UNI_DMA_RSV5 */

typedef volatile union _CAM_UNI_REG_DMA_RSV6_
{
		volatile struct	/* 0x1A0033A0 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_RSV6;	/* CAM_UNI_DMA_RSV6 */

typedef volatile union _CAM_UNI_REG_DMA_DEBUG_SEL_
{
		volatile struct	/* 0x1A0033A4 */
		{
				FIELD  DMA_TOP_SEL                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  R_W_DMA_TOP_SEL                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SUB_MODULE_SEL                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  6;		/* 24..29, 0x3F000000 */
				FIELD  ARBITER_BVALID_FULL                   :  1;		/* 30..30, 0x40000000 */
				FIELD  ARBITER_COM_FULL                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_DEBUG_SEL;	/* CAM_UNI_DMA_DEBUG_SEL */

typedef volatile union _CAM_UNI_REG_DMA_BW_SELF_TEST_
{
		volatile struct	/* 0x1A0033A8 */
		{
				FIELD  BW_SELF_TEST_EN_EISO                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  BW_SELF_TEST_EN_FLKO                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  BW_SELF_TEST_EN_RSSO_A                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  BW_SELF_TEST_EN_RSSO_B                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_BW_SELF_TEST;	/* CAM_UNI_DMA_BW_SELF_TEST */

typedef volatile union _CAM_UNI_REG_DMA_FRAME_HEADER_EN_
{
		volatile struct	/* 0x1A0033C0 */
		{
				FIELD  FRAME_HEADER_EN_EISO                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FRAME_HEADER_EN_FLKO                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  FRAME_HEADER_EN_RSSO_A                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FRAME_HEADER_EN_RSSO_B                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_DMA_FRAME_HEADER_EN;	/* CAM_UNI_DMA_FRAME_HEADER_EN */

typedef volatile union _CAM_UNI_REG_EISO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A0033C4 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_BASE_ADDR;	/* CAM_UNI_EISO_FH_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_FLKO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A0033C8 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_BASE_ADDR;	/* CAM_UNI_FLKO_FH_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A0033CC */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_BASE_ADDR;	/* CAM_UNI_RSSO_A_FH_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A0033D0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_BASE_ADDR;	/* CAM_UNI_RSSO_B_FH_BASE_ADDR */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_2_
{
		volatile struct	/* 0x1A0033E0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_2;	/* CAM_UNI_EISO_FH_SPARE_2 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_3_
{
		volatile struct	/* 0x1A0033E4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_3;	/* CAM_UNI_EISO_FH_SPARE_3 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_4_
{
		volatile struct	/* 0x1A0033E8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_4;	/* CAM_UNI_EISO_FH_SPARE_4 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_5_
{
		volatile struct	/* 0x1A0033EC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_5;	/* CAM_UNI_EISO_FH_SPARE_5 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_6_
{
		volatile struct	/* 0x1A0033F0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_6;	/* CAM_UNI_EISO_FH_SPARE_6 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_7_
{
		volatile struct	/* 0x1A0033F4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_7;	/* CAM_UNI_EISO_FH_SPARE_7 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_8_
{
		volatile struct	/* 0x1A0033F8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_8;	/* CAM_UNI_EISO_FH_SPARE_8 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_9_
{
		volatile struct	/* 0x1A0033FC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_9;	/* CAM_UNI_EISO_FH_SPARE_9 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_10_
{
		volatile struct	/* 0x1A003400 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_10;	/* CAM_UNI_EISO_FH_SPARE_10 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_11_
{
		volatile struct	/* 0x1A003404 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_11;	/* CAM_UNI_EISO_FH_SPARE_11 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_12_
{
		volatile struct	/* 0x1A003408 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_12;	/* CAM_UNI_EISO_FH_SPARE_12 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_13_
{
		volatile struct	/* 0x1A00340C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_13;	/* CAM_UNI_EISO_FH_SPARE_13 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_14_
{
		volatile struct	/* 0x1A003410 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_14;	/* CAM_UNI_EISO_FH_SPARE_14 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_15_
{
		volatile struct	/* 0x1A003414 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_15;	/* CAM_UNI_EISO_FH_SPARE_15 */

typedef volatile union _CAM_UNI_REG_EISO_FH_SPARE_16_
{
		volatile struct	/* 0x1A003418 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EISO_FH_SPARE_16;	/* CAM_UNI_EISO_FH_SPARE_16 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_2_
{
		volatile struct	/* 0x1A003420 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_2;	/* CAM_UNI_FLKO_FH_SPARE_2 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_3_
{
		volatile struct	/* 0x1A003424 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_3;	/* CAM_UNI_FLKO_FH_SPARE_3 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_4_
{
		volatile struct	/* 0x1A003428 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_4;	/* CAM_UNI_FLKO_FH_SPARE_4 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_5_
{
		volatile struct	/* 0x1A00342C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_5;	/* CAM_UNI_FLKO_FH_SPARE_5 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_6_
{
		volatile struct	/* 0x1A003430 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_6;	/* CAM_UNI_FLKO_FH_SPARE_6 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_7_
{
		volatile struct	/* 0x1A003434 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_7;	/* CAM_UNI_FLKO_FH_SPARE_7 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_8_
{
		volatile struct	/* 0x1A003438 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_8;	/* CAM_UNI_FLKO_FH_SPARE_8 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_9_
{
		volatile struct	/* 0x1A00343C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_9;	/* CAM_UNI_FLKO_FH_SPARE_9 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_10_
{
		volatile struct	/* 0x1A003440 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_10;	/* CAM_UNI_FLKO_FH_SPARE_10 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_11_
{
		volatile struct	/* 0x1A003444 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_11;	/* CAM_UNI_FLKO_FH_SPARE_11 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_12_
{
		volatile struct	/* 0x1A003448 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_12;	/* CAM_UNI_FLKO_FH_SPARE_12 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_13_
{
		volatile struct	/* 0x1A00344C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_13;	/* CAM_UNI_FLKO_FH_SPARE_13 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_14_
{
		volatile struct	/* 0x1A003450 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_14;	/* CAM_UNI_FLKO_FH_SPARE_14 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_15_
{
		volatile struct	/* 0x1A003454 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_15;	/* CAM_UNI_FLKO_FH_SPARE_15 */

typedef volatile union _CAM_UNI_REG_FLKO_FH_SPARE_16_
{
		volatile struct	/* 0x1A003458 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLKO_FH_SPARE_16;	/* CAM_UNI_FLKO_FH_SPARE_16 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_2_
{
		volatile struct	/* 0x1A003460 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_2;	/* CAM_UNI_RSSO_A_FH_SPARE_2 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_3_
{
		volatile struct	/* 0x1A003464 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_3;	/* CAM_UNI_RSSO_A_FH_SPARE_3 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_4_
{
		volatile struct	/* 0x1A003468 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_4;	/* CAM_UNI_RSSO_A_FH_SPARE_4 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_5_
{
		volatile struct	/* 0x1A00346C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_5;	/* CAM_UNI_RSSO_A_FH_SPARE_5 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_6_
{
		volatile struct	/* 0x1A003470 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_6;	/* CAM_UNI_RSSO_A_FH_SPARE_6 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_7_
{
		volatile struct	/* 0x1A003474 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_7;	/* CAM_UNI_RSSO_A_FH_SPARE_7 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_8_
{
		volatile struct	/* 0x1A003478 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_8;	/* CAM_UNI_RSSO_A_FH_SPARE_8 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_9_
{
		volatile struct	/* 0x1A00347C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_9;	/* CAM_UNI_RSSO_A_FH_SPARE_9 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_10_
{
		volatile struct	/* 0x1A003480 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_10;	/* CAM_UNI_RSSO_A_FH_SPARE_10 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_11_
{
		volatile struct	/* 0x1A003484 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_11;	/* CAM_UNI_RSSO_A_FH_SPARE_11 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_12_
{
		volatile struct	/* 0x1A003488 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_12;	/* CAM_UNI_RSSO_A_FH_SPARE_12 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_13_
{
		volatile struct	/* 0x1A00348C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_13;	/* CAM_UNI_RSSO_A_FH_SPARE_13 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_14_
{
		volatile struct	/* 0x1A003490 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_14;	/* CAM_UNI_RSSO_A_FH_SPARE_14 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_15_
{
		volatile struct	/* 0x1A003494 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_15;	/* CAM_UNI_RSSO_A_FH_SPARE_15 */

typedef volatile union _CAM_UNI_REG_RSSO_A_FH_SPARE_16_
{
		volatile struct	/* 0x1A003498 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_A_FH_SPARE_16;	/* CAM_UNI_RSSO_A_FH_SPARE_16 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_2_
{
		volatile struct	/* 0x1A0034A0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_2;	/* CAM_UNI_RSSO_B_FH_SPARE_2 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_3_
{
		volatile struct	/* 0x1A0034A4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_3;	/* CAM_UNI_RSSO_B_FH_SPARE_3 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_4_
{
		volatile struct	/* 0x1A0034A8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_4;	/* CAM_UNI_RSSO_B_FH_SPARE_4 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_5_
{
		volatile struct	/* 0x1A0034AC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_5;	/* CAM_UNI_RSSO_B_FH_SPARE_5 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_6_
{
		volatile struct	/* 0x1A0034B0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_6;	/* CAM_UNI_RSSO_B_FH_SPARE_6 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_7_
{
		volatile struct	/* 0x1A0034B4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_7;	/* CAM_UNI_RSSO_B_FH_SPARE_7 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_8_
{
		volatile struct	/* 0x1A0034B8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_8;	/* CAM_UNI_RSSO_B_FH_SPARE_8 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_9_
{
		volatile struct	/* 0x1A0034BC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_9;	/* CAM_UNI_RSSO_B_FH_SPARE_9 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_10_
{
		volatile struct	/* 0x1A0034C0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_10;	/* CAM_UNI_RSSO_B_FH_SPARE_10 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_11_
{
		volatile struct	/* 0x1A0034C4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_11;	/* CAM_UNI_RSSO_B_FH_SPARE_11 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_12_
{
		volatile struct	/* 0x1A0034C8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_12;	/* CAM_UNI_RSSO_B_FH_SPARE_12 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_13_
{
		volatile struct	/* 0x1A0034CC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_13;	/* CAM_UNI_RSSO_B_FH_SPARE_13 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_14_
{
		volatile struct	/* 0x1A0034D0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_14;	/* CAM_UNI_RSSO_B_FH_SPARE_14 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_15_
{
		volatile struct	/* 0x1A0034D4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_15;	/* CAM_UNI_RSSO_B_FH_SPARE_15 */

typedef volatile union _CAM_UNI_REG_RSSO_B_FH_SPARE_16_
{
		volatile struct	/* 0x1A0034D8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSSO_B_FH_SPARE_16;	/* CAM_UNI_RSSO_B_FH_SPARE_16 */

typedef volatile union _CAM_UNI_REG_UNP2_A_OFST_
{
		volatile struct	/* 0x1A003500 */
		{
				FIELD  UNP2_OFST_STB                         :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  UNP2_OFST_EDB                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_UNP2_A_OFST;	/* CAM_UNI_UNP2_A_OFST */

typedef volatile union _CAM_UNI_REG_QBN3_A_MODE_
{
		volatile struct	/* 0x1A003510 */
		{
				FIELD  QBN_ACC                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  QBN_ACC_MODE                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_QBN3_A_MODE;	/* CAM_UNI_QBN3_A_MODE */

typedef volatile union _CAM_UNI_REG_SGG3_A_PGN_
{
		volatile struct	/* 0x1A003520 */
		{
				FIELD  SGG_GAIN                              : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SGG3_A_PGN;	/* CAM_UNI_SGG3_A_PGN */

typedef volatile union _CAM_UNI_REG_SGG3_A_GMRC_1_
{
		volatile struct	/* 0x1A003524 */
		{
				FIELD  SGG_GMR_1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SGG_GMR_4                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SGG3_A_GMRC_1;	/* CAM_UNI_SGG3_A_GMRC_1 */

typedef volatile union _CAM_UNI_REG_SGG3_A_GMRC_2_
{
		volatile struct	/* 0x1A003528 */
		{
				FIELD  SGG_GMR_5                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_6                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_7                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SGG3_A_GMRC_2;	/* CAM_UNI_SGG3_A_GMRC_2 */

typedef volatile union _CAM_UNI_REG_FLK_A_CON_
{
		volatile struct	/* 0x1A003530 */
		{
				FIELD  RESERVED                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLK_A_CON;	/* CAM_UNI_FLK_A_CON */

typedef volatile union _CAM_UNI_REG_FLK_A_OFST_
{
		volatile struct	/* 0x1A003534 */
		{
				FIELD  FLK_OFST_X                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FLK_OFST_Y                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLK_A_OFST;	/* CAM_UNI_FLK_A_OFST */

typedef volatile union _CAM_UNI_REG_FLK_A_SIZE_
{
		volatile struct	/* 0x1A003538 */
		{
				FIELD  FLK_SIZE_X                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FLK_SIZE_Y                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLK_A_SIZE;	/* CAM_UNI_FLK_A_SIZE */

typedef volatile union _CAM_UNI_REG_FLK_A_NUM_
{
		volatile struct	/* 0x1A00353C */
		{
				FIELD  FLK_NUM_X                             :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLK_NUM_Y                             :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_FLK_A_NUM;	/* CAM_UNI_FLK_A_NUM */

typedef volatile union _CAM_UNI_REG_EIS_A_PREP_ME_CTRL1_
{
		volatile struct	/* 0x1A003550 */
		{
				FIELD  EIS_OP_HORI                           :  3;		/*  0.. 2, 0x00000007 */
				FIELD  EIS_OP_VERT                           :  3;		/*  3.. 5, 0x00000038 */
				FIELD  EIS_SUBG_EN                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  EIS_NUM_HRP                           :  5;		/*  8..12, 0x00001F00 */
				FIELD  EIS_KNEE_2                            :  4;		/* 13..16, 0x0001E000 */
				FIELD  EIS_KNEE_1                            :  4;		/* 17..20, 0x001E0000 */
				FIELD  EIS_NUM_VRP                           :  4;		/* 21..24, 0x01E00000 */
				FIELD  EIS_NUM_HWIN                          :  3;		/* 25..27, 0x0E000000 */
				FIELD  EIS_NUM_VWIN                          :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_PREP_ME_CTRL1;	/* CAM_UNI_EIS_A_PREP_ME_CTRL1 */

typedef volatile union _CAM_UNI_REG_EIS_A_PREP_ME_CTRL2_
{
		volatile struct	/* 0x1A003554 */
		{
				FIELD  EIS_PROC_GAIN                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  EIS_HORI_SHR                          :  3;		/*  2.. 4, 0x0000001C */
				FIELD  EIS_VERT_SHR                          :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  EIS_DC_DL                             :  6;		/*  8..13, 0x00003F00 */
				FIELD  EIS_RP_MODI                           :  1;		/* 14..14, 0x00004000 */
				FIELD  EIS_FIRST_FRM                         :  1;		/* 15..15, 0x00008000 */
				FIELD  EIS_SPARE                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_PREP_ME_CTRL2;	/* CAM_UNI_EIS_A_PREP_ME_CTRL2 */

typedef volatile union _CAM_UNI_REG_EIS_A_LMV_TH_
{
		volatile struct	/* 0x1A003558 */
		{
				FIELD  LMV_TH_Y_SURROUND                     :  8;		/*  0.. 7, 0x000000FF */
				FIELD  LMV_TH_Y_CENTER                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  LMV_TH_X_SOURROUND                    :  8;		/* 16..23, 0x00FF0000 */
				FIELD  LMV_TH_X_CENTER                       :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_LMV_TH;	/* CAM_UNI_EIS_A_LMV_TH */

typedef volatile union _CAM_UNI_REG_EIS_A_FL_OFFSET_
{
		volatile struct	/* 0x1A00355C */
		{
				FIELD  EIS_WIN_VOFST                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  EIS_WIN_HOFST                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_FL_OFFSET;	/* CAM_UNI_EIS_A_FL_OFFSET */

typedef volatile union _CAM_UNI_REG_EIS_A_MB_OFFSET_
{
		volatile struct	/* 0x1A003560 */
		{
				FIELD  EIS_RP_VOFST                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  EIS_RP_HOFST                          : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_MB_OFFSET;	/* CAM_UNI_EIS_A_MB_OFFSET */

typedef volatile union _CAM_UNI_REG_EIS_A_MB_INTERVAL_
{
		volatile struct	/* 0x1A003564 */
		{
				FIELD  EIS_WIN_VSIZE                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  EIS_WIN_HSIZE                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_MB_INTERVAL;	/* CAM_UNI_EIS_A_MB_INTERVAL */

typedef volatile union _CAM_UNI_REG_EIS_A_GMV_
{
		volatile struct	/* 0x1A003568 */
		{
				FIELD  GMV_Y                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  GMV_X                                 : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_GMV;	/* CAM_UNI_EIS_A_GMV */

typedef volatile union _CAM_UNI_REG_EIS_A_ERR_CTRL_
{
		volatile struct	/* 0x1A00356C */
		{
				FIELD  ERR_STATUS                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  CHK_SUM_EN                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  CHK_SUM_OUT                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ERR_MASK                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 11;		/* 20..30, 0x7FF00000 */
				FIELD  CLEAR_ERR                             :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_ERR_CTRL;	/* CAM_UNI_EIS_A_ERR_CTRL */

typedef volatile union _CAM_UNI_REG_EIS_A_IMAGE_CTRL_
{
		volatile struct	/* 0x1A003570 */
		{
				FIELD  HEIGHT                                : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WIDTH                                 : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  PIPE_MODE                             :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_EIS_A_IMAGE_CTRL;	/* CAM_UNI_EIS_A_IMAGE_CTRL */

typedef volatile union _CAM_UNI_REG_SGG2_A_PGN_
{
		volatile struct	/* 0x1A003590 */
		{
				FIELD  SGG_GAIN                              : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SGG2_A_PGN;	/* CAM_UNI_SGG2_A_PGN */

typedef volatile union _CAM_UNI_REG_SGG2_A_GMRC_1_
{
		volatile struct	/* 0x1A003594 */
		{
				FIELD  SGG_GMR_1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SGG_GMR_4                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SGG2_A_GMRC_1;	/* CAM_UNI_SGG2_A_GMRC_1 */

typedef volatile union _CAM_UNI_REG_SGG2_A_GMRC_2_
{
		volatile struct	/* 0x1A003598 */
		{
				FIELD  SGG_GMR_5                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_6                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_7                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_SGG2_A_GMRC_2;	/* CAM_UNI_SGG2_A_GMRC_2 */

typedef volatile union _CAM_UNI_REG_HDS_A_MODE_
{
		volatile struct	/* 0x1A0035A0 */
		{
				FIELD  HDS_DS                                :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_HDS_A_MODE;	/* CAM_UNI_HDS_A_MODE */

typedef volatile union _CAM_UNI_REG_RSS_A_CONTROL_
{
		volatile struct	/* 0x1A0035C0 */
		{
				FIELD  RSS_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RSS_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RSS_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RSS_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 11;		/*  5..15, 0x0000FFE0 */
				FIELD  RSS_HORI_TBL_SEL                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  RSS_VERT_TBL_SEL                      :  5;		/* 21..25, 0x03E00000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_CONTROL;	/* CAM_UNI_RSS_A_CONTROL */

typedef volatile union _CAM_UNI_REG_RSS_A_IN_IMG_
{
		volatile struct	/* 0x1A0035C4 */
		{
				FIELD  RSS_IN_WD                             : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RSS_IN_HT                             : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_IN_IMG;	/* CAM_UNI_RSS_A_IN_IMG */

typedef volatile union _CAM_UNI_REG_RSS_A_OUT_IMG_
{
		volatile struct	/* 0x1A0035C8 */
		{
				FIELD  RSS_OUT_WD                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RSS_OUT_HT                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_OUT_IMG;	/* CAM_UNI_RSS_A_OUT_IMG */

typedef volatile union _CAM_UNI_REG_RSS_A_HORI_STEP_
{
		volatile struct	/* 0x1A0035CC */
		{
				FIELD  RSS_HORI_STEP                         : 23;		/*  0..22, 0x007FFFFF */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_HORI_STEP;	/* CAM_UNI_RSS_A_HORI_STEP */

typedef volatile union _CAM_UNI_REG_RSS_A_VERT_STEP_
{
		volatile struct	/* 0x1A0035D0 */
		{
				FIELD  RSS_VERT_STEP                         : 23;		/*  0..22, 0x007FFFFF */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_VERT_STEP;	/* CAM_UNI_RSS_A_VERT_STEP */

typedef volatile union _CAM_UNI_REG_RSS_A_HORI_INT_OFST_
{
		volatile struct	/* 0x1A0035D4 */
		{
				FIELD  RSS_HORI_INT_OFST                     : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_HORI_INT_OFST;	/* CAM_UNI_RSS_A_HORI_INT_OFST */

typedef volatile union _CAM_UNI_REG_RSS_A_HORI_SUB_OFST_
{
		volatile struct	/* 0x1A0035D8 */
		{
				FIELD  RSS_HORI_SUB_OFST                     : 21;		/*  0..20, 0x001FFFFF */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_HORI_SUB_OFST;	/* CAM_UNI_RSS_A_HORI_SUB_OFST */

typedef volatile union _CAM_UNI_REG_RSS_A_VERT_INT_OFST_
{
		volatile struct	/* 0x1A0035DC */
		{
				FIELD  RSS_VERT_INT_OFST                     : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_VERT_INT_OFST;	/* CAM_UNI_RSS_A_VERT_INT_OFST */

typedef volatile union _CAM_UNI_REG_RSS_A_VERT_SUB_OFST_
{
		volatile struct	/* 0x1A0035E0 */
		{
				FIELD  RSS_VERT_SUB_OFST                     : 21;		/*  0..20, 0x001FFFFF */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_VERT_SUB_OFST;	/* CAM_UNI_RSS_A_VERT_SUB_OFST */

typedef volatile union _CAM_UNI_REG_RSS_A_SPARE_1_
{
		volatile struct	/* 0x1A0035F4 */
		{
				FIELD  RSS_SPARE_REG                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_UNI_REG_RSS_A_SPARE_1;	/* CAM_UNI_RSS_A_SPARE_1 */
#if 0
typedef volatile union _SENINF_REG_TOP_CTRL_
{
		volatile struct	/* 0x1A040000 */
		{
				FIELD  rsv_0                                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SENINF1_PCLK_SEL                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF2_PCLK_SEL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF1_PCLK_EN                       :  1;		/* 10..10, 0x00000400 */
				FIELD  SENINF2_PCLK_EN                       :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  SENINF_TOP_N3D_SW_RST                 :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 14;		/* 17..30, 0x7FFE0000 */
				FIELD  SENINF_TOP_DBG_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TOP_CTRL;	/* SENINF_TOP_CTRL */

typedef volatile union _SENINF_REG_TOP_CMODEL_PAR_
{
		volatile struct	/* 0x1A040004 */
		{
				FIELD  SENINF1_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF2_EN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF3_EN                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF4_EN                            :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF1_FORMAT                        :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  SENINF2_FORMAT                        :  4;		/*  8..11, 0x00000F00 */
				FIELD  SENINF3_FORMAT                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  SENINF4_FORMAT                        :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TOP_CMODEL_PAR;	/* SENINF_TOP_CMODEL_PAR */

typedef volatile union _SENINF_REG_TOP_MUX_CTRL_
{
		volatile struct	/* 0x1A040008 */
		{
				FIELD  SENINF1_MUX_SRC_SEL                   :  4;		/*  0.. 3, 0x0000000F */
				FIELD  SENINF2_MUX_SRC_SEL                   :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  SENINF3_MUX_SRC_SEL                   :  4;		/*  8..11, 0x00000F00 */
				FIELD  SENINF4_MUX_SRC_SEL                   :  4;		/* 12..15, 0x0000F000 */
				FIELD  SENINF5_MUX_SRC_SEL                   :  4;		/* 16..19, 0x000F0000 */
				FIELD  SENINF6_MUX_SRC_SEL                   :  4;		/* 20..23, 0x00F00000 */
				FIELD  SENINF7_MUX_SRC_SEL                   :  4;		/* 24..27, 0x0F000000 */
				FIELD  SENINF8_MUX_SRC_SEL                   :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TOP_MUX_CTRL;	/* SENINF_TOP_MUX_CTRL */

typedef volatile union _SENINF_REG_N3D_CTL_
{
		volatile struct	/* 0x1A0400C0 */
		{
				FIELD  MODE                                  :  2;		/*  0.. 1, 0x00000003 */
				FIELD  I2C1_EN                               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  I2C2_EN                               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  I2C1_INT_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  I2C2_INT_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  N3D_EN                                :  1;		/*  6.. 6, 0x00000040 */
				FIELD  W1CLR                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DIFF_EN                               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DDBG_SEL                              :  3;		/*  9..11, 0x00000E00 */
				FIELD  MODE1_DBG                             :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  SEN1_TIM_EN                           :  1;		/* 16..16, 0x00010000 */
				FIELD  SEN2_TIM_EN                           :  1;		/* 17..17, 0x00020000 */
				FIELD  SEN1_OV_VS_INT_EN                     :  1;		/* 18..18, 0x00040000 */
				FIELD  SEN2_OV_VS_INT_EN                     :  1;		/* 19..19, 0x00080000 */
				FIELD  HW_SYNC_MODE                          :  1;		/* 20..20, 0x00100000 */
				FIELD  VALID_TG_EN                           :  1;		/* 21..21, 0x00200000 */
				FIELD  SYNC_PIN_A_EN                         :  1;		/* 22..22, 0x00400000 */
				FIELD  SYNC_PIN_A_POLARITY                   :  1;		/* 23..23, 0x00800000 */
				FIELD  SYNC_PIN_B_EN                         :  1;		/* 24..24, 0x01000000 */
				FIELD  SYNC_PIN_B_POLARITY                   :  1;		/* 25..25, 0x02000000 */
				FIELD  I2C_MUX_SEL                           :  1;		/* 26..26, 0x04000000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_CTL;	/* SENINF_N3D_CTL */

typedef volatile union _SENINF_REG_N3D_POS_
{
		volatile struct	/* 0x1A0400C4 */
		{
				FIELD  N3D_POS                               : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_POS;	/* SENINF_N3D_POS */

typedef volatile union _SENINF_REG_N3D_TRIG_
{
		volatile struct	/* 0x1A0400C8 */
		{
				FIELD  I2CA_TRIG                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  I2CB_TRIG                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_TRIG;	/* SENINF_N3D_TRIG */

typedef volatile union _SENINF_REG_N3D_INT_
{
		volatile struct	/* 0x1A0400CC */
		{
				FIELD  I2C1_INT                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  I2C2_INT                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DIFF_INT                              :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_INT;	/* SENINF_N3D_INT */

typedef volatile union _SENINF_REG_N3D_CNT0_
{
		volatile struct	/* 0x1A0400D0 */
		{
				FIELD  N3D_CNT0                              : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_CNT0;	/* SENINF_N3D_CNT0 */

typedef volatile union _SENINF_REG_N3D_CNT1_
{
		volatile struct	/* 0x1A0400D4 */
		{
				FIELD  N3D_CNT1                              : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_CNT1;	/* SENINF_N3D_CNT1 */

typedef volatile union _SENINF_REG_N3D_DBG_
{
		volatile struct	/* 0x1A0400D8 */
		{
				FIELD  N3D_DBG                               : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_DBG;	/* SENINF_N3D_DBG */

typedef volatile union _SENINF_REG_N3D_DIFF_THR_
{
		volatile struct	/* 0x1A0400DC */
		{
				FIELD  N3D_DIFF_THR                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_DIFF_THR;	/* SENINF_N3D_DIFF_THR */

typedef volatile union _SENINF_REG_N3D_DIFF_CNT_
{
		volatile struct	/* 0x1A0400E0 */
		{
				FIELD  N3D_DIFF_CNT                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_DIFF_CNT;	/* SENINF_N3D_DIFF_CNT */

typedef volatile union _SENINF_REG_N3D_DBG_1_
{
		volatile struct	/* 0x1A0400E4 */
		{
				FIELD  N3D_DBG_1                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_DBG_1;	/* SENINF_N3D_DBG_1 */

typedef volatile union _SENINF_REG_N3D_VALID_TG_CNT_
{
		volatile struct	/* 0x1A0400E8 */
		{
				FIELD  N3D_VALID_TG_CNT                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_VALID_TG_CNT;	/* SENINF_N3D_VALID_TG_CNT */

typedef volatile union _SENINF_REG_N3D_SYNC_A_PERIOD_
{
		volatile struct	/* 0x1A0400EC */
		{
				FIELD  N3D_SYNC_A_PERIOD                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_SYNC_A_PERIOD;	/* SENINF_N3D_SYNC_A_PERIOD */

typedef volatile union _SENINF_REG_N3D_SYNC_B_PERIOD_
{
		volatile struct	/* 0x1A0400F0 */
		{
				FIELD  N3D_SYNC_B_PERIOD                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_SYNC_B_PERIOD;	/* SENINF_N3D_SYNC_B_PERIOD */

typedef volatile union _SENINF_REG_N3D_SYNC_A_PULSE_LEN_
{
		volatile struct	/* 0x1A0400F4 */
		{
				FIELD  N3D_SYNC_A_PULSE_LEN                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_SYNC_A_PULSE_LEN;	/* SENINF_N3D_SYNC_A_PULSE_LEN */

typedef volatile union _SENINF_REG_N3D_SYNC_B_PULSE_LEN_
{
		volatile struct	/* 0x1A0400F8 */
		{
				FIELD  N3D_SYNC_B_PULSE_LEN                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_N3D_SYNC_B_PULSE_LEN;	/* SENINF_N3D_SYNC_B_PULSE_LEN */

typedef volatile union _SENINF1_REG_CTRL_
{
		volatile struct	/* 0x1A040100 */
		{
				FIELD  SENINF_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  NCSI2_SW_RST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI2_SW_RST                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CCIR_SW_RST                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CKGEN_SW_RST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TEST_MODEL_SW_RST                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SCAM_SW_RST                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_DEBUG_SEL                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  PAD2CAM_DATA_SEL                      :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CTRL;	/* SENINF1_CTRL */

typedef volatile union _SENINF1_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A040120 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_CTRL;	/* SENINF1_MUX_CTRL */

typedef volatile union _SENINF1_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A040124 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_INTEN;	/* SENINF1_MUX_INTEN */

typedef volatile union _SENINF1_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A040128 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_INTSTA;	/* SENINF1_MUX_INTSTA */

typedef volatile union _SENINF1_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A04012C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_SIZE;	/* SENINF1_MUX_SIZE */

typedef volatile union _SENINF1_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A040130 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_1;	/* SENINF1_MUX_DEBUG_1 */

typedef volatile union _SENINF1_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A040134 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_2;	/* SENINF1_MUX_DEBUG_2 */

typedef volatile union _SENINF1_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A040138 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_3;	/* SENINF1_MUX_DEBUG_3 */

typedef volatile union _SENINF1_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A04013C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_4;	/* SENINF1_MUX_DEBUG_4 */

typedef volatile union _SENINF1_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A040140 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_5;	/* SENINF1_MUX_DEBUG_5 */

typedef volatile union _SENINF1_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A040144 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_6;	/* SENINF1_MUX_DEBUG_6 */

typedef volatile union _SENINF1_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A040148 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DEBUG_7;	/* SENINF1_MUX_DEBUG_7 */

typedef volatile union _SENINF1_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A04014C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_SPARE;	/* SENINF1_MUX_SPARE */

typedef volatile union _SENINF1_REG_MUX_DATA_
{
		volatile struct	/* 0x1A040150 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DATA;	/* SENINF1_MUX_DATA */

typedef volatile union _SENINF1_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A040154 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_DATA_CNT;	/* SENINF1_MUX_DATA_CNT */

typedef volatile union _SENINF1_REG_MUX_CROP_
{
		volatile struct	/* 0x1A040158 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_MUX_CROP;	/* SENINF1_MUX_CROP */

typedef volatile union _SENINF_REG_TG1_PH_CNT_
{
		volatile struct	/* 0x1A040200 */
		{
				FIELD  TGCLK_SEL                             :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CLKFL_POL                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EXT_RST                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  EXT_PWRDN                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PAD_PCLK_INV                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CAM_PCLK_INV                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 20;		/*  8..27, 0x0FFFFF00 */
				FIELD  CLKPOL                                :  1;		/* 28..28, 0x10000000 */
				FIELD  ADCLK_EN                              :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  PCEN                                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG1_PH_CNT;	/* SENINF_TG1_PH_CNT */

typedef volatile union _SENINF_REG_TG1_SEN_CK_
{
		volatile struct	/* 0x1A040204 */
		{
				FIELD  CLKFL                                 :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CLKRS                                 :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CLKCNT                                :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG1_SEN_CK;	/* SENINF_TG1_SEN_CK */

typedef volatile union _SENINF_REG_TG1_TM_CTL_
{
		volatile struct	/* 0x1A040208 */
		{
				FIELD  TM_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TM_RST                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TM_FMT                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TM_PAT                                :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  TM_VSYNC                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  TM_DUMMYPXL                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG1_TM_CTL;	/* SENINF_TG1_TM_CTL */

typedef volatile union _SENINF_REG_TG1_TM_SIZE_
{
		volatile struct	/* 0x1A04020C */
		{
				FIELD  TM_PXL                                : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  TM_LINE                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG1_TM_SIZE;	/* SENINF_TG1_TM_SIZE */

typedef volatile union _SENINF_REG_TG1_TM_CLK_
{
		volatile struct	/* 0x1A040210 */
		{
				FIELD  TM_CLK_CNT                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  TM_CLRBAR_OFT                         : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  TM_CLRBAR_IDX                         :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG1_TM_CLK;	/* SENINF_TG1_TM_CLK */

typedef volatile union _SENINF_REG_TG1_TM_STP_
{
		volatile struct	/* 0x1A040214 */
		{
				FIELD  TG_TM_STP                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG1_TM_STP;	/* SENINF_TG1_TM_STP */

typedef volatile union _MIPI_REG_RX_CON00_CSI0_
{
		volatile struct	/* 0x1A040300 */
		{
				FIELD  RG_CSI0_LNRC_HSRX_CAL_APPLY           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRC_HSRX_CAL_EN              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRC_HSRX_OFFSET_CODE         :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRC_HSRX_OFFSET_OUT          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON00_CSI0;	/* MIPI_RX_CON00_CSI0 */

typedef volatile union _MIPI_REG_RX_CON04_CSI0_
{
		volatile struct	/* 0x1A040304 */
		{
				FIELD  RG_CSI0_LNRD0_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD0_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD0_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD0_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON04_CSI0;	/* MIPI_RX_CON04_CSI0 */

typedef volatile union _MIPI_REG_RX_CON08_CSI0_
{
		volatile struct	/* 0x1A040308 */
		{
				FIELD  RG_CSI0_LNRD1_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD1_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD1_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD1_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON08_CSI0;	/* MIPI_RX_CON08_CSI0 */

typedef volatile union _MIPI_REG_RX_CON0C_CSI0_
{
		volatile struct	/* 0x1A04030C */
		{
				FIELD  RG_CSI0_LNRD2_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD2_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD2_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD2_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON0C_CSI0;	/* MIPI_RX_CON0C_CSI0 */

typedef volatile union _MIPI_REG_RX_CON10_CSI0_
{
		volatile struct	/* 0x1A040310 */
		{
				FIELD  RG_CSI0_LNRD3_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD3_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD3_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD3_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON10_CSI0;	/* MIPI_RX_CON10_CSI0 */

typedef volatile union _MIPI_REG_RX_CON24_CSI0_
{
		volatile struct	/* 0x1A040324 */
		{
				FIELD  CSI0_BIST_NUM                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CSI0_BIST_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  2;		/*  3.. 4, 0x00000018 */
				FIELD  CSI0_BIST_FIX_PAT                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CSI0_BIST_CLK_SEL                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CSI0_BIST_CLK4X_SEL                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CSI0_BIST_TERM_DELAY                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CSI0_BIST_SETTLE_DELAY                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  CSI0_BIST_LN0_MUX                     :  2;		/* 24..25, 0x03000000 */
				FIELD  CSI0_BIST_LN1_MUX                     :  2;		/* 26..27, 0x0C000000 */
				FIELD  CSI0_BIST_LN2_MUX                     :  2;		/* 28..29, 0x30000000 */
				FIELD  CSI0_BIST_LN3_MUX                     :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON24_CSI0;	/* MIPI_RX_CON24_CSI0 */

typedef volatile union _MIPI_REG_RX_CON28_CSI0_
{
		volatile struct	/* 0x1A040328 */
		{
				FIELD  CSI0_BIST_START                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI0_BIST_DATA_OK                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI0_BIST_HS_FSM_OK                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI0_BIST_LANE_FSM_OK                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CSI0_BIST_CSI2_DATA_OK                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON28_CSI0;	/* MIPI_RX_CON28_CSI0 */

typedef volatile union _MIPI_REG_RX_CON34_CSI0_
{
		volatile struct	/* 0x1A040334 */
		{
				FIELD  BIST_MODE                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON34_CSI0;	/* MIPI_RX_CON34_CSI0 */

typedef volatile union _MIPI_REG_RX_CON38_CSI0_
{
		volatile struct	/* 0x1A040338 */
		{
				FIELD  MIPI_RX_SW_CTRL_MODE                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  MIPI_RX_SW_CAL_MODE                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  MIPI_RX_HW_CAL_START                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  MIPI_RX_HW_CAL_OPTION                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  MIPI_RX_HW_CAL_SW_RST                 :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MIPI_RX_MACRO_SRC_SEL                 :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON38_CSI0;	/* MIPI_RX_CON38_CSI0 */

typedef volatile union _MIPI_REG_RX_CON3C_CSI0_
{
		volatile struct	/* 0x1A04033C */
		{
				FIELD  MIPI_RX_SW_CTRL_                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON3C_CSI0;	/* MIPI_RX_CON3C_CSI0 */

typedef volatile union _MIPI_REG_RX_CON40_CSI0_
{
		volatile struct	/* 0x1A040340 */
		{
				FIELD  RG_CSI0_LNRC_LPRX_SWAP                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRC_HSRX_INVERT              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RG_CSI0_LNRD0_LPRX_SWAP               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RG_CSI0_LNRD0_HSRX_INVERT             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RG_CSI0_LNRD1_LPRX_SWAP               :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RG_CSI0_LNRD1_HSRX_INVERT             :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_CSI0_LNRD2_LPRX_SWAP               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD2_HSRX_INVERT             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD3_LPRX_SWAP               :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD3_HSRX_INVERT             :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON40_CSI0;	/* MIPI_RX_CON40_CSI0 */

typedef volatile union _MIPI_REG_RX_CON44_CSI0_
{
		volatile struct	/* 0x1A040344 */
		{
				FIELD  DA_CSI0_LNRD0_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD0_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD0_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DA_CSI0_LNRC_HSRX_CAL_APPLY           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DA_CSI0_LNRC_HSRX_CAL_EN              :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DA_CSI0_LNRC_HSRX_OFFSET_CODE         :  5;		/* 10..14, 0x00007C00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  DA_CSI0_LNRD1_HSRX_CAL_APPLY          :  1;		/* 16..16, 0x00010000 */
				FIELD  DA_CSI0_LNRD1_HSRX_CAL_EN             :  1;		/* 17..17, 0x00020000 */
				FIELD  DA_CSI0_LNRD1_HSRX_OFFSET_CODE        :  5;		/* 18..22, 0x007C0000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON44_CSI0;	/* MIPI_RX_CON44_CSI0 */

typedef volatile union _MIPI_REG_RX_CON48_CSI0_
{
		volatile struct	/* 0x1A040348 */
		{
				FIELD  DA_CSI0_LNRD2_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD2_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD2_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DA_CSI0_LNRD3_HSRX_CAL_APPLY          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DA_CSI0_LNRD3_HSRX_CAL_EN             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DA_CSI0_LNRD3_HSRX_OFFSET_CODE        :  5;		/* 10..14, 0x00007C00 */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON48_CSI0;	/* MIPI_RX_CON48_CSI0 */

typedef volatile union _MIPI_REG_RX_CON50_CSI0_
{
		volatile struct	/* 0x1A040350 */
		{
				FIELD  RG_CSI0_BCLK_INV                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  RG_CSI0_BCLK_MON                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RG_CSI0_4XCLK_MON                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON50_CSI0;	/* MIPI_RX_CON50_CSI0 */

typedef volatile union _SENINF1_REG_CSI2_CTRL_
{
		volatile struct	/* 0x1A040360 */
		{
				FIELD  CSI2_EN                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DLANE1_EN                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DLANE2_EN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  DLANE3_EN                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CSI2_ECC_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CSI2_ED_SEL                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CSI2_CLK_MISS_EN                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CSI2_LP11_RST_EN                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CSI2_SYNC_RST_EN                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CSI2_ESC_EN                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CSI2_SCLK_SEL                         :  1;		/* 10..10, 0x00000400 */
				FIELD  CSI2_SCLK4X_SEL                       :  1;		/* 11..11, 0x00000800 */
				FIELD  CSI2_SW_RST                           :  1;		/* 12..12, 0x00001000 */
				FIELD  CSI2_VSYNC_TYPE                       :  1;		/* 13..13, 0x00002000 */
				FIELD  CSI2_HSRXEN_PFOOT_CLR                 :  1;		/* 14..14, 0x00004000 */
				FIELD  CSI2_SYNC_CLR_EXTEND                  :  1;		/* 15..15, 0x00008000 */
				FIELD  CSI2_ASYNC_OPTION                     :  1;		/* 16..16, 0x00010000 */
				FIELD  CSI2_DATA_FLOW                        :  2;		/* 17..18, 0x00060000 */
				FIELD  CSI2_BIST_ERROR_COUNT                 :  8;		/* 19..26, 0x07F80000 */
				FIELD  CSI2_BIST_START                       :  1;		/* 27..27, 0x08000000 */
				FIELD  CSI2_BIST_DATA_OK                     :  1;		/* 28..28, 0x10000000 */
				FIELD  CSI2_HS_FSM_OK                        :  1;		/* 29..29, 0x20000000 */
				FIELD  CSI2_LANE_FSM_OK                      :  1;		/* 30..30, 0x40000000 */
				FIELD  CSI2_BIST_CSI2_DATA_OK                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_CTRL;	/* SENINF1_CSI2_CTRL */

typedef volatile union _SENINF1_REG_CSI2_DELAY_
{
		volatile struct	/* 0x1A040364 */
		{
				FIELD  LP2HS_CLK_TERM_DELAY                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  LP2HS_DATA_SETTLE_DELAY               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  LP2HS_DATA_TERM_DELAY                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_DELAY;	/* SENINF1_CSI2_DELAY */

typedef volatile union _SENINF1_REG_CSI2_INTEN_
{
		volatile struct	/* 0x1A040368 */
		{
				FIELD  CRC_ERR_IRQ_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ECC_ERR_IRQ_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ECC_CORRECT_IRQ_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI2SYNC_NONSYNC_IRQ_EN               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  CSI2_WC_NUMBER                        : 16;		/*  8..23, 0x00FFFF00 */
				FIELD  CSI2_DATA_TYPE                        :  6;		/* 24..29, 0x3F000000 */
				FIELD  VCHANNEL_ID                           :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_INTEN;	/* SENINF1_CSI2_INTEN */

typedef volatile union _SENINF1_REG_CSI2_INTSTA_
{
		volatile struct	/* 0x1A04036C */
		{
				FIELD  CRC_ERR_IRQ                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ECC_ERR_IRQ                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ECC_CORRECT_IRQ                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI2SYNC_NONSYNC_IRQ                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CSI2_IRQ_CLR_SEL                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CSI2_SPARE                            :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  rsv_8                                 : 12;		/*  8..19, 0x000FFF00 */
				FIELD  CSI2OUT_HSYNC                         :  1;		/* 20..20, 0x00100000 */
				FIELD  CSI2OUT_VSYNC                         :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_INTSTA;	/* SENINF1_CSI2_INTSTA */

typedef volatile union _SENINF1_REG_CSI2_ECCDBG_
{
		volatile struct	/* 0x1A040370 */
		{
				FIELD  CSI2_ECCDB_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  7;		/*  1.. 7, 0x000000FE */
				FIELD  CSI2_ECCDB_BSEL                       : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_ECCDBG;	/* SENINF1_CSI2_ECCDBG */

typedef volatile union _SENINF1_REG_CSI2_CRCDBG_
{
		volatile struct	/* 0x1A040374 */
		{
				FIELD  CSI2_CRCDB_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_SPARE                            :  7;		/*  1.. 7, 0x000000FE */
				FIELD  CSI2_CRCDB_WSEL                       : 16;		/*  8..23, 0x00FFFF00 */
				FIELD  CSI2_CRCDB_BSEL                       :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_CRCDBG;	/* SENINF1_CSI2_CRCDBG */

typedef volatile union _SENINF1_REG_CSI2_DBG_
{
		volatile struct	/* 0x1A040378 */
		{
				FIELD  CSI2_DEBUG_ON                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_DBG_SRC_SEL                      :  4;		/*  1.. 4, 0x0000001E */
				FIELD  CSI2_DATA_HS_CS                       :  6;		/*  5..10, 0x000007E0 */
				FIELD  CSI2_CLK_LANE_CS                      :  5;		/* 11..15, 0x0000F800 */
				FIELD  VCHANNEL0_ID                          :  2;		/* 16..17, 0x00030000 */
				FIELD  VCHANNEL1_ID                          :  2;		/* 18..19, 0x000C0000 */
				FIELD  VCHANNEL_ID_EN                        :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  LNC_LPRXDB_EN                         :  1;		/* 22..22, 0x00400000 */
				FIELD  LN0_LPRXDB_EN                         :  1;		/* 23..23, 0x00800000 */
				FIELD  LN1_LPRXDB_EN                         :  1;		/* 24..24, 0x01000000 */
				FIELD  LN2_LPRXDB_EN                         :  1;		/* 25..25, 0x02000000 */
				FIELD  LN3_LPRXDB_EN                         :  1;		/* 26..26, 0x04000000 */
				FIELD  LNC_HSRXDB_EN                         :  1;		/* 27..27, 0x08000000 */
				FIELD  LN0_HSRXDB_EN                         :  1;		/* 28..28, 0x10000000 */
				FIELD  LN1_HSRXDB_EN                         :  1;		/* 29..29, 0x20000000 */
				FIELD  LN2_HSRXDB_EN                         :  1;		/* 30..30, 0x40000000 */
				FIELD  LN3_HSRXDB_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_DBG;	/* SENINF1_CSI2_DBG */

typedef volatile union _SENINF1_REG_CSI2_VER_
{
		volatile struct	/* 0x1A04037C */
		{
				FIELD  DATE                                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  MONTH                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  YEAR                                  : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_VER;	/* SENINF1_CSI2_VER */

typedef volatile union _SENINF1_REG_CSI2_SHORT_INFO_
{
		volatile struct	/* 0x1A040380 */
		{
				FIELD  CSI2_LINE_NO                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CSI2_FRAME_NO                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_SHORT_INFO;	/* SENINF1_CSI2_SHORT_INFO */

typedef volatile union _SENINF1_REG_CSI2_LNFSM_
{
		volatile struct	/* 0x1A040384 */
		{
				FIELD  CSI2_DATA_LN0_CS                      :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CSI2_DATA_LN1_CS                      :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CSI2_DATA_LN2_CS                      :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  CSI2_DATA_LN3_CS                      :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_LNFSM;	/* SENINF1_CSI2_LNFSM */

typedef volatile union _SENINF1_REG_CSI2_LNMUX_
{
		volatile struct	/* 0x1A040388 */
		{
				FIELD  CSI2_DATA_LN0_MUX                     :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CSI2_DATA_LN1_MUX                     :  2;		/*  2.. 3, 0x0000000C */
				FIELD  CSI2_DATA_LN2_MUX                     :  2;		/*  4.. 5, 0x00000030 */
				FIELD  CSI2_DATA_LN3_MUX                     :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_LNMUX;	/* SENINF1_CSI2_LNMUX */

typedef volatile union _SENINF1_REG_CSI2_HSYNC_CNT_
{
		volatile struct	/* 0x1A04038C */
		{
				FIELD  CSI2_HSYNC_CNT                        : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_HSYNC_CNT;	/* SENINF1_CSI2_HSYNC_CNT */

typedef volatile union _SENINF1_REG_CSI2_CAL_
{
		volatile struct	/* 0x1A040390 */
		{
				FIELD  CSI2_CAL_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CSI2_CAL_STATE                        :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  CSI2_CAL_CNT_1                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  CSI2_CAL_CNT_2                        :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_CAL;	/* SENINF1_CSI2_CAL */

typedef volatile union _SENINF1_REG_CSI2_DS_
{
		volatile struct	/* 0x1A040394 */
		{
				FIELD  CSI2_DS_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_DS_CTRL                          :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_DS;	/* SENINF1_CSI2_DS */

typedef volatile union _SENINF1_REG_CSI2_VS_
{
		volatile struct	/* 0x1A040398 */
		{
				FIELD  CSI2_VS_CTRL                          :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_VS;	/* SENINF1_CSI2_VS */

typedef volatile union _SENINF1_REG_CSI2_BIST_
{
		volatile struct	/* 0x1A04039C */
		{
				FIELD  CSI2_BIST_LNR0_DATA_OK                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_BIST_LNR1_DATA_OK                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI2_BIST_LNR2_DATA_OK                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI2_BIST_LNR3_DATA_OK                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_CSI2_BIST;	/* SENINF1_CSI2_BIST */

typedef volatile union _SENINF1_REG_NCSI2_CTL_
{
		volatile struct	/* 0x1A0403A0 */
		{
				FIELD  DATA_LANE0_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DATA_LANE1_EN                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DATA_LANE2_EN                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  DATA_LANE3_EN                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CLOCK_LANE_EN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  ECC_EN                                :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CRC_EN                                :  1;		/*  6.. 6, 0x00000040 */
				FIELD  HSRX_DET_EN                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  HS_PRPR_EN                            :  1;		/*  8.. 8, 0x00000100 */
				FIELD  HS_END_EN                             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  GENERIC_LONG_PACKET_EN                :  1;		/* 12..12, 0x00001000 */
				FIELD  IMAGE_PACKET_EN                       :  1;		/* 13..13, 0x00002000 */
				FIELD  BYTE2PIXEL_EN                         :  1;		/* 14..14, 0x00004000 */
				FIELD  VS_TYPE                               :  1;		/* 15..15, 0x00008000 */
				FIELD  ED_SEL                                :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  1;		/* 17..17, 0x00020000 */
				FIELD  FLUSH_MODE                            :  2;		/* 18..19, 0x000C0000 */
				FIELD  SYNC_DET_SCHEME                       :  1;		/* 20..20, 0x00100000 */
				FIELD  SYNC_DET_EN                           :  1;		/* 21..21, 0x00200000 */
				FIELD  SYNC_DET_BITSWAP_EN                   :  1;		/* 22..22, 0x00400000 */
				FIELD  ASYNC_FIFO_RST_SCH                    :  2;		/* 23..24, 0x01800000 */
				FIELD  HS_TRAIL_EN                           :  1;		/* 25..25, 0x02000000 */
				FIELD  REF_SYNC_DET_EN                       :  1;		/* 26..26, 0x04000000 */
				FIELD  CLOCK_HS_OPTION                       :  1;		/* 27..27, 0x08000000 */
				FIELD  VS_OUT_CYCLE_NUMBER                   :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_CTL;	/* SENINF1_NCSI2_CTL */

typedef volatile union _SENINF1_REG_NCSI2_LNRC_TIMING_
{
		volatile struct	/* 0x1A0403A4 */
		{
				FIELD  TERM_PARAMETER                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SETTLE_PARAMETER                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_LNRC_TIMING;	/* SENINF1_NCSI2_LNRC_TIMING */

typedef volatile union _SENINF1_REG_NCSI2_LNRD_TIMING_
{
		volatile struct	/* 0x1A0403A8 */
		{
				FIELD  TERM_PARAMETER                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SETTLE_PARAMETER                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_LNRD_TIMING;	/* SENINF1_NCSI2_LNRD_TIMING */

typedef volatile union _SENINF1_REG_NCSI2_DPCM_
{
		volatile struct	/* 0x1A0403AC */
		{
				FIELD  DPCM_MODE                             :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  3;		/*  4.. 6, 0x00000070 */
				FIELD  DI_30_DPCM_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DI_31_DPCM_EN                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DI_32_DPCM_EN                         :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DI_33_DPCM_EN                         :  1;		/* 10..10, 0x00000400 */
				FIELD  DI_34_DPCM_EN                         :  1;		/* 11..11, 0x00000800 */
				FIELD  DI_35_DPCM_EN                         :  1;		/* 12..12, 0x00001000 */
				FIELD  DI_36_DPCM_EN                         :  1;		/* 13..13, 0x00002000 */
				FIELD  DI_37_DPCM_EN                         :  1;		/* 14..14, 0x00004000 */
				FIELD  DI_2A_DPCM_EN                         :  1;		/* 15..15, 0x00008000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DPCM;	/* SENINF1_NCSI2_DPCM */

typedef volatile union _SENINF1_REG_NCSI2_INT_EN_
{
		volatile struct	/* 0x1A0403B0 */
		{
				FIELD  ERR_FRAME_SYNC                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ERR_ID                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ERR_ECC_NO_ERROR                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  ERR_ECC_CORRECTED                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  ERR_ECC_DOUBLE                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  ERR_CRC                               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  ERR_AFIFO                             :  1;		/*  6.. 6, 0x00000040 */
				FIELD  ERR_MULTI_LANE_SYNC                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  ERR_SOT_SYNC_HS_LNRD0                 :  1;		/*  8.. 8, 0x00000100 */
				FIELD  ERR_SOT_SYNC_HS_LNRD1                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  ERR_SOT_SYNC_HS_LNRD2                 :  1;		/* 10..10, 0x00000400 */
				FIELD  ERR_SOT_SYNC_HS_LNRD3                 :  1;		/* 11..11, 0x00000800 */
				FIELD  FS                                    :  1;		/* 12..12, 0x00001000 */
				FIELD  LS                                    :  1;		/* 13..13, 0x00002000 */
				FIELD  GS                                    :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ERR_FRAME_SYNC_S0                     :  1;		/* 16..16, 0x00010000 */
				FIELD  ERR_FRAME_SYNC_S1                     :  1;		/* 17..17, 0x00020000 */
				FIELD  ERR_FRAME_SYNC_S2                     :  1;		/* 18..18, 0x00040000 */
				FIELD  ERR_FRAME_SYNC_S3                     :  1;		/* 19..19, 0x00080000 */
				FIELD  ERR_FRAME_SYNC_S4                     :  1;		/* 20..20, 0x00100000 */
				FIELD  ERR_FRAME_SYNC_S5                     :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                :  9;		/* 22..30, 0x7FC00000 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_INT_EN;	/* SENINF1_NCSI2_INT_EN */

typedef volatile union _SENINF1_REG_NCSI2_INT_STATUS_
{
		volatile struct	/* 0x1A0403B4 */
		{
				FIELD  ERR_FRAME_SYNC                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ERR_ID                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ERR_ECC_NO_ERROR                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  ERR_ECC_CORRECTED                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  ERR_ECC_DOUBLE                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  ERR_CRC                               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  ERR_AFIFO                             :  1;		/*  6.. 6, 0x00000040 */
				FIELD  ERR_MULTI_LANE_SYNC                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  ERR_SOT_SYNC_HS_LNRD0                 :  1;		/*  8.. 8, 0x00000100 */
				FIELD  ERR_SOT_SYNC_HS_LNRD1                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  ERR_SOT_SYNC_HS_LNRD2                 :  1;		/* 10..10, 0x00000400 */
				FIELD  ERR_SOT_SYNC_HS_LNRD3                 :  1;		/* 11..11, 0x00000800 */
				FIELD  FS                                    :  1;		/* 12..12, 0x00001000 */
				FIELD  LS                                    :  1;		/* 13..13, 0x00002000 */
				FIELD  GS                                    :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ERR_FRAME_SYNC_S0                     :  1;		/* 16..16, 0x00010000 */
				FIELD  ERR_FRAME_SYNC_S1                     :  1;		/* 17..17, 0x00020000 */
				FIELD  ERR_FRAME_SYNC_S2                     :  1;		/* 18..18, 0x00040000 */
				FIELD  ERR_FRAME_SYNC_S3                     :  1;		/* 19..19, 0x00080000 */
				FIELD  ERR_FRAME_SYNC_S4                     :  1;		/* 20..20, 0x00100000 */
				FIELD  ERR_FRAME_SYNC_S5                     :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_INT_STATUS;	/* SENINF1_NCSI2_INT_STATUS */

typedef volatile union _SENINF1_REG_NCSI2_DGB_SEL_
{
		volatile struct	/* 0x1A0403B8 */
		{
				FIELD  DEBUG_SEL                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DGB_SEL;	/* SENINF1_NCSI2_DGB_SEL */

typedef volatile union _SENINF1_REG_NCSI2_DBG_PORT_
{
		volatile struct	/* 0x1A0403BC */
		{
				FIELD  CTL_DBG_PORT                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DBG_PORT;	/* SENINF1_NCSI2_DBG_PORT */

typedef volatile union _SENINF1_REG_NCSI2_SPARE0_
{
		volatile struct	/* 0x1A0403C0 */
		{
				FIELD  SPARE0                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_SPARE0;	/* SENINF1_NCSI2_SPARE0 */

typedef volatile union _SENINF1_REG_NCSI2_SPARE1_
{
		volatile struct	/* 0x1A0403C4 */
		{
				FIELD  SPARE1                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_SPARE1;	/* SENINF1_NCSI2_SPARE1 */

typedef volatile union _SENINF1_REG_NCSI2_LNRC_FSM_
{
		volatile struct	/* 0x1A0403C8 */
		{
				FIELD  LNRC_RX_FSM                           :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_LNRC_FSM;	/* SENINF1_NCSI2_LNRC_FSM */

typedef volatile union _SENINF1_REG_NCSI2_LNRD_FSM_
{
		volatile struct	/* 0x1A0403CC */
		{
				FIELD  LNRD0_RX_FSM                          :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LNRD1_RX_FSM                          :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  LNRD2_RX_FSM                          :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  LNRD3_RX_FSM                          :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_LNRD_FSM;	/* SENINF1_NCSI2_LNRD_FSM */

typedef volatile union _SENINF1_REG_NCSI2_FRAME_LINE_NUM_
{
		volatile struct	/* 0x1A0403D0 */
		{
				FIELD  FRAME_NUM                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  LINE_NUM                              : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_FRAME_LINE_NUM;	/* SENINF1_NCSI2_FRAME_LINE_NUM */

typedef volatile union _SENINF1_REG_NCSI2_GENERIC_SHORT_
{
		volatile struct	/* 0x1A0403D4 */
		{
				FIELD  GENERIC_SHORT_PACKET_DT               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 10;		/*  6..15, 0x0000FFC0 */
				FIELD  GENERIC_SHORT_PACKET_DATA             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_GENERIC_SHORT;	/* SENINF1_NCSI2_GENERIC_SHORT */

typedef volatile union _SENINF1_REG_NCSI2_HSRX_DBG_
{
		volatile struct	/* 0x1A0403D8 */
		{
				FIELD  DATA_LANE0_HSRX_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DATA_LANE1_HSRX_EN                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DATA_LANE2_HSRX_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  DATA_LANE3_HSRX_EN                    :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CLOCK_LANE_HSRX_EN                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_HSRX_DBG;	/* SENINF1_NCSI2_HSRX_DBG */

typedef volatile union _SENINF1_REG_NCSI2_DI_
{
		volatile struct	/* 0x1A0403DC */
		{
				FIELD  VC0                                   :  2;		/*  0.. 1, 0x00000003 */
				FIELD  DT0                                   :  6;		/*  2.. 7, 0x000000FC */
				FIELD  VC1                                   :  2;		/*  8.. 9, 0x00000300 */
				FIELD  DT1                                   :  6;		/* 10..15, 0x0000FC00 */
				FIELD  VC2                                   :  2;		/* 16..17, 0x00030000 */
				FIELD  DT2                                   :  6;		/* 18..23, 0x00FC0000 */
				FIELD  VC3                                   :  2;		/* 24..25, 0x03000000 */
				FIELD  DT3                                   :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DI;	/* SENINF1_NCSI2_DI */

typedef volatile union _SENINF1_REG_NCSI2_HS_TRAIL_
{
		volatile struct	/* 0x1A0403E0 */
		{
				FIELD  HS_TRAIL_PARAMETER                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_HS_TRAIL;	/* SENINF1_NCSI2_HS_TRAIL */

typedef volatile union _SENINF1_REG_NCSI2_DI_CTRL_
{
		volatile struct	/* 0x1A0403E4 */
		{
				FIELD  VC0_INTERLEAVING                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DT0_INTERLEAVING                      :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  VC1_INTERLEAVING                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DT1_INTERLEAVING                      :  2;		/*  9..10, 0x00000600 */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  VC2_INTERLEAVING                      :  1;		/* 16..16, 0x00010000 */
				FIELD  DT2_INTERLEAVING                      :  2;		/* 17..18, 0x00060000 */
				FIELD  rsv_19                                :  5;		/* 19..23, 0x00F80000 */
				FIELD  VC3_INTERLEAVING                      :  1;		/* 24..24, 0x01000000 */
				FIELD  DT3_INTERLEAVING                      :  2;		/* 25..26, 0x06000000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DI_CTRL;	/* SENINF1_NCSI2_DI_CTRL */

typedef volatile union _SENINF1_REG_NCSI2_DI_1_
{
		volatile struct	/* 0x1A0403E8 */
		{
				FIELD  VC4                                   :  2;		/*  0.. 1, 0x00000003 */
				FIELD  DT4                                   :  6;		/*  2.. 7, 0x000000FC */
				FIELD  VC5                                   :  2;		/*  8.. 9, 0x00000300 */
				FIELD  DT5                                   :  6;		/* 10..15, 0x0000FC00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DI_1;	/* SENINF1_NCSI2_DI_1 */

typedef volatile union _SENINF1_REG_NCSI2_DI_CTRL_1_
{
		volatile struct	/* 0x1A0403EC */
		{
				FIELD  VC4_INTERLEAVING                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DT4_INTERLEAVING                      :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  VC5_INTERLEAVING                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DT5_INTERLEAVING                      :  2;		/*  9..10, 0x00000600 */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_DI_CTRL_1;	/* SENINF1_NCSI2_DI_CTRL_1 */

typedef volatile union _SENINF1_REG_NCSI2_RAW10_DI_CTRL_
{
		volatile struct	/* 0x1A0403F0 */
		{
				FIELD  RAW10_INTERLEAVING_DT_0               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RAW10_INTERLEAVING_EN_0               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RAW10_INTERLEAVING_DT_1               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  RAW10_INTERLEAVING_EN_1               :  1;		/* 15..15, 0x00008000 */
				FIELD  RAW10_INTERLEAVING_DT_2               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  RAW10_INTERLEAVING_EN_2               :  1;		/* 23..23, 0x00800000 */
				FIELD  RAW10_INTERLEAVING_DT_3               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  RAW10_INTERLEAVING_EN_3               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_RAW10_DI_CTRL;	/* SENINF1_NCSI2_RAW10_DI_CTRL */

typedef volatile union _SENINF1_REG_NCSI2_RAW12_DI_CTRL_
{
		volatile struct	/* 0x1A0403F4 */
		{
				FIELD  RAW12_INTERLEAVING_DT_0               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RAW12_INTERLEAVING_EN_0               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RAW12_INTERLEAVING_DT_1               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  RAW12_INTERLEAVING_EN_1               :  1;		/* 15..15, 0x00008000 */
				FIELD  RAW12_INTERLEAVING_DT_2               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  RAW12_INTERLEAVING_EN_2               :  1;		/* 23..23, 0x00800000 */
				FIELD  RAW12_INTERLEAVING_DT_3               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  RAW12_INTERLEAVING_EN_3               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_RAW12_DI_CTRL;	/* SENINF1_NCSI2_RAW12_DI_CTRL */

typedef volatile union _SENINF1_REG_NCSI2_RAW14_DI_CTRL_
{
		volatile struct	/* 0x1A0403F8 */
		{
				FIELD  RAW14_INTERLEAVING_DT_0               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RAW14_INTERLEAVING_EN_0               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RAW14_INTERLEAVING_DT_1               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  RAW14_INTERLEAVING_EN_1               :  1;		/* 15..15, 0x00008000 */
				FIELD  RAW14_INTERLEAVING_DT_2               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  RAW14_INTERLEAVING_EN_2               :  1;		/* 23..23, 0x00800000 */
				FIELD  RAW14_INTERLEAVING_DT_3               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  RAW14_INTERLEAVING_EN_3               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF1_REG_NCSI2_RAW14_DI_CTRL;	/* SENINF1_NCSI2_RAW14_DI_CTRL */

typedef volatile union _SENINF2_REG_CTRL_
{
		volatile struct	/* 0x1A040500 */
		{
				FIELD  SENINF_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  NCSI2_SW_RST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI2_SW_RST                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CCIR_SW_RST                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CKGEN_SW_RST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TEST_MODEL_SW_RST                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SCAM_SW_RST                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_DEBUG_SEL                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  PAD2CAM_DATA_SEL                      :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CTRL;	/* SENINF2_CTRL */

typedef volatile union _SENINF2_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A040520 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_CTRL;	/* SENINF2_MUX_CTRL */

typedef volatile union _SENINF2_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A040524 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_INTEN;	/* SENINF2_MUX_INTEN */

typedef volatile union _SENINF2_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A040528 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_INTSTA;	/* SENINF2_MUX_INTSTA */

typedef volatile union _SENINF2_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A04052C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_SIZE;	/* SENINF2_MUX_SIZE */

typedef volatile union _SENINF2_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A040530 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_1;	/* SENINF2_MUX_DEBUG_1 */

typedef volatile union _SENINF2_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A040534 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_2;	/* SENINF2_MUX_DEBUG_2 */

typedef volatile union _SENINF2_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A040538 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_3;	/* SENINF2_MUX_DEBUG_3 */

typedef volatile union _SENINF2_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A04053C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_4;	/* SENINF2_MUX_DEBUG_4 */

typedef volatile union _SENINF2_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A040540 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_5;	/* SENINF2_MUX_DEBUG_5 */

typedef volatile union _SENINF2_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A040544 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_6;	/* SENINF2_MUX_DEBUG_6 */

typedef volatile union _SENINF2_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A040548 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DEBUG_7;	/* SENINF2_MUX_DEBUG_7 */

typedef volatile union _SENINF2_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A04054C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_SPARE;	/* SENINF2_MUX_SPARE */

typedef volatile union _SENINF2_REG_MUX_DATA_
{
		volatile struct	/* 0x1A040550 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DATA;	/* SENINF2_MUX_DATA */

typedef volatile union _SENINF2_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A040554 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_DATA_CNT;	/* SENINF2_MUX_DATA_CNT */

typedef volatile union _SENINF2_REG_MUX_CROP_
{
		volatile struct	/* 0x1A040558 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_MUX_CROP;	/* SENINF2_MUX_CROP */

typedef volatile union _SENINF_REG_TG2_PH_CNT_
{
		volatile struct	/* 0x1A040600 */
		{
				FIELD  TGCLK_SEL                             :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CLKFL_POL                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EXT_RST                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  EXT_PWRDN                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PAD_PCLK_INV                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CAM_PCLK_INV                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 20;		/*  8..27, 0x0FFFFF00 */
				FIELD  CLKPOL                                :  1;		/* 28..28, 0x10000000 */
				FIELD  ADCLK_EN                              :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  PCEN                                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG2_PH_CNT;	/* SENINF_TG2_PH_CNT */

typedef volatile union _SENINF_REG_TG2_SEN_CK_
{
		volatile struct	/* 0x1A040604 */
		{
				FIELD  CLKFL                                 :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CLKRS                                 :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CLKCNT                                :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG2_SEN_CK;	/* SENINF_TG2_SEN_CK */

typedef volatile union _SENINF_REG_TG2_TM_CTL_
{
		volatile struct	/* 0x1A040608 */
		{
				FIELD  TM_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TM_RST                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TM_FMT                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TM_PAT                                :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  TM_VSYNC                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  TM_DUMMYPXL                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG2_TM_CTL;	/* SENINF_TG2_TM_CTL */

typedef volatile union _SENINF_REG_TG2_TM_SIZE_
{
		volatile struct	/* 0x1A04060C */
		{
				FIELD  TM_PXL                                : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  TM_LINE                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG2_TM_SIZE;	/* SENINF_TG2_TM_SIZE */

typedef volatile union _SENINF_REG_TG2_TM_CLK_
{
		volatile struct	/* 0x1A040610 */
		{
				FIELD  TM_CLK_CNT                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  TM_CLRBAR_OFT                         : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  TM_CLRBAR_IDX                         :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG2_TM_CLK;	/* SENINF_TG2_TM_CLK */

typedef volatile union _SENINF_REG_TG2_TM_STP_
{
		volatile struct	/* 0x1A040614 */
		{
				FIELD  TG_TM_STP                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG2_TM_STP;	/* SENINF_TG2_TM_STP */

typedef volatile union _MIPI_REG_RX_CON00_CSI1_
{
		volatile struct	/* 0x1A040700 */
		{
				FIELD  RG_CSI0_LNRC_HSRX_CAL_APPLY           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRC_HSRX_CAL_EN              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRC_HSRX_OFFSET_CODE         :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRC_HSRX_OFFSET_OUT          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON00_CSI1;	/* MIPI_RX_CON00_CSI1 */

typedef volatile union _MIPI_REG_RX_CON04_CSI1_
{
		volatile struct	/* 0x1A040704 */
		{
				FIELD  RG_CSI0_LNRD0_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD0_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD0_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD0_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON04_CSI1;	/* MIPI_RX_CON04_CSI1 */

typedef volatile union _MIPI_REG_RX_CON08_CSI1_
{
		volatile struct	/* 0x1A040708 */
		{
				FIELD  RG_CSI0_LNRD1_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD1_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD1_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD1_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON08_CSI1;	/* MIPI_RX_CON08_CSI1 */

typedef volatile union _MIPI_REG_RX_CON0C_CSI1_
{
		volatile struct	/* 0x1A04070C */
		{
				FIELD  RG_CSI0_LNRD2_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD2_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD2_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD2_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON0C_CSI1;	/* MIPI_RX_CON0C_CSI1 */

typedef volatile union _MIPI_REG_RX_CON10_CSI1_
{
		volatile struct	/* 0x1A040710 */
		{
				FIELD  RG_CSI0_LNRD3_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRD3_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RG_CSI0_LNRD3_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  AD_CSI0_LNRD3_HSRX_OFFSET_OUT         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON10_CSI1;	/* MIPI_RX_CON10_CSI1 */

typedef volatile union _MIPI_REG_RX_CON24_CSI1_
{
		volatile struct	/* 0x1A040724 */
		{
				FIELD  CSI0_BIST_NUM                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CSI0_BIST_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  2;		/*  3.. 4, 0x00000018 */
				FIELD  CSI0_BIST_FIX_PAT                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CSI0_BIST_CLK_SEL                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CSI0_BIST_CLK4X_SEL                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CSI0_BIST_TERM_DELAY                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CSI0_BIST_SETTLE_DELAY                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  CSI0_BIST_LN0_MUX                     :  2;		/* 24..25, 0x03000000 */
				FIELD  CSI0_BIST_LN1_MUX                     :  2;		/* 26..27, 0x0C000000 */
				FIELD  CSI0_BIST_LN2_MUX                     :  2;		/* 28..29, 0x30000000 */
				FIELD  CSI0_BIST_LN3_MUX                     :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON24_CSI1;	/* MIPI_RX_CON24_CSI1 */

typedef volatile union _MIPI_REG_RX_CON28_CSI1_
{
		volatile struct	/* 0x1A040728 */
		{
				FIELD  CSI0_BIST_START                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI0_BIST_DATA_OK                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI0_BIST_HS_FSM_OK                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI0_BIST_LANE_FSM_OK                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CSI0_BIST_CSI2_DATA_OK                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON28_CSI1;	/* MIPI_RX_CON28_CSI1 */

typedef volatile union _MIPI_REG_RX_CON34_CSI1_
{
		volatile struct	/* 0x1A040734 */
		{
				FIELD  BIST_MODE                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON34_CSI1;	/* MIPI_RX_CON34_CSI1 */

typedef volatile union _MIPI_REG_RX_CON38_CSI1_
{
		volatile struct	/* 0x1A040738 */
		{
				FIELD  MIPI_RX_SW_CTRL_MODE                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  MIPI_RX_SW_CAL_MODE                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  MIPI_RX_HW_CAL_START                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  MIPI_RX_HW_CAL_OPTION                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  MIPI_RX_HW_CAL_SW_RST                 :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MIPI_RX_MACRO_SRC_SEL                 :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON38_CSI1;	/* MIPI_RX_CON38_CSI1 */

typedef volatile union _MIPI_REG_RX_CON3C_CSI1_
{
		volatile struct	/* 0x1A04073C */
		{
				FIELD  MIPI_RX_SW_CTRL_                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON3C_CSI1;	/* MIPI_RX_CON3C_CSI1 */

typedef volatile union _MIPI_REG_RX_CON40_CSI1_
{
		volatile struct	/* 0x1A040740 */
		{
				FIELD  RG_CSI0_LNRC_LPRX_SWAP                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RG_CSI0_LNRC_HSRX_INVERT              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RG_CSI0_LNRD0_LPRX_SWAP               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RG_CSI0_LNRD0_HSRX_INVERT             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RG_CSI0_LNRD1_LPRX_SWAP               :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RG_CSI0_LNRD1_HSRX_INVERT             :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RG_CSI0_LNRD2_LPRX_SWAP               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RG_CSI0_LNRD2_HSRX_INVERT             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RG_CSI0_LNRD3_LPRX_SWAP               :  1;		/* 10..10, 0x00000400 */
				FIELD  RG_CSI0_LNRD3_HSRX_INVERT             :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON40_CSI1;	/* MIPI_RX_CON40_CSI1 */

typedef volatile union _MIPI_REG_RX_CON44_CSI1_
{
		volatile struct	/* 0x1A040744 */
		{
				FIELD  DA_CSI0_LNRD0_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD0_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD0_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DA_CSI0_LNRC_HSRX_CAL_APPLY           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DA_CSI0_LNRC_HSRX_CAL_EN              :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DA_CSI0_LNRC_HSRX_OFFSET_CODE         :  5;		/* 10..14, 0x00007C00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  DA_CSI0_LNRD1_HSRX_CAL_APPLY          :  1;		/* 16..16, 0x00010000 */
				FIELD  DA_CSI0_LNRD1_HSRX_CAL_EN             :  1;		/* 17..17, 0x00020000 */
				FIELD  DA_CSI0_LNRD1_HSRX_OFFSET_CODE        :  5;		/* 18..22, 0x007C0000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON44_CSI1;	/* MIPI_RX_CON44_CSI1 */

typedef volatile union _MIPI_REG_RX_CON48_CSI1_
{
		volatile struct	/* 0x1A040748 */
		{
				FIELD  DA_CSI0_LNRD2_HSRX_CAL_APPLY          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DA_CSI0_LNRD2_HSRX_CAL_EN             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DA_CSI0_LNRD2_HSRX_OFFSET_CODE        :  5;		/*  2.. 6, 0x0000007C */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DA_CSI0_LNRD3_HSRX_CAL_APPLY          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DA_CSI0_LNRD3_HSRX_CAL_EN             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DA_CSI0_LNRD3_HSRX_OFFSET_CODE        :  5;		/* 10..14, 0x00007C00 */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON48_CSI1;	/* MIPI_RX_CON48_CSI1 */

typedef volatile union _MIPI_REG_RX_CON50_CSI1_
{
		volatile struct	/* 0x1A040750 */
		{
				FIELD  RG_CSI0_BCLK_INV                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  RG_CSI0_BCLK_MON                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RG_CSI0_4XCLK_MON                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}MIPI_REG_RX_CON50_CSI1;	/* MIPI_RX_CON50_CSI1 */

typedef volatile union _SENINF2_REG_CSI2_CTRL_
{
		volatile struct	/* 0x1A040760 */
		{
				FIELD  CSI2_EN                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DLANE1_EN                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DLANE2_EN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  DLANE3_EN                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CSI2_ECC_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CSI2_ED_SEL                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CSI2_CLK_MISS_EN                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CSI2_LP11_RST_EN                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CSI2_SYNC_RST_EN                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CSI2_ESC_EN                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CSI2_SCLK_SEL                         :  1;		/* 10..10, 0x00000400 */
				FIELD  CSI2_SCLK4X_SEL                       :  1;		/* 11..11, 0x00000800 */
				FIELD  CSI2_SW_RST                           :  1;		/* 12..12, 0x00001000 */
				FIELD  CSI2_VSYNC_TYPE                       :  1;		/* 13..13, 0x00002000 */
				FIELD  CSI2_HSRXEN_PFOOT_CLR                 :  1;		/* 14..14, 0x00004000 */
				FIELD  CSI2_SYNC_CLR_EXTEND                  :  1;		/* 15..15, 0x00008000 */
				FIELD  CSI2_ASYNC_OPTION                     :  1;		/* 16..16, 0x00010000 */
				FIELD  CSI2_DATA_FLOW                        :  2;		/* 17..18, 0x00060000 */
				FIELD  CSI2_BIST_ERROR_COUNT                 :  8;		/* 19..26, 0x07F80000 */
				FIELD  CSI2_BIST_START                       :  1;		/* 27..27, 0x08000000 */
				FIELD  CSI2_BIST_DATA_OK                     :  1;		/* 28..28, 0x10000000 */
				FIELD  CSI2_HS_FSM_OK                        :  1;		/* 29..29, 0x20000000 */
				FIELD  CSI2_LANE_FSM_OK                      :  1;		/* 30..30, 0x40000000 */
				FIELD  CSI2_BIST_CSI2_DATA_OK                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_CTRL;	/* SENINF2_CSI2_CTRL */

typedef volatile union _SENINF2_REG_CSI2_DELAY_
{
		volatile struct	/* 0x1A040764 */
		{
				FIELD  LP2HS_CLK_TERM_DELAY                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  LP2HS_DATA_SETTLE_DELAY               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  LP2HS_DATA_TERM_DELAY                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_DELAY;	/* SENINF2_CSI2_DELAY */

typedef volatile union _SENINF2_REG_CSI2_INTEN_
{
		volatile struct	/* 0x1A040768 */
		{
				FIELD  CRC_ERR_IRQ_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ECC_ERR_IRQ_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ECC_CORRECT_IRQ_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI2SYNC_NONSYNC_IRQ_EN               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  CSI2_WC_NUMBER                        : 16;		/*  8..23, 0x00FFFF00 */
				FIELD  CSI2_DATA_TYPE                        :  6;		/* 24..29, 0x3F000000 */
				FIELD  VCHANNEL_ID                           :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_INTEN;	/* SENINF2_CSI2_INTEN */

typedef volatile union _SENINF2_REG_CSI2_INTSTA_
{
		volatile struct	/* 0x1A04076C */
		{
				FIELD  CRC_ERR_IRQ                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ECC_ERR_IRQ                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ECC_CORRECT_IRQ                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI2SYNC_NONSYNC_IRQ                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CSI2_IRQ_CLR_SEL                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CSI2_SPARE                            :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  rsv_8                                 : 12;		/*  8..19, 0x000FFF00 */
				FIELD  CSI2OUT_HSYNC                         :  1;		/* 20..20, 0x00100000 */
				FIELD  CSI2OUT_VSYNC                         :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_INTSTA;	/* SENINF2_CSI2_INTSTA */

typedef volatile union _SENINF2_REG_CSI2_ECCDBG_
{
		volatile struct	/* 0x1A040770 */
		{
				FIELD  CSI2_ECCDB_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  7;		/*  1.. 7, 0x000000FE */
				FIELD  CSI2_ECCDB_BSEL                       : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_ECCDBG;	/* SENINF2_CSI2_ECCDBG */

typedef volatile union _SENINF2_REG_CSI2_CRCDBG_
{
		volatile struct	/* 0x1A040774 */
		{
				FIELD  CSI2_CRCDB_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_SPARE                            :  7;		/*  1.. 7, 0x000000FE */
				FIELD  CSI2_CRCDB_WSEL                       : 16;		/*  8..23, 0x00FFFF00 */
				FIELD  CSI2_CRCDB_BSEL                       :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_CRCDBG;	/* SENINF2_CSI2_CRCDBG */

typedef volatile union _SENINF2_REG_CSI2_DBG_
{
		volatile struct	/* 0x1A040778 */
		{
				FIELD  CSI2_DEBUG_ON                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_DBG_SRC_SEL                      :  4;		/*  1.. 4, 0x0000001E */
				FIELD  CSI2_DATA_HS_CS                       :  6;		/*  5..10, 0x000007E0 */
				FIELD  CSI2_CLK_LANE_CS                      :  5;		/* 11..15, 0x0000F800 */
				FIELD  VCHANNEL0_ID                          :  2;		/* 16..17, 0x00030000 */
				FIELD  VCHANNEL1_ID                          :  2;		/* 18..19, 0x000C0000 */
				FIELD  VCHANNEL_ID_EN                        :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  LNC_LPRXDB_EN                         :  1;		/* 22..22, 0x00400000 */
				FIELD  LN0_LPRXDB_EN                         :  1;		/* 23..23, 0x00800000 */
				FIELD  LN1_LPRXDB_EN                         :  1;		/* 24..24, 0x01000000 */
				FIELD  LN2_LPRXDB_EN                         :  1;		/* 25..25, 0x02000000 */
				FIELD  LN3_LPRXDB_EN                         :  1;		/* 26..26, 0x04000000 */
				FIELD  LNC_HSRXDB_EN                         :  1;		/* 27..27, 0x08000000 */
				FIELD  LN0_HSRXDB_EN                         :  1;		/* 28..28, 0x10000000 */
				FIELD  LN1_HSRXDB_EN                         :  1;		/* 29..29, 0x20000000 */
				FIELD  LN2_HSRXDB_EN                         :  1;		/* 30..30, 0x40000000 */
				FIELD  LN3_HSRXDB_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_DBG;	/* SENINF2_CSI2_DBG */

typedef volatile union _SENINF2_REG_CSI2_VER_
{
		volatile struct	/* 0x1A04077C */
		{
				FIELD  DATE                                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  MONTH                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  YEAR                                  : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_VER;	/* SENINF2_CSI2_VER */

typedef volatile union _SENINF2_REG_CSI2_SHORT_INFO_
{
		volatile struct	/* 0x1A040780 */
		{
				FIELD  CSI2_LINE_NO                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CSI2_FRAME_NO                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_SHORT_INFO;	/* SENINF2_CSI2_SHORT_INFO */

typedef volatile union _SENINF2_REG_CSI2_LNFSM_
{
		volatile struct	/* 0x1A040784 */
		{
				FIELD  CSI2_DATA_LN0_CS                      :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CSI2_DATA_LN1_CS                      :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CSI2_DATA_LN2_CS                      :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  CSI2_DATA_LN3_CS                      :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_LNFSM;	/* SENINF2_CSI2_LNFSM */

typedef volatile union _SENINF2_REG_CSI2_LNMUX_
{
		volatile struct	/* 0x1A040788 */
		{
				FIELD  CSI2_DATA_LN0_MUX                     :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CSI2_DATA_LN1_MUX                     :  2;		/*  2.. 3, 0x0000000C */
				FIELD  CSI2_DATA_LN2_MUX                     :  2;		/*  4.. 5, 0x00000030 */
				FIELD  CSI2_DATA_LN3_MUX                     :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_LNMUX;	/* SENINF2_CSI2_LNMUX */

typedef volatile union _SENINF2_REG_CSI2_HSYNC_CNT_
{
		volatile struct	/* 0x1A04078C */
		{
				FIELD  CSI2_HSYNC_CNT                        : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_HSYNC_CNT;	/* SENINF2_CSI2_HSYNC_CNT */

typedef volatile union _SENINF2_REG_CSI2_CAL_
{
		volatile struct	/* 0x1A040790 */
		{
				FIELD  CSI2_CAL_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CSI2_CAL_STATE                        :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  CSI2_CAL_CNT_1                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  CSI2_CAL_CNT_2                        :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_CAL;	/* SENINF2_CSI2_CAL */

typedef volatile union _SENINF2_REG_CSI2_DS_
{
		volatile struct	/* 0x1A040794 */
		{
				FIELD  CSI2_DS_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_DS_CTRL                          :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_DS;	/* SENINF2_CSI2_DS */

typedef volatile union _SENINF2_REG_CSI2_VS_
{
		volatile struct	/* 0x1A040798 */
		{
				FIELD  CSI2_VS_CTRL                          :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_VS;	/* SENINF2_CSI2_VS */

typedef volatile union _SENINF2_REG_CSI2_BIST_
{
		volatile struct	/* 0x1A04079C */
		{
				FIELD  CSI2_BIST_LNR0_DATA_OK                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CSI2_BIST_LNR1_DATA_OK                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI2_BIST_LNR2_DATA_OK                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CSI2_BIST_LNR3_DATA_OK                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_CSI2_BIST;	/* SENINF2_CSI2_BIST */

typedef volatile union _SENINF2_REG_NCSI2_CTL_
{
		volatile struct	/* 0x1A0407A0 */
		{
				FIELD  DATA_LANE0_EN                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DATA_LANE1_EN                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DATA_LANE2_EN                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  DATA_LANE3_EN                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CLOCK_LANE_EN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  ECC_EN                                :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CRC_EN                                :  1;		/*  6.. 6, 0x00000040 */
				FIELD  HSRX_DET_EN                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  HS_PRPR_EN                            :  1;		/*  8.. 8, 0x00000100 */
				FIELD  HS_END_EN                             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  GENERIC_LONG_PACKET_EN                :  1;		/* 12..12, 0x00001000 */
				FIELD  IMAGE_PACKET_EN                       :  1;		/* 13..13, 0x00002000 */
				FIELD  BYTE2PIXEL_EN                         :  1;		/* 14..14, 0x00004000 */
				FIELD  VS_TYPE                               :  1;		/* 15..15, 0x00008000 */
				FIELD  ED_SEL                                :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  1;		/* 17..17, 0x00020000 */
				FIELD  FLUSH_MODE                            :  2;		/* 18..19, 0x000C0000 */
				FIELD  SYNC_DET_SCHEME                       :  1;		/* 20..20, 0x00100000 */
				FIELD  SYNC_DET_EN                           :  1;		/* 21..21, 0x00200000 */
				FIELD  SYNC_DET_BITSWAP_EN                   :  1;		/* 22..22, 0x00400000 */
				FIELD  ASYNC_FIFO_RST_SCH                    :  2;		/* 23..24, 0x01800000 */
				FIELD  HS_TRAIL_EN                           :  1;		/* 25..25, 0x02000000 */
				FIELD  REF_SYNC_DET_EN                       :  1;		/* 26..26, 0x04000000 */
				FIELD  CLOCK_HS_OPTION                       :  1;		/* 27..27, 0x08000000 */
				FIELD  VS_OUT_CYCLE_NUMBER                   :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_CTL;	/* SENINF2_NCSI2_CTL */

typedef volatile union _SENINF2_REG_NCSI2_LNRC_TIMING_
{
		volatile struct	/* 0x1A0407A4 */
		{
				FIELD  TERM_PARAMETER                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SETTLE_PARAMETER                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_LNRC_TIMING;	/* SENINF2_NCSI2_LNRC_TIMING */

typedef volatile union _SENINF2_REG_NCSI2_LNRD_TIMING_
{
		volatile struct	/* 0x1A0407A8 */
		{
				FIELD  TERM_PARAMETER                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SETTLE_PARAMETER                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_LNRD_TIMING;	/* SENINF2_NCSI2_LNRD_TIMING */

typedef volatile union _SENINF2_REG_NCSI2_DPCM_
{
		volatile struct	/* 0x1A0407AC */
		{
				FIELD  DPCM_MODE                             :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  3;		/*  4.. 6, 0x00000070 */
				FIELD  DI_30_DPCM_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DI_31_DPCM_EN                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DI_32_DPCM_EN                         :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DI_33_DPCM_EN                         :  1;		/* 10..10, 0x00000400 */
				FIELD  DI_34_DPCM_EN                         :  1;		/* 11..11, 0x00000800 */
				FIELD  DI_35_DPCM_EN                         :  1;		/* 12..12, 0x00001000 */
				FIELD  DI_36_DPCM_EN                         :  1;		/* 13..13, 0x00002000 */
				FIELD  DI_37_DPCM_EN                         :  1;		/* 14..14, 0x00004000 */
				FIELD  DI_2A_DPCM_EN                         :  1;		/* 15..15, 0x00008000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DPCM;	/* SENINF2_NCSI2_DPCM */

typedef volatile union _SENINF2_REG_NCSI2_INT_EN_
{
		volatile struct	/* 0x1A0407B0 */
		{
				FIELD  ERR_FRAME_SYNC                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ERR_ID                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ERR_ECC_NO_ERROR                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  ERR_ECC_CORRECTED                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  ERR_ECC_DOUBLE                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  ERR_CRC                               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  ERR_AFIFO                             :  1;		/*  6.. 6, 0x00000040 */
				FIELD  ERR_MULTI_LANE_SYNC                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  ERR_SOT_SYNC_HS_LNRD0                 :  1;		/*  8.. 8, 0x00000100 */
				FIELD  ERR_SOT_SYNC_HS_LNRD1                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  ERR_SOT_SYNC_HS_LNRD2                 :  1;		/* 10..10, 0x00000400 */
				FIELD  ERR_SOT_SYNC_HS_LNRD3                 :  1;		/* 11..11, 0x00000800 */
				FIELD  FS                                    :  1;		/* 12..12, 0x00001000 */
				FIELD  LS                                    :  1;		/* 13..13, 0x00002000 */
				FIELD  GS                                    :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ERR_FRAME_SYNC_S0                     :  1;		/* 16..16, 0x00010000 */
				FIELD  ERR_FRAME_SYNC_S1                     :  1;		/* 17..17, 0x00020000 */
				FIELD  ERR_FRAME_SYNC_S2                     :  1;		/* 18..18, 0x00040000 */
				FIELD  ERR_FRAME_SYNC_S3                     :  1;		/* 19..19, 0x00080000 */
				FIELD  ERR_FRAME_SYNC_S4                     :  1;		/* 20..20, 0x00100000 */
				FIELD  ERR_FRAME_SYNC_S5                     :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                :  9;		/* 22..30, 0x7FC00000 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_INT_EN;	/* SENINF2_NCSI2_INT_EN */

typedef volatile union _SENINF2_REG_NCSI2_INT_STATUS_
{
		volatile struct	/* 0x1A0407B4 */
		{
				FIELD  ERR_FRAME_SYNC                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ERR_ID                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  ERR_ECC_NO_ERROR                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  ERR_ECC_CORRECTED                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  ERR_ECC_DOUBLE                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  ERR_CRC                               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  ERR_AFIFO                             :  1;		/*  6.. 6, 0x00000040 */
				FIELD  ERR_MULTI_LANE_SYNC                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  ERR_SOT_SYNC_HS_LNRD0                 :  1;		/*  8.. 8, 0x00000100 */
				FIELD  ERR_SOT_SYNC_HS_LNRD1                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  ERR_SOT_SYNC_HS_LNRD2                 :  1;		/* 10..10, 0x00000400 */
				FIELD  ERR_SOT_SYNC_HS_LNRD3                 :  1;		/* 11..11, 0x00000800 */
				FIELD  FS                                    :  1;		/* 12..12, 0x00001000 */
				FIELD  LS                                    :  1;		/* 13..13, 0x00002000 */
				FIELD  GS                                    :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ERR_FRAME_SYNC_S0                     :  1;		/* 16..16, 0x00010000 */
				FIELD  ERR_FRAME_SYNC_S1                     :  1;		/* 17..17, 0x00020000 */
				FIELD  ERR_FRAME_SYNC_S2                     :  1;		/* 18..18, 0x00040000 */
				FIELD  ERR_FRAME_SYNC_S3                     :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_INT_STATUS;	/* SENINF2_NCSI2_INT_STATUS */

typedef volatile union _SENINF2_REG_NCSI2_DGB_SEL_
{
		volatile struct	/* 0x1A0407B8 */
		{
				FIELD  DEBUG_SEL                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DGB_SEL;	/* SENINF2_NCSI2_DGB_SEL */

typedef volatile union _SENINF2_REG_NCSI2_DBG_PORT_
{
		volatile struct	/* 0x1A0407BC */
		{
				FIELD  CTL_DBG_PORT                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DBG_PORT;	/* SENINF2_NCSI2_DBG_PORT */

typedef volatile union _SENINF2_REG_NCSI2_SPARE0_
{
		volatile struct	/* 0x1A0407C0 */
		{
				FIELD  SPARE0                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_SPARE0;	/* SENINF2_NCSI2_SPARE0 */

typedef volatile union _SENINF2_REG_NCSI2_SPARE1_
{
		volatile struct	/* 0x1A0407C4 */
		{
				FIELD  SPARE1                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_SPARE1;	/* SENINF2_NCSI2_SPARE1 */

typedef volatile union _SENINF2_REG_NCSI2_LNRC_FSM_
{
		volatile struct	/* 0x1A0407C8 */
		{
				FIELD  LNRC_RX_FSM                           :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_LNRC_FSM;	/* SENINF2_NCSI2_LNRC_FSM */

typedef volatile union _SENINF2_REG_NCSI2_LNRD_FSM_
{
		volatile struct	/* 0x1A0407CC */
		{
				FIELD  LNRD0_RX_FSM                          :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LNRD1_RX_FSM                          :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  LNRD2_RX_FSM                          :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  LNRD3_RX_FSM                          :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_LNRD_FSM;	/* SENINF2_NCSI2_LNRD_FSM */

typedef volatile union _SENINF2_REG_NCSI2_FRAME_LINE_NUM_
{
		volatile struct	/* 0x1A0407D0 */
		{
				FIELD  FRAME_NUM                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  LINE_NUM                              : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_FRAME_LINE_NUM;	/* SENINF2_NCSI2_FRAME_LINE_NUM */

typedef volatile union _SENINF2_REG_NCSI2_GENERIC_SHORT_
{
		volatile struct	/* 0x1A0407D4 */
		{
				FIELD  GENERIC_SHORT_PACKET_DT               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 10;		/*  6..15, 0x0000FFC0 */
				FIELD  GENERIC_SHORT_PACKET_DATA             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_GENERIC_SHORT;	/* SENINF2_NCSI2_GENERIC_SHORT */

typedef volatile union _SENINF2_REG_NCSI2_HSRX_DBG_
{
		volatile struct	/* 0x1A0407D8 */
		{
				FIELD  DATA_LANE0_HSRX_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DATA_LANE1_HSRX_EN                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  DATA_LANE2_HSRX_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  DATA_LANE3_HSRX_EN                    :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CLOCK_LANE_HSRX_EN                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_HSRX_DBG;	/* SENINF2_NCSI2_HSRX_DBG */

typedef volatile union _SENINF2_REG_NCSI2_DI_
{
		volatile struct	/* 0x1A0407DC */
		{
				FIELD  VC0                                   :  2;		/*  0.. 1, 0x00000003 */
				FIELD  DT0                                   :  6;		/*  2.. 7, 0x000000FC */
				FIELD  VC1                                   :  2;		/*  8.. 9, 0x00000300 */
				FIELD  DT1                                   :  6;		/* 10..15, 0x0000FC00 */
				FIELD  VC2                                   :  2;		/* 16..17, 0x00030000 */
				FIELD  DT2                                   :  6;		/* 18..23, 0x00FC0000 */
				FIELD  VC3                                   :  2;		/* 24..25, 0x03000000 */
				FIELD  DT3                                   :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DI;	/* SENINF2_NCSI2_DI */

typedef volatile union _SENINF2_REG_NCSI2_HS_TRAIL_
{
		volatile struct	/* 0x1A0407E0 */
		{
				FIELD  HS_TRAIL_PARAMETER                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_HS_TRAIL;	/* SENINF2_NCSI2_HS_TRAIL */

typedef volatile union _SENINF2_REG_NCSI2_DI_CTRL_
{
		volatile struct	/* 0x1A0407E4 */
		{
				FIELD  VC0_INTERLEAVING                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DT0_INTERLEAVING                      :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  VC1_INTERLEAVING                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DT1_INTERLEAVING                      :  2;		/*  9..10, 0x00000600 */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  VC2_INTERLEAVING                      :  1;		/* 16..16, 0x00010000 */
				FIELD  DT2_INTERLEAVING                      :  2;		/* 17..18, 0x00060000 */
				FIELD  rsv_19                                :  5;		/* 19..23, 0x00F80000 */
				FIELD  VC3_INTERLEAVING                      :  1;		/* 24..24, 0x01000000 */
				FIELD  DT3_INTERLEAVING                      :  2;		/* 25..26, 0x06000000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DI_CTRL;	/* SENINF2_NCSI2_DI_CTRL */

typedef volatile union _SENINF2_REG_NCSI2_DI_1_
{
		volatile struct	/* 0x1A0407E8 */
		{
				FIELD  VC4                                   :  2;		/*  0.. 1, 0x00000003 */
				FIELD  DT4                                   :  6;		/*  2.. 7, 0x000000FC */
				FIELD  VC5                                   :  2;		/*  8.. 9, 0x00000300 */
				FIELD  DT5                                   :  6;		/* 10..15, 0x0000FC00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DI_1;	/* SENINF2_NCSI2_DI_1 */

typedef volatile union _SENINF2_REG_NCSI2_DI_CTRL_1_
{
		volatile struct	/* 0x1A0407EC */
		{
				FIELD  VC4_INTERLEAVING                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DT4_INTERLEAVING                      :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  VC5_INTERLEAVING                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DT5_INTERLEAVING                      :  2;		/*  9..10, 0x00000600 */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_DI_CTRL_1;	/* SENINF2_NCSI2_DI_CTRL_1 */

typedef volatile union _SENINF2_REG_NCSI2_RAW10_DI_CTRL_
{
		volatile struct	/* 0x1A0407F0 */
		{
				FIELD  RAW10_INTERLEAVING_DT_0               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RAW10_INTERLEAVING_EN_0               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RAW10_INTERLEAVING_DT_1               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  RAW10_INTERLEAVING_EN_1               :  1;		/* 15..15, 0x00008000 */
				FIELD  RAW10_INTERLEAVING_DT_2               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  RAW10_INTERLEAVING_EN_2               :  1;		/* 23..23, 0x00800000 */
				FIELD  RAW10_INTERLEAVING_DT_3               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  RAW10_INTERLEAVING_EN_3               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_RAW10_DI_CTRL;	/* SENINF2_NCSI2_RAW10_DI_CTRL */

typedef volatile union _SENINF2_REG_NCSI2_RAW12_DI_CTRL_
{
		volatile struct	/* 0x1A0407F4 */
		{
				FIELD  RAW12_INTERLEAVING_DT_0               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RAW12_INTERLEAVING_EN_0               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RAW12_INTERLEAVING_DT_1               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  RAW12_INTERLEAVING_EN_1               :  1;		/* 15..15, 0x00008000 */
				FIELD  RAW12_INTERLEAVING_DT_2               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  RAW12_INTERLEAVING_EN_2               :  1;		/* 23..23, 0x00800000 */
				FIELD  RAW12_INTERLEAVING_DT_3               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  RAW12_INTERLEAVING_EN_3               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_RAW12_DI_CTRL;	/* SENINF2_NCSI2_RAW12_DI_CTRL */

typedef volatile union _SENINF2_REG_NCSI2_RAW14_DI_CTRL_
{
		volatile struct	/* 0x1A0407F8 */
		{
				FIELD  RAW14_INTERLEAVING_DT_0               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RAW14_INTERLEAVING_EN_0               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RAW14_INTERLEAVING_DT_1               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  RAW14_INTERLEAVING_EN_1               :  1;		/* 15..15, 0x00008000 */
				FIELD  RAW14_INTERLEAVING_DT_2               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  RAW14_INTERLEAVING_EN_2               :  1;		/* 23..23, 0x00800000 */
				FIELD  RAW14_INTERLEAVING_DT_3               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  RAW14_INTERLEAVING_EN_3               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF2_REG_NCSI2_RAW14_DI_CTRL;	/* SENINF2_NCSI2_RAW14_DI_CTRL */

typedef volatile union _SENINF3_REG_CTRL_
{
		volatile struct	/* 0x1A040900 */
		{
				FIELD  SENINF_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  NCSI2_SW_RST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI2_SW_RST                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CCIR_SW_RST                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CKGEN_SW_RST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TEST_MODEL_SW_RST                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SCAM_SW_RST                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_DEBUG_SEL                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  PAD2CAM_DATA_SEL                      :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_CTRL;	/* SENINF3_CTRL */

typedef volatile union _SENINF3_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A040920 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_CTRL;	/* SENINF3_MUX_CTRL */

typedef volatile union _SENINF3_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A040924 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_INTEN;	/* SENINF3_MUX_INTEN */

typedef volatile union _SENINF3_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A040928 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_INTSTA;	/* SENINF3_MUX_INTSTA */

typedef volatile union _SENINF3_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A04092C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_SIZE;	/* SENINF3_MUX_SIZE */

typedef volatile union _SENINF3_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A040930 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_1;	/* SENINF3_MUX_DEBUG_1 */

typedef volatile union _SENINF3_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A040934 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_2;	/* SENINF3_MUX_DEBUG_2 */

typedef volatile union _SENINF3_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A040938 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_3;	/* SENINF3_MUX_DEBUG_3 */

typedef volatile union _SENINF3_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A04093C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_4;	/* SENINF3_MUX_DEBUG_4 */

typedef volatile union _SENINF3_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A040940 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_5;	/* SENINF3_MUX_DEBUG_5 */

typedef volatile union _SENINF3_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A040944 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_6;	/* SENINF3_MUX_DEBUG_6 */

typedef volatile union _SENINF3_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A040948 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DEBUG_7;	/* SENINF3_MUX_DEBUG_7 */

typedef volatile union _SENINF3_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A04094C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_SPARE;	/* SENINF3_MUX_SPARE */

typedef volatile union _SENINF3_REG_MUX_DATA_
{
		volatile struct	/* 0x1A040950 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DATA;	/* SENINF3_MUX_DATA */

typedef volatile union _SENINF3_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A040954 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_DATA_CNT;	/* SENINF3_MUX_DATA_CNT */

typedef volatile union _SENINF3_REG_MUX_CROP_
{
		volatile struct	/* 0x1A040958 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF3_REG_MUX_CROP;	/* SENINF3_MUX_CROP */

typedef volatile union _SENINF_REG_TG3_PH_CNT_
{
		volatile struct	/* 0x1A040A00 */
		{
				FIELD  TGCLK_SEL                             :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CLKFL_POL                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EXT_RST                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  EXT_PWRDN                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PAD_PCLK_INV                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CAM_PCLK_INV                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 20;		/*  8..27, 0x0FFFFF00 */
				FIELD  CLKPOL                                :  1;		/* 28..28, 0x10000000 */
				FIELD  ADCLK_EN                              :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  PCEN                                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG3_PH_CNT;	/* SENINF_TG3_PH_CNT */

typedef volatile union _SENINF_REG_TG3_SEN_CK_
{
		volatile struct	/* 0x1A040A04 */
		{
				FIELD  CLKFL                                 :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CLKRS                                 :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CLKCNT                                :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG3_SEN_CK;	/* SENINF_TG3_SEN_CK */

typedef volatile union _SENINF_REG_TG3_TM_CTL_
{
		volatile struct	/* 0x1A040A08 */
		{
				FIELD  TM_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TM_RST                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TM_FMT                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TM_PAT                                :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  TM_VSYNC                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  TM_DUMMYPXL                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG3_TM_CTL;	/* SENINF_TG3_TM_CTL */

typedef volatile union _SENINF_REG_TG3_TM_SIZE_
{
		volatile struct	/* 0x1A040A0C */
		{
				FIELD  TM_PXL                                : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  TM_LINE                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG3_TM_SIZE;	/* SENINF_TG3_TM_SIZE */

typedef volatile union _SENINF_REG_TG3_TM_CLK_
{
		volatile struct	/* 0x1A040A10 */
		{
				FIELD  TM_CLK_CNT                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  TM_CLRBAR_OFT                         : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  TM_CLRBAR_IDX                         :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG3_TM_CLK;	/* SENINF_TG3_TM_CLK */

typedef volatile union _SENINF_REG_TG3_TM_STP_
{
		volatile struct	/* 0x1A040A14 */
		{
				FIELD  TG_TM_STP                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG3_TM_STP;	/* SENINF_TG3_TM_STP */

typedef volatile union _SENINF4_REG_CTRL_
{
		volatile struct	/* 0x1A040D00 */
		{
				FIELD  SENINF_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  NCSI2_SW_RST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CSI2_SW_RST                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CCIR_SW_RST                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CKGEN_SW_RST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TEST_MODEL_SW_RST                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SCAM_SW_RST                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_DEBUG_SEL                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  PAD2CAM_DATA_SEL                      :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_CTRL;	/* SENINF4_CTRL */

typedef volatile union _SENINF4_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A040D20 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_CTRL;	/* SENINF4_MUX_CTRL */

typedef volatile union _SENINF4_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A040D24 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_INTEN;	/* SENINF4_MUX_INTEN */

typedef volatile union _SENINF4_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A040D28 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_INTSTA;	/* SENINF4_MUX_INTSTA */

typedef volatile union _SENINF4_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A040D2C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_SIZE;	/* SENINF4_MUX_SIZE */

typedef volatile union _SENINF4_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A040D30 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_1;	/* SENINF4_MUX_DEBUG_1 */

typedef volatile union _SENINF4_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A040D34 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_2;	/* SENINF4_MUX_DEBUG_2 */

typedef volatile union _SENINF4_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A040D38 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_3;	/* SENINF4_MUX_DEBUG_3 */

typedef volatile union _SENINF4_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A040D3C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_4;	/* SENINF4_MUX_DEBUG_4 */

typedef volatile union _SENINF4_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A040D40 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_5;	/* SENINF4_MUX_DEBUG_5 */

typedef volatile union _SENINF4_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A040D44 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_6;	/* SENINF4_MUX_DEBUG_6 */

typedef volatile union _SENINF4_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A040D48 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DEBUG_7;	/* SENINF4_MUX_DEBUG_7 */

typedef volatile union _SENINF4_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A040D4C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_SPARE;	/* SENINF4_MUX_SPARE */

typedef volatile union _SENINF4_REG_MUX_DATA_
{
		volatile struct	/* 0x1A040D50 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DATA;	/* SENINF4_MUX_DATA */

typedef volatile union _SENINF4_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A040D54 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_DATA_CNT;	/* SENINF4_MUX_DATA_CNT */

typedef volatile union _SENINF4_REG_MUX_CROP_
{
		volatile struct	/* 0x1A040D58 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF4_REG_MUX_CROP;	/* SENINF4_MUX_CROP */

typedef volatile union _SENINF_REG_TG4_PH_CNT_
{
		volatile struct	/* 0x1A040E00 */
		{
				FIELD  TGCLK_SEL                             :  2;		/*  0.. 1, 0x00000003 */
				FIELD  CLKFL_POL                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  EXT_RST                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  EXT_PWRDN                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PAD_PCLK_INV                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CAM_PCLK_INV                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 20;		/*  8..27, 0x0FFFFF00 */
				FIELD  CLKPOL                                :  1;		/* 28..28, 0x10000000 */
				FIELD  ADCLK_EN                              :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  1;		/* 30..30, 0x40000000 */
				FIELD  PCEN                                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG4_PH_CNT;	/* SENINF_TG4_PH_CNT */

typedef volatile union _SENINF_REG_TG4_SEN_CK_
{
		volatile struct	/* 0x1A040E04 */
		{
				FIELD  CLKFL                                 :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CLKRS                                 :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CLKCNT                                :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG4_SEN_CK;	/* SENINF_TG4_SEN_CK */

typedef volatile union _SENINF_REG_TG4_TM_CTL_
{
		volatile struct	/* 0x1A040E08 */
		{
				FIELD  TM_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TM_RST                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TM_FMT                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TM_PAT                                :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  TM_VSYNC                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  TM_DUMMYPXL                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG4_TM_CTL;	/* SENINF_TG4_TM_CTL */

typedef volatile union _SENINF_REG_TG4_TM_SIZE_
{
		volatile struct	/* 0x1A040E0C */
		{
				FIELD  TM_PXL                                : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  TM_LINE                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG4_TM_SIZE;	/* SENINF_TG4_TM_SIZE */

typedef volatile union _SENINF_REG_TG4_TM_CLK_
{
		volatile struct	/* 0x1A040E10 */
		{
				FIELD  TM_CLK_CNT                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  TM_CLRBAR_OFT                         : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  TM_CLRBAR_IDX                         :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG4_TM_CLK;	/* SENINF_TG4_TM_CLK */

typedef volatile union _SENINF_REG_TG4_TM_STP_
{
		volatile struct	/* 0x1A040E14 */
		{
				FIELD  TG_TM_STP                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF_REG_TG4_TM_STP;	/* SENINF_TG4_TM_STP */

typedef volatile union _CCIR656_REG_CTL_
{
		volatile struct	/* 0x1A040EC0 */
		{
				FIELD  CCIR656_REV_0                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CCIR656_REV_1                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CCIR656_HS_POL                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CCIR656_VS_POL                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CCIR656_PT_EN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CCIR656_EN                            :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CCIR656_DBG_SEL                       :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_CTL;	/* CCIR656_CTL */

typedef volatile union _CCIR656_REG_H_
{
		volatile struct	/* 0x1A040EC4 */
		{
				FIELD  CCIR656_HS_START                      : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CCIR656_HS_END                        : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_H;	/* CCIR656_H */

typedef volatile union _CCIR656_REG_PTGEN_H_1_
{
		volatile struct	/* 0x1A040EC8 */
		{
				FIELD  CCIR656_PT_HTOTAL                     : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  CCIR656_PT_HACTIVE                    : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_H_1;	/* CCIR656_PTGEN_H_1 */

typedef volatile union _CCIR656_REG_PTGEN_H_2_
{
		volatile struct	/* 0x1A040ECC */
		{
				FIELD  CCIR656_PT_HWIDTH                     : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  CCIR656_PT_HSTART                     : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_H_2;	/* CCIR656_PTGEN_H_2 */

typedef volatile union _CCIR656_REG_PTGEN_V_1_
{
		volatile struct	/* 0x1A040ED0 */
		{
				FIELD  CCIR656_PT_VTOTAL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CCIR656_PT_VACTIVE                    : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_V_1;	/* CCIR656_PTGEN_V_1 */

typedef volatile union _CCIR656_REG_PTGEN_V_2_
{
		volatile struct	/* 0x1A040ED4 */
		{
				FIELD  CCIR656_PT_VWIDTH                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CCIR656_PT_VSTART                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_V_2;	/* CCIR656_PTGEN_V_2 */

typedef volatile union _CCIR656_REG_PTGEN_CTL1_
{
		volatile struct	/* 0x1A040ED8 */
		{
				FIELD  CCIR656_PT_TYPE                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCIR656_PT_COLOR_BAR_TH               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_CTL1;	/* CCIR656_PTGEN_CTL1 */

typedef volatile union _CCIR656_REG_PTGEN_CTL2_
{
		volatile struct	/* 0x1A040EDC */
		{
				FIELD  CCIR656_PT_Y                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  CCIR656_PT_CB                         :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCIR656_PT_CR                         :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_CTL2;	/* CCIR656_PTGEN_CTL2 */

typedef volatile union _CCIR656_REG_PTGEN_CTL3_
{
		volatile struct	/* 0x1A040EE0 */
		{
				FIELD  CCIR656_PT_BD_Y                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  CCIR656_PT_BD_CB                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCIR656_PT_BD_CR                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_PTGEN_CTL3;	/* CCIR656_PTGEN_CTL3 */

typedef volatile union _CCIR656_REG_STATUS_
{
		volatile struct	/* 0x1A040EE4 */
		{
				FIELD  CCIR656_IN_FIELD                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CCIR656_IN_VS                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CCIR656_REG_STATUS;	/* CCIR656_STATUS */

typedef volatile union _SENINF5_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A041120 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_CTRL;	/* SENINF5_MUX_CTRL */

typedef volatile union _SENINF5_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A041124 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_INTEN;	/* SENINF5_MUX_INTEN */

typedef volatile union _SENINF5_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A041128 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_INTSTA;	/* SENINF5_MUX_INTSTA */

typedef volatile union _SENINF5_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A04112C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_SIZE;	/* SENINF5_MUX_SIZE */

typedef volatile union _SENINF5_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A041130 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_1;	/* SENINF5_MUX_DEBUG_1 */

typedef volatile union _SENINF5_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A041134 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_2;	/* SENINF5_MUX_DEBUG_2 */

typedef volatile union _SENINF5_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A041138 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_3;	/* SENINF5_MUX_DEBUG_3 */

typedef volatile union _SENINF5_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A04113C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_4;	/* SENINF5_MUX_DEBUG_4 */

typedef volatile union _SENINF5_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A041140 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_5;	/* SENINF5_MUX_DEBUG_5 */

typedef volatile union _SENINF5_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A041144 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_6;	/* SENINF5_MUX_DEBUG_6 */

typedef volatile union _SENINF5_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A041148 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DEBUG_7;	/* SENINF5_MUX_DEBUG_7 */

typedef volatile union _SENINF5_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A04114C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_SPARE;	/* SENINF5_MUX_SPARE */

typedef volatile union _SENINF5_REG_MUX_DATA_
{
		volatile struct	/* 0x1A041150 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DATA;	/* SENINF5_MUX_DATA */

typedef volatile union _SENINF5_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A041154 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_DATA_CNT;	/* SENINF5_MUX_DATA_CNT */

typedef volatile union _SENINF5_REG_MUX_CROP_
{
		volatile struct	/* 0x1A041158 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF5_REG_MUX_CROP;	/* SENINF5_MUX_CROP */

typedef volatile union _SENINF6_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A041520 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_CTRL;	/* SENINF6_MUX_CTRL */

typedef volatile union _SENINF6_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A041524 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_INTEN;	/* SENINF6_MUX_INTEN */

typedef volatile union _SENINF6_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A041528 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_INTSTA;	/* SENINF6_MUX_INTSTA */

typedef volatile union _SENINF6_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A04152C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_SIZE;	/* SENINF6_MUX_SIZE */

typedef volatile union _SENINF6_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A041530 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_1;	/* SENINF6_MUX_DEBUG_1 */

typedef volatile union _SENINF6_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A041534 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_2;	/* SENINF6_MUX_DEBUG_2 */

typedef volatile union _SENINF6_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A041538 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_3;	/* SENINF6_MUX_DEBUG_3 */

typedef volatile union _SENINF6_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A04153C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_4;	/* SENINF6_MUX_DEBUG_4 */

typedef volatile union _SENINF6_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A041540 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_5;	/* SENINF6_MUX_DEBUG_5 */

typedef volatile union _SENINF6_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A041544 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_6;	/* SENINF6_MUX_DEBUG_6 */

typedef volatile union _SENINF6_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A041548 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DEBUG_7;	/* SENINF6_MUX_DEBUG_7 */

typedef volatile union _SENINF6_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A04154C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_SPARE;	/* SENINF6_MUX_SPARE */

typedef volatile union _SENINF6_REG_MUX_DATA_
{
		volatile struct	/* 0x1A041550 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DATA;	/* SENINF6_MUX_DATA */

typedef volatile union _SENINF6_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A041554 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_DATA_CNT;	/* SENINF6_MUX_DATA_CNT */

typedef volatile union _SENINF6_REG_MUX_CROP_
{
		volatile struct	/* 0x1A041558 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF6_REG_MUX_CROP;	/* SENINF6_MUX_CROP */

typedef volatile union _SENINF7_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A041920 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_CTRL;	/* SENINF7_MUX_CTRL */

typedef volatile union _SENINF7_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A041924 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_INTEN;	/* SENINF7_MUX_INTEN */

typedef volatile union _SENINF7_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A041928 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_INTSTA;	/* SENINF7_MUX_INTSTA */

typedef volatile union _SENINF7_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A04192C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_SIZE;	/* SENINF7_MUX_SIZE */

typedef volatile union _SENINF7_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A041930 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_1;	/* SENINF7_MUX_DEBUG_1 */

typedef volatile union _SENINF7_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A041934 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_2;	/* SENINF7_MUX_DEBUG_2 */

typedef volatile union _SENINF7_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A041938 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_3;	/* SENINF7_MUX_DEBUG_3 */

typedef volatile union _SENINF7_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A04193C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_4;	/* SENINF7_MUX_DEBUG_4 */

typedef volatile union _SENINF7_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A041940 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_5;	/* SENINF7_MUX_DEBUG_5 */

typedef volatile union _SENINF7_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A041944 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_6;	/* SENINF7_MUX_DEBUG_6 */

typedef volatile union _SENINF7_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A041948 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DEBUG_7;	/* SENINF7_MUX_DEBUG_7 */

typedef volatile union _SENINF7_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A04194C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_SPARE;	/* SENINF7_MUX_SPARE */

typedef volatile union _SENINF7_REG_MUX_DATA_
{
		volatile struct	/* 0x1A041950 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DATA;	/* SENINF7_MUX_DATA */

typedef volatile union _SENINF7_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A041954 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_DATA_CNT;	/* SENINF7_MUX_DATA_CNT */

typedef volatile union _SENINF7_REG_MUX_CROP_
{
		volatile struct	/* 0x1A041958 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF7_REG_MUX_CROP;	/* SENINF7_MUX_CROP */

typedef volatile union _SENINF8_REG_MUX_CTRL_
{
		volatile struct	/* 0x1A041D20 */
		{
				FIELD  SENINF_MUX_SW_RST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_IRQ_SW_RST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  5;		/*  2.. 6, 0x0000007C */
				FIELD  SENINF_HSYNC_MASK                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SENINF_PIX_SEL                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SENINF_VSYNC_POL                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  SENINF_HSYNC_POL                      :  1;		/* 10..10, 0x00000400 */
				FIELD  OVERRUN_RST_EN                        :  1;		/* 11..11, 0x00000800 */
				FIELD  SENINF_SRC_SEL                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PUSH_EN                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  FIFO_FLUSH_EN                         :  6;		/* 22..27, 0x0FC00000 */
				FIELD  FIFO_FULL_WR_EN                       :  2;		/* 28..29, 0x30000000 */
				FIELD  CROP_EN                               :  1;		/* 30..30, 0x40000000 */
				FIELD  SENINF_MUX_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_CTRL;	/* SENINF8_MUX_CTRL */

typedef volatile union _SENINF8_REG_MUX_INTEN_
{
		volatile struct	/* 0x1A041D24 */
		{
				FIELD  SENINF_OVERRUN_IRQ_EN                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_EN                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_EN                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_EN                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_EN         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_EN         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 24;		/*  7..30, 0x7FFFFF80 */
				FIELD  SENINF_IRQ_CLR_SEL                    :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_INTEN;	/* SENINF8_MUX_INTEN */

typedef volatile union _SENINF8_REG_MUX_INTSTA_
{
		volatile struct	/* 0x1A041D28 */
		{
				FIELD  SENINF_OVERRUN_IRQ_STA                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SENINF_CRCERR_IRQ_STA                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SENINF_FSMERR_IRQ_STA                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SENINF_VSIZEERR_IRQ_STA               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SENINF_HSIZEERR_IRQ_STA               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SENINF_SENSOR_VSIZEERR_IRQ_STA        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SENINF_SENSOR_HSIZEERR_IRQ_STA        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_INTSTA;	/* SENINF8_MUX_INTSTA */

typedef volatile union _SENINF8_REG_MUX_SIZE_
{
		volatile struct	/* 0x1A041D2C */
		{
				FIELD  SENINF_VSIZE                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_HSIZE                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_SIZE;	/* SENINF8_MUX_SIZE */

typedef volatile union _SENINF8_REG_MUX_DEBUG_1_
{
		volatile struct	/* 0x1A041D30 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_1;	/* SENINF8_MUX_DEBUG_1 */

typedef volatile union _SENINF8_REG_MUX_DEBUG_2_
{
		volatile struct	/* 0x1A041D34 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_2;	/* SENINF8_MUX_DEBUG_2 */

typedef volatile union _SENINF8_REG_MUX_DEBUG_3_
{
		volatile struct	/* 0x1A041D38 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_3;	/* SENINF8_MUX_DEBUG_3 */

typedef volatile union _SENINF8_REG_MUX_DEBUG_4_
{
		volatile struct	/* 0x1A041D3C */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_4;	/* SENINF8_MUX_DEBUG_4 */

typedef volatile union _SENINF8_REG_MUX_DEBUG_5_
{
		volatile struct	/* 0x1A041D40 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_5;	/* SENINF8_MUX_DEBUG_5 */

typedef volatile union _SENINF8_REG_MUX_DEBUG_6_
{
		volatile struct	/* 0x1A041D44 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_6;	/* SENINF8_MUX_DEBUG_6 */

typedef volatile union _SENINF8_REG_MUX_DEBUG_7_
{
		volatile struct	/* 0x1A041D48 */
		{
				FIELD  DEBUG_INFO                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DEBUG_7;	/* SENINF8_MUX_DEBUG_7 */

typedef volatile union _SENINF8_REG_MUX_SPARE_
{
		volatile struct	/* 0x1A041D4C */
		{
				FIELD  rsv_0                                 :  9;		/*  0.. 8, 0x000001FF */
				FIELD  SENINF_CRC_SEL                        :  2;		/*  9..10, 0x00000600 */
				FIELD  SENINF_VCNT_SEL                       :  2;		/* 11..12, 0x00001800 */
				FIELD  SENINF_FIFO_FULL_SEL                  :  1;		/* 13..13, 0x00002000 */
				FIELD  SENINF_SPARE                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_SPARE;	/* SENINF8_MUX_SPARE */

typedef volatile union _SENINF8_REG_MUX_DATA_
{
		volatile struct	/* 0x1A041D50 */
		{
				FIELD  SENINF_DATA0                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_DATA1                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DATA;	/* SENINF8_MUX_DATA */

typedef volatile union _SENINF8_REG_MUX_DATA_CNT_
{
		volatile struct	/* 0x1A041D54 */
		{
				FIELD  SENINF_DATA_CNT                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_DATA_CNT;	/* SENINF8_MUX_DATA_CNT */

typedef volatile union _SENINF8_REG_MUX_CROP_
{
		volatile struct	/* 0x1A041D58 */
		{
				FIELD  SENINF_CROP_X1                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SENINF_CROP_X2                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}SENINF8_REG_MUX_CROP;	/* SENINF8_MUX_CROP */
#endif
typedef volatile union _DIP_X_REG_CTL_START_
{
		volatile struct	/* 0x15022000 */
		{
				FIELD  CQ_THR0_START                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_START                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_START                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_START                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_START                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_START                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_START                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_START                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_START                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_START                         :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_START                        :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_START                        :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_START                        :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_START                        :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_START                        :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_START                        :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_START                        :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_START                        :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_START                        :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_START;	/* DIP_X_CTL_START, DIP_A_CTL_START*/

typedef volatile union _DIP_X_REG_CTL_YUV_EN_
{
		volatile struct	/* 0x15022004 */
		{
				FIELD  MFB_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  C02B_EN                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  C24_EN                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  G2C_EN                                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  C42_EN                                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  NBC_EN                                :  1;		/*  5.. 5, 0x00000020 */
				FIELD  NBC2_EN                               :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PCA_EN                                :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SEEE_EN                               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  NR3D_EN                               :  1;		/* 10..10, 0x00000400 */
				FIELD  SL2B_EN                               :  1;		/* 11..11, 0x00000800 */
				FIELD  SL2C_EN                               :  1;		/* 12..12, 0x00001000 */
				FIELD  SL2D_EN                               :  1;		/* 13..13, 0x00002000 */
				FIELD  SL2E_EN                               :  1;		/* 14..14, 0x00004000 */
				FIELD  SRZ1_EN                               :  1;		/* 15..15, 0x00008000 */
				FIELD  SRZ2_EN                               :  1;		/* 16..16, 0x00010000 */
				FIELD  CRZ_EN                                :  1;		/* 17..17, 0x00020000 */
				FIELD  MIX1_EN                               :  1;		/* 18..18, 0x00040000 */
				FIELD  MIX2_EN                               :  1;		/* 19..19, 0x00080000 */
				FIELD  MIX3_EN                               :  1;		/* 20..20, 0x00100000 */
				FIELD  CRSP_EN                               :  1;		/* 21..21, 0x00200000 */
				FIELD  C24B_EN                               :  1;		/* 22..22, 0x00400000 */
				FIELD  MDPCROP_EN                            :  1;		/* 23..23, 0x00800000 */
				FIELD  C02_EN                                :  1;		/* 24..24, 0x01000000 */
				FIELD  FE_EN                                 :  1;		/* 25..25, 0x02000000 */
				FIELD  MFBW_EN                               :  1;		/* 26..26, 0x04000000 */
				FIELD  rsv_27                                :  1;		/* 27..27, 0x08000000 */
				FIELD  PLNW1_EN                              :  1;		/* 28..28, 0x10000000 */
				FIELD  PLNR1_EN                              :  1;		/* 29..29, 0x20000000 */
				FIELD  PLNW2_EN                              :  1;		/* 30..30, 0x40000000 */
				FIELD  PLNR2_EN                              :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV_EN;	/* DIP_X_CTL_YUV_EN, DIP_A_CTL_YUV_EN*/

typedef volatile union _DIP_X_REG_CTL_YUV2_EN_
{
		volatile struct	/* 0x15022008 */
		{
				FIELD  FM_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ3_EN                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ4_EN                               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SRZ5_EN                               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  HFG_EN                                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SL2I_EN                               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV2_EN;	/* DIP_X_CTL_YUV2_EN, DIP_A_CTL_YUV2_EN*/

typedef volatile union _DIP_X_REG_CTL_RGB_EN_
{
		volatile struct	/* 0x1502200C */
		{
				FIELD  UNP_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFD_EN                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PGN_EN                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SL2_EN                                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  UDM_EN                                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LCE_EN                                :  1;		/*  5.. 5, 0x00000020 */
				FIELD  G2G_EN                                :  1;		/*  6.. 6, 0x00000040 */
				FIELD  GGM_EN                                :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GDR1_EN                               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  GDR2_EN                               :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DBS2_EN                               :  1;		/* 10..10, 0x00000400 */
				FIELD  OBC2_EN                               :  1;		/* 11..11, 0x00000800 */
				FIELD  RMG2_EN                               :  1;		/* 12..12, 0x00001000 */
				FIELD  BNR2_EN                               :  1;		/* 13..13, 0x00002000 */
				FIELD  RMM2_EN                               :  1;		/* 14..14, 0x00004000 */
				FIELD  LSC2_EN                               :  1;		/* 15..15, 0x00008000 */
				FIELD  RCP2_EN                               :  1;		/* 16..16, 0x00010000 */
				FIELD  PAK2_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  RNR_EN                                :  1;		/* 18..18, 0x00040000 */
				FIELD  SL2G_EN                               :  1;		/* 19..19, 0x00080000 */
				FIELD  SL2H_EN                               :  1;		/* 20..20, 0x00100000 */
				FIELD  FLC_EN                                :  1;		/* 21..21, 0x00200000 */
				FIELD  FLC2_EN                               :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_RGB_EN;	/* DIP_X_CTL_RGB_EN, DIP_A_CTL_RGB_EN*/

typedef volatile union _DIP_X_REG_CTL_DMA_EN_
{
		volatile struct	/* 0x15022010 */
		{
				FIELD  IMGI_EN                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGBI_EN                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGCI_EN                              :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_EN                               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_EN                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_EN                              :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_EN                              :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_EN                               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DEPI_EN                               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_EN                               :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_EN                               :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_EN                              :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_EN                             :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_EN                              :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_EN                             :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_EN                             :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_EN                                :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DMA_EN;	/* DIP_X_CTL_DMA_EN, DIP_A_CTL_DMA_EN*/

typedef volatile union _DIP_X_REG_CTL_FMT_SEL_
{
		volatile struct	/* 0x15022014 */
		{
				FIELD  IMGI_FMT                              :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  VIPI_FMT                              :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  UFDI_FMT                              :  1;		/* 16..16, 0x00010000 */
				FIELD  DMGI_FMT                              :  1;		/* 17..17, 0x00020000 */
				FIELD  DEPI_FMT                              :  1;		/* 18..18, 0x00040000 */
				FIELD  FG_MODE                               :  1;		/* 19..19, 0x00080000 */
				FIELD  IMG3O_FMT                             :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  IMG2O_FMT                             :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  PIX_ID                                :  2;		/* 28..29, 0x30000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_FMT_SEL;	/* DIP_X_CTL_FMT_SEL, DIP_A_CTL_FMT_SEL*/

typedef volatile union _DIP_X_REG_CTL_PATH_SEL_
{
		volatile struct	/* 0x15022018 */
		{
				FIELD  G2G_SEL                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  PGN_SEL                               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  G2C_SEL                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SRZ1_SEL                              :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  MIX1_SEL                              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  NBC_SEL                               :  1;		/* 10..10, 0x00000400 */
				FIELD  NBCW_SEL                              :  1;		/* 11..11, 0x00000800 */
				FIELD  CRZ_SEL                               :  2;		/* 12..13, 0x00003000 */
				FIELD  NR3D_SEL                              :  1;		/* 14..14, 0x00004000 */
				FIELD  MDP_SEL                               :  1;		/* 15..15, 0x00008000 */
				FIELD  FE_SEL                                :  1;		/* 16..16, 0x00010000 */
				FIELD  RCP2_SEL                              :  2;		/* 17..18, 0x00060000 */
				FIELD  CRSP_SEL                              :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_PATH_SEL;	/* DIP_X_CTL_PATH_SEL, DIP_A_CTL_PATH_SEL*/

typedef volatile union _DIP_X_REG_CTL_MISC_SEL_
{
		volatile struct	/* 0x1502201C */
		{
				FIELD  APB_CLK_GATE_BYPASS                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  SRAM_MODE                             :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  MFBO_SEL                              :  2;		/*  8.. 9, 0x00000300 */
				FIELD  FEO_SEL                               :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  PAK2_FMT                              :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_MISC_SEL;	/* DIP_X_CTL_MISC_SEL, DIP_A_CTL_MISC_SEL*/

typedef volatile union _DIP_X_REG_CTL_INT_EN_
{
		volatile struct	/* 0x15022020 */
		{
				FIELD  MDP_DONE_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TDR_SIZE_ERR_EN                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGI_DONE_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_DONE_EN                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_DONE_EN                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_DONE_EN                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_DONE_EN                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_DONE_EN                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DMGI_DONE_EN                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DEPI_DONE_EN                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_DONE_EN                          :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_DONE_EN                         :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG3O_DONE_EN                         :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3BO_DONE_EN                        :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3CO_DONE_EN                        :  1;		/* 14..14, 0x00004000 */
				FIELD  FEO_DONE_EN                           :  1;		/* 15..15, 0x00008000 */
				FIELD  PASS2_DONE_EN                         :  1;		/* 16..16, 0x00010000 */
				FIELD  TILE_DONE_EN                          :  1;		/* 17..17, 0x00020000 */
				FIELD  DMA_ERR_EN                            :  1;		/* 18..18, 0x00040000 */
				FIELD  GGM_COLLISION_EN                      :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_COLLISION_EN                      :  1;		/* 20..20, 0x00100000 */
				FIELD  NBC_COLLISION_EN                      :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                :  8;		/* 22..29, 0x3FC00000 */
				FIELD  APB_INTERFERE_EN                      :  1;		/* 30..30, 0x40000000 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_INT_EN;	/* DIP_X_CTL_INT_EN, DIP_A_CTL_INT_EN*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT_EN_
{
		volatile struct	/* 0x15022024 */
		{
				FIELD  CQ_THR0_DONE_EN                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_DONE_EN                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_DONE_EN                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_DONE_EN                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_DONE_EN                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_DONE_EN                       :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_DONE_EN                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_DONE_EN                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_DONE_EN                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_DONE_EN                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_DONE_EN                      :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_DONE_EN                      :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_DONE_EN                      :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_DONE_EN                      :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_DONE_EN                      :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_DONE_EN                      :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_DONE_EN                      :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_DONE_EN                      :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_DONE_EN                      :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 10;		/* 19..28, 0x1FF80000 */
				FIELD  CQ_DON_EN                             :  1;		/* 29..29, 0x20000000 */
				FIELD  CQ_CODE_ERR_EN                        :  1;		/* 30..30, 0x40000000 */
				FIELD  CQ_APB_OUT_RANGE_EN                   :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT_EN;	/* DIP_X_CTL_CQ_INT_EN, DIP_A_CTL_CQ_INT_EN*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT2_EN_
{
		volatile struct	/* 0x15022028 */
		{
				FIELD  CQ_THR0_CODE_LD_DONE_EN               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_CODE_LD_DONE_EN               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_CODE_LD_DONE_EN               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_CODE_LD_DONE_EN               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_CODE_LD_DONE_EN               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_CODE_LD_DONE_EN               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_CODE_LD_DONE_EN               :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_CODE_LD_DONE_EN               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_CODE_LD_DONE_EN               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_CODE_LD_DONE_EN               :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_CODE_LD_DONE_EN              :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_CODE_LD_DONE_EN              :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_CODE_LD_DONE_EN              :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_CODE_LD_DONE_EN              :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_CODE_LD_DONE_EN              :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_CODE_LD_DONE_EN              :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_CODE_LD_DONE_EN              :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_CODE_LD_DONE_EN              :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_CODE_LD_DONE_EN              :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT2_EN;	/* DIP_X_CTL_CQ_INT2_EN, DIP_A_CTL_CQ_INT2_EN*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT3_EN_
{
		volatile struct	/* 0x1502202C */
		{
				FIELD  CQ_THR0_ERR_TRIG_EN                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_ERR_TRIG_EN                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_ERR_TRIG_EN                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_ERR_TRIG_EN                   :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_ERR_TRIG_EN                   :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_ERR_TRIG_EN                   :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_ERR_TRIG_EN                   :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_ERR_TRIG_EN                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_ERR_TRIG_EN                   :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_ERR_TRIG_EN                   :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_ERR_TRIG_EN                  :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_ERR_TRIG_EN                  :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_ERR_TRIG_EN                  :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_ERR_TRIG_EN                  :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_ERR_TRIG_EN                  :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_ERR_TRIG_EN                  :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_ERR_TRIG_EN                  :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_ERR_TRIG_EN                  :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_ERR_TRIG_EN                  :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT3_EN;	/* DIP_X_CTL_CQ_INT3_EN, DIP_A_CTL_CQ_INT3_EN*/

typedef volatile union _DIP_X_REG_CTL_INT_STATUS_
{
		volatile struct	/* 0x15022030 */
		{
				FIELD  MDP_DONE_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TDR_SIZE_ERR_STATUS                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGI_DONE_STATUS                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_DONE_STATUS                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_DONE_STATUS                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_DONE_STATUS                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_DONE_STATUS                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_DONE_STATUS                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DMGI_DONE_STATUS                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DEPI_DONE_STATUS                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_DONE_STATUS                      :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_DONE_STATUS                     :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG3O_DONE_STATUS                     :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3BO_DONE_STATUS                    :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3CO_DONE_STATUS                    :  1;		/* 14..14, 0x00004000 */
				FIELD  FEO_DONE_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  PASS2_DONE_STATUS                     :  1;		/* 16..16, 0x00010000 */
				FIELD  TILE_DONE_STATUS                      :  1;		/* 17..17, 0x00020000 */
				FIELD  DMA_ERR_STATUS                        :  1;		/* 18..18, 0x00040000 */
				FIELD  GGM_COLLISION_STATUS                  :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_COLLISION_STATUS                  :  1;		/* 20..20, 0x00100000 */
				FIELD  NBC_COLLISION_STATUS                  :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                :  8;		/* 22..29, 0x3FC00000 */
				FIELD  APB_INTERFERE_STATUS                  :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_INT_STATUS;	/* DIP_X_CTL_INT_STATUS, DIP_A_CTL_INT_STATUS*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT_STATUS_
{
		volatile struct	/* 0x15022034 */
		{
				FIELD  CQ_THR0_DONE_STATUS                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_DONE_STATUS                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_DONE_STATUS                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_DONE_STATUS                   :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_DONE_STATUS                   :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_DONE_STATUS                   :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_DONE_STATUS                   :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_DONE_STATUS                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_DONE_STATUS                   :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_DONE_STATUS                   :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_DONE_STATUS                  :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_DONE_STATUS                  :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_DONE_STATUS                  :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_DONE_STATUS                  :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_DONE_STATUS                  :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_DONE_STATUS                  :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_DONE_STATUS                  :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_DONE_STATUS                  :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_DONE_STATUS                  :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 10;		/* 19..28, 0x1FF80000 */
				FIELD  CQ_DON_STATUS                         :  1;		/* 29..29, 0x20000000 */
				FIELD  CQ_CODE_ERR_STATUS                    :  1;		/* 30..30, 0x40000000 */
				FIELD  CQ_APB_OUT_RANGE_STATUS               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT_STATUS;	/* DIP_X_CTL_CQ_INT_STATUS, DIP_A_CTL_CQ_INT_STATUS*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT2_STATUS_
{
		volatile struct	/* 0x15022038 */
		{
				FIELD  CQ_THR0_CODE_LD_DONE_STATUS           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_CODE_LD_DONE_STATUS           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_CODE_LD_DONE_STATUS           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_CODE_LD_DONE_STATUS           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_CODE_LD_DONE_STATUS           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_CODE_LD_DONE_STATUS           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_CODE_LD_DONE_STATUS           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_CODE_LD_DONE_STATUS           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_CODE_LD_DONE_STATUS           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_CODE_LD_DONE_STATUS           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_CODE_LD_DONE_STATUS          :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_CODE_LD_DONE_STATUS          :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_CODE_LD_DONE_STATUS          :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_CODE_LD_DONE_STATUS          :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_CODE_LD_DONE_STATUS          :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_CODE_LD_DONE_STATUS          :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_CODE_LD_DONE_STATUS          :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_CODE_LD_DONE_STATUS          :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_CODE_LD_DONE_STATUS          :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT2_STATUS;	/* DIP_X_CTL_CQ_INT2_STATUS, DIP_A_CTL_CQ_INT2_STATUS*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT3_STATUS_
{
		volatile struct	/* 0x1502203C */
		{
				FIELD  CQ_THR0_ERR_TRIG_STATUS               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_ERR_TRIG_STATUS               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_ERR_TRIG_STATUS               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_ERR_TRIG_STATUS               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_ERR_TRIG_STATUS               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_ERR_TRIG_STATUS               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_ERR_TRIG_STATUS               :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_ERR_TRIG_STATUS               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_ERR_TRIG_STATUS               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_ERR_TRIG_STATUS               :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_ERR_TRIG_STATUS              :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_ERR_TRIG_STATUS              :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_ERR_TRIG_STATUS              :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_ERR_TRIG_STATUS              :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_ERR_TRIG_STATUS              :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_ERR_TRIG_STATUS              :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_ERR_TRIG_STATUS              :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_ERR_TRIG_STATUS              :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_ERR_TRIG_STATUS              :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT3_STATUS;	/* DIP_X_CTL_CQ_INT3_STATUS, DIP_A_CTL_CQ_INT3_STATUS*/

typedef volatile union _DIP_X_REG_CTL_INT_STATUSX_
{
		volatile struct	/* 0x15022040 */
		{
				FIELD  MDP_DONE_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TDR_SIZE_ERR_STATUS                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGI_DONE_STATUS                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_DONE_STATUS                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_DONE_STATUS                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_DONE_STATUS                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_DONE_STATUS                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_DONE_STATUS                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DMGI_DONE_STATUS                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DEPI_DONE_STATUS                      :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_DONE_STATUS                      :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_DONE_STATUS                     :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG3O_DONE_STATUS                     :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3BO_DONE_STATUS                    :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3CO_DONE_STATUS                    :  1;		/* 14..14, 0x00004000 */
				FIELD  FEO_DONE_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  PASS2_DONE_STATUS                     :  1;		/* 16..16, 0x00010000 */
				FIELD  TILE_DONE_STATUS                      :  1;		/* 17..17, 0x00020000 */
				FIELD  DMA_ERR_STATUS                        :  1;		/* 18..18, 0x00040000 */
				FIELD  GGM_COLLISION_STATUS                  :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_COLLISION_STATUS                  :  1;		/* 20..20, 0x00100000 */
				FIELD  NBC_COLLISION_STATUS                  :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                :  8;		/* 22..29, 0x3FC00000 */
				FIELD  APB_INTERFERE_STATUS                  :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_INT_STATUSX;	/* DIP_X_CTL_INT_STATUSX, DIP_A_CTL_INT_STATUSX*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT_STATUSX_
{
		volatile struct	/* 0x15022044 */
		{
				FIELD  CQ_THR0_DONE_STATUSX                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_DONE_STATUSX                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_DONE_STATUSX                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_DONE_STATUSX                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_DONE_STATUSX                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_DONE_STATUSX                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_DONE_STATUSX                  :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_DONE_STATUSX                  :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_DONE_STATUSX                  :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_DONE_STATUSX                  :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_DONE_STATUSX                 :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_DONE_STATUSX                 :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_DONE_STATUSX                 :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_DONE_STATUSX                 :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_DONE_STATUSX                 :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_DONE_STATUSX                 :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_DONE_STATUSX                 :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_DONE_STATUSX                 :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_DONE_STATUSX                 :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 10;		/* 19..28, 0x1FF80000 */
				FIELD  CQ_DON_STATUSX                        :  1;		/* 29..29, 0x20000000 */
				FIELD  CQ_CODE_ERR_STATUSX                   :  1;		/* 30..30, 0x40000000 */
				FIELD  CQ_APB_OUT_RANGE_STATUSX              :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT_STATUSX;	/* DIP_X_CTL_CQ_INT_STATUSX, DIP_A_CTL_CQ_INT_STATUSX*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT2_STATUSX_
{
		volatile struct	/* 0x15022048 */
		{
				FIELD  CQ_THR0_CODE_LD_DONE_STATUSX          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_CODE_LD_DONE_STATUSX          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_CODE_LD_DONE_STATUSX          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_CODE_LD_DONE_STATUSX          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_CODE_LD_DONE_STATUSX          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_CODE_LD_DONE_STATUSX          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_CODE_LD_DONE_STATUSX          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_CODE_LD_DONE_STATUSX          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_CODE_LD_DONE_STATUSX          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_CODE_LD_DONE_STATUSX          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_CODE_LD_DONE_STATUSX         :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_CODE_LD_DONE_STATUSX         :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_CODE_LD_DONE_STATUSX         :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_CODE_LD_DONE_STATUSX         :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_CODE_LD_DONE_STATUSX         :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_CODE_LD_DONE_STATUSX         :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_CODE_LD_DONE_STATUSX         :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_CODE_LD_DONE_STATUSX         :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_CODE_LD_DONE_STATUSX         :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT2_STATUSX;	/* DIP_X_CTL_CQ_INT2_STATUSX, DIP_A_CTL_CQ_INT2_STATUSX*/

typedef volatile union _DIP_X_REG_CTL_CQ_INT3_STATUSX_
{
		volatile struct	/* 0x1502204C */
		{
				FIELD  CQ_THR0_ERR_TRIG_STATUSX              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_ERR_TRIG_STATUSX              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_ERR_TRIG_STATUSX              :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_ERR_TRIG_STATUSX              :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_ERR_TRIG_STATUSX              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_ERR_TRIG_STATUSX              :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_ERR_TRIG_STATUSX              :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_ERR_TRIG_STATUSX              :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_ERR_TRIG_STATUSX              :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_ERR_TRIG_STATUSX              :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_ERR_TRIG_STATUSX             :  1;		/* 10..10, 0x00000400 */
				FIELD  CQ_THR11_ERR_TRIG_STATUSX             :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_ERR_TRIG_STATUSX             :  1;		/* 12..12, 0x00001000 */
				FIELD  CQ_THR13_ERR_TRIG_STATUSX             :  1;		/* 13..13, 0x00002000 */
				FIELD  CQ_THR14_ERR_TRIG_STATUSX             :  1;		/* 14..14, 0x00004000 */
				FIELD  CQ_THR15_ERR_TRIG_STATUSX             :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR16_ERR_TRIG_STATUSX             :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR17_ERR_TRIG_STATUSX             :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR18_ERR_TRIG_STATUSX             :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_CQ_INT3_STATUSX;	/* DIP_X_CTL_CQ_INT3_STATUSX, DIP_A_CTL_CQ_INT3_STATUSX*/

typedef volatile union _DIP_X_REG_CTL_TDR_CTL_
{
		volatile struct	/* 0x15022050 */
		{
				FIELD  TDR_SOF_RST_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CTL_EXTENSION_EN                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TDR_SZ_DET                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  TDR_EN                                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_CTL;	/* DIP_X_CTL_TDR_CTL, DIP_A_CTL_TDR_CTL*/

typedef volatile union _DIP_X_REG_CTL_TDR_TILE_
{
		volatile struct	/* 0x15022054 */
		{
				FIELD  TILE_EDGE                             :  4;		/*  0.. 3, 0x0000000F */
				FIELD  TILE_IRQ                              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LAST_TILE                             :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CRZ_EDGE                              :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_TILE;	/* DIP_X_CTL_TDR_TILE, DIP_A_CTL_TDR_TILE*/

typedef volatile union _DIP_X_REG_CTL_TDR_TCM_EN_
{
		volatile struct	/* 0x15022058 */
		{
				FIELD  rsv_0                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGI_TCM_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGBI_TCM_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  IMGCI_TCM_EN                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  UFDI_TCM_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LCEI_TCM_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIPI_TCM_EN                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  VIP2I_TCM_EN                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  VIP3I_TCM_EN                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_TCM_EN                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DEPI_TCM_EN                           :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_TCM_EN                          :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_TCM_EN                         :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_TCM_EN                          :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_TCM_EN                         :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_TCM_EN                         :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_TCM_EN                            :  1;		/* 16..16, 0x00010000 */
				FIELD  MFBO_TCM_EN                           :  1;		/* 17..17, 0x00020000 */
				FIELD  UFD_TCM_EN                            :  1;		/* 18..18, 0x00040000 */
				FIELD  UNP_TCM_EN                            :  1;		/* 19..19, 0x00080000 */
				FIELD  UDM_TCM_EN                            :  1;		/* 20..20, 0x00100000 */
				FIELD  LSC2_TCM_EN                           :  1;		/* 21..21, 0x00200000 */
				FIELD  SL2_TCM_EN                            :  1;		/* 22..22, 0x00400000 */
				FIELD  SL2B_TCM_EN                           :  1;		/* 23..23, 0x00800000 */
				FIELD  SL2C_TCM_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  SL2D_TCM_EN                           :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2E_TCM_EN                           :  1;		/* 26..26, 0x04000000 */
				FIELD  G2C_TCM_EN                            :  1;		/* 27..27, 0x08000000 */
				FIELD  rsv_28                                :  1;		/* 28..28, 0x10000000 */
				FIELD  SRZ1_TCM_EN                           :  1;		/* 29..29, 0x20000000 */
				FIELD  SRZ2_TCM_EN                           :  1;		/* 30..30, 0x40000000 */
				FIELD  LCE_TCM_EN                            :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_TCM_EN;	/* DIP_X_CTL_TDR_TCM_EN, DIP_A_CTL_TDR_TCM_EN*/

typedef volatile union _DIP_X_REG_CTL_TDR_TCM2_EN_
{
		volatile struct	/* 0x1502205C */
		{
				FIELD  CRZ_TCM_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FE_TCM_EN                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  NR3D_TCM_EN                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  MDPCROP_TCM_EN                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CRSP_TCM_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  C02_TCM_EN                            :  1;		/*  5.. 5, 0x00000020 */
				FIELD  C02B_TCM_EN                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  C24_TCM_EN                            :  1;		/*  7.. 7, 0x00000080 */
				FIELD  C42_TCM_EN                            :  1;		/*  8.. 8, 0x00000100 */
				FIELD  C24B_TCM_EN                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFB_TCM_EN                            :  1;		/* 10..10, 0x00000400 */
				FIELD  PCA_TCM_EN                            :  1;		/* 11..11, 0x00000800 */
				FIELD  SEEE_TCM_EN                           :  1;		/* 12..12, 0x00001000 */
				FIELD  NBC_TCM_EN                            :  1;		/* 13..13, 0x00002000 */
				FIELD  NBC2_TCM_EN                           :  1;		/* 14..14, 0x00004000 */
				FIELD  DBS2_TCM_EN                           :  1;		/* 15..15, 0x00008000 */
				FIELD  RMG2_TCM_EN                           :  1;		/* 16..16, 0x00010000 */
				FIELD  BNR2_TCM_EN                           :  1;		/* 17..17, 0x00020000 */
				FIELD  RMM2_TCM_EN                           :  1;		/* 18..18, 0x00040000 */
				FIELD  SRZ3_TCM_EN                           :  1;		/* 19..19, 0x00080000 */
				FIELD  SRZ4_TCM_EN                           :  1;		/* 20..20, 0x00100000 */
				FIELD  RCP2_TCM_EN                           :  1;		/* 21..21, 0x00200000 */
				FIELD  SRZ5_TCM_EN                           :  1;		/* 22..22, 0x00400000 */
				FIELD  RNR_TCM_EN                            :  1;		/* 23..23, 0x00800000 */
				FIELD  SL2G_TCM_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  SL2H_TCM_EN                           :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2I_TCM_EN                           :  1;		/* 26..26, 0x04000000 */
				FIELD  HFG_TCM_EN                            :  1;		/* 27..27, 0x08000000 */
				FIELD  FLC_TCM_EN                            :  1;		/* 28..28, 0x10000000 */
				FIELD  FLC2_TCM_EN                           :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_TCM2_EN;	/* DIP_X_CTL_TDR_TCM2_EN, DIP_A_CTL_TDR_TCM2_EN*/

typedef volatile union _DIP_X_REG_CTL_TDR_EN_STATUS1_
{
		volatile struct	/* 0x15022060 */
		{
				FIELD  CTL_TDR_EN_STATUS1                    : 30;		/*  0..29, 0x3FFFFFFF */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_EN_STATUS1;	/* DIP_X_CTL_TDR_EN_STATUS1, DIP_A_CTL_TDR_EN_STATUS1*/

typedef volatile union _DIP_X_REG_CTL_TDR_EN_STATUS2_
{
		volatile struct	/* 0x15022064 */
		{
				FIELD  CTL_TDR_EN_STATUS2                    : 30;		/*  0..29, 0x3FFFFFFF */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_EN_STATUS2;	/* DIP_X_CTL_TDR_EN_STATUS2, DIP_A_CTL_TDR_EN_STATUS2*/

typedef volatile union _DIP_X_REG_CTL_TDR_DBG_STATUS_
{
		volatile struct	/* 0x15022068 */
		{
				FIELD  TPIPE_CNT                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  LOAD_SIZE                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TDR_DBG_STATUS;	/* DIP_X_CTL_TDR_DBG_STATUS, DIP_A_CTL_TDR_DBG_STATUS*/

typedef volatile union _DIP_X_REG_CTL_SW_CTL_
{
		volatile struct	/* 0x1502206C */
		{
				FIELD  SW_RST_Trig                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SW_RST_ST                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  HW_RST                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_SW_CTL;	/* DIP_X_CTL_SW_CTL, DIP_A_CTL_SW_CTL*/

typedef volatile union _DIP_X_REG_CTL_SPARE0_
{
		volatile struct	/* 0x15022070 */
		{
				FIELD  SPARE0                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_SPARE0;	/* DIP_X_CTL_SPARE0, DIP_A_CTL_SPARE0*/

typedef volatile union _DIP_X_REG_CTL_SPARE1_
{
		volatile struct	/* 0x15022074 */
		{
				FIELD  SPARE1                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_SPARE1;	/* DIP_X_CTL_SPARE1, DIP_A_CTL_SPARE1*/

typedef volatile union _DIP_X_REG_CTL_SPARE2_
{
		volatile struct	/* 0x15022078 */
		{
				FIELD  SPARE2                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_SPARE2;	/* DIP_X_CTL_SPARE2, DIP_A_CTL_SPARE2*/

typedef volatile union _DIP_X_REG_CTL_DONE_SEL_
{
		volatile struct	/* 0x1502207C */
		{
				FIELD  IMGI_DONE_SEL                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGBI_DONE_SEL                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGCI_DONE_SEL                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_DONE_SEL                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_DONE_SEL                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_DONE_SEL                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_DONE_SEL                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_DONE_SEL                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DEPI_DONE_SEL                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_DONE_SEL                         :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_DONE_SEL                         :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_DONE_SEL                        :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_DONE_SEL                       :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_DONE_SEL                        :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_DONE_SEL                       :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_DONE_SEL                       :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_DONE_SEL                          :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 14;		/* 17..30, 0x7FFE0000 */
				FIELD  DONE_SEL_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DONE_SEL;	/* DIP_X_CTL_DONE_SEL, DIP_A_CTL_DONE_SEL*/

typedef volatile union _DIP_X_REG_CTL_DBG_SET_
{
		volatile struct	/* 0x15022080 */
		{
				FIELD  DEBUG_MOD_SEL                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DEBUG_SEL                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  DEBUG_TOP_SEL                         :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DBG_SET;	/* DIP_X_CTL_DBG_SET, DIP_A_CTL_DBG_SET*/

typedef volatile union _DIP_X_REG_CTL_DBG_PORT_
{
		volatile struct	/* 0x15022084 */
		{
				FIELD  CTL_DBG_PORT                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DBG_PORT;	/* DIP_X_CTL_DBG_PORT, DIP_A_CTL_DBG_PORT*/

typedef volatile union _DIP_X_REG_CTL_DATE_CODE_
{
		volatile struct	/* 0x15022088 */
		{
				FIELD  CTL_DATE_CODE                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DATE_CODE;	/* DIP_X_CTL_DATE_CODE, DIP_A_CTL_DATE_CODE*/

typedef volatile union _DIP_X_REG_CTL_PROJ_CODE_
{
		volatile struct	/* 0x1502208C */
		{
				FIELD  CTL_PROJ_CODE                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_PROJ_CODE;	/* DIP_X_CTL_PROJ_CODE, DIP_A_CTL_PROJ_CODE*/

typedef volatile union _DIP_X_REG_CTL_YUV_DCM_DIS_
{
		volatile struct	/* 0x15022090 */
		{
				FIELD  MFB_DCM_DIS                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  C02B_DCM_DIS                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  C24_DCM_DIS                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  G2C_DCM_DIS                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  C42_DCM_DIS                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  NBC_DCM_DIS                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  NBC2_DCM_DIS                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PCA_DCM_DIS                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SEEE_DCM_DIS                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  SPARE_BIT_1                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  NR3D_DCM_DIS                          :  1;		/* 10..10, 0x00000400 */
				FIELD  SL2B_DCM_DIS                          :  1;		/* 11..11, 0x00000800 */
				FIELD  SL2C_DCM_DIS                          :  1;		/* 12..12, 0x00001000 */
				FIELD  SL2D_DCM_DIS                          :  1;		/* 13..13, 0x00002000 */
				FIELD  SL2E_DCM_DIS                          :  1;		/* 14..14, 0x00004000 */
				FIELD  SRZ1_DCM_DIS                          :  1;		/* 15..15, 0x00008000 */
				FIELD  SRZ2_DCM_DIS                          :  1;		/* 16..16, 0x00010000 */
				FIELD  CRZ_DCM_DIS                           :  1;		/* 17..17, 0x00020000 */
				FIELD  MIX1_DCM_DIS                          :  1;		/* 18..18, 0x00040000 */
				FIELD  MIX2_DCM_DIS                          :  1;		/* 19..19, 0x00080000 */
				FIELD  MIX3_DCM_DIS                          :  1;		/* 20..20, 0x00100000 */
				FIELD  CRSP_DCM_DIS                          :  1;		/* 21..21, 0x00200000 */
				FIELD  C24B_DCM_DIS                          :  1;		/* 22..22, 0x00400000 */
				FIELD  MDPCROP_DCM_DIS                       :  1;		/* 23..23, 0x00800000 */
				FIELD  C02_DCM_DIS                           :  1;		/* 24..24, 0x01000000 */
				FIELD  FE_DCM_DIS                            :  1;		/* 25..25, 0x02000000 */
				FIELD  MFBW_DCM_DIS                          :  1;		/* 26..26, 0x04000000 */
				FIELD  SPARE_BIT_2                           :  1;		/* 27..27, 0x08000000 */
				FIELD  PLNW1_DCM_DIS                         :  1;		/* 28..28, 0x10000000 */
				FIELD  PLNR1_DCM_DIS                         :  1;		/* 29..29, 0x20000000 */
				FIELD  PLNW2_DCM_DIS                         :  1;		/* 30..30, 0x40000000 */
				FIELD  PLNR2_DCM_DIS                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV_DCM_DIS;	/* DIP_X_CTL_YUV_DCM_DIS, DIP_A_CTL_YUV_DCM_DIS*/

typedef volatile union _DIP_X_REG_CTL_YUV2_DCM_DIS_
{
		volatile struct	/* 0x15022094 */
		{
				FIELD  FM_DCM_DIS                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ3_DCM_DIS                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ4_DCM_DIS                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SRZ5_DCM_DIS                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  HFG_DCM_DIS                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SL2I_DCM_DIS                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV2_DCM_DIS;	/* DIP_X_CTL_YUV2_DCM_DIS, DIP_A_CTL_YUV2_DCM_DIS*/

typedef volatile union _DIP_X_REG_CTL_RGB_DCM_DIS_
{
		volatile struct	/* 0x15022098 */
		{
				FIELD  UNP_DCM_DIS                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFD_DCM_DIS                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PGN_DCM_DIS                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SL2_DCM_DIS                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  UDM_DCM_DIS                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LCE_DCM_DIS                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  G2G_DCM_DIS                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  GGM_DCM_DIS                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GDR1_DCM_DIS                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  GDR2_DCM_DIS                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DBS2_DCM_DIS                          :  1;		/* 10..10, 0x00000400 */
				FIELD  OBC2_DCM_DIS                          :  1;		/* 11..11, 0x00000800 */
				FIELD  RMG2_DCM_DIS                          :  1;		/* 12..12, 0x00001000 */
				FIELD  BNR2_DCM_DIS                          :  1;		/* 13..13, 0x00002000 */
				FIELD  RMM2_DCM_DIS                          :  1;		/* 14..14, 0x00004000 */
				FIELD  LSC2_DCM_DIS                          :  1;		/* 15..15, 0x00008000 */
				FIELD  RCP2_DCM_DIS                          :  1;		/* 16..16, 0x00010000 */
				FIELD  PAK2_DCM_DIS                          :  1;		/* 17..17, 0x00020000 */
				FIELD  RNR_DCM_DIS                           :  1;		/* 18..18, 0x00040000 */
				FIELD  SL2G_DCM_DIS                          :  1;		/* 19..19, 0x00080000 */
				FIELD  SL2H_DCM_DIS                          :  1;		/* 20..20, 0x00100000 */
				FIELD  FLC_DCM_DIS                           :  1;		/* 21..21, 0x00200000 */
				FIELD  FLC2_DCM_DIS                          :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_RGB_DCM_DIS;	/* DIP_X_CTL_RGB_DCM_DIS, DIP_A_CTL_RGB_DCM_DIS*/

typedef volatile union _DIP_X_REG_CTL_DMA_DCM_DIS_
{
		volatile struct	/* 0x1502209C */
		{
				FIELD  IMGI_DCM_DIS                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGBI_DCM_DIS                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGCI_DCM_DIS                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_DCM_DIS                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_DCM_DIS                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_DCM_DIS                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_DCM_DIS                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_DCM_DIS                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DEPI_DCM_DIS                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_DCM_DIS                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_DCM_DIS                          :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_DCM_DIS                         :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_DCM_DIS                        :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_DCM_DIS                         :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_DCM_DIS                        :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_DCM_DIS                        :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_DCM_DIS                           :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DMA_DCM_DIS;	/* DIP_X_CTL_DMA_DCM_DIS, DIP_A_CTL_DMA_DCM_DIS*/

typedef volatile union _DIP_X_REG_CTL_TOP_DCM_DIS_
{
		volatile struct	/* 0x150220A0 */
		{
				FIELD  TOP_DCM_DIS                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TOP_DCM_DIS;	/* DIP_X_CTL_TOP_DCM_DIS, DIP_A_CTL_TOP_DCM_DIS*/

typedef volatile union _DIP_X_REG_CTL_YUV_DCM_STATUS_
{
		volatile struct	/* 0x150220A4 */
		{
				FIELD  MFB_DCM_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  C02B_DCM_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  C24_DCM_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  G2C_DCM_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  C42_DCM_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  NBC_DCM_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  NBC2_DCM_STATUS                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PCA_DCM_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SEEE_DCM_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  NR3D_DCM_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  SL2B_DCM_STATUS                       :  1;		/* 11..11, 0x00000800 */
				FIELD  SL2C_DCM_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  SL2D_DCM_STATUS                       :  1;		/* 13..13, 0x00002000 */
				FIELD  SL2E_DCM_STATUS                       :  1;		/* 14..14, 0x00004000 */
				FIELD  SRZ1_DCM_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  SRZ2_DCM_STATUS                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CRZ_DCM_STATUS                        :  1;		/* 17..17, 0x00020000 */
				FIELD  MIX1_DCM_STATUS                       :  1;		/* 18..18, 0x00040000 */
				FIELD  MIX2_DCM_STATUS                       :  1;		/* 19..19, 0x00080000 */
				FIELD  MIX3_DCM_STATUS                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CRSP_DCM_STATUS                       :  1;		/* 21..21, 0x00200000 */
				FIELD  C24B_DCM_STATUS                       :  1;		/* 22..22, 0x00400000 */
				FIELD  MDPCROP_DCM_STATUS                    :  1;		/* 23..23, 0x00800000 */
				FIELD  C02_DCM_STATUS                        :  1;		/* 24..24, 0x01000000 */
				FIELD  FE_DCM_STATUS                         :  1;		/* 25..25, 0x02000000 */
				FIELD  MFBW_DCM_STATUS                       :  1;		/* 26..26, 0x04000000 */
				FIELD  DRZ_DCM_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  PLNW1_DCM_STATUS                      :  1;		/* 28..28, 0x10000000 */
				FIELD  PLNR1_DCM_STATUS                      :  1;		/* 29..29, 0x20000000 */
				FIELD  PLNW2_DCM_STATUS                      :  1;		/* 30..30, 0x40000000 */
				FIELD  PLNR2_DCM_STATUS                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV_DCM_STATUS;	/* DIP_X_CTL_YUV_DCM_STATUS, DIP_A_CTL_YUV_DCM_STATUS*/

typedef volatile union _DIP_X_REG_CTL_YUV2_DCM_STATUS_
{
		volatile struct	/* 0x150220A8 */
		{
				FIELD  FM_DCM_STATUS                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ3_DCM_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ4_DCM_STATUS                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SRZ5_DCM_STATUS                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  HFG_DCM_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SL2I_DCM_STATUS                       :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV2_DCM_STATUS;	/* DIP_X_CTL_YUV2_DCM_STATUS, DIP_A_CTL_YUV2_DCM_STATUS*/

typedef volatile union _DIP_X_REG_CTL_RGB_DCM_STATUS_
{
		volatile struct	/* 0x150220AC */
		{
				FIELD  UNP_DCM_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFD_DCM_STATUS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PGN_DCM_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SL2_DCM_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  UDM_DCM_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LCE_DCM_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  G2G_DCM_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  GGM_DCM_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GDR1_DCM_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  GDR2_DCM_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DBS2_DCM_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  OBC2_DCM_STATUS                       :  1;		/* 11..11, 0x00000800 */
				FIELD  RMG2_DCM_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  BNR2_DCM_STATUS                       :  1;		/* 13..13, 0x00002000 */
				FIELD  RMM2_DCM_STATUS                       :  1;		/* 14..14, 0x00004000 */
				FIELD  LSC2_DCM_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RCP2_DCM_STATUS                       :  1;		/* 16..16, 0x00010000 */
				FIELD  PAK2_DCM_STATUS                       :  1;		/* 17..17, 0x00020000 */
				FIELD  RNR_DCM_STATUS                        :  1;		/* 18..18, 0x00040000 */
				FIELD  SL2G_DCM_STATUS                       :  1;		/* 19..19, 0x00080000 */
				FIELD  SL2H_DCM_STATUS                       :  1;		/* 20..20, 0x00100000 */
				FIELD  FLC_DCM_STATUS                        :  1;		/* 21..21, 0x00200000 */
				FIELD  FLC2_DCM_STATUS                       :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_RGB_DCM_STATUS;	/* DIP_X_CTL_RGB_DCM_STATUS, DIP_A_CTL_RGB_DCM_STATUS*/

typedef volatile union _DIP_X_REG_CTL_DMA_DCM_STATUS_
{
		volatile struct	/* 0x150220B0 */
		{
				FIELD  IMGI_DCM_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGBI_DCM_STATUS                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGCI_DCM_STATUS                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_DCM_STATUS                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_DCM_STATUS                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_DCM_STATUS                      :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_DCM_STATUS                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_DCM_STATUS                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DEPI_DCM_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_DCM_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_DCM_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_DCM_STATUS                      :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_DCM_STATUS                     :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_DCM_STATUS                      :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_DCM_STATUS                     :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_DCM_STATUS                     :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_DCM_STATUS                        :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DMA_DCM_STATUS;	/* DIP_X_CTL_DMA_DCM_STATUS, DIP_A_CTL_DMA_DCM_STATUS*/

typedef volatile union _DIP_X_REG_CTL_TOP_DCM_STATUS_
{
		volatile struct	/* 0x150220B4 */
		{
				FIELD  TOP_DCM_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_TOP_DCM_STATUS;	/* DIP_X_CTL_TOP_DCM_STATUS, DIP_A_CTL_TOP_DCM_STATUS*/

typedef volatile union _DIP_X_REG_CTL_YUV_REQ_STATUS_
{
		volatile struct	/* 0x150220B8 */
		{
				FIELD  MFB_REQ_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  C02B_REQ_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  C24_REQ_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  G2C_REQ_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  C42_REQ_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  NBC_REQ_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  NBC2_REQ_STATUS                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PCA_REQ_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SEEE_REQ_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  NR3D_REQ_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  SL2B_REQ_STATUS                       :  1;		/* 11..11, 0x00000800 */
				FIELD  SL2C_REQ_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  SL2D_REQ_STATUS                       :  1;		/* 13..13, 0x00002000 */
				FIELD  SL2E_REQ_STATUS                       :  1;		/* 14..14, 0x00004000 */
				FIELD  SRZ1_REQ_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  SRZ2_REQ_STATUS                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CRZ_REQ_STATUS                        :  1;		/* 17..17, 0x00020000 */
				FIELD  MIX1_REQ_STATUS                       :  1;		/* 18..18, 0x00040000 */
				FIELD  MIX2_REQ_STATUS                       :  1;		/* 19..19, 0x00080000 */
				FIELD  MIX3_REQ_STATUS                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CRSP_REQ_STATUS                       :  1;		/* 21..21, 0x00200000 */
				FIELD  C24B_REQ_STATUS                       :  1;		/* 22..22, 0x00400000 */
				FIELD  MDPCROP_REQ_STATUS                    :  1;		/* 23..23, 0x00800000 */
				FIELD  C02_REQ_STATUS                        :  1;		/* 24..24, 0x01000000 */
				FIELD  FE_REQ_STATUS                         :  1;		/* 25..25, 0x02000000 */
				FIELD  MFBW_REQ_STATUS                       :  1;		/* 26..26, 0x04000000 */
				FIELD  DRZ_REQ_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  PLNW1_REQ_STATUS                      :  1;		/* 28..28, 0x10000000 */
				FIELD  PLNR1_REQ_STATUS                      :  1;		/* 29..29, 0x20000000 */
				FIELD  PLNW2_REQ_STATUS                      :  1;		/* 30..30, 0x40000000 */
				FIELD  PLNR2_REQ_STATUS                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV_REQ_STATUS;	/* DIP_X_CTL_YUV_REQ_STATUS, DIP_A_CTL_YUV_REQ_STATUS*/

typedef volatile union _DIP_X_REG_CTL_YUV2_REQ_STATUS_
{
		volatile struct	/* 0x150220BC */
		{
				FIELD  FM_REQ_STATUS                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ3_REQ_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ4_REQ_STATUS                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SRZ5_REQ_STATUS                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  HFG_REQ_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SL2I_REQ_STATUS                       :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV2_REQ_STATUS;	/* DIP_X_CTL_YUV2_REQ_STATUS, DIP_A_CTL_YUV2_REQ_STATUS*/

typedef volatile union _DIP_X_REG_CTL_RGB_REQ_STATUS_
{
		volatile struct	/* 0x150220C0 */
		{
				FIELD  UNP_REQ_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFD_REQ_STATUS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PGN_REQ_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SL2_REQ_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  UDM_REQ_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LCE_REQ_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  G2G_REQ_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  GGM_REQ_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GDR1_REQ_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  GDR2_REQ_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DBS2_REQ_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  OBC2_REQ_STATUS                       :  1;		/* 11..11, 0x00000800 */
				FIELD  RMG2_REQ_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  BNR2_REQ_STATUS                       :  1;		/* 13..13, 0x00002000 */
				FIELD  RMM2_REQ_STATUS                       :  1;		/* 14..14, 0x00004000 */
				FIELD  LSC2_REQ_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RCP2_REQ_STATUS                       :  1;		/* 16..16, 0x00010000 */
				FIELD  PAK2_REQ_STATUS                       :  1;		/* 17..17, 0x00020000 */
				FIELD  RNR_REQ_STATUS                        :  1;		/* 18..18, 0x00040000 */
				FIELD  SL2G_REQ_STATUS                       :  1;		/* 19..19, 0x00080000 */
				FIELD  SL2H_REQ_STATUS                       :  1;		/* 20..20, 0x00100000 */
				FIELD  FLC_REQ_STATUS                        :  1;		/* 21..21, 0x00200000 */
				FIELD  FLC2_REQ_STATUS                       :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_RGB_REQ_STATUS;	/* DIP_X_CTL_RGB_REQ_STATUS, DIP_A_CTL_RGB_REQ_STATUS*/

typedef volatile union _DIP_X_REG_CTL_DMA_REQ_STATUS_
{
		volatile struct	/* 0x150220C4 */
		{
				FIELD  IMGI_REQ_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGBI_REQ_STATUS                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGCI_REQ_STATUS                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_REQ_STATUS                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_REQ_STATUS                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_REQ_STATUS                      :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_REQ_STATUS                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_REQ_STATUS                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DEPI_REQ_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_REQ_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_REQ_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_REQ_STATUS                      :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_REQ_STATUS                     :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_REQ_STATUS                      :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_REQ_STATUS                     :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_REQ_STATUS                     :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_REQ_STATUS                        :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DMA_REQ_STATUS;	/* DIP_X_CTL_DMA_REQ_STATUS, DIP_A_CTL_DMA_REQ_STATUS*/

typedef volatile union _DIP_X_REG_CTL_YUV_RDY_STATUS_
{
		volatile struct	/* 0x150220C8 */
		{
				FIELD  MFB_RDY_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  C02B_RDY_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  C24_RDY_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  G2C_RDY_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  C42_RDY_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  NBC_RDY_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  NBC2_RDY_STATUS                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PCA_RDY_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SEEE_RDY_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  NR3D_RDY_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  SL2B_RDY_STATUS                       :  1;		/* 11..11, 0x00000800 */
				FIELD  SL2C_RDY_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  SL2D_RDY_STATUS                       :  1;		/* 13..13, 0x00002000 */
				FIELD  SL2E_RDY_STATUS                       :  1;		/* 14..14, 0x00004000 */
				FIELD  SRZ1_RDY_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  SRZ2_RDY_STATUS                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CRZ_RDY_STATUS                        :  1;		/* 17..17, 0x00020000 */
				FIELD  MIX1_RDY_STATUS                       :  1;		/* 18..18, 0x00040000 */
				FIELD  MIX2_RDY_STATUS                       :  1;		/* 19..19, 0x00080000 */
				FIELD  MIX3_RDY_STATUS                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CRSP_RDY_STATUS                       :  1;		/* 21..21, 0x00200000 */
				FIELD  C24B_RDY_STATUS                       :  1;		/* 22..22, 0x00400000 */
				FIELD  MDPCROP_RDY_STATUS                    :  1;		/* 23..23, 0x00800000 */
				FIELD  C02_RDY_STATUS                        :  1;		/* 24..24, 0x01000000 */
				FIELD  FE_RDY_STATUS                         :  1;		/* 25..25, 0x02000000 */
				FIELD  MFBW_RDY_STATUS                       :  1;		/* 26..26, 0x04000000 */
				FIELD  rsv_27                                :  1;		/* 27..27, 0x08000000 */
				FIELD  PLNW1_RDY_STATUS                      :  1;		/* 28..28, 0x10000000 */
				FIELD  PLNR1_RDY_STATUS                      :  1;		/* 29..29, 0x20000000 */
				FIELD  PLNW2_RDY_STATUS                      :  1;		/* 30..30, 0x40000000 */
				FIELD  PLNR2_RDY_STATUS                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV_RDY_STATUS;	/* DIP_X_CTL_YUV_RDY_STATUS, DIP_A_CTL_YUV_RDY_STATUS*/

typedef volatile union _DIP_X_REG_CTL_YUV2_RDY_STATUS_
{
		volatile struct	/* 0x150220CC */
		{
				FIELD  FM_RDY_STATUS                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ3_RDY_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ4_RDY_STATUS                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SRZ5_RDY_STATUS                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  HFG_RDY_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  SL2I_RDY_STATUS                       :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_YUV2_RDY_STATUS;	/* DIP_X_CTL_YUV2_RDY_STATUS, DIP_A_CTL_YUV2_RDY_STATUS*/

typedef volatile union _DIP_X_REG_CTL_RGB_RDY_STATUS_
{
		volatile struct	/* 0x150220D0 */
		{
				FIELD  UNP_RDY_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFD_RDY_STATUS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PGN_RDY_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SL2_RDY_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  UDM_RDY_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  LCE_RDY_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  G2G_RDY_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  GGM_RDY_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  GDR1_RDY_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  GDR2_RDY_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DBS2_RDY_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  OBC2_RDY_STATUS                       :  1;		/* 11..11, 0x00000800 */
				FIELD  RMG2_RDY_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  BNR2_RDY_STATUS                       :  1;		/* 13..13, 0x00002000 */
				FIELD  RMM2_RDY_STATUS                       :  1;		/* 14..14, 0x00004000 */
				FIELD  LSC2_RDY_STATUS                       :  1;		/* 15..15, 0x00008000 */
				FIELD  RCP2_RDY_STATUS                       :  1;		/* 16..16, 0x00010000 */
				FIELD  PAK2_RDY_STATUS                       :  1;		/* 17..17, 0x00020000 */
				FIELD  RNR_RDY_STATUS                        :  1;		/* 18..18, 0x00040000 */
				FIELD  SL2G_RDY_STATUS                       :  1;		/* 19..19, 0x00080000 */
				FIELD  SL2H_RDY_STATUS                       :  1;		/* 20..20, 0x00100000 */
				FIELD  FLC_RDY_STATUS                        :  1;		/* 21..21, 0x00200000 */
				FIELD  FLC2_RDY_STATUS                       :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_RGB_RDY_STATUS;	/* DIP_X_CTL_RGB_RDY_STATUS, DIP_A_CTL_RGB_RDY_STATUS*/

typedef volatile union _DIP_X_REG_CTL_DMA_RDY_STATUS_
{
		volatile struct	/* 0x150220D4 */
		{
				FIELD  IMGI_RDY_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGBI_RDY_STATUS                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMGCI_RDY_STATUS                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  UFDI_RDY_STATUS                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  VIPI_RDY_STATUS                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  VIP2I_RDY_STATUS                      :  1;		/*  5.. 5, 0x00000020 */
				FIELD  VIP3I_RDY_STATUS                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LCEI_RDY_STATUS                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DEPI_RDY_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DMGI_RDY_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  MFBO_RDY_STATUS                       :  1;		/* 10..10, 0x00000400 */
				FIELD  IMG2O_RDY_STATUS                      :  1;		/* 11..11, 0x00000800 */
				FIELD  IMG2BO_RDY_STATUS                     :  1;		/* 12..12, 0x00001000 */
				FIELD  IMG3O_RDY_STATUS                      :  1;		/* 13..13, 0x00002000 */
				FIELD  IMG3BO_RDY_STATUS                     :  1;		/* 14..14, 0x00004000 */
				FIELD  IMG3CO_RDY_STATUS                     :  1;		/* 15..15, 0x00008000 */
				FIELD  FEO_RDY_STATUS                        :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CTL_DMA_RDY_STATUS;	/* DIP_X_CTL_DMA_RDY_STATUS, DIP_A_CTL_DMA_RDY_STATUS*/

typedef volatile union _DIP_X_REG_CQ_EN_
{
		volatile struct	/* 0x15022100 */
		{
				FIELD  CQ_APB_2T                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_DROP_FRAME_EN                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 14;		/*  2..15, 0x0000FFFC */
				FIELD  CQ_RESET                              :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_EN;	/* DIP_X_CQ_EN, DIP_A_CQ_EN*/

typedef volatile union _DIP_X_REG_CQ_THR0_CTL_
{
		volatile struct	/* 0x15022104 */
		{
				FIELD  CQ_THR0_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR0_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR0_CTL;	/* DIP_X_CQ_THR0_CTL, DIP_A_CQ_THR0_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR0_BASEADDR_
{
		volatile struct	/* 0x15022108 */
		{
				FIELD  CQ_THR0_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR0_BASEADDR;	/* DIP_X_CQ_THR0_BASEADDR, DIP_A_CQ_THR0_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR0_DESC_SIZE_
{
		volatile struct	/* 0x1502210C */
		{
				FIELD  CQ_THR0_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR0_DESC_SIZE;	/* DIP_X_CQ_THR0_DESC_SIZE, DIP_A_CQ_THR0_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR1_CTL_
{
		volatile struct	/* 0x15022110 */
		{
				FIELD  CQ_THR1_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR1_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR1_CTL;	/* DIP_X_CQ_THR1_CTL, DIP_A_CQ_THR1_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR1_BASEADDR_
{
		volatile struct	/* 0x15022114 */
		{
				FIELD  CQ_THR1_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR1_BASEADDR;	/* DIP_X_CQ_THR1_BASEADDR, DIP_A_CQ_THR1_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR1_DESC_SIZE_
{
		volatile struct	/* 0x15022118 */
		{
				FIELD  CQ_THR1_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR1_DESC_SIZE;	/* DIP_X_CQ_THR1_DESC_SIZE, DIP_A_CQ_THR1_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR2_CTL_
{
		volatile struct	/* 0x1502211C */
		{
				FIELD  CQ_THR2_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR2_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR2_CTL;	/* DIP_X_CQ_THR2_CTL, DIP_A_CQ_THR2_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR2_BASEADDR_
{
		volatile struct	/* 0x15022120 */
		{
				FIELD  CQ_THR2_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR2_BASEADDR;	/* DIP_X_CQ_THR2_BASEADDR, DIP_A_CQ_THR2_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR2_DESC_SIZE_
{
		volatile struct	/* 0x15022124 */
		{
				FIELD  CQ_THR2_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR2_DESC_SIZE;	/* DIP_X_CQ_THR2_DESC_SIZE, DIP_A_CQ_THR2_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR3_CTL_
{
		volatile struct	/* 0x15022128 */
		{
				FIELD  CQ_THR3_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR3_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR3_CTL;	/* DIP_X_CQ_THR3_CTL, DIP_A_CQ_THR3_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR3_BASEADDR_
{
		volatile struct	/* 0x1502212C */
		{
				FIELD  CQ_THR3_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR3_BASEADDR;	/* DIP_X_CQ_THR3_BASEADDR, DIP_A_CQ_THR3_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR3_DESC_SIZE_
{
		volatile struct	/* 0x15022130 */
		{
				FIELD  CQ_THR3_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR3_DESC_SIZE;	/* DIP_X_CQ_THR3_DESC_SIZE, DIP_A_CQ_THR3_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR4_CTL_
{
		volatile struct	/* 0x15022134 */
		{
				FIELD  CQ_THR4_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR4_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR4_CTL;	/* DIP_X_CQ_THR4_CTL, DIP_A_CQ_THR4_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR4_BASEADDR_
{
		volatile struct	/* 0x15022138 */
		{
				FIELD  CQ_THR4_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR4_BASEADDR;	/* DIP_X_CQ_THR4_BASEADDR, DIP_A_CQ_THR4_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR4_DESC_SIZE_
{
		volatile struct	/* 0x1502213C */
		{
				FIELD  CQ_THR4_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR4_DESC_SIZE;	/* DIP_X_CQ_THR4_DESC_SIZE, DIP_A_CQ_THR4_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR5_CTL_
{
		volatile struct	/* 0x15022140 */
		{
				FIELD  CQ_THR5_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR5_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR5_CTL;	/* DIP_X_CQ_THR5_CTL, DIP_A_CQ_THR5_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR5_BASEADDR_
{
		volatile struct	/* 0x15022144 */
		{
				FIELD  CQ_THR5_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR5_BASEADDR;	/* DIP_X_CQ_THR5_BASEADDR, DIP_A_CQ_THR5_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR5_DESC_SIZE_
{
		volatile struct	/* 0x15022148 */
		{
				FIELD  CQ_THR5_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR5_DESC_SIZE;	/* DIP_X_CQ_THR5_DESC_SIZE, DIP_A_CQ_THR5_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR6_CTL_
{
		volatile struct	/* 0x1502214C */
		{
				FIELD  CQ_THR6_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR6_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR6_CTL;	/* DIP_X_CQ_THR6_CTL, DIP_A_CQ_THR6_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR6_BASEADDR_
{
		volatile struct	/* 0x15022150 */
		{
				FIELD  CQ_THR6_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR6_BASEADDR;	/* DIP_X_CQ_THR6_BASEADDR, DIP_A_CQ_THR6_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR6_DESC_SIZE_
{
		volatile struct	/* 0x15022154 */
		{
				FIELD  CQ_THR6_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR6_DESC_SIZE;	/* DIP_X_CQ_THR6_DESC_SIZE, DIP_A_CQ_THR6_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR7_CTL_
{
		volatile struct	/* 0x15022158 */
		{
				FIELD  CQ_THR7_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR7_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR7_CTL;	/* DIP_X_CQ_THR7_CTL, DIP_A_CQ_THR7_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR7_BASEADDR_
{
		volatile struct	/* 0x1502215C */
		{
				FIELD  CQ_THR7_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR7_BASEADDR;	/* DIP_X_CQ_THR7_BASEADDR, DIP_A_CQ_THR7_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR7_DESC_SIZE_
{
		volatile struct	/* 0x15022160 */
		{
				FIELD  CQ_THR7_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR7_DESC_SIZE;	/* DIP_X_CQ_THR7_DESC_SIZE, DIP_A_CQ_THR7_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR8_CTL_
{
		volatile struct	/* 0x15022164 */
		{
				FIELD  CQ_THR8_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR8_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR8_CTL;	/* DIP_X_CQ_THR8_CTL, DIP_A_CQ_THR8_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR8_BASEADDR_
{
		volatile struct	/* 0x15022168 */
		{
				FIELD  CQ_THR8_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR8_BASEADDR;	/* DIP_X_CQ_THR8_BASEADDR, DIP_A_CQ_THR8_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR8_DESC_SIZE_
{
		volatile struct	/* 0x1502216C */
		{
				FIELD  CQ_THR8_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR8_DESC_SIZE;	/* DIP_X_CQ_THR8_DESC_SIZE, DIP_A_CQ_THR8_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR9_CTL_
{
		volatile struct	/* 0x15022170 */
		{
				FIELD  CQ_THR9_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR9_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR9_CTL;	/* DIP_X_CQ_THR9_CTL, DIP_A_CQ_THR9_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR9_BASEADDR_
{
		volatile struct	/* 0x15022174 */
		{
				FIELD  CQ_THR9_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR9_BASEADDR;	/* DIP_X_CQ_THR9_BASEADDR, DIP_A_CQ_THR9_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR9_DESC_SIZE_
{
		volatile struct	/* 0x15022178 */
		{
				FIELD  CQ_THR9_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR9_DESC_SIZE;	/* DIP_X_CQ_THR9_DESC_SIZE, DIP_A_CQ_THR9_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR10_CTL_
{
		volatile struct	/* 0x1502217C */
		{
				FIELD  CQ_THR10_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR10_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR10_CTL;	/* DIP_X_CQ_THR10_CTL, DIP_A_CQ_THR10_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR10_BASEADDR_
{
		volatile struct	/* 0x15022180 */
		{
				FIELD  CQ_THR10_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR10_BASEADDR;	/* DIP_X_CQ_THR10_BASEADDR, DIP_A_CQ_THR10_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR10_DESC_SIZE_
{
		volatile struct	/* 0x15022184 */
		{
				FIELD  CQ_THR10_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR10_DESC_SIZE;	/* DIP_X_CQ_THR10_DESC_SIZE, DIP_A_CQ_THR10_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR11_CTL_
{
		volatile struct	/* 0x15022188 */
		{
				FIELD  CQ_THR11_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR11_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR11_CTL;	/* DIP_X_CQ_THR11_CTL, DIP_A_CQ_THR11_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR11_BASEADDR_
{
		volatile struct	/* 0x1502218C */
		{
				FIELD  CQ_THR11_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR11_BASEADDR;	/* DIP_X_CQ_THR11_BASEADDR, DIP_A_CQ_THR11_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR11_DESC_SIZE_
{
		volatile struct	/* 0x15022190 */
		{
				FIELD  CQ_THR11_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR11_DESC_SIZE;	/* DIP_X_CQ_THR11_DESC_SIZE, DIP_A_CQ_THR11_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR12_CTL_
{
		volatile struct	/* 0x15022194 */
		{
				FIELD  CQ_THR12_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR12_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR12_CTL;	/* DIP_X_CQ_THR12_CTL, DIP_A_CQ_THR12_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR12_BASEADDR_
{
		volatile struct	/* 0x15022198 */
		{
				FIELD  CQ_THR12_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR12_BASEADDR;	/* DIP_X_CQ_THR12_BASEADDR, DIP_A_CQ_THR12_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR12_DESC_SIZE_
{
		volatile struct	/* 0x1502219C */
		{
				FIELD  CQ_THR12_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR12_DESC_SIZE;	/* DIP_X_CQ_THR12_DESC_SIZE, DIP_A_CQ_THR12_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR13_CTL_
{
		volatile struct	/* 0x150221A0 */
		{
				FIELD  CQ_THR13_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR13_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR13_CTL;	/* DIP_X_CQ_THR13_CTL, DIP_A_CQ_THR13_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR13_BASEADDR_
{
		volatile struct	/* 0x150221A4 */
		{
				FIELD  CQ_THR13_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR13_BASEADDR;	/* DIP_X_CQ_THR13_BASEADDR, DIP_A_CQ_THR13_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR13_DESC_SIZE_
{
		volatile struct	/* 0x150221A8 */
		{
				FIELD  CQ_THR13_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR13_DESC_SIZE;	/* DIP_X_CQ_THR13_DESC_SIZE, DIP_A_CQ_THR13_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR14_CTL_
{
		volatile struct	/* 0x150221AC */
		{
				FIELD  CQ_THR14_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR14_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR14_CTL;	/* DIP_X_CQ_THR14_CTL, DIP_A_CQ_THR14_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR14_BASEADDR_
{
		volatile struct	/* 0x150221B0 */
		{
				FIELD  CQ_THR14_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR14_BASEADDR;	/* DIP_X_CQ_THR14_BASEADDR, DIP_A_CQ_THR14_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR14_DESC_SIZE_
{
		volatile struct	/* 0x150221B4 */
		{
				FIELD  CQ_THR14_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR14_DESC_SIZE;	/* DIP_X_CQ_THR14_DESC_SIZE, DIP_A_CQ_THR14_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR15_CTL_
{
		volatile struct	/* 0x150221B8 */
		{
				FIELD  CQ_THR15_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR15_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR15_CTL;	/* DIP_X_CQ_THR15_CTL, DIP_A_CQ_THR15_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR15_BASEADDR_
{
		volatile struct	/* 0x150221BC */
		{
				FIELD  CQ_THR15_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR15_BASEADDR;	/* DIP_X_CQ_THR15_BASEADDR, DIP_A_CQ_THR15_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR15_DESC_SIZE_
{
		volatile struct	/* 0x150221C0 */
		{
				FIELD  CQ_THR15_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR15_DESC_SIZE;	/* DIP_X_CQ_THR15_DESC_SIZE, DIP_A_CQ_THR15_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR16_CTL_
{
		volatile struct	/* 0x150221C4 */
		{
				FIELD  CQ_THR16_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR16_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR16_CTL;	/* DIP_X_CQ_THR16_CTL, DIP_A_CQ_THR16_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR16_BASEADDR_
{
		volatile struct	/* 0x150221C8 */
		{
				FIELD  CQ_THR16_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR16_BASEADDR;	/* DIP_X_CQ_THR16_BASEADDR, DIP_A_CQ_THR16_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR16_DESC_SIZE_
{
		volatile struct	/* 0x150221CC */
		{
				FIELD  CQ_THR16_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR16_DESC_SIZE;	/* DIP_X_CQ_THR16_DESC_SIZE, DIP_A_CQ_THR16_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR17_CTL_
{
		volatile struct	/* 0x150221D0 */
		{
				FIELD  CQ_THR17_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR17_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR17_CTL;	/* DIP_X_CQ_THR17_CTL, DIP_A_CQ_THR17_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR17_BASEADDR_
{
		volatile struct	/* 0x150221D4 */
		{
				FIELD  CQ_THR17_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR17_BASEADDR;	/* DIP_X_CQ_THR17_BASEADDR, DIP_A_CQ_THR17_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR17_DESC_SIZE_
{
		volatile struct	/* 0x150221D8 */
		{
				FIELD  CQ_THR17_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR17_DESC_SIZE;	/* DIP_X_CQ_THR17_DESC_SIZE, DIP_A_CQ_THR17_DESC_SIZE*/

typedef volatile union _DIP_X_REG_CQ_THR18_CTL_
{
		volatile struct	/* 0x150221DC */
		{
				FIELD  CQ_THR18_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR18_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR18_CTL;	/* DIP_X_CQ_THR18_CTL, DIP_A_CQ_THR18_CTL*/

typedef volatile union _DIP_X_REG_CQ_THR18_BASEADDR_
{
		volatile struct	/* 0x150221E0 */
		{
				FIELD  CQ_THR18_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR18_BASEADDR;	/* DIP_X_CQ_THR18_BASEADDR, DIP_A_CQ_THR18_BASEADDR*/

typedef volatile union _DIP_X_REG_CQ_THR18_DESC_SIZE_
{
		volatile struct	/* 0x150221E4 */
		{
				FIELD  CQ_THR18_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CQ_THR18_DESC_SIZE;	/* DIP_X_CQ_THR18_DESC_SIZE, DIP_A_CQ_THR18_DESC_SIZE*/

typedef volatile union _DIP_X_REG_DMA_SOFT_RSTSTAT_
{
		volatile struct	/* 0x15022200 */
		{
				FIELD  IMG2O_SOFT_RST_STAT                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMG2BO_SOFT_RST_STAT                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMG3O_SOFT_RST_STAT                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  IMG3BO_SOFT_RST_STAT                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  IMG3CO_SOFT_RST_STAT                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FEO_SOFT_RST_STAT                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MFBO_SOFT_RST_STAT                    :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  IMGI_SOFT_RST_STAT                    :  1;		/* 16..16, 0x00010000 */
				FIELD  IMGBI_SOFT_RST_STAT                   :  1;		/* 17..17, 0x00020000 */
				FIELD  IMGCI_SOFT_RST_STAT                   :  1;		/* 18..18, 0x00040000 */
				FIELD  VIPI_SOFT_RST_STAT                    :  1;		/* 19..19, 0x00080000 */
				FIELD  VIP2I_SOFT_RST_STAT                   :  1;		/* 20..20, 0x00100000 */
				FIELD  VIP3I_SOFT_RST_STAT                   :  1;		/* 21..21, 0x00200000 */
				FIELD  DMGI_SOFT_RST_STAT                    :  1;		/* 22..22, 0x00400000 */
				FIELD  DEPI_SOFT_RST_STAT                    :  1;		/* 23..23, 0x00800000 */
				FIELD  LCEI_SOFT_RST_STAT                    :  1;		/* 24..24, 0x01000000 */
				FIELD  UFDI_SOFT_RST_STAT                    :  1;		/* 25..25, 0x02000000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_SOFT_RSTSTAT;	/* DIP_X_DMA_SOFT_RSTSTAT, DIP_A_DMA_SOFT_RSTSTAT*/

typedef volatile union _DIP_X_REG_TDRI_BASE_ADDR_
{
		volatile struct	/* 0x15022204 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_TDRI_BASE_ADDR;	/* DIP_X_TDRI_BASE_ADDR, DIP_A_TDRI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_TDRI_OFST_ADDR_
{
		volatile struct	/* 0x15022208 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_TDRI_OFST_ADDR;	/* DIP_X_TDRI_OFST_ADDR, DIP_A_TDRI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_TDRI_XSIZE_
{
		volatile struct	/* 0x1502220C */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_TDRI_XSIZE;	/* DIP_X_TDRI_XSIZE, DIP_A_TDRI_XSIZE*/

typedef volatile union _DIP_X_REG_VERTICAL_FLIP_EN_
{
		volatile struct	/* 0x15022210 */
		{
				FIELD  IMG2O_V_FLIP_EN                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMG2BO_V_FLIP_EN                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMG3O_V_FLIP_EN                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  IMG3BO_V_FLIP_EN                      :  1;		/*  3.. 3, 0x00000008 */
				FIELD  IMG3CO_V_FLIP_EN                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FEO_V_FLIP_EN                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MFBO_V_FLIP_EN                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  IMGI_V_FLIP_EN                        :  1;		/* 16..16, 0x00010000 */
				FIELD  IMGBI_V_FLIP_EN                       :  1;		/* 17..17, 0x00020000 */
				FIELD  IMGCI_V_FLIP_EN                       :  1;		/* 18..18, 0x00040000 */
				FIELD  VIPI_V_FLIP_EN                        :  1;		/* 19..19, 0x00080000 */
				FIELD  VIP2I_V_FLIP_EN                       :  1;		/* 20..20, 0x00100000 */
				FIELD  VIP3I_V_FLIP_EN                       :  1;		/* 21..21, 0x00200000 */
				FIELD  DMGI_V_FLIP_EN                        :  1;		/* 22..22, 0x00400000 */
				FIELD  DEPI_V_FLIP_EN                        :  1;		/* 23..23, 0x00800000 */
				FIELD  LCEI_V_FLIP_EN                        :  1;		/* 24..24, 0x01000000 */
				FIELD  UFDI_V_FLIP_EN                        :  1;		/* 25..25, 0x02000000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VERTICAL_FLIP_EN;	/* DIP_X_VERTICAL_FLIP_EN, DIP_A_VERTICAL_FLIP_EN*/

typedef volatile union _DIP_X_REG_DMA_SOFT_RESET_
{
		volatile struct	/* 0x15022214 */
		{
				FIELD  IMG2O_SOFT_RST                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMG2BO_SOFT_RST                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMG3O_SOFT_RST                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  IMG3BO_SOFT_RST                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  IMG3CO_SOFT_RST                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FEO_SOFT_RST                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MFBO_SOFT_RST                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  IMGI_SOFT_RST                         :  1;		/* 16..16, 0x00010000 */
				FIELD  IMGBI_SOFT_RST                        :  1;		/* 17..17, 0x00020000 */
				FIELD  IMGCI_SOFT_RST                        :  1;		/* 18..18, 0x00040000 */
				FIELD  VIPI_SOFT_RST                         :  1;		/* 19..19, 0x00080000 */
				FIELD  VIP2I_SOFT_RST                        :  1;		/* 20..20, 0x00100000 */
				FIELD  VIP3I_SOFT_RST                        :  1;		/* 21..21, 0x00200000 */
				FIELD  DMGI_SOFT_RST                         :  1;		/* 22..22, 0x00400000 */
				FIELD  DEPI_SOFT_RST                         :  1;		/* 23..23, 0x00800000 */
				FIELD  LCEI_SOFT_RST                         :  1;		/* 24..24, 0x01000000 */
				FIELD  UFDI_SOFT_RST                         :  1;		/* 25..25, 0x02000000 */
				FIELD  rsv_26                                :  5;		/* 26..30, 0x7C000000 */
				FIELD  SEPARATE_SOFT_RST_EN                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_SOFT_RESET;	/* DIP_X_DMA_SOFT_RESET, DIP_A_DMA_SOFT_RESET*/

typedef volatile union _DIP_X_REG_LAST_ULTRA_EN_
{
		volatile struct	/* 0x15022218 */
		{
				FIELD  IMG2O_LAST_ULTRA_EN                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMG2BO_LAST_ULTRA_EN                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMG3O_LAST_ULTRA_EN                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  IMG3BO_LAST_ULTRA_EN                  :  1;		/*  3.. 3, 0x00000008 */
				FIELD  IMG3CO_LAST_ULTRA_EN                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FEO_LAST_ULTRA_EN                     :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MFBO_LAST_ULTRA_EN                    :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LAST_ULTRA_EN;	/* DIP_X_LAST_ULTRA_EN, DIP_A_LAST_ULTRA_EN*/

typedef volatile union _DIP_X_REG_SPECIAL_FUN_EN_
{
		volatile struct	/* 0x1502221C */
		{
				FIELD  SLOW_CNT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                :  4;		/* 16..19, 0x000F0000 */
				FIELD  CONTINUOUS_COM_CON                    :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  GCLAST_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  MULTI_PLANE_ID_EN                     :  1;		/* 24..24, 0x01000000 */
				FIELD  CONTINUOUS_COM_EN                     :  1;		/* 25..25, 0x02000000 */
				FIELD  CQ_ULTRA_LCEI_EN                      :  1;		/* 26..26, 0x04000000 */
				FIELD  CQ_ULTRA_IMGI_EN                      :  1;		/* 27..27, 0x08000000 */
				FIELD  FIFO_CHANGE_EN                        :  1;		/* 28..28, 0x10000000 */
				FIELD  UFO_IMGI_EN                           :  1;		/* 29..29, 0x20000000 */
				FIELD  INTERLACE_MODE                        :  1;		/* 30..30, 0x40000000 */
				FIELD  SLOW_EN                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SPECIAL_FUN_EN;	/* DIP_X_SPECIAL_FUN_EN, DIP_A_SPECIAL_FUN_EN*/

typedef volatile union _DIP_X_REG_IMG2O_BASE_ADDR_
{
		volatile struct	/* 0x15022230 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_BASE_ADDR;	/* DIP_X_IMG2O_BASE_ADDR, DIP_A_IMG2O_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMG2O_OFST_ADDR_
{
		volatile struct	/* 0x15022238 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_OFST_ADDR;	/* DIP_X_IMG2O_OFST_ADDR, DIP_A_IMG2O_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMG2O_XSIZE_
{
		volatile struct	/* 0x15022240 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_XSIZE;	/* DIP_X_IMG2O_XSIZE, DIP_A_IMG2O_XSIZE*/

typedef volatile union _DIP_X_REG_IMG2O_YSIZE_
{
		volatile struct	/* 0x15022244 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_YSIZE;	/* DIP_X_IMG2O_YSIZE, DIP_A_IMG2O_YSIZE*/

typedef volatile union _DIP_X_REG_IMG2O_STRIDE_
{
		volatile struct	/* 0x15022248 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_STRIDE;	/* DIP_X_IMG2O_STRIDE, DIP_A_IMG2O_STRIDE*/

typedef volatile union _DIP_X_REG_IMG2O_CON_
{
		volatile struct	/* 0x1502224C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_CON;	/* DIP_X_IMG2O_CON, DIP_A_IMG2O_CON*/

typedef volatile union _DIP_X_REG_IMG2O_CON2_
{
		volatile struct	/* 0x15022250 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_CON2;	/* DIP_X_IMG2O_CON2, DIP_A_IMG2O_CON2*/

typedef volatile union _DIP_X_REG_IMG2O_CON3_
{
		volatile struct	/* 0x15022254 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_CON3;	/* DIP_X_IMG2O_CON3, DIP_A_IMG2O_CON3*/

typedef volatile union _DIP_X_REG_IMG2O_CROP_
{
		volatile struct	/* 0x15022258 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_CROP;	/* DIP_X_IMG2O_CROP, DIP_A_IMG2O_CROP*/

typedef volatile union _DIP_X_REG_IMG2BO_BASE_ADDR_
{
		volatile struct	/* 0x15022260 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_BASE_ADDR;	/* DIP_X_IMG2BO_BASE_ADDR, DIP_A_IMG2BO_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMG2BO_OFST_ADDR_
{
		volatile struct	/* 0x15022268 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_OFST_ADDR;	/* DIP_X_IMG2BO_OFST_ADDR, DIP_A_IMG2BO_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMG2BO_XSIZE_
{
		volatile struct	/* 0x15022270 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_XSIZE;	/* DIP_X_IMG2BO_XSIZE, DIP_A_IMG2BO_XSIZE*/

typedef volatile union _DIP_X_REG_IMG2BO_YSIZE_
{
		volatile struct	/* 0x15022274 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_YSIZE;	/* DIP_X_IMG2BO_YSIZE, DIP_A_IMG2BO_YSIZE*/

typedef volatile union _DIP_X_REG_IMG2BO_STRIDE_
{
		volatile struct	/* 0x15022278 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_STRIDE;	/* DIP_X_IMG2BO_STRIDE, DIP_A_IMG2BO_STRIDE*/

typedef volatile union _DIP_X_REG_IMG2BO_CON_
{
		volatile struct	/* 0x1502227C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_CON;	/* DIP_X_IMG2BO_CON, DIP_A_IMG2BO_CON*/

typedef volatile union _DIP_X_REG_IMG2BO_CON2_
{
		volatile struct	/* 0x15022280 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_CON2;	/* DIP_X_IMG2BO_CON2, DIP_A_IMG2BO_CON2*/

typedef volatile union _DIP_X_REG_IMG2BO_CON3_
{
		volatile struct	/* 0x15022284 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_CON3;	/* DIP_X_IMG2BO_CON3, DIP_A_IMG2BO_CON3*/

typedef volatile union _DIP_X_REG_IMG2BO_CROP_
{
		volatile struct	/* 0x15022288 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_CROP;	/* DIP_X_IMG2BO_CROP, DIP_A_IMG2BO_CROP*/

typedef volatile union _DIP_X_REG_IMG3O_BASE_ADDR_
{
		volatile struct	/* 0x15022290 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_BASE_ADDR;	/* DIP_X_IMG3O_BASE_ADDR, DIP_A_IMG3O_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMG3O_OFST_ADDR_
{
		volatile struct	/* 0x15022298 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_OFST_ADDR;	/* DIP_X_IMG3O_OFST_ADDR, DIP_A_IMG3O_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMG3O_XSIZE_
{
		volatile struct	/* 0x150222A0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_XSIZE;	/* DIP_X_IMG3O_XSIZE, DIP_A_IMG3O_XSIZE*/

typedef volatile union _DIP_X_REG_IMG3O_YSIZE_
{
		volatile struct	/* 0x150222A4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_YSIZE;	/* DIP_X_IMG3O_YSIZE, DIP_A_IMG3O_YSIZE*/

typedef volatile union _DIP_X_REG_IMG3O_STRIDE_
{
		volatile struct	/* 0x150222A8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_STRIDE;	/* DIP_X_IMG3O_STRIDE, DIP_A_IMG3O_STRIDE*/

typedef volatile union _DIP_X_REG_IMG3O_CON_
{
		volatile struct	/* 0x150222AC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_CON;	/* DIP_X_IMG3O_CON, DIP_A_IMG3O_CON*/

typedef volatile union _DIP_X_REG_IMG3O_CON2_
{
		volatile struct	/* 0x150222B0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_CON2;	/* DIP_X_IMG3O_CON2, DIP_A_IMG3O_CON2*/

typedef volatile union _DIP_X_REG_IMG3O_CON3_
{
		volatile struct	/* 0x150222B4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_CON3;	/* DIP_X_IMG3O_CON3, DIP_A_IMG3O_CON3*/

typedef volatile union _DIP_X_REG_IMG3O_CROP_
{
		volatile struct	/* 0x150222B8 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_CROP;	/* DIP_X_IMG3O_CROP, DIP_A_IMG3O_CROP*/

typedef volatile union _DIP_X_REG_IMG3BO_BASE_ADDR_
{
		volatile struct	/* 0x150222C0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_BASE_ADDR;	/* DIP_X_IMG3BO_BASE_ADDR, DIP_A_IMG3BO_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMG3BO_OFST_ADDR_
{
		volatile struct	/* 0x150222C8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_OFST_ADDR;	/* DIP_X_IMG3BO_OFST_ADDR, DIP_A_IMG3BO_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMG3BO_XSIZE_
{
		volatile struct	/* 0x150222D0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_XSIZE;	/* DIP_X_IMG3BO_XSIZE, DIP_A_IMG3BO_XSIZE*/

typedef volatile union _DIP_X_REG_IMG3BO_YSIZE_
{
		volatile struct	/* 0x150222D4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_YSIZE;	/* DIP_X_IMG3BO_YSIZE, DIP_A_IMG3BO_YSIZE*/

typedef volatile union _DIP_X_REG_IMG3BO_STRIDE_
{
		volatile struct	/* 0x150222D8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_STRIDE;	/* DIP_X_IMG3BO_STRIDE, DIP_A_IMG3BO_STRIDE*/

typedef volatile union _DIP_X_REG_IMG3BO_CON_
{
		volatile struct	/* 0x150222DC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_CON;	/* DIP_X_IMG3BO_CON, DIP_A_IMG3BO_CON*/

typedef volatile union _DIP_X_REG_IMG3BO_CON2_
{
		volatile struct	/* 0x150222E0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_CON2;	/* DIP_X_IMG3BO_CON2, DIP_A_IMG3BO_CON2*/

typedef volatile union _DIP_X_REG_IMG3BO_CON3_
{
		volatile struct	/* 0x150222E4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_CON3;	/* DIP_X_IMG3BO_CON3, DIP_A_IMG3BO_CON3*/

typedef volatile union _DIP_X_REG_IMG3BO_CROP_
{
		volatile struct	/* 0x150222E8 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_CROP;	/* DIP_X_IMG3BO_CROP, DIP_A_IMG3BO_CROP*/

typedef volatile union _DIP_X_REG_IMG3CO_BASE_ADDR_
{
		volatile struct	/* 0x150222F0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_BASE_ADDR;	/* DIP_X_IMG3CO_BASE_ADDR, DIP_A_IMG3CO_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMG3CO_OFST_ADDR_
{
		volatile struct	/* 0x150222F8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_OFST_ADDR;	/* DIP_X_IMG3CO_OFST_ADDR, DIP_A_IMG3CO_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMG3CO_XSIZE_
{
		volatile struct	/* 0x15022300 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_XSIZE;	/* DIP_X_IMG3CO_XSIZE, DIP_A_IMG3CO_XSIZE*/

typedef volatile union _DIP_X_REG_IMG3CO_YSIZE_
{
		volatile struct	/* 0x15022304 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_YSIZE;	/* DIP_X_IMG3CO_YSIZE, DIP_A_IMG3CO_YSIZE*/

typedef volatile union _DIP_X_REG_IMG3CO_STRIDE_
{
		volatile struct	/* 0x15022308 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_STRIDE;	/* DIP_X_IMG3CO_STRIDE, DIP_A_IMG3CO_STRIDE*/

typedef volatile union _DIP_X_REG_IMG3CO_CON_
{
		volatile struct	/* 0x1502230C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_CON;	/* DIP_X_IMG3CO_CON, DIP_A_IMG3CO_CON*/

typedef volatile union _DIP_X_REG_IMG3CO_CON2_
{
		volatile struct	/* 0x15022310 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_CON2;	/* DIP_X_IMG3CO_CON2, DIP_A_IMG3CO_CON2*/

typedef volatile union _DIP_X_REG_IMG3CO_CON3_
{
		volatile struct	/* 0x15022314 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_CON3;	/* DIP_X_IMG3CO_CON3, DIP_A_IMG3CO_CON3*/

typedef volatile union _DIP_X_REG_IMG3CO_CROP_
{
		volatile struct	/* 0x15022318 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_CROP;	/* DIP_X_IMG3CO_CROP, DIP_A_IMG3CO_CROP*/

typedef volatile union _DIP_X_REG_FEO_BASE_ADDR_
{
		volatile struct	/* 0x15022320 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_BASE_ADDR;	/* DIP_X_FEO_BASE_ADDR, DIP_A_FEO_BASE_ADDR*/

typedef volatile union _DIP_X_REG_FEO_OFST_ADDR_
{
		volatile struct	/* 0x15022328 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_OFST_ADDR;	/* DIP_X_FEO_OFST_ADDR, DIP_A_FEO_OFST_ADDR*/

typedef volatile union _DIP_X_REG_FEO_XSIZE_
{
		volatile struct	/* 0x15022330 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_XSIZE;	/* DIP_X_FEO_XSIZE, DIP_A_FEO_XSIZE*/

typedef volatile union _DIP_X_REG_FEO_YSIZE_
{
		volatile struct	/* 0x15022334 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_YSIZE;	/* DIP_X_FEO_YSIZE, DIP_A_FEO_YSIZE*/

typedef volatile union _DIP_X_REG_FEO_STRIDE_
{
		volatile struct	/* 0x15022338 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_STRIDE;	/* DIP_X_FEO_STRIDE, DIP_A_FEO_STRIDE*/

typedef volatile union _DIP_X_REG_FEO_CON_
{
		volatile struct	/* 0x1502233C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_CON;	/* DIP_X_FEO_CON, DIP_A_FEO_CON*/

typedef volatile union _DIP_X_REG_FEO_CON2_
{
		volatile struct	/* 0x15022340 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_CON2;	/* DIP_X_FEO_CON2, DIP_A_FEO_CON2*/

typedef volatile union _DIP_X_REG_FEO_CON3_
{
		volatile struct	/* 0x15022344 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_CON3;	/* DIP_X_FEO_CON3, DIP_A_FEO_CON3*/

typedef volatile union _DIP_X_REG_MFBO_BASE_ADDR_
{
		volatile struct	/* 0x15022350 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_BASE_ADDR;	/* DIP_X_MFBO_BASE_ADDR, DIP_A_MFBO_BASE_ADDR*/

typedef volatile union _DIP_X_REG_MFBO_OFST_ADDR_
{
		volatile struct	/* 0x15022358 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_OFST_ADDR;	/* DIP_X_MFBO_OFST_ADDR, DIP_A_MFBO_OFST_ADDR*/

typedef volatile union _DIP_X_REG_MFBO_XSIZE_
{
		volatile struct	/* 0x15022360 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_XSIZE;	/* DIP_X_MFBO_XSIZE, DIP_A_MFBO_XSIZE*/

typedef volatile union _DIP_X_REG_MFBO_YSIZE_
{
		volatile struct	/* 0x15022364 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_YSIZE;	/* DIP_X_MFBO_YSIZE, DIP_A_MFBO_YSIZE*/

typedef volatile union _DIP_X_REG_MFBO_STRIDE_
{
		volatile struct	/* 0x15022368 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_STRIDE;	/* DIP_X_MFBO_STRIDE, DIP_A_MFBO_STRIDE*/

typedef volatile union _DIP_X_REG_MFBO_CON_
{
		volatile struct	/* 0x1502236C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_CON;	/* DIP_X_MFBO_CON, DIP_A_MFBO_CON*/

typedef volatile union _DIP_X_REG_MFBO_CON2_
{
		volatile struct	/* 0x15022370 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_CON2;	/* DIP_X_MFBO_CON2, DIP_A_MFBO_CON2*/

typedef volatile union _DIP_X_REG_MFBO_CON3_
{
		volatile struct	/* 0x15022374 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_CON3;	/* DIP_X_MFBO_CON3, DIP_A_MFBO_CON3*/

typedef volatile union _DIP_X_REG_MFBO_CROP_
{
		volatile struct	/* 0x15022378 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_CROP;	/* DIP_X_MFBO_CROP, DIP_A_MFBO_CROP*/

typedef volatile union _DIP_X_REG_IMGI_BASE_ADDR_
{
		volatile struct	/* 0x15022400 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_BASE_ADDR;	/* DIP_X_IMGI_BASE_ADDR, DIP_A_IMGI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMGI_OFST_ADDR_
{
		volatile struct	/* 0x15022408 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_OFST_ADDR;	/* DIP_X_IMGI_OFST_ADDR, DIP_A_IMGI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMGI_XSIZE_
{
		volatile struct	/* 0x15022410 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_XSIZE;	/* DIP_X_IMGI_XSIZE, DIP_A_IMGI_XSIZE*/

typedef volatile union _DIP_X_REG_IMGI_YSIZE_
{
		volatile struct	/* 0x15022414 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_YSIZE;	/* DIP_X_IMGI_YSIZE, DIP_A_IMGI_YSIZE*/

typedef volatile union _DIP_X_REG_IMGI_STRIDE_
{
		volatile struct	/* 0x15022418 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_STRIDE;	/* DIP_X_IMGI_STRIDE, DIP_A_IMGI_STRIDE*/

typedef volatile union _DIP_X_REG_IMGI_CON_
{
		volatile struct	/* 0x1502241C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_CON;	/* DIP_X_IMGI_CON, DIP_A_IMGI_CON*/

typedef volatile union _DIP_X_REG_IMGI_CON2_
{
		volatile struct	/* 0x15022420 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_CON2;	/* DIP_X_IMGI_CON2, DIP_A_IMGI_CON2*/

typedef volatile union _DIP_X_REG_IMGI_CON3_
{
		volatile struct	/* 0x15022424 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_CON3;	/* DIP_X_IMGI_CON3, DIP_A_IMGI_CON3*/

typedef volatile union _DIP_X_REG_IMGBI_BASE_ADDR_
{
		volatile struct	/* 0x15022430 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_BASE_ADDR;	/* DIP_X_IMGBI_BASE_ADDR, DIP_A_IMGBI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMGBI_OFST_ADDR_
{
		volatile struct	/* 0x15022438 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_OFST_ADDR;	/* DIP_X_IMGBI_OFST_ADDR, DIP_A_IMGBI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMGBI_XSIZE_
{
		volatile struct	/* 0x15022440 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_XSIZE;	/* DIP_X_IMGBI_XSIZE, DIP_A_IMGBI_XSIZE*/

typedef volatile union _DIP_X_REG_IMGBI_YSIZE_
{
		volatile struct	/* 0x15022444 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_YSIZE;	/* DIP_X_IMGBI_YSIZE, DIP_A_IMGBI_YSIZE*/

typedef volatile union _DIP_X_REG_IMGBI_STRIDE_
{
		volatile struct	/* 0x15022448 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_STRIDE;	/* DIP_X_IMGBI_STRIDE, DIP_A_IMGBI_STRIDE*/

typedef volatile union _DIP_X_REG_IMGBI_CON_
{
		volatile struct	/* 0x1502244C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_CON;	/* DIP_X_IMGBI_CON, DIP_A_IMGBI_CON*/

typedef volatile union _DIP_X_REG_IMGBI_CON2_
{
		volatile struct	/* 0x15022450 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_CON2;	/* DIP_X_IMGBI_CON2, DIP_A_IMGBI_CON2*/

typedef volatile union _DIP_X_REG_IMGBI_CON3_
{
		volatile struct	/* 0x15022454 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_CON3;	/* DIP_X_IMGBI_CON3, DIP_A_IMGBI_CON3*/

typedef volatile union _DIP_X_REG_IMGCI_BASE_ADDR_
{
		volatile struct	/* 0x15022460 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_BASE_ADDR;	/* DIP_X_IMGCI_BASE_ADDR, DIP_A_IMGCI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_IMGCI_OFST_ADDR_
{
		volatile struct	/* 0x15022468 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_OFST_ADDR;	/* DIP_X_IMGCI_OFST_ADDR, DIP_A_IMGCI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_IMGCI_XSIZE_
{
		volatile struct	/* 0x15022470 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_XSIZE;	/* DIP_X_IMGCI_XSIZE, DIP_A_IMGCI_XSIZE*/

typedef volatile union _DIP_X_REG_IMGCI_YSIZE_
{
		volatile struct	/* 0x15022474 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_YSIZE;	/* DIP_X_IMGCI_YSIZE, DIP_A_IMGCI_YSIZE*/

typedef volatile union _DIP_X_REG_IMGCI_STRIDE_
{
		volatile struct	/* 0x15022478 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_STRIDE;	/* DIP_X_IMGCI_STRIDE, DIP_A_IMGCI_STRIDE*/

typedef volatile union _DIP_X_REG_IMGCI_CON_
{
		volatile struct	/* 0x1502247C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_CON;	/* DIP_X_IMGCI_CON, DIP_A_IMGCI_CON*/

typedef volatile union _DIP_X_REG_IMGCI_CON2_
{
		volatile struct	/* 0x15022480 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_CON2;	/* DIP_X_IMGCI_CON2, DIP_A_IMGCI_CON2*/

typedef volatile union _DIP_X_REG_IMGCI_CON3_
{
		volatile struct	/* 0x15022484 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_CON3;	/* DIP_X_IMGCI_CON3, DIP_A_IMGCI_CON3*/

typedef volatile union _DIP_X_REG_VIPI_BASE_ADDR_
{
		volatile struct	/* 0x15022490 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_BASE_ADDR;	/* DIP_X_VIPI_BASE_ADDR, DIP_A_VIPI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_VIPI_OFST_ADDR_
{
		volatile struct	/* 0x15022498 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_OFST_ADDR;	/* DIP_X_VIPI_OFST_ADDR, DIP_A_VIPI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_VIPI_XSIZE_
{
		volatile struct	/* 0x150224A0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_XSIZE;	/* DIP_X_VIPI_XSIZE, DIP_A_VIPI_XSIZE*/

typedef volatile union _DIP_X_REG_VIPI_YSIZE_
{
		volatile struct	/* 0x150224A4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_YSIZE;	/* DIP_X_VIPI_YSIZE, DIP_A_VIPI_YSIZE*/

typedef volatile union _DIP_X_REG_VIPI_STRIDE_
{
		volatile struct	/* 0x150224A8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_STRIDE;	/* DIP_X_VIPI_STRIDE, DIP_A_VIPI_STRIDE*/

typedef volatile union _DIP_X_REG_VIPI_CON_
{
		volatile struct	/* 0x150224AC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_CON;	/* DIP_X_VIPI_CON, DIP_A_VIPI_CON*/

typedef volatile union _DIP_X_REG_VIPI_CON2_
{
		volatile struct	/* 0x150224B0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_CON2;	/* DIP_X_VIPI_CON2, DIP_A_VIPI_CON2*/

typedef volatile union _DIP_X_REG_VIPI_CON3_
{
		volatile struct	/* 0x150224B4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_CON3;	/* DIP_X_VIPI_CON3, DIP_A_VIPI_CON3*/

typedef volatile union _DIP_X_REG_VIP2I_BASE_ADDR_
{
		volatile struct	/* 0x150224C0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_BASE_ADDR;	/* DIP_X_VIP2I_BASE_ADDR, DIP_A_VIP2I_BASE_ADDR*/

typedef volatile union _DIP_X_REG_VIP2I_OFST_ADDR_
{
		volatile struct	/* 0x150224C8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_OFST_ADDR;	/* DIP_X_VIP2I_OFST_ADDR, DIP_A_VIP2I_OFST_ADDR*/

typedef volatile union _DIP_X_REG_VIP2I_XSIZE_
{
		volatile struct	/* 0x150224D0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_XSIZE;	/* DIP_X_VIP2I_XSIZE, DIP_A_VIP2I_XSIZE*/

typedef volatile union _DIP_X_REG_VIP2I_YSIZE_
{
		volatile struct	/* 0x150224D4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_YSIZE;	/* DIP_X_VIP2I_YSIZE, DIP_A_VIP2I_YSIZE*/

typedef volatile union _DIP_X_REG_VIP2I_STRIDE_
{
		volatile struct	/* 0x150224D8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_STRIDE;	/* DIP_X_VIP2I_STRIDE, DIP_A_VIP2I_STRIDE*/

typedef volatile union _DIP_X_REG_VIP2I_CON_
{
		volatile struct	/* 0x150224DC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_CON;	/* DIP_X_VIP2I_CON, DIP_A_VIP2I_CON*/

typedef volatile union _DIP_X_REG_VIP2I_CON2_
{
		volatile struct	/* 0x150224E0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_CON2;	/* DIP_X_VIP2I_CON2, DIP_A_VIP2I_CON2*/

typedef volatile union _DIP_X_REG_VIP2I_CON3_
{
		volatile struct	/* 0x150224E4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_CON3;	/* DIP_X_VIP2I_CON3, DIP_A_VIP2I_CON3*/

typedef volatile union _DIP_X_REG_VIP3I_BASE_ADDR_
{
		volatile struct	/* 0x150224F0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_BASE_ADDR;	/* DIP_X_VIP3I_BASE_ADDR, DIP_A_VIP3I_BASE_ADDR*/

typedef volatile union _DIP_X_REG_VIP3I_OFST_ADDR_
{
		volatile struct	/* 0x150224F8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_OFST_ADDR;	/* DIP_X_VIP3I_OFST_ADDR, DIP_A_VIP3I_OFST_ADDR*/

typedef volatile union _DIP_X_REG_VIP3I_XSIZE_
{
		volatile struct	/* 0x15022500 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_XSIZE;	/* DIP_X_VIP3I_XSIZE, DIP_A_VIP3I_XSIZE*/

typedef volatile union _DIP_X_REG_VIP3I_YSIZE_
{
		volatile struct	/* 0x15022504 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_YSIZE;	/* DIP_X_VIP3I_YSIZE, DIP_A_VIP3I_YSIZE*/

typedef volatile union _DIP_X_REG_VIP3I_STRIDE_
{
		volatile struct	/* 0x15022508 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_STRIDE;	/* DIP_X_VIP3I_STRIDE, DIP_A_VIP3I_STRIDE*/

typedef volatile union _DIP_X_REG_VIP3I_CON_
{
		volatile struct	/* 0x1502250C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_CON;	/* DIP_X_VIP3I_CON, DIP_A_VIP3I_CON*/

typedef volatile union _DIP_X_REG_VIP3I_CON2_
{
		volatile struct	/* 0x15022510 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_CON2;	/* DIP_X_VIP3I_CON2, DIP_A_VIP3I_CON2*/

typedef volatile union _DIP_X_REG_VIP3I_CON3_
{
		volatile struct	/* 0x15022514 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_CON3;	/* DIP_X_VIP3I_CON3, DIP_A_VIP3I_CON3*/

typedef volatile union _DIP_X_REG_DMGI_BASE_ADDR_
{
		volatile struct	/* 0x15022520 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_BASE_ADDR;	/* DIP_X_DMGI_BASE_ADDR, DIP_A_DMGI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_DMGI_OFST_ADDR_
{
		volatile struct	/* 0x15022528 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_OFST_ADDR;	/* DIP_X_DMGI_OFST_ADDR, DIP_A_DMGI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_DMGI_XSIZE_
{
		volatile struct	/* 0x15022530 */
		{
				FIELD  XSIZE                                 : 20;		/*  0..19, 0x000FFFFF */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_XSIZE;	/* DIP_X_DMGI_XSIZE, DIP_A_DMGI_XSIZE*/

typedef volatile union _DIP_X_REG_DMGI_YSIZE_
{
		volatile struct	/* 0x15022534 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_YSIZE;	/* DIP_X_DMGI_YSIZE, DIP_A_DMGI_YSIZE*/

typedef volatile union _DIP_X_REG_DMGI_STRIDE_
{
		volatile struct	/* 0x15022538 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_STRIDE;	/* DIP_X_DMGI_STRIDE, DIP_A_DMGI_STRIDE*/

typedef volatile union _DIP_X_REG_DMGI_CON_
{
		volatile struct	/* 0x1502253C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_CON;	/* DIP_X_DMGI_CON, DIP_A_DMGI_CON*/

typedef volatile union _DIP_X_REG_DMGI_CON2_
{
		volatile struct	/* 0x15022540 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_CON2;	/* DIP_X_DMGI_CON2, DIP_A_DMGI_CON2*/

typedef volatile union _DIP_X_REG_DMGI_CON3_
{
		volatile struct	/* 0x15022544 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_CON3;	/* DIP_X_DMGI_CON3, DIP_A_DMGI_CON3*/

typedef volatile union _DIP_X_REG_DEPI_BASE_ADDR_
{
		volatile struct	/* 0x15022550 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_BASE_ADDR;	/* DIP_X_DEPI_BASE_ADDR, DIP_A_DEPI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_DEPI_OFST_ADDR_
{
		volatile struct	/* 0x15022558 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_OFST_ADDR;	/* DIP_X_DEPI_OFST_ADDR, DIP_A_DEPI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_DEPI_XSIZE_
{
		volatile struct	/* 0x15022560 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_XSIZE;	/* DIP_X_DEPI_XSIZE, DIP_A_DEPI_XSIZE*/

typedef volatile union _DIP_X_REG_DEPI_YSIZE_
{
		volatile struct	/* 0x15022564 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_YSIZE;	/* DIP_X_DEPI_YSIZE, DIP_A_DEPI_YSIZE*/

typedef volatile union _DIP_X_REG_DEPI_STRIDE_
{
		volatile struct	/* 0x15022568 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_STRIDE;	/* DIP_X_DEPI_STRIDE, DIP_A_DEPI_STRIDE*/

typedef volatile union _DIP_X_REG_DEPI_CON_
{
		volatile struct	/* 0x1502256C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_CON;	/* DIP_X_DEPI_CON, DIP_A_DEPI_CON*/

typedef volatile union _DIP_X_REG_DEPI_CON2_
{
		volatile struct	/* 0x15022570 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_CON2;	/* DIP_X_DEPI_CON2, DIP_A_DEPI_CON2*/

typedef volatile union _DIP_X_REG_DEPI_CON3_
{
		volatile struct	/* 0x15022574 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_CON3;	/* DIP_X_DEPI_CON3, DIP_A_DEPI_CON3*/

typedef volatile union _DIP_X_REG_LCEI_BASE_ADDR_
{
		volatile struct	/* 0x15022580 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_BASE_ADDR;	/* DIP_X_LCEI_BASE_ADDR, DIP_A_LCEI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_LCEI_OFST_ADDR_
{
		volatile struct	/* 0x15022588 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_OFST_ADDR;	/* DIP_X_LCEI_OFST_ADDR, DIP_A_LCEI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_LCEI_XSIZE_
{
		volatile struct	/* 0x15022590 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_XSIZE;	/* DIP_X_LCEI_XSIZE, DIP_A_LCEI_XSIZE*/

typedef volatile union _DIP_X_REG_LCEI_YSIZE_
{
		volatile struct	/* 0x15022594 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_YSIZE;	/* DIP_X_LCEI_YSIZE, DIP_A_LCEI_YSIZE*/

typedef volatile union _DIP_X_REG_LCEI_STRIDE_
{
		volatile struct	/* 0x15022598 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_STRIDE;	/* DIP_X_LCEI_STRIDE, DIP_A_LCEI_STRIDE*/

typedef volatile union _DIP_X_REG_LCEI_CON_
{
		volatile struct	/* 0x1502259C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_CON;	/* DIP_X_LCEI_CON, DIP_A_LCEI_CON*/

typedef volatile union _DIP_X_REG_LCEI_CON2_
{
		volatile struct	/* 0x150225A0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_CON2;	/* DIP_X_LCEI_CON2, DIP_A_LCEI_CON2*/

typedef volatile union _DIP_X_REG_LCEI_CON3_
{
		volatile struct	/* 0x150225A4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_CON3;	/* DIP_X_LCEI_CON3, DIP_A_LCEI_CON3*/

typedef volatile union _DIP_X_REG_UFDI_BASE_ADDR_
{
		volatile struct	/* 0x150225B0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_BASE_ADDR;	/* DIP_X_UFDI_BASE_ADDR, DIP_A_UFDI_BASE_ADDR*/

typedef volatile union _DIP_X_REG_UFDI_OFST_ADDR_
{
		volatile struct	/* 0x150225B8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_OFST_ADDR;	/* DIP_X_UFDI_OFST_ADDR, DIP_A_UFDI_OFST_ADDR*/

typedef volatile union _DIP_X_REG_UFDI_XSIZE_
{
		volatile struct	/* 0x150225C0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_XSIZE;	/* DIP_X_UFDI_XSIZE, DIP_A_UFDI_XSIZE*/

typedef volatile union _DIP_X_REG_UFDI_YSIZE_
{
		volatile struct	/* 0x150225C4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_YSIZE;	/* DIP_X_UFDI_YSIZE, DIP_A_UFDI_YSIZE*/

typedef volatile union _DIP_X_REG_UFDI_STRIDE_
{
		volatile struct	/* 0x150225C8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_STRIDE;	/* DIP_X_UFDI_STRIDE, DIP_A_UFDI_STRIDE*/

typedef volatile union _DIP_X_REG_UFDI_CON_
{
		volatile struct	/* 0x150225CC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_CON;	/* DIP_X_UFDI_CON, DIP_A_UFDI_CON*/

typedef volatile union _DIP_X_REG_UFDI_CON2_
{
		volatile struct	/* 0x150225D0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_CON2;	/* DIP_X_UFDI_CON2, DIP_A_UFDI_CON2*/

typedef volatile union _DIP_X_REG_UFDI_CON3_
{
		volatile struct	/* 0x150225D4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_CON3;	/* DIP_X_UFDI_CON3, DIP_A_UFDI_CON3*/

typedef volatile union _DIP_X_REG_DMA_ERR_CTRL_
{
		volatile struct	/* 0x15022640 */
		{
				FIELD  IMG2O_ERR                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMG2BO_ERR                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  IMG3O_ERR                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  IMG3BO_ERR                            :  1;		/*  3.. 3, 0x00000008 */
				FIELD  IMG3CO_ERR                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FEO_ERR                               :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MFBO_ERR                              :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  IMGI_ERR                              :  1;		/* 16..16, 0x00010000 */
				FIELD  IMGBI_ERR                             :  1;		/* 17..17, 0x00020000 */
				FIELD  IMGCI_ERR                             :  1;		/* 18..18, 0x00040000 */
				FIELD  VIPI_ERR                              :  1;		/* 19..19, 0x00080000 */
				FIELD  VIP2I_ERR                             :  1;		/* 20..20, 0x00100000 */
				FIELD  VIP3I_ERR                             :  1;		/* 21..21, 0x00200000 */
				FIELD  DMGI_ERR                              :  1;		/* 22..22, 0x00400000 */
				FIELD  DEPI_ERR                              :  1;		/* 23..23, 0x00800000 */
				FIELD  LCEI_ERR                              :  1;		/* 24..24, 0x01000000 */
				FIELD  UFDI_ERR                              :  1;		/* 25..25, 0x02000000 */
				FIELD  rsv_26                                :  5;		/* 26..30, 0x7C000000 */
				FIELD  ERR_CLR_MD                            :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_ERR_CTRL;	/* DIP_X_DMA_ERR_CTRL, DIP_A_DMA_ERR_CTRL*/

typedef volatile union _DIP_X_REG_IMG2O_ERR_STAT_
{
		volatile struct	/* 0x15022644 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2O_ERR_STAT;	/* DIP_X_IMG2O_ERR_STAT, DIP_A_IMG2O_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMG2BO_ERR_STAT_
{
		volatile struct	/* 0x15022648 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG2BO_ERR_STAT;	/* DIP_X_IMG2BO_ERR_STAT, DIP_A_IMG2BO_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMG3O_ERR_STAT_
{
		volatile struct	/* 0x1502264C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3O_ERR_STAT;	/* DIP_X_IMG3O_ERR_STAT, DIP_A_IMG3O_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMG3BO_ERR_STAT_
{
		volatile struct	/* 0x15022650 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3BO_ERR_STAT;	/* DIP_X_IMG3BO_ERR_STAT, DIP_A_IMG3BO_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMG3CO_ERR_STAT_
{
		volatile struct	/* 0x15022654 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMG3CO_ERR_STAT;	/* DIP_X_IMG3CO_ERR_STAT, DIP_A_IMG3CO_ERR_STAT*/

typedef volatile union _DIP_X_REG_FEO_ERR_STAT_
{
		volatile struct	/* 0x15022658 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FEO_ERR_STAT;	/* DIP_X_FEO_ERR_STAT, DIP_A_FEO_ERR_STAT*/

typedef volatile union _DIP_X_REG_MFBO_ERR_STAT_
{
		volatile struct	/* 0x1502265C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFBO_ERR_STAT;	/* DIP_X_MFBO_ERR_STAT, DIP_A_MFBO_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMGI_ERR_STAT_
{
		volatile struct	/* 0x15022660 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGI_ERR_STAT;	/* DIP_X_IMGI_ERR_STAT, DIP_A_IMGI_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMGBI_ERR_STAT_
{
		volatile struct	/* 0x15022664 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGBI_ERR_STAT;	/* DIP_X_IMGBI_ERR_STAT, DIP_A_IMGBI_ERR_STAT*/

typedef volatile union _DIP_X_REG_IMGCI_ERR_STAT_
{
		volatile struct	/* 0x15022668 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_IMGCI_ERR_STAT;	/* DIP_X_IMGCI_ERR_STAT, DIP_A_IMGCI_ERR_STAT*/

typedef volatile union _DIP_X_REG_VIPI_ERR_STAT_
{
		volatile struct	/* 0x1502266C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIPI_ERR_STAT;	/* DIP_X_VIPI_ERR_STAT, DIP_A_VIPI_ERR_STAT*/

typedef volatile union _DIP_X_REG_VIP2I_ERR_STAT_
{
		volatile struct	/* 0x15022670 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP2I_ERR_STAT;	/* DIP_X_VIP2I_ERR_STAT, DIP_A_VIP2I_ERR_STAT*/

typedef volatile union _DIP_X_REG_VIP3I_ERR_STAT_
{
		volatile struct	/* 0x15022674 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_VIP3I_ERR_STAT;	/* DIP_X_VIP3I_ERR_STAT, DIP_A_VIP3I_ERR_STAT*/

typedef volatile union _DIP_X_REG_DMGI_ERR_STAT_
{
		volatile struct	/* 0x15022678 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMGI_ERR_STAT;	/* DIP_X_DMGI_ERR_STAT, DIP_A_DMGI_ERR_STAT*/

typedef volatile union _DIP_X_REG_DEPI_ERR_STAT_
{
		volatile struct	/* 0x1502267C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DEPI_ERR_STAT;	/* DIP_X_DEPI_ERR_STAT, DIP_A_DEPI_ERR_STAT*/

typedef volatile union _DIP_X_REG_LCEI_ERR_STAT_
{
		volatile struct	/* 0x15022680 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCEI_ERR_STAT;	/* DIP_X_LCEI_ERR_STAT, DIP_A_LCEI_ERR_STAT*/

typedef volatile union _DIP_X_REG_UFDI_ERR_STAT_
{
		volatile struct	/* 0x15022684 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFDI_ERR_STAT;	/* DIP_X_UFDI_ERR_STAT, DIP_A_UFDI_ERR_STAT*/

typedef volatile union _DIP_X_REG_DMA_DEBUG_ADDR_
{
		volatile struct	/* 0x150226A0 */
		{
				FIELD  DEBUG_ADDR                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_DEBUG_ADDR;	/* DIP_X_DMA_DEBUG_ADDR, DIP_A_DMA_DEBUG_ADDR*/

typedef volatile union _DIP_X_REG_DMA_RSV1_
{
		volatile struct	/* 0x150226A4 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_RSV1;	/* DIP_X_DMA_RSV1, DIP_A_DMA_RSV1*/

typedef volatile union _DIP_X_REG_DMA_RSV2_
{
		volatile struct	/* 0x150226A8 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_RSV2;	/* DIP_X_DMA_RSV2, DIP_A_DMA_RSV2*/

typedef volatile union _DIP_X_REG_DMA_RSV3_
{
		volatile struct	/* 0x150226AC */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_RSV3;	/* DIP_X_DMA_RSV3, DIP_A_DMA_RSV3*/

typedef volatile union _DIP_X_REG_DMA_RSV4_
{
		volatile struct	/* 0x150226B0 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_RSV4;	/* DIP_X_DMA_RSV4, DIP_A_DMA_RSV4*/

typedef volatile union _DIP_X_REG_DMA_RSV5_
{
		volatile struct	/* 0x150226B4 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_RSV5;	/* DIP_X_DMA_RSV5, DIP_A_DMA_RSV5*/

typedef volatile union _DIP_X_REG_DMA_RSV6_
{
		volatile struct	/* 0x150226B8 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_RSV6;	/* DIP_X_DMA_RSV6, DIP_A_DMA_RSV6*/

typedef volatile union _DIP_X_REG_DMA_DEBUG_SEL_
{
		volatile struct	/* 0x150226BC */
		{
				FIELD  DMA_TOP_SEL                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  R_W_DMA_TOP_SEL                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SUB_MODULE_SEL                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  2;		/* 24..25, 0x03000000 */
				FIELD  IMGI_ADDR_GEN_WAIT                    :  1;		/* 26..26, 0x04000000 */
				FIELD  IMGI_UFD_FIFO_FULL_OFFSET             :  1;		/* 27..27, 0x08000000 */
				FIELD  IMGI_UFD_FIFO_FULL_XSIZE              :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  1;		/* 29..29, 0x20000000 */
				FIELD  ARBITER_BVALID_FULL                   :  1;		/* 30..30, 0x40000000 */
				FIELD  ARBITER_COM_FULL                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_DEBUG_SEL;	/* DIP_X_DMA_DEBUG_SEL, DIP_A_DMA_DEBUG_SEL*/

typedef volatile union _DIP_X_REG_DMA_BW_SELF_TEST_
{
		volatile struct	/* 0x150226C0 */
		{
				FIELD  BW_SELF_TEST_EN_IMG2O                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  BW_SELF_TEST_EN_IMG2BO                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  BW_SELF_TEST_EN_IMG3O                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  BW_SELF_TEST_EN_IMG3BO                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  BW_SELF_TEST_EN_IMG3CO                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  BW_SELF_TEST_EN_FEO                   :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BW_SELF_TEST_EN_MFBO                  :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DMA_BW_SELF_TEST;	/* DIP_X_DMA_BW_SELF_TEST, DIP_A_DMA_BW_SELF_TEST*/

typedef volatile union _DIP_X_REG_UFD_CON_
{
		volatile struct	/* 0x15022700 */
		{
				FIELD  UFD_TCCT_BYP                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFD_CON;	/* DIP_X_UFD_CON, DIP_A_UFD_CON*/

typedef volatile union _DIP_X_REG_UFD_SIZE_CON_
{
		volatile struct	/* 0x15022704 */
		{
				FIELD  UFD_WD                                : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  UFD_HT                                : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFD_SIZE_CON;	/* DIP_X_UFD_SIZE_CON, DIP_A_UFD_SIZE_CON*/

typedef volatile union _DIP_X_REG_UFD_AU_CON_
{
		volatile struct	/* 0x15022708 */
		{
				FIELD  UFD_AU_OFST                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UFD_AU_SIZE                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFD_AU_CON;	/* DIP_X_UFD_AU_CON, DIP_A_UFD_AU_CON*/

typedef volatile union _DIP_X_REG_UFD_CROP_CON1_
{
		volatile struct	/* 0x1502270C */
		{
				FIELD  UFD_X_START                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  UFD_X_END                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFD_CROP_CON1;	/* DIP_X_UFD_CROP_CON1, DIP_A_UFD_CROP_CON1*/

typedef volatile union _DIP_X_REG_UFD_CROP_CON2_
{
		volatile struct	/* 0x15022710 */
		{
				FIELD  UFD_Y_START                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  UFD_Y_END                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UFD_CROP_CON2;	/* DIP_X_UFD_CROP_CON2, DIP_A_UFD_CROP_CON2*/

typedef volatile union _DIP_X_REG_PGN_SATU_1_
{
		volatile struct	/* 0x15022720 */
		{
				FIELD  PGN_SATU_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PGN_SATU_GB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PGN_SATU_1;	/* DIP_X_PGN_SATU_1, DIP_A_PGN_SATU_1*/

typedef volatile union _DIP_X_REG_PGN_SATU_2_
{
		volatile struct	/* 0x15022724 */
		{
				FIELD  PGN_SATU_GR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PGN_SATU_R                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PGN_SATU_2;	/* DIP_X_PGN_SATU_2, DIP_A_PGN_SATU_2*/

typedef volatile union _DIP_X_REG_PGN_GAIN_1_
{
		volatile struct	/* 0x15022728 */
		{
				FIELD  PGN_GAIN_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  PGN_GAIN_GB                           : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PGN_GAIN_1;	/* DIP_X_PGN_GAIN_1, DIP_A_PGN_GAIN_1*/

typedef volatile union _DIP_X_REG_PGN_GAIN_2_
{
		volatile struct	/* 0x1502272C */
		{
				FIELD  PGN_GAIN_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  PGN_GAIN_R                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PGN_GAIN_2;	/* DIP_X_PGN_GAIN_2, DIP_A_PGN_GAIN_2*/

typedef volatile union _DIP_X_REG_PGN_OFST_1_
{
		volatile struct	/* 0x15022730 */
		{
				FIELD  PGN_OFST_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PGN_OFST_GB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PGN_OFST_1;	/* DIP_X_PGN_OFST_1, DIP_A_PGN_OFST_1*/

typedef volatile union _DIP_X_REG_PGN_OFST_2_
{
		volatile struct	/* 0x15022734 */
		{
				FIELD  PGN_OFST_GR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PGN_OFST_R                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PGN_OFST_2;	/* DIP_X_PGN_OFST_2, DIP_A_PGN_OFST_2*/

typedef volatile union _DIP_X_REG_SL2_CEN_
{
		volatile struct	/* 0x15022740 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_CEN;	/* DIP_X_SL2_CEN, DIP_A_SL2_CEN*/

typedef volatile union _DIP_X_REG_SL2_RR_CON0_
{
		volatile struct	/* 0x15022744 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_RR_CON0;	/* DIP_X_SL2_RR_CON0, DIP_A_SL2_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2_RR_CON1_
{
		volatile struct	/* 0x15022748 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_RR_CON1;	/* DIP_X_SL2_RR_CON1, DIP_A_SL2_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2_GAIN_
{
		volatile struct	/* 0x1502274C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_GAIN;	/* DIP_X_SL2_GAIN, DIP_A_SL2_GAIN*/

typedef volatile union _DIP_X_REG_SL2_RZ_
{
		volatile struct	/* 0x15022750 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_RZ;	/* DIP_X_SL2_RZ, DIP_A_SL2_RZ*/

typedef volatile union _DIP_X_REG_SL2_XOFF_
{
		volatile struct	/* 0x15022754 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_XOFF;	/* DIP_X_SL2_XOFF, DIP_A_SL2_XOFF*/

typedef volatile union _DIP_X_REG_SL2_YOFF_
{
		volatile struct	/* 0x15022758 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_YOFF;	/* DIP_X_SL2_YOFF, DIP_A_SL2_YOFF*/

typedef volatile union _DIP_X_REG_SL2_SLP_CON0_
{
		volatile struct	/* 0x1502275C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_SLP_CON0;	/* DIP_X_SL2_SLP_CON0, DIP_A_SL2_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2_SLP_CON1_
{
		volatile struct	/* 0x15022760 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_SLP_CON1;	/* DIP_X_SL2_SLP_CON1, DIP_A_SL2_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2_SIZE_
{
		volatile struct	/* 0x15022764 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2_SIZE;	/* DIP_X_SL2_SIZE, DIP_A_SL2_SIZE*/

typedef volatile union _DIP_X_REG_UDM_INTP_CRS_
{
		volatile struct	/* 0x15022780 */
		{
				FIELD  UDM_DTH                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_FTH                               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UDM_ETH                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  UDM_GRAD_WT                           :  6;		/* 24..29, 0x3F000000 */
				FIELD  UDM_BYP                               :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_INTP_CRS;	/* DIP_X_UDM_INTP_CRS, DIP_A_UDM_INTP_CRS*/

typedef volatile union _DIP_X_REG_UDM_INTP_NAT_
{
		volatile struct	/* 0x15022784 */
		{
				FIELD  UDM_HL_OFST                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_L0_SL                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  UDM_L0_OFST                           :  8;		/* 12..19, 0x000FF000 */
				FIELD  UDM_CD_SLL                            :  5;		/* 20..24, 0x01F00000 */
				FIELD  UDM_CD_SLC                            :  5;		/* 25..29, 0x3E000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_INTP_NAT;	/* DIP_X_UDM_INTP_NAT, DIP_A_UDM_INTP_NAT*/

typedef volatile union _DIP_X_REG_UDM_INTP_AUG_
{
		volatile struct	/* 0x15022788 */
		{
				FIELD  UDM_DN_OFST                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_L2_SL                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  UDM_L2_OFST                           :  8;		/* 12..19, 0x000FF000 */
				FIELD  UDM_L1_SL                             :  4;		/* 20..23, 0x00F00000 */
				FIELD  UDM_L1_OFST                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_INTP_AUG;	/* DIP_X_UDM_INTP_AUG, DIP_A_UDM_INTP_AUG*/

typedef volatile union _DIP_X_REG_UDM_LUMA_LUT1_
{
		volatile struct	/* 0x1502278C */
		{
				FIELD  UDM_LM_Y2                             :  9;		/*  0.. 8, 0x000001FF */
				FIELD  UDM_LM_Y1                             :  9;		/*  9..17, 0x0003FE00 */
				FIELD  UDM_LM_Y0                             :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_LUMA_LUT1;	/* DIP_X_UDM_LUMA_LUT1, DIP_A_UDM_LUMA_LUT1*/

typedef volatile union _DIP_X_REG_UDM_LUMA_LUT2_
{
		volatile struct	/* 0x15022790 */
		{
				FIELD  UDM_LM_Y5                             :  9;		/*  0.. 8, 0x000001FF */
				FIELD  UDM_LM_Y4                             :  9;		/*  9..17, 0x0003FE00 */
				FIELD  UDM_LM_Y3                             :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_LUMA_LUT2;	/* DIP_X_UDM_LUMA_LUT2, DIP_A_UDM_LUMA_LUT2*/

typedef volatile union _DIP_X_REG_UDM_SL_CTL_
{
		volatile struct	/* 0x15022794 */
		{
				FIELD  UDM_SL_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UDM_SL_HR                             :  5;		/*  1.. 5, 0x0000003E */
				FIELD  UDM_SL_Y2                             :  8;		/*  6..13, 0x00003FC0 */
				FIELD  UDM_SL_Y1                             :  8;		/* 14..21, 0x003FC000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_SL_CTL;	/* DIP_X_UDM_SL_CTL, DIP_A_UDM_SL_CTL*/

typedef volatile union _DIP_X_REG_UDM_HFTD_CTL_
{
		volatile struct	/* 0x15022798 */
		{
				FIELD  UDM_CORE_TH1                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_HD_GN2                            :  5;		/*  8..12, 0x00001F00 */
				FIELD  UDM_HD_GN1                            :  5;		/* 13..17, 0x0003E000 */
				FIELD  UDM_HT_GN2                            :  5;		/* 18..22, 0x007C0000 */
				FIELD  UDM_HT_GN1                            :  5;		/* 23..27, 0x0F800000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_HFTD_CTL;	/* DIP_X_UDM_HFTD_CTL, DIP_A_UDM_HFTD_CTL*/

typedef volatile union _DIP_X_REG_UDM_NR_STR_
{
		volatile struct	/* 0x1502279C */
		{
				FIELD  UDM_N2_STR                            :  5;		/*  0.. 4, 0x0000001F */
				FIELD  UDM_N1_STR                            :  5;		/*  5.. 9, 0x000003E0 */
				FIELD  UDM_N0_STR                            :  5;		/* 10..14, 0x00007C00 */
				FIELD  UDM_XTK_SL                            :  4;		/* 15..18, 0x00078000 */
				FIELD  UDM_XTK_OFST                          :  8;		/* 19..26, 0x07F80000 */
				FIELD  UDM_XTK_RAT                           :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_NR_STR;	/* DIP_X_UDM_NR_STR, DIP_A_UDM_NR_STR*/

typedef volatile union _DIP_X_REG_UDM_NR_ACT_
{
		volatile struct	/* 0x150227A0 */
		{
				FIELD  UDM_NGR                               :  4;		/*  0.. 3, 0x0000000F */
				FIELD  UDM_NSL                               :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  UDM_N2_OFST                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UDM_N1_OFST                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  UDM_N0_OFST                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_NR_ACT;	/* DIP_X_UDM_NR_ACT, DIP_A_UDM_NR_ACT*/

typedef volatile union _DIP_X_REG_UDM_HF_STR_
{
		volatile struct	/* 0x150227A4 */
		{
				FIELD  UDM_CORE_TH2                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_HI_RAT                            :  4;		/*  8..11, 0x00000F00 */
				FIELD  UDM_H3_GN                             :  5;		/* 12..16, 0x0001F000 */
				FIELD  UDM_H2_GN                             :  5;		/* 17..21, 0x003E0000 */
				FIELD  UDM_H1_GN                             :  5;		/* 22..26, 0x07C00000 */
				FIELD  UDM_HA_STR                            :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_HF_STR;	/* DIP_X_UDM_HF_STR, DIP_A_UDM_HF_STR*/

typedef volatile union _DIP_X_REG_UDM_HF_ACT1_
{
		volatile struct	/* 0x150227A8 */
		{
				FIELD  UDM_H2_UPB                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_H2_LWB                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UDM_H1_UPB                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  UDM_H1_LWB                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_HF_ACT1;	/* DIP_X_UDM_HF_ACT1, DIP_A_UDM_HF_ACT1*/

typedef volatile union _DIP_X_REG_UDM_HF_ACT2_
{
		volatile struct	/* 0x150227AC */
		{
				FIELD  UDM_HSLL                              :  4;		/*  0.. 3, 0x0000000F */
				FIELD  UDM_HSLR                              :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  UDM_H3_UPB                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UDM_H3_LWB                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_HF_ACT2;	/* DIP_X_UDM_HF_ACT2, DIP_A_UDM_HF_ACT2*/

typedef volatile union _DIP_X_REG_UDM_CLIP_
{
		volatile struct	/* 0x150227B0 */
		{
				FIELD  UDM_CLIP_TH                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  UDM_UN_TH                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UDM_OV_TH                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_CLIP;	/* DIP_X_UDM_CLIP, DIP_A_UDM_CLIP*/

typedef volatile union _DIP_X_REG_UDM_DSB_
{
		volatile struct	/* 0x150227B4 */
		{
				FIELD  UDM_SC_RAT                            :  5;		/*  0.. 4, 0x0000001F */
				FIELD  UDM_SL_RAT                            :  5;		/*  5.. 9, 0x000003E0 */
				FIELD  UDM_FL_MODE                           :  1;		/* 10..10, 0x00000400 */
				FIELD  UDM_DS_SLB                            :  4;		/* 11..14, 0x00007800 */
				FIELD  UDM_DS_THB                            :  8;		/* 15..22, 0x007F8000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_DSB;	/* DIP_X_UDM_DSB, DIP_A_UDM_DSB*/

typedef volatile union _DIP_X_REG_UDM_TILE_EDGE_
{
		volatile struct	/* 0x150227B8 */
		{
				FIELD  UDM_TILE_EDGE                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_TILE_EDGE;	/* DIP_X_UDM_TILE_EDGE, DIP_A_UDM_TILE_EDGE*/

typedef volatile union _DIP_X_REG_UDM_DSL_
{
		volatile struct	/* 0x150227BC */
		{
				FIELD  UDM_DS_SLL                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  UDM_DS_SLC                            :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  UDM_DS_THL                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  UDM_DS_THC                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_DSL;	/* DIP_X_UDM_DSL, DIP_A_UDM_DSL*/

typedef volatile union _DIP_X_REG_UDM_LR_RAT_
{
		volatile struct	/* 0x150227C0 */
		{
				FIELD  UDM_LR_RAT                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_LR_RAT;	/* DIP_X_UDM_LR_RAT, DIP_A_UDM_LR_RAT*/

typedef volatile union _DIP_X_REG_UDM_SPARE_2_
{
		volatile struct	/* 0x150227C4 */
		{
				FIELD  UDM_SPARE_2                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_SPARE_2;	/* DIP_X_UDM_SPARE_2, DIP_A_UDM_SPARE_2*/

typedef volatile union _DIP_X_REG_UDM_SPARE_3_
{
		volatile struct	/* 0x150227C8 */
		{
				FIELD  UDM_SPARE_3                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UDM_SPARE_3;	/* DIP_X_UDM_SPARE_3, DIP_A_UDM_SPARE_3*/

typedef volatile union _DIP_X_REG_G2G_CNV_1_
{
		volatile struct	/* 0x150227F0 */
		{
				FIELD  G2G_CNV_00                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  G2G_CNV_01                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CNV_1;	/* DIP_X_G2G_CNV_1, DIP_A_G2G_CNV_1*/

typedef volatile union _DIP_X_REG_G2G_CNV_2_
{
		volatile struct	/* 0x150227F4 */
		{
				FIELD  G2G_CNV_02                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CNV_2;	/* DIP_X_G2G_CNV_2, DIP_A_G2G_CNV_2*/

typedef volatile union _DIP_X_REG_G2G_CNV_3_
{
		volatile struct	/* 0x150227F8 */
		{
				FIELD  G2G_CNV_10                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  G2G_CNV_11                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CNV_3;	/* DIP_X_G2G_CNV_3, DIP_A_G2G_CNV_3*/

typedef volatile union _DIP_X_REG_G2G_CNV_4_
{
		volatile struct	/* 0x150227FC */
		{
				FIELD  G2G_CNV_12                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CNV_4;	/* DIP_X_G2G_CNV_4, DIP_A_G2G_CNV_4*/

typedef volatile union _DIP_X_REG_G2G_CNV_5_
{
		volatile struct	/* 0x15022800 */
		{
				FIELD  G2G_CNV_20                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  G2G_CNV_21                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CNV_5;	/* DIP_X_G2G_CNV_5, DIP_A_G2G_CNV_5*/

typedef volatile union _DIP_X_REG_G2G_CNV_6_
{
		volatile struct	/* 0x15022804 */
		{
				FIELD  G2G_CNV_22                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CNV_6;	/* DIP_X_G2G_CNV_6, DIP_A_G2G_CNV_6*/

typedef volatile union _DIP_X_REG_G2G_CTRL_
{
		volatile struct	/* 0x15022808 */
		{
				FIELD  G2G_ACC                               :  4;		/*  0.. 3, 0x0000000F */
				FIELD  G2G_CFC_EN                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  G2G_L                                 : 12;		/*  5..16, 0x0001FFE0 */
				FIELD  G2G_H                                 : 12;		/* 17..28, 0x1FFE0000 */
				FIELD  G2G_MOFST_R                           :  1;		/* 29..29, 0x20000000 */
				FIELD  G2G_POFST_R                           :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CTRL;	/* DIP_X_G2G_CTRL, DIP_A_G2G_CTRL*/

typedef volatile union _DIP_X_REG_G2G_CFC_
{
		volatile struct	/* 0x1502280C */
		{
				FIELD  G2G_LB                                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  G2G_HB                                :  5;		/*  5.. 9, 0x000003E0 */
				FIELD  G2G_LG                                :  5;		/* 10..14, 0x00007C00 */
				FIELD  G2G_HG                                :  5;		/* 15..19, 0x000F8000 */
				FIELD  G2G_LR                                :  5;		/* 20..24, 0x01F00000 */
				FIELD  G2G_HR                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2G_CFC;	/* DIP_X_G2G_CFC, DIP_A_G2G_CFC*/

typedef volatile union _DIP_X_REG_MFB_CON_
{
		volatile struct	/* 0x15022810 */
		{
				FIELD  BLD_MODE                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  BLD_LL_BRZ_EN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  BLD_LL_DB_EN                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BLD_MBD_WT_EN                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BLD_SR_WT_EN                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  BLD_LL_TH_E                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_CON;	/* DIP_X_MFB_CON, DIP_A_MFB_CON*/

typedef volatile union _DIP_X_REG_MFB_LL_CON1_
{
		volatile struct	/* 0x15022814 */
		{
				FIELD  BLD_LL_FLT_MODE                       :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  BLD_LL_FLT_WT_MODE1                   :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  BLD_LL_FLT_WT_MODE2                   :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  BLD_LL_CLIP_TH1                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  BLD_LL_CLIP_TH2                       :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON1;	/* DIP_X_MFB_LL_CON1, DIP_A_MFB_LL_CON1*/

typedef volatile union _DIP_X_REG_MFB_LL_CON2_
{
		volatile struct	/* 0x15022818 */
		{
				FIELD  BLD_LL_MAX_WT                         :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  BLD_LL_DT1                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BLD_LL_TH1                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  BLD_LL_TH2                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON2;	/* DIP_X_MFB_LL_CON2, DIP_A_MFB_LL_CON2*/

typedef volatile union _DIP_X_REG_MFB_LL_CON3_
{
		volatile struct	/* 0x1502281C */
		{
				FIELD  BLD_LL_OUT_XSIZE                      : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  BLD_LL_OUT_XOFST                      :  1;		/* 15..15, 0x00008000 */
				FIELD  BLD_LL_OUT_YSIZE                      : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON3;	/* DIP_X_MFB_LL_CON3, DIP_A_MFB_LL_CON3*/

typedef volatile union _DIP_X_REG_MFB_LL_CON4_
{
		volatile struct	/* 0x15022820 */
		{
				FIELD  BLD_LL_DB_XDIST                       :  4;		/*  0.. 3, 0x0000000F */
				FIELD  BLD_LL_DB_YDIST                       :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON4;	/* DIP_X_MFB_LL_CON4, DIP_A_MFB_LL_CON4*/

typedef volatile union _DIP_X_REG_MFB_EDGE_
{
		volatile struct	/* 0x15022824 */
		{
				FIELD  BLD_TILE_EDGE                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_EDGE;	/* DIP_X_MFB_EDGE, DIP_A_MFB_EDGE*/

typedef volatile union _DIP_X_REG_G2C_CONV_0A_
{
		volatile struct	/* 0x15022840 */
		{
				FIELD  G2C_CNV_00                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  G2C_CNV_01                            : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CONV_0A;	/* DIP_X_G2C_CONV_0A, DIP_A_G2C_CONV_0A*/

typedef volatile union _DIP_X_REG_G2C_CONV_0B_
{
		volatile struct	/* 0x15022844 */
		{
				FIELD  G2C_CNV_02                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  G2C_Y_OFST                            : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CONV_0B;	/* DIP_X_G2C_CONV_0B, DIP_A_G2C_CONV_0B*/

typedef volatile union _DIP_X_REG_G2C_CONV_1A_
{
		volatile struct	/* 0x15022848 */
		{
				FIELD  G2C_CNV_10                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  G2C_CNV_11                            : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CONV_1A;	/* DIP_X_G2C_CONV_1A, DIP_A_G2C_CONV_1A*/

typedef volatile union _DIP_X_REG_G2C_CONV_1B_
{
		volatile struct	/* 0x1502284C */
		{
				FIELD  G2C_CNV_12                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  G2C_U_OFST                            : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CONV_1B;	/* DIP_X_G2C_CONV_1B, DIP_A_G2C_CONV_1B*/

typedef volatile union _DIP_X_REG_G2C_CONV_2A_
{
		volatile struct	/* 0x15022850 */
		{
				FIELD  G2C_CNV_20                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  G2C_CNV_21                            : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CONV_2A;	/* DIP_X_G2C_CONV_2A, DIP_A_G2C_CONV_2A*/

typedef volatile union _DIP_X_REG_G2C_CONV_2B_
{
		volatile struct	/* 0x15022854 */
		{
				FIELD  G2C_CNV_22                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  G2C_V_OFST                            : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CONV_2B;	/* DIP_X_G2C_CONV_2B, DIP_A_G2C_CONV_2B*/

typedef volatile union _DIP_X_REG_G2C_SHADE_CON_1_
{
		volatile struct	/* 0x15022858 */
		{
				FIELD  G2C_SHADE_VAR                         : 18;		/*  0..17, 0x0003FFFF */
				FIELD  G2C_SHADE_P0                          : 11;		/* 18..28, 0x1FFC0000 */
				FIELD  G2C_SHADE_EN                          :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_SHADE_CON_1;	/* DIP_X_G2C_SHADE_CON_1, DIP_A_G2C_SHADE_CON_1*/

typedef volatile union _DIP_X_REG_G2C_SHADE_CON_2_
{
		volatile struct	/* 0x1502285C */
		{
				FIELD  G2C_SHADE_P1                          : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  G2C_SHADE_P2                          : 11;		/* 12..22, 0x007FF000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_SHADE_CON_2;	/* DIP_X_G2C_SHADE_CON_2, DIP_A_G2C_SHADE_CON_2*/

typedef volatile union _DIP_X_REG_G2C_SHADE_CON_3_
{
		volatile struct	/* 0x15022860 */
		{
				FIELD  G2C_SHADE_UB                          :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_SHADE_CON_3;	/* DIP_X_G2C_SHADE_CON_3, DIP_A_G2C_SHADE_CON_3*/

typedef volatile union _DIP_X_REG_G2C_SHADE_TAR_
{
		volatile struct	/* 0x15022864 */
		{
				FIELD  G2C_SHADE_XMID                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  G2C_SHADE_YMID                        : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_SHADE_TAR;	/* DIP_X_G2C_SHADE_TAR, DIP_A_G2C_SHADE_TAR*/

typedef volatile union _DIP_X_REG_G2C_SHADE_SP_
{
		volatile struct	/* 0x15022868 */
		{
				FIELD  G2C_SHADE_XSP                         : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  G2C_SHADE_YSP                         : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_SHADE_SP;	/* DIP_X_G2C_SHADE_SP, DIP_A_G2C_SHADE_SP*/

typedef volatile union _DIP_X_REG_G2C_CFC_CON_1_
{
		volatile struct	/* 0x1502286C */
		{
				FIELD  G2C_CFC_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  G2C_L                                 : 10;		/*  4..13, 0x00003FF0 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  G2C_H                                 : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CFC_CON_1;	/* DIP_X_G2C_CFC_CON_1, DIP_A_G2C_CFC_CON_1*/

typedef volatile union _DIP_X_REG_G2C_CFC_CON_2_
{
		volatile struct	/* 0x15022870 */
		{
				FIELD  G2C_HR                                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  G2C_LR                                :  5;		/*  5.. 9, 0x000003E0 */
				FIELD  G2C_HG                                :  5;		/* 10..14, 0x00007C00 */
				FIELD  G2C_LG                                :  5;		/* 15..19, 0x000F8000 */
				FIELD  G2C_HB                                :  5;		/* 20..24, 0x01F00000 */
				FIELD  G2C_LB                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_G2C_CFC_CON_2;	/* DIP_X_G2C_CFC_CON_2, DIP_A_G2C_CFC_CON_2*/

typedef volatile union _DIP_X_REG_C42_CON_
{
		volatile struct	/* 0x15022880 */
		{
				FIELD  C42_FILT_DIS                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  C42_TDR_EDGE                          :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C42_CON;	/* DIP_X_C42_CON, DIP_A_C42_CON*/

typedef volatile union _DIP_X_REG_SRZ3_CONTROL_
{
		volatile struct	/* 0x15022890 */
		{
				FIELD  SRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SRZ_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_CONTROL;	/* DIP_X_SRZ3_CONTROL, DIP_A_SRZ3_CONTROL*/

typedef volatile union _DIP_X_REG_SRZ3_IN_IMG_
{
		volatile struct	/* 0x15022894 */
		{
				FIELD  SRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_IN_IMG;	/* DIP_X_SRZ3_IN_IMG, DIP_A_SRZ3_IN_IMG*/

typedef volatile union _DIP_X_REG_SRZ3_OUT_IMG_
{
		volatile struct	/* 0x15022898 */
		{
				FIELD  SRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_OUT_IMG;	/* DIP_X_SRZ3_OUT_IMG, DIP_A_SRZ3_OUT_IMG*/

typedef volatile union _DIP_X_REG_SRZ3_HORI_STEP_
{
		volatile struct	/* 0x1502289C */
		{
				FIELD  SRZ_HORI_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_HORI_STEP;	/* DIP_X_SRZ3_HORI_STEP, DIP_A_SRZ3_HORI_STEP*/

typedef volatile union _DIP_X_REG_SRZ3_VERT_STEP_
{
		volatile struct	/* 0x150228A0 */
		{
				FIELD  SRZ_VERT_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_VERT_STEP;	/* DIP_X_SRZ3_VERT_STEP, DIP_A_SRZ3_VERT_STEP*/

typedef volatile union _DIP_X_REG_SRZ3_HORI_INT_OFST_
{
		volatile struct	/* 0x150228A4 */
		{
				FIELD  SRZ_HORI_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_HORI_INT_OFST;	/* DIP_X_SRZ3_HORI_INT_OFST, DIP_A_SRZ3_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ3_HORI_SUB_OFST_
{
		volatile struct	/* 0x150228A8 */
		{
				FIELD  SRZ_HORI_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_HORI_SUB_OFST;	/* DIP_X_SRZ3_HORI_SUB_OFST, DIP_A_SRZ3_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ3_VERT_INT_OFST_
{
		volatile struct	/* 0x150228AC */
		{
				FIELD  SRZ_VERT_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_VERT_INT_OFST;	/* DIP_X_SRZ3_VERT_INT_OFST, DIP_A_SRZ3_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ3_VERT_SUB_OFST_
{
		volatile struct	/* 0x150228B0 */
		{
				FIELD  SRZ_VERT_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ3_VERT_SUB_OFST;	/* DIP_X_SRZ3_VERT_SUB_OFST, DIP_A_SRZ3_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ4_CONTROL_
{
		volatile struct	/* 0x150228C0 */
		{
				FIELD  SRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SRZ_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_CONTROL;	/* DIP_X_SRZ4_CONTROL, DIP_A_SRZ4_CONTROL*/

typedef volatile union _DIP_X_REG_SRZ4_IN_IMG_
{
		volatile struct	/* 0x150228C4 */
		{
				FIELD  SRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_IN_IMG;	/* DIP_X_SRZ4_IN_IMG, DIP_A_SRZ4_IN_IMG*/

typedef volatile union _DIP_X_REG_SRZ4_OUT_IMG_
{
		volatile struct	/* 0x150228C8 */
		{
				FIELD  SRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_OUT_IMG;	/* DIP_X_SRZ4_OUT_IMG, DIP_A_SRZ4_OUT_IMG*/

typedef volatile union _DIP_X_REG_SRZ4_HORI_STEP_
{
		volatile struct	/* 0x150228CC */
		{
				FIELD  SRZ_HORI_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_HORI_STEP;	/* DIP_X_SRZ4_HORI_STEP, DIP_A_SRZ4_HORI_STEP*/

typedef volatile union _DIP_X_REG_SRZ4_VERT_STEP_
{
		volatile struct	/* 0x150228D0 */
		{
				FIELD  SRZ_VERT_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_VERT_STEP;	/* DIP_X_SRZ4_VERT_STEP, DIP_A_SRZ4_VERT_STEP*/

typedef volatile union _DIP_X_REG_SRZ4_HORI_INT_OFST_
{
		volatile struct	/* 0x150228D4 */
		{
				FIELD  SRZ_HORI_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_HORI_INT_OFST;	/* DIP_X_SRZ4_HORI_INT_OFST, DIP_A_SRZ4_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ4_HORI_SUB_OFST_
{
		volatile struct	/* 0x150228D8 */
		{
				FIELD  SRZ_HORI_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_HORI_SUB_OFST;	/* DIP_X_SRZ4_HORI_SUB_OFST, DIP_A_SRZ4_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ4_VERT_INT_OFST_
{
		volatile struct	/* 0x150228DC */
		{
				FIELD  SRZ_VERT_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_VERT_INT_OFST;	/* DIP_X_SRZ4_VERT_INT_OFST, DIP_A_SRZ4_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ4_VERT_SUB_OFST_
{
		volatile struct	/* 0x150228E0 */
		{
				FIELD  SRZ_VERT_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ4_VERT_SUB_OFST;	/* DIP_X_SRZ4_VERT_SUB_OFST, DIP_A_SRZ4_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ5_CONTROL_
{
		volatile struct	/* 0x150228F0 */
		{
				FIELD  SRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SRZ_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_CONTROL;	/* DIP_X_SRZ5_CONTROL, DIP_A_SRZ5_CONTROL*/

typedef volatile union _DIP_X_REG_SRZ5_IN_IMG_
{
		volatile struct	/* 0x150228F4 */
		{
				FIELD  SRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_IN_IMG;	/* DIP_X_SRZ5_IN_IMG, DIP_A_SRZ5_IN_IMG*/

typedef volatile union _DIP_X_REG_SRZ5_OUT_IMG_
{
		volatile struct	/* 0x150228F8 */
		{
				FIELD  SRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_OUT_IMG;	/* DIP_X_SRZ5_OUT_IMG, DIP_A_SRZ5_OUT_IMG*/

typedef volatile union _DIP_X_REG_SRZ5_HORI_STEP_
{
		volatile struct	/* 0x150228FC */
		{
				FIELD  SRZ_HORI_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_HORI_STEP;	/* DIP_X_SRZ5_HORI_STEP, DIP_A_SRZ5_HORI_STEP*/

typedef volatile union _DIP_X_REG_SRZ5_VERT_STEP_
{
		volatile struct	/* 0x15022900 */
		{
				FIELD  SRZ_VERT_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_VERT_STEP;	/* DIP_X_SRZ5_VERT_STEP, DIP_A_SRZ5_VERT_STEP*/

typedef volatile union _DIP_X_REG_SRZ5_HORI_INT_OFST_
{
		volatile struct	/* 0x15022904 */
		{
				FIELD  SRZ_HORI_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_HORI_INT_OFST;	/* DIP_X_SRZ5_HORI_INT_OFST, DIP_A_SRZ5_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ5_HORI_SUB_OFST_
{
		volatile struct	/* 0x15022908 */
		{
				FIELD  SRZ_HORI_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_HORI_SUB_OFST;	/* DIP_X_SRZ5_HORI_SUB_OFST, DIP_A_SRZ5_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ5_VERT_INT_OFST_
{
		volatile struct	/* 0x1502290C */
		{
				FIELD  SRZ_VERT_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_VERT_INT_OFST;	/* DIP_X_SRZ5_VERT_INT_OFST, DIP_A_SRZ5_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ5_VERT_SUB_OFST_
{
		volatile struct	/* 0x15022910 */
		{
				FIELD  SRZ_VERT_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ5_VERT_SUB_OFST;	/* DIP_X_SRZ5_VERT_SUB_OFST, DIP_A_SRZ5_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_SEEE_CTRL_
{
		volatile struct	/* 0x15022990 */
		{
				FIELD  SEEE_TILE_EDGE                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 24;		/*  4..27, 0x0FFFFFF0 */
				FIELD  RESERVED                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_CTRL;	/* DIP_X_SEEE_CTRL, DIP_A_SEEE_CTRL*/

typedef volatile union _DIP_X_REG_SEEE_CLIP_CTRL_1_
{
		volatile struct	/* 0x15022994 */
		{
				FIELD  SEEE_DOT_REDUC_AMNT                   :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_DOT_TH                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_CLIP_CTRL_1;	/* DIP_X_SEEE_CLIP_CTRL_1, DIP_A_SEEE_CLIP_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_CLIP_CTRL_2_
{
		volatile struct	/* 0x15022998 */
		{
				FIELD  SEEE_RESP_CLIP                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_RESP_CLIP_LUMA_SPC_TH            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_RESP_CLIP_LUMA_LWB               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SEEE_RESP_CLIP_LUMA_UPB               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_CLIP_CTRL_2;	/* DIP_X_SEEE_CLIP_CTRL_2, DIP_A_SEEE_CLIP_CTRL_2*/

typedef volatile union _DIP_X_REG_SEEE_CLIP_CTRL_3_
{
		volatile struct	/* 0x1502299C */
		{
				FIELD  SEEE_OVRSH_CLIP_STR                   :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  SEEE_FLT_CORE_TH                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_CLIP_CTRL_3;	/* DIP_X_SEEE_CLIP_CTRL_3, DIP_A_SEEE_CLIP_CTRL_3*/

typedef volatile union _DIP_X_REG_SEEE_BLND_CTRL_1_
{
		volatile struct	/* 0x150229A0 */
		{
				FIELD  SEEE_H1_DI_BLND_OFST                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_H2_DI_BLND_OFST                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_H3_DI_BLND_OFST                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_BLND_CTRL_1;	/* DIP_X_SEEE_BLND_CTRL_1, DIP_A_SEEE_BLND_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_BLND_CTRL_2_
{
		volatile struct	/* 0x150229A4 */
		{
				FIELD  SEEE_H1_DI_BLND_SL                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_H2_DI_BLND_SL                    :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_H3_DI_BLND_SL                    :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SEEE_HX_ISO_BLND_RAT                  :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_BLND_CTRL_2;	/* DIP_X_SEEE_BLND_CTRL_2, DIP_A_SEEE_BLND_CTRL_2*/

typedef volatile union _DIP_X_REG_SEEE_GN_CTRL_
{
		volatile struct	/* 0x150229A8 */
		{
				FIELD  SEEE_H1_GN                            :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  SEEE_H2_GN                            :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  SEEE_H3_GN                            :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SEEE_H4_GN                            :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GN_CTRL;	/* DIP_X_SEEE_GN_CTRL, DIP_A_SEEE_GN_CTRL*/

typedef volatile union _DIP_X_REG_SEEE_LUMA_CTRL_1_
{
		volatile struct	/* 0x150229AC */
		{
				FIELD  SEEE_LUMA_MOD_Y0                      :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  SEEE_LUMA_MOD_Y1                      :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_LUMA_CTRL_1;	/* DIP_X_SEEE_LUMA_CTRL_1, DIP_A_SEEE_LUMA_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_LUMA_CTRL_2_
{
		volatile struct	/* 0x150229B0 */
		{
				FIELD  SEEE_LUMA_MOD_Y2                      :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  SEEE_LUMA_MOD_Y3                      :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_LUMA_CTRL_2;	/* DIP_X_SEEE_LUMA_CTRL_2, DIP_A_SEEE_LUMA_CTRL_2*/

typedef volatile union _DIP_X_REG_SEEE_LUMA_CTRL_3_
{
		volatile struct	/* 0x150229B4 */
		{
				FIELD  SEEE_LUMA_MOD_Y4                      :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  SEEE_LUMA_MOD_Y5                      :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_LUMA_CTRL_3;	/* DIP_X_SEEE_LUMA_CTRL_3, DIP_A_SEEE_LUMA_CTRL_3*/

typedef volatile union _DIP_X_REG_SEEE_LUMA_CTRL_4_
{
		volatile struct	/* 0x150229B8 */
		{
				FIELD  SEEE_LUMA_MOD_Y6                      :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_LUMA_CTRL_4;	/* DIP_X_SEEE_LUMA_CTRL_4, DIP_A_SEEE_LUMA_CTRL_4*/

typedef volatile union _DIP_X_REG_SEEE_SLNK_CTRL_1_
{
		volatile struct	/* 0x150229BC */
		{
				FIELD  SEEE_SLNK_GN_Y1                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_SLNK_GN_Y2                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SLNK_CTRL_1;	/* DIP_X_SEEE_SLNK_CTRL_1, DIP_A_SEEE_SLNK_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_SLNK_CTRL_2_
{
		volatile struct	/* 0x150229C0 */
		{
				FIELD  SEEE_GLUT_SL_DEC_Y                    : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  SEEE_GLUT_LINK_EN                     :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  SEEE_RESP_SLNK_GN_RAT                 :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SLNK_CTRL_2;	/* DIP_X_SEEE_SLNK_CTRL_2, DIP_A_SEEE_SLNK_CTRL_2*/

typedef volatile union _DIP_X_REG_SEEE_GLUT_CTRL_1_
{
		volatile struct	/* 0x150229C4 */
		{
				FIELD  SEEE_GLUT_X1                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_GLUT_S1                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_GLUT_Y1                          : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GLUT_CTRL_1;	/* DIP_X_SEEE_GLUT_CTRL_1, DIP_A_SEEE_GLUT_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_GLUT_CTRL_2_
{
		volatile struct	/* 0x150229C8 */
		{
				FIELD  SEEE_GLUT_X2                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_GLUT_S2                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_GLUT_Y2                          : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GLUT_CTRL_2;	/* DIP_X_SEEE_GLUT_CTRL_2, DIP_A_SEEE_GLUT_CTRL_2*/

typedef volatile union _DIP_X_REG_SEEE_GLUT_CTRL_3_
{
		volatile struct	/* 0x150229CC */
		{
				FIELD  SEEE_GLUT_X3                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_GLUT_S3                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_GLUT_Y3                          : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GLUT_CTRL_3;	/* DIP_X_SEEE_GLUT_CTRL_3, DIP_A_SEEE_GLUT_CTRL_3*/

typedef volatile union _DIP_X_REG_SEEE_GLUT_CTRL_4_
{
		volatile struct	/* 0x150229D0 */
		{
				FIELD  SEEE_GLUT_X4                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_GLUT_S4                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_GLUT_Y4                          : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GLUT_CTRL_4;	/* DIP_X_SEEE_GLUT_CTRL_4, DIP_A_SEEE_GLUT_CTRL_4*/

typedef volatile union _DIP_X_REG_SEEE_GLUT_CTRL_5_
{
		volatile struct	/* 0x150229D4 */
		{
				FIELD  rsv_0                                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_GLUT_S5                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GLUT_CTRL_5;	/* DIP_X_SEEE_GLUT_CTRL_5, DIP_A_SEEE_GLUT_CTRL_5*/

typedef volatile union _DIP_X_REG_SEEE_GLUT_CTRL_6_
{
		volatile struct	/* 0x150229D8 */
		{
				FIELD  SEEE_GLUT_TH_OVR                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SEEE_GLUT_TH_UND                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_GLUT_TH_MIN                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_GLUT_CTRL_6;	/* DIP_X_SEEE_GLUT_CTRL_6, DIP_A_SEEE_GLUT_CTRL_6*/

typedef volatile union _DIP_X_REG_SEEE_OUT_EDGE_CTRL_
{
		volatile struct	/* 0x150229DC */
		{
				FIELD  SEEE_OUT_EDGE_SEL                     :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_OUT_EDGE_CTRL;	/* DIP_X_SEEE_OUT_EDGE_CTRL, DIP_A_SEEE_OUT_EDGE_CTRL*/

typedef volatile union _DIP_X_REG_SEEE_SE_Y_CTRL_
{
		volatile struct	/* 0x150229E0 */
		{
				FIELD  SEEE_SE_CONST_Y_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SEEE_SE_CONST_Y_VAL                   :  8;		/*  1.. 8, 0x000001FE */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  SEEE_SE_YOUT_QBIT                     :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  SEEE_SE_COUT_QBIT                     :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_Y_CTRL;	/* DIP_X_SEEE_SE_Y_CTRL, DIP_A_SEEE_SE_Y_CTRL*/

typedef volatile union _DIP_X_REG_SEEE_SE_EDGE_CTRL_1_
{
		volatile struct	/* 0x150229E4 */
		{
				FIELD  SEEE_SE_HORI_EDGE_SEL                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SEEE_SE_HORI_EDGE_GAIN_A              :  4;		/*  1.. 4, 0x0000001E */
				FIELD  SEEE_SE_HORI_EDGE_GAIN_B              :  5;		/*  5.. 9, 0x000003E0 */
				FIELD  SEEE_SE_HORI_EDGE_GAIN_C              :  5;		/* 10..14, 0x00007C00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  SEEE_SE_VERT_EDGE_SEL                 :  1;		/* 16..16, 0x00010000 */
				FIELD  SEEE_SE_VERT_EDGE_GAIN_A              :  4;		/* 17..20, 0x001E0000 */
				FIELD  SEEE_SE_VERT_EDGE_GAIN_B              :  5;		/* 21..25, 0x03E00000 */
				FIELD  SEEE_SE_VERT_EDGE_GAIN_C              :  5;		/* 26..30, 0x7C000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_EDGE_CTRL_1;	/* DIP_X_SEEE_SE_EDGE_CTRL_1, DIP_A_SEEE_SE_EDGE_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_SE_EDGE_CTRL_2_
{
		volatile struct	/* 0x150229E8 */
		{
				FIELD  SEEE_SE_EDGE_DET_GAIN                 :  5;		/*  0.. 4, 0x0000001F */
				FIELD  SEEE_SE_BOSS_IN_SEL                   :  1;		/*  5.. 5, 0x00000020 */
				FIELD  SEEE_SE_BOSS_GAIN_OFF                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_EDGE_CTRL_2;	/* DIP_X_SEEE_SE_EDGE_CTRL_2, DIP_A_SEEE_SE_EDGE_CTRL_2*/

typedef volatile union _DIP_X_REG_SEEE_SE_EDGE_CTRL_3_
{
		volatile struct	/* 0x150229EC */
		{
				FIELD  SEEE_SE_CONVT_FORCE_EN                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SEEE_SE_CONVT_CORE_TH                 :  7;		/*  1.. 7, 0x000000FE */
				FIELD  SEEE_SE_CONVT_E_TH                    :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SEEE_SE_CONVT_SLOPE_SEL               :  1;		/* 16..16, 0x00010000 */
				FIELD  SEEE_SE_OIL_EN                        :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_EDGE_CTRL_3;	/* DIP_X_SEEE_SE_EDGE_CTRL_3, DIP_A_SEEE_SE_EDGE_CTRL_3*/

typedef volatile union _DIP_X_REG_SEEE_SE_SPECL_CTRL_
{
		volatile struct	/* 0x150229F0 */
		{
				FIELD  SEEE_SE_SPECL_HALF_MODE               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  SEEE_SE_SPECL_ABS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SEEE_SE_SPECL_INV                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SEEE_SE_SPECL_GAIN                    :  2;		/*  4.. 5, 0x00000030 */
				FIELD  SEEE_SE_KNEE_SEL                      :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_SPECL_CTRL;	/* DIP_X_SEEE_SE_SPECL_CTRL, DIP_A_SEEE_SE_SPECL_CTRL*/

typedef volatile union _DIP_X_REG_SEEE_SE_CORE_CTRL_1_
{
		volatile struct	/* 0x150229F4 */
		{
				FIELD  SEEE_SE_CORE_HORI_X0                  :  7;		/*  0.. 6, 0x0000007F */
				FIELD  SEEE_SE_CORE_HORI_SUP                 :  2;		/*  7.. 8, 0x00000180 */
				FIELD  SEEE_SE_CORE_HORI_X2                  :  8;		/*  9..16, 0x0001FE00 */
				FIELD  SEEE_SE_CORE_HORI_SDN                 :  2;		/* 17..18, 0x00060000 */
				FIELD  SEEE_SE_CORE_HORI_Y5                  :  6;		/* 19..24, 0x01F80000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_CORE_CTRL_1;	/* DIP_X_SEEE_SE_CORE_CTRL_1, DIP_A_SEEE_SE_CORE_CTRL_1*/

typedef volatile union _DIP_X_REG_SEEE_SE_CORE_CTRL_2_
{
		volatile struct	/* 0x150229F8 */
		{
				FIELD  SEEE_SE_CORE_VERT_X0                  :  7;		/*  0.. 6, 0x0000007F */
				FIELD  SEEE_SE_CORE_VERT_SUP                 :  2;		/*  7.. 8, 0x00000180 */
				FIELD  SEEE_SE_CORE_VERT_X2                  :  8;		/*  9..16, 0x0001FE00 */
				FIELD  SEEE_SE_CORE_VERT_SDN                 :  2;		/* 17..18, 0x00060000 */
				FIELD  SEEE_SE_CORE_VERT_Y5                  :  6;		/* 19..24, 0x01F80000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SEEE_SE_CORE_CTRL_2;	/* DIP_X_SEEE_SE_CORE_CTRL_2, DIP_A_SEEE_SE_CORE_CTRL_2*/

typedef volatile union _DIP_X_REG_CAM_TNR_ENG_CON_
{
		volatile struct	/* 0x15022A30 */
		{
				FIELD  NR3D_CAM_TNR_EN                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  NR3D_CAM_TNR_C42_FILT_DIS             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  NR3D_CAM_TNR_DCM_DIS                  :  1;		/*  2.. 2, 0x00000004 */
				FIELD  NR3D_CAM_TNR_RESET                    :  1;		/*  3.. 3, 0x00000008 */
				FIELD  NR3D_CAM_TNR_CROP_H                   :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  NR3D_CAM_TNR_CROP_V                   :  4;		/*  8..11, 0x00000F00 */
				FIELD  NR3D_CAM_TNR_UV_SIGNED                :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_TNR_ENG_CON;	/* DIP_X_CAM_TNR_ENG_CON, DIP_A_CAM_TNR_ENG_CON*/

typedef volatile union _DIP_X_REG_CAM_TNR_SIZ_
{
		volatile struct	/* 0x15022A34 */
		{
				FIELD  NR3D_CAM_TNR_HSIZE                    : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  NR3D_CAM_TNR_VSIZE                    : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_TNR_SIZ;	/* DIP_X_CAM_TNR_SIZ, DIP_A_CAM_TNR_SIZ*/

typedef volatile union _DIP_X_REG_CAM_TNR_TILE_XY_
{
		volatile struct	/* 0x15022A38 */
		{
				FIELD  NR3D_CAM_TNR_TILE_H                   : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  NR3D_CAM_TNR_TILE_V                   : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_TNR_TILE_XY;	/* DIP_X_CAM_TNR_TILE_XY, DIP_A_CAM_TNR_TILE_XY*/

typedef volatile union _DIP_X_REG_NR3D_ON_CON_
{
		volatile struct	/* 0x15022A3C */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  NR3D_ON_EN                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  NR3D_TILE_EDGE                        :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                :  8;		/* 12..19, 0x000FF000 */
				FIELD  NR3D_SL2_OFF                          :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_NR3D_ON_CON;	/* DIP_X_NR3D_ON_CON, DIP_A_NR3D_ON_CON*/

typedef volatile union _DIP_X_REG_NR3D_ON_OFF_
{
		volatile struct	/* 0x15022A40 */
		{
				FIELD  NR3D_ON_OFST_X                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  NR3D_ON_OFST_Y                        : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_NR3D_ON_OFF;	/* DIP_X_NR3D_ON_OFF, DIP_A_NR3D_ON_OFF*/

typedef volatile union _DIP_X_REG_NR3D_ON_SIZ_
{
		volatile struct	/* 0x15022A44 */
		{
				FIELD  NR3D_ON_WD                            : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  NR3D_ON_HT                            : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_NR3D_ON_SIZ;	/* DIP_X_NR3D_ON_SIZ, DIP_A_NR3D_ON_SIZ*/

typedef volatile union _DIP_X_REG_MDP_TNR_TNR_ENABLE_
{
		volatile struct	/* 0x15022A48 */
		{
				FIELD  rsv_0                                 : 30;		/*  0..29, 0x3FFFFFFF */
				FIELD  NR3D_TNR_C_EN                         :  1;		/* 30..30, 0x40000000 */
				FIELD  NR3D_TNR_Y_EN                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_TNR_ENABLE;	/* DIP_X_MDP_TNR_TNR_ENABLE, DIP_A_MDP_TNR_TNR_ENABLE*/

typedef volatile union _DIP_X_REG_MDP_TNR_FLT_CONFIG_
{
		volatile struct	/* 0x15022A4C */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  NR3D_EN_CCR                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  NR3D_EN_CYCR                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  NR3D_FLT_STR_MAX                      :  6;		/*  6..11, 0x00000FC0 */
				FIELD  NR3D_BLEND_RATIO_MV                   :  5;		/* 12..16, 0x0001F000 */
				FIELD  NR3D_BLEND_RATIO_TXTR                 :  5;		/* 17..21, 0x003E0000 */
				FIELD  NR3D_BLEND_RATIO_DE                   :  5;		/* 22..26, 0x07C00000 */
				FIELD  NR3D_BLEND_RATIO_BLKY                 :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_FLT_CONFIG;	/* DIP_X_MDP_TNR_FLT_CONFIG, DIP_A_MDP_TNR_FLT_CONFIG*/

typedef volatile union _DIP_X_REG_MDP_TNR_FB_INFO1_
{
		volatile struct	/* 0x15022A50 */
		{
				FIELD  rsv_0                                 : 20;		/*  0..19, 0x000FFFFF */
				FIELD  NR3D_Q_SP                             :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_NL                             :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_FB_INFO1;	/* DIP_X_MDP_TNR_FB_INFO1, DIP_A_MDP_TNR_FB_INFO1*/

typedef volatile union _DIP_X_REG_MDP_TNR_THR_1_
{
		volatile struct	/* 0x15022A54 */
		{
				FIELD  rsv_0                                 : 10;		/*  0.. 9, 0x000003FF */
				FIELD  NR3D_SMALL_SAD_THR                    :  6;		/* 10..15, 0x0000FC00 */
				FIELD  NR3D_MV_PEN_THR                       :  6;		/* 16..21, 0x003F0000 */
				FIELD  NR3D_MV_PEN_W                         :  4;		/* 22..25, 0x03C00000 */
				FIELD  NR3D_BDI_THR                          :  4;		/* 26..29, 0x3C000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_THR_1;	/* DIP_X_MDP_TNR_THR_1, DIP_A_MDP_TNR_THR_1*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_1_
{
		volatile struct	/* 0x15022A58 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_BLKY_Y4                        :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_BLKY_Y3                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_BLKY_Y2                        :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_BLKY_Y1                        :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_BLKY_Y0                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_1;	/* DIP_X_MDP_TNR_CURVE_1, DIP_A_MDP_TNR_CURVE_1*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_2_
{
		volatile struct	/* 0x15022A5C */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_BLKC_Y1                        :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_BLKC_Y0                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_BLKY_Y7                        :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_BLKY_Y6                        :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_BLKY_Y5                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_2;	/* DIP_X_MDP_TNR_CURVE_2, DIP_A_MDP_TNR_CURVE_2*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_3_
{
		volatile struct	/* 0x15022A60 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_BLKC_Y6                        :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_BLKC_Y5                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_BLKC_Y4                        :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_BLKC_Y3                        :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_BLKC_Y2                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_3;	/* DIP_X_MDP_TNR_CURVE_3, DIP_A_MDP_TNR_CURVE_3*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_4_
{
		volatile struct	/* 0x15022A64 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_DETXTR_LVL_Y3                  :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_DETXTR_LVL_Y2                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_DETXTR_LVL_Y1                  :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_DETXTR_LVL_Y0                  :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_BLKC_Y7                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_4;	/* DIP_X_MDP_TNR_CURVE_4, DIP_A_MDP_TNR_CURVE_4*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_5_
{
		volatile struct	/* 0x15022A68 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_DE1_BASE_Y0                    :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_DETXTR_LVL_Y7                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_DETXTR_LVL_Y6                  :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_DETXTR_LVL_Y5                  :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_DETXTR_LVL_Y4                  :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_5;	/* DIP_X_MDP_TNR_CURVE_5, DIP_A_MDP_TNR_CURVE_5*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_6_
{
		volatile struct	/* 0x15022A6C */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_DE1_BASE_Y5                    :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_DE1_BASE_Y4                    :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_DE1_BASE_Y3                    :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_DE1_BASE_Y2                    :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_DE1_BASE_Y1                    :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_6;	/* DIP_X_MDP_TNR_CURVE_6, DIP_A_MDP_TNR_CURVE_6*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_7_
{
		volatile struct	/* 0x15022A70 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y2                :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y1                :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y0                :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_DE1_BASE_Y7                    :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_DE1_BASE_Y6                    :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_7;	/* DIP_X_MDP_TNR_CURVE_7, DIP_A_MDP_TNR_CURVE_7*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_8_
{
		volatile struct	/* 0x15022A74 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y7                :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y6                :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y5                :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y4                :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_DE2TXTR_BASE_Y3                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_8;	/* DIP_X_MDP_TNR_CURVE_8, DIP_A_MDP_TNR_CURVE_8*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_9_
{
		volatile struct	/* 0x15022A78 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_MV_Y4                          :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_MV_Y3                          :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_MV_Y2                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_MV_Y1                          :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_MV_Y0                          :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_9;	/* DIP_X_MDP_TNR_CURVE_9, DIP_A_MDP_TNR_CURVE_9*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_10_
{
		volatile struct	/* 0x15022A7C */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_WVAR_Y1                        :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_WVAR_Y0                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_MV_Y7                          :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_MV_Y6                          :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_MV_Y5                          :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_10;	/* DIP_X_MDP_TNR_CURVE_10, DIP_A_MDP_TNR_CURVE_10*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_11_
{
		volatile struct	/* 0x15022A80 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_WVAR_Y6                        :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_WVAR_Y5                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_WVAR_Y4                        :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_WVAR_Y3                        :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_WVAR_Y2                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_11;	/* DIP_X_MDP_TNR_CURVE_11, DIP_A_MDP_TNR_CURVE_11*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_12_
{
		volatile struct	/* 0x15022A84 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_WSM_Y3                         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_WSM_Y2                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_WSM_Y1                         :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_WSM_Y0                         :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_WVAR_Y7                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_12;	/* DIP_X_MDP_TNR_CURVE_12, DIP_A_MDP_TNR_CURVE_12*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_13_
{
		volatile struct	/* 0x15022A88 */
		{
				FIELD  rsv_0                                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  NR3D_Q_WSM_Y7                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_WSM_Y6                         :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_WSM_Y5                         :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_WSM_Y4                         :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_13;	/* DIP_X_MDP_TNR_CURVE_13, DIP_A_MDP_TNR_CURVE_13*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_14_
{
		volatile struct	/* 0x15022A8C */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_Q_SDL_Y4                         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_Q_SDL_Y3                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_SDL_Y2                         :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_SDL_Y1                         :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_SDL_Y0                         :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_14;	/* DIP_X_MDP_TNR_CURVE_14, DIP_A_MDP_TNR_CURVE_14*/

typedef volatile union _DIP_X_REG_MDP_TNR_CURVE_15_
{
		volatile struct	/* 0x15022A90 */
		{
				FIELD  rsv_0                                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  NR3D_Q_SDL_Y8                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_Q_SDL_Y7                         :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_Q_SDL_Y6                         :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_Q_SDL_Y5                         :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_CURVE_15;	/* DIP_X_MDP_TNR_CURVE_15, DIP_A_MDP_TNR_CURVE_15*/

typedef volatile union _DIP_X_REG_MDP_TNR_R2C_1_
{
		volatile struct	/* 0x15022A94 */
		{
				FIELD  NR3D_R2CENC                           :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_R2C_VAL4                         :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_R2C_VAL3                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_R2C_VAL2                         :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_R2C_VAL1                         :  6;		/* 20..25, 0x03F00000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_R2C_1;	/* DIP_X_MDP_TNR_R2C_1, DIP_A_MDP_TNR_R2C_1*/

typedef volatile union _DIP_X_REG_MDP_TNR_R2C_2_
{
		volatile struct	/* 0x15022A98 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_R2C_TXTR_THROFF                  :  6;		/*  2.. 7, 0x000000FC */
				FIELD  NR3D_R2C_TXTR_THR4                    :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_R2C_TXTR_THR3                    :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_R2C_TXTR_THR2                    :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_R2C_TXTR_THR1                    :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_R2C_2;	/* DIP_X_MDP_TNR_R2C_2, DIP_A_MDP_TNR_R2C_2*/

typedef volatile union _DIP_X_REG_MDP_TNR_R2C_3_
{
		volatile struct	/* 0x15022A9C */
		{
				FIELD  rsv_0                                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  NR3D_R2CF_CNT4                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  NR3D_R2CF_CNT3                        :  6;		/* 14..19, 0x000FC000 */
				FIELD  NR3D_R2CF_CNT2                        :  6;		/* 20..25, 0x03F00000 */
				FIELD  NR3D_R2CF_CNT1                        :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_R2C_3;	/* DIP_X_MDP_TNR_R2C_3, DIP_A_MDP_TNR_R2C_3*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_6_
{
		volatile struct	/* 0x15022AA0 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_FORCE_EN                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  NR3D_INK_LEVEL_DISP                   : 16;		/*  3..18, 0x0007FFF8 */
				FIELD  NR3D_INK_SEL                          :  5;		/* 19..23, 0x00F80000 */
				FIELD  NR3D_INK_Y_EN                         :  1;		/* 24..24, 0x01000000 */
				FIELD  NR3D_INK_EN                           :  1;		/* 25..25, 0x02000000 */
				FIELD  NR3D_FORCE_FLT_STR                    :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_6;	/* DIP_X_MDP_TNR_DBG_6, DIP_A_MDP_TNR_DBG_6*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_15_
{
		volatile struct	/* 0x15022AA4 */
		{
				FIELD  rsv_0                                 :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR3D_OSD_TARGV                        : 13;		/*  2..14, 0x00007FFC */
				FIELD  NR3D_OSD_TARGH                        : 13;		/* 15..27, 0x0FFF8000 */
				FIELD  NR3D_OSD_SEL                          :  3;		/* 28..30, 0x70000000 */
				FIELD  NR3D_OSD_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_15;	/* DIP_X_MDP_TNR_DBG_15, DIP_A_MDP_TNR_DBG_15*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_16_
{
		volatile struct	/* 0x15022AA8 */
		{
				FIELD  rsv_0                                 :  3;		/*  0.. 2, 0x00000007 */
				FIELD  NR3D_OSD_Y_EN                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  NR3D_OSD_DISP_SCALE                   :  2;		/*  4.. 5, 0x00000030 */
				FIELD  NR3D_OSD_DISPV                        : 13;		/*  6..18, 0x0007FFC0 */
				FIELD  NR3D_OSD_DISPH                        : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_16;	/* DIP_X_MDP_TNR_DBG_16, DIP_A_MDP_TNR_DBG_16*/

typedef volatile union _DIP_X_REG_MDP_TNR_DEMO_1_
{
		volatile struct	/* 0x15022AAC */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  NR3D_DEMO_BOT                         : 13;		/*  4..16, 0x0001FFF0 */
				FIELD  NR3D_DEMO_TOP                         : 13;		/* 17..29, 0x3FFE0000 */
				FIELD  NR3D_DEMO_SEL                         :  1;		/* 30..30, 0x40000000 */
				FIELD  NR3D_DEMO_EN                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DEMO_1;	/* DIP_X_MDP_TNR_DEMO_1, DIP_A_MDP_TNR_DEMO_1*/

typedef volatile union _DIP_X_REG_MDP_TNR_DEMO_2_
{
		volatile struct	/* 0x15022AB0 */
		{
				FIELD  rsv_0                                 :  6;		/*  0.. 5, 0x0000003F */
				FIELD  NR3D_DEMO_RIGHT                       : 13;		/*  6..18, 0x0007FFC0 */
				FIELD  NR3D_DEMO_LEFT                        : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DEMO_2;	/* DIP_X_MDP_TNR_DEMO_2, DIP_A_MDP_TNR_DEMO_2*/

typedef volatile union _DIP_X_REG_MDP_TNR_ATPG_
{
		volatile struct	/* 0x15022AB4 */
		{
				FIELD  NR3D_TNR_ATPG_OB                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  NR3D_TNR_ATPG_CT                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_ATPG;	/* DIP_X_MDP_TNR_ATPG, DIP_A_MDP_TNR_ATPG*/

typedef volatile union _DIP_X_REG_MDP_TNR_DMY_0_
{
		volatile struct	/* 0x15022AB8 */
		{
				FIELD  NR3D_TNR_DUMMY0                       : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DMY_0;	/* DIP_X_MDP_TNR_DMY_0, DIP_A_MDP_TNR_DMY_0*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_17_
{
		volatile struct	/* 0x15022ABC */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  NR3D_OSD_INF1                         : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  NR3D_OSD_INF0                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_17;	/* DIP_X_MDP_TNR_DBG_17, DIP_A_MDP_TNR_DBG_17*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_18_
{
		volatile struct	/* 0x15022AC0 */
		{
				FIELD  rsv_0                                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  NR3D_OSD_INF3                         : 12;		/*  8..19, 0x000FFF00 */
				FIELD  NR3D_OSD_INF2                         : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_18;	/* DIP_X_MDP_TNR_DBG_18, DIP_A_MDP_TNR_DBG_18*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_1_
{
		volatile struct	/* 0x15022AC4 */
		{
				FIELD  NR3D_TNR_DBG0                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_1;	/* DIP_X_MDP_TNR_DBG_1, DIP_A_MDP_TNR_DBG_1*/

typedef volatile union _DIP_X_REG_MDP_TNR_DBG_2_
{
		volatile struct	/* 0x15022AC8 */
		{
				FIELD  NR3D_TNR_DBG1                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_TNR_DBG_2;	/* DIP_X_MDP_TNR_DBG_2, DIP_A_MDP_TNR_DBG_2*/

typedef volatile union _DIP_X_REG_SL2B_CEN_
{
		volatile struct	/* 0x15022B30 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_CEN;	/* DIP_X_SL2B_CEN, DIP_A_SL2B_CEN*/

typedef volatile union _DIP_X_REG_SL2B_RR_CON0_
{
		volatile struct	/* 0x15022B34 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_RR_CON0;	/* DIP_X_SL2B_RR_CON0, DIP_A_SL2B_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2B_RR_CON1_
{
		volatile struct	/* 0x15022B38 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_RR_CON1;	/* DIP_X_SL2B_RR_CON1, DIP_A_SL2B_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2B_GAIN_
{
		volatile struct	/* 0x15022B3C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_GAIN;	/* DIP_X_SL2B_GAIN, DIP_A_SL2B_GAIN*/

typedef volatile union _DIP_X_REG_SL2B_RZ_
{
		volatile struct	/* 0x15022B40 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_RZ;	/* DIP_X_SL2B_RZ, DIP_A_SL2B_RZ*/

typedef volatile union _DIP_X_REG_SL2B_XOFF_
{
		volatile struct	/* 0x15022B44 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_XOFF;	/* DIP_X_SL2B_XOFF, DIP_A_SL2B_XOFF*/

typedef volatile union _DIP_X_REG_SL2B_YOFF_
{
		volatile struct	/* 0x15022B48 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_YOFF;	/* DIP_X_SL2B_YOFF, DIP_A_SL2B_YOFF*/

typedef volatile union _DIP_X_REG_SL2B_SLP_CON0_
{
		volatile struct	/* 0x15022B4C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_SLP_CON0;	/* DIP_X_SL2B_SLP_CON0, DIP_A_SL2B_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2B_SLP_CON1_
{
		volatile struct	/* 0x15022B50 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_SLP_CON1;	/* DIP_X_SL2B_SLP_CON1, DIP_A_SL2B_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2B_SIZE_
{
		volatile struct	/* 0x15022B54 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2B_SIZE;	/* DIP_X_SL2B_SIZE, DIP_A_SL2B_SIZE*/

typedef volatile union _DIP_X_REG_SL2C_CEN_
{
		volatile struct	/* 0x15022B70 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_CEN;	/* DIP_X_SL2C_CEN, DIP_A_SL2C_CEN*/

typedef volatile union _DIP_X_REG_SL2C_RR_CON0_
{
		volatile struct	/* 0x15022B74 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_RR_CON0;	/* DIP_X_SL2C_RR_CON0, DIP_A_SL2C_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2C_RR_CON1_
{
		volatile struct	/* 0x15022B78 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_RR_CON1;	/* DIP_X_SL2C_RR_CON1, DIP_A_SL2C_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2C_GAIN_
{
		volatile struct	/* 0x15022B7C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_GAIN;	/* DIP_X_SL2C_GAIN, DIP_A_SL2C_GAIN*/

typedef volatile union _DIP_X_REG_SL2C_RZ_
{
		volatile struct	/* 0x15022B80 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_RZ;	/* DIP_X_SL2C_RZ, DIP_A_SL2C_RZ*/

typedef volatile union _DIP_X_REG_SL2C_XOFF_
{
		volatile struct	/* 0x15022B84 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_XOFF;	/* DIP_X_SL2C_XOFF, DIP_A_SL2C_XOFF*/

typedef volatile union _DIP_X_REG_SL2C_YOFF_
{
		volatile struct	/* 0x15022B88 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_YOFF;	/* DIP_X_SL2C_YOFF, DIP_A_SL2C_YOFF*/

typedef volatile union _DIP_X_REG_SL2C_SLP_CON0_
{
		volatile struct	/* 0x15022B8C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_SLP_CON0;	/* DIP_X_SL2C_SLP_CON0, DIP_A_SL2C_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2C_SLP_CON1_
{
		volatile struct	/* 0x15022B90 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_SLP_CON1;	/* DIP_X_SL2C_SLP_CON1, DIP_A_SL2C_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2C_SIZE_
{
		volatile struct	/* 0x15022B94 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2C_SIZE;	/* DIP_X_SL2C_SIZE, DIP_A_SL2C_SIZE*/

typedef volatile union _DIP_X_REG_SRZ1_CONTROL_
{
		volatile struct	/* 0x15022BB0 */
		{
				FIELD  SRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SRZ_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_CONTROL;	/* DIP_X_SRZ1_CONTROL, DIP_A_SRZ1_CONTROL*/

typedef volatile union _DIP_X_REG_SRZ1_IN_IMG_
{
		volatile struct	/* 0x15022BB4 */
		{
				FIELD  SRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_IN_IMG;	/* DIP_X_SRZ1_IN_IMG, DIP_A_SRZ1_IN_IMG*/

typedef volatile union _DIP_X_REG_SRZ1_OUT_IMG_
{
		volatile struct	/* 0x15022BB8 */
		{
				FIELD  SRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_OUT_IMG;	/* DIP_X_SRZ1_OUT_IMG, DIP_A_SRZ1_OUT_IMG*/

typedef volatile union _DIP_X_REG_SRZ1_HORI_STEP_
{
		volatile struct	/* 0x15022BBC */
		{
				FIELD  SRZ_HORI_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_HORI_STEP;	/* DIP_X_SRZ1_HORI_STEP, DIP_A_SRZ1_HORI_STEP*/

typedef volatile union _DIP_X_REG_SRZ1_VERT_STEP_
{
		volatile struct	/* 0x15022BC0 */
		{
				FIELD  SRZ_VERT_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_VERT_STEP;	/* DIP_X_SRZ1_VERT_STEP, DIP_A_SRZ1_VERT_STEP*/

typedef volatile union _DIP_X_REG_SRZ1_HORI_INT_OFST_
{
		volatile struct	/* 0x15022BC4 */
		{
				FIELD  SRZ_HORI_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_HORI_INT_OFST;	/* DIP_X_SRZ1_HORI_INT_OFST, DIP_A_SRZ1_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ1_HORI_SUB_OFST_
{
		volatile struct	/* 0x15022BC8 */
		{
				FIELD  SRZ_HORI_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_HORI_SUB_OFST;	/* DIP_X_SRZ1_HORI_SUB_OFST, DIP_A_SRZ1_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ1_VERT_INT_OFST_
{
		volatile struct	/* 0x15022BCC */
		{
				FIELD  SRZ_VERT_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_VERT_INT_OFST;	/* DIP_X_SRZ1_VERT_INT_OFST, DIP_A_SRZ1_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ1_VERT_SUB_OFST_
{
		volatile struct	/* 0x15022BD0 */
		{
				FIELD  SRZ_VERT_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ1_VERT_SUB_OFST;	/* DIP_X_SRZ1_VERT_SUB_OFST, DIP_A_SRZ1_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ2_CONTROL_
{
		volatile struct	/* 0x15022BE0 */
		{
				FIELD  SRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SRZ_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_CONTROL;	/* DIP_X_SRZ2_CONTROL, DIP_A_SRZ2_CONTROL*/

typedef volatile union _DIP_X_REG_SRZ2_IN_IMG_
{
		volatile struct	/* 0x15022BE4 */
		{
				FIELD  SRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_IN_IMG;	/* DIP_X_SRZ2_IN_IMG, DIP_A_SRZ2_IN_IMG*/

typedef volatile union _DIP_X_REG_SRZ2_OUT_IMG_
{
		volatile struct	/* 0x15022BE8 */
		{
				FIELD  SRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_OUT_IMG;	/* DIP_X_SRZ2_OUT_IMG, DIP_A_SRZ2_OUT_IMG*/

typedef volatile union _DIP_X_REG_SRZ2_HORI_STEP_
{
		volatile struct	/* 0x15022BEC */
		{
				FIELD  SRZ_HORI_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_HORI_STEP;	/* DIP_X_SRZ2_HORI_STEP, DIP_A_SRZ2_HORI_STEP*/

typedef volatile union _DIP_X_REG_SRZ2_VERT_STEP_
{
		volatile struct	/* 0x15022BF0 */
		{
				FIELD  SRZ_VERT_STEP                         : 19;		/*  0..18, 0x0007FFFF */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_VERT_STEP;	/* DIP_X_SRZ2_VERT_STEP, DIP_A_SRZ2_VERT_STEP*/

typedef volatile union _DIP_X_REG_SRZ2_HORI_INT_OFST_
{
		volatile struct	/* 0x15022BF4 */
		{
				FIELD  SRZ_HORI_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_HORI_INT_OFST;	/* DIP_X_SRZ2_HORI_INT_OFST, DIP_A_SRZ2_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ2_HORI_SUB_OFST_
{
		volatile struct	/* 0x15022BF8 */
		{
				FIELD  SRZ_HORI_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_HORI_SUB_OFST;	/* DIP_X_SRZ2_HORI_SUB_OFST, DIP_A_SRZ2_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_SRZ2_VERT_INT_OFST_
{
		volatile struct	/* 0x15022BFC */
		{
				FIELD  SRZ_VERT_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_VERT_INT_OFST;	/* DIP_X_SRZ2_VERT_INT_OFST, DIP_A_SRZ2_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_SRZ2_VERT_SUB_OFST_
{
		volatile struct	/* 0x15022C00 */
		{
				FIELD  SRZ_VERT_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SRZ2_VERT_SUB_OFST;	/* DIP_X_SRZ2_VERT_SUB_OFST, DIP_A_SRZ2_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_CRZ_CONTROL_
{
		volatile struct	/* 0x15022C10 */
		{
				FIELD  CRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CRZ_VERT_FIRST                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CRZ_HORI_ALGO                         :  2;		/*  5.. 6, 0x00000060 */
				FIELD  CRZ_VERT_ALGO                         :  2;		/*  7.. 8, 0x00000180 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CRZ_TRNC_HORI                         :  3;		/* 10..12, 0x00001C00 */
				FIELD  CRZ_TRNC_VERT                         :  3;		/* 13..15, 0x0000E000 */
				FIELD  CRZ_HORI_TBL_SEL                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  CRZ_VERT_TBL_SEL                      :  5;		/* 21..25, 0x03E00000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_CONTROL;	/* DIP_X_CRZ_CONTROL, DIP_A_CRZ_CONTROL*/

typedef volatile union _DIP_X_REG_CRZ_IN_IMG_
{
		volatile struct	/* 0x15022C14 */
		{
				FIELD  CRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_IN_IMG;	/* DIP_X_CRZ_IN_IMG, DIP_A_CRZ_IN_IMG*/

typedef volatile union _DIP_X_REG_CRZ_OUT_IMG_
{
		volatile struct	/* 0x15022C18 */
		{
				FIELD  CRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_OUT_IMG;	/* DIP_X_CRZ_OUT_IMG, DIP_A_CRZ_OUT_IMG*/

typedef volatile union _DIP_X_REG_CRZ_HORI_STEP_
{
		volatile struct	/* 0x15022C1C */
		{
				FIELD  CRZ_HORI_STEP                         : 23;		/*  0..22, 0x007FFFFF */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_HORI_STEP;	/* DIP_X_CRZ_HORI_STEP, DIP_A_CRZ_HORI_STEP*/

typedef volatile union _DIP_X_REG_CRZ_VERT_STEP_
{
		volatile struct	/* 0x15022C20 */
		{
				FIELD  CRZ_VERT_STEP                         : 23;		/*  0..22, 0x007FFFFF */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_VERT_STEP;	/* DIP_X_CRZ_VERT_STEP, DIP_A_CRZ_VERT_STEP*/

typedef volatile union _DIP_X_REG_CRZ_LUMA_HORI_INT_OFST_
{
		volatile struct	/* 0x15022C24 */
		{
				FIELD  CRZ_LUMA_HORI_INT_OFST                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_LUMA_HORI_INT_OFST;	/* DIP_X_CRZ_LUMA_HORI_INT_OFST, DIP_A_CRZ_LUMA_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_CRZ_LUMA_HORI_SUB_OFST_
{
		volatile struct	/* 0x15022C28 */
		{
				FIELD  CRZ_LUMA_HORI_SUB_OFST                : 21;		/*  0..20, 0x001FFFFF */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_LUMA_HORI_SUB_OFST;	/* DIP_X_CRZ_LUMA_HORI_SUB_OFST, DIP_A_CRZ_LUMA_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_CRZ_LUMA_VERT_INT_OFST_
{
		volatile struct	/* 0x15022C2C */
		{
				FIELD  CRZ_LUMA_VERT_INT_OFST                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_LUMA_VERT_INT_OFST;	/* DIP_X_CRZ_LUMA_VERT_INT_OFST, DIP_A_CRZ_LUMA_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_CRZ_LUMA_VERT_SUB_OFST_
{
		volatile struct	/* 0x15022C30 */
		{
				FIELD  CRZ_LUMA_VERT_SUB_OFST                : 21;		/*  0..20, 0x001FFFFF */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_LUMA_VERT_SUB_OFST;	/* DIP_X_CRZ_LUMA_VERT_SUB_OFST, DIP_A_CRZ_LUMA_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_CRZ_CHRO_HORI_INT_OFST_
{
		volatile struct	/* 0x15022C34 */
		{
				FIELD  CRZ_CHRO_HORI_INT_OFST                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_CHRO_HORI_INT_OFST;	/* DIP_X_CRZ_CHRO_HORI_INT_OFST, DIP_A_CRZ_CHRO_HORI_INT_OFST*/

typedef volatile union _DIP_X_REG_CRZ_CHRO_HORI_SUB_OFST_
{
		volatile struct	/* 0x15022C38 */
		{
				FIELD  CRZ_CHRO_HORI_SUB_OFST                : 21;		/*  0..20, 0x001FFFFF */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_CHRO_HORI_SUB_OFST;	/* DIP_X_CRZ_CHRO_HORI_SUB_OFST, DIP_A_CRZ_CHRO_HORI_SUB_OFST*/

typedef volatile union _DIP_X_REG_CRZ_CHRO_VERT_INT_OFST_
{
		volatile struct	/* 0x15022C3C */
		{
				FIELD  CRZ_CHRO_VERT_INT_OFST                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_CHRO_VERT_INT_OFST;	/* DIP_X_CRZ_CHRO_VERT_INT_OFST, DIP_A_CRZ_CHRO_VERT_INT_OFST*/

typedef volatile union _DIP_X_REG_CRZ_CHRO_VERT_SUB_OFST_
{
		volatile struct	/* 0x15022C40 */
		{
				FIELD  CRZ_CHRO_VERT_SUB_OFST                : 21;		/*  0..20, 0x001FFFFF */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_CHRO_VERT_SUB_OFST;	/* DIP_X_CRZ_CHRO_VERT_SUB_OFST, DIP_A_CRZ_CHRO_VERT_SUB_OFST*/

typedef volatile union _DIP_X_REG_CRZ_SPARE_1_
{
		volatile struct	/* 0x15022C44 */
		{
				FIELD  CRZ_SPARE_REG                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRZ_SPARE_1;	/* DIP_X_CRZ_SPARE_1, DIP_A_CRZ_SPARE_1*/

typedef volatile union _DIP_X_REG_MIX1_CTRL_0_
{
		volatile struct	/* 0x15022C70 */
		{
				FIELD  MIX1_WT_SEL                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  MIX1_Y_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MIX1_Y_DEFAULT                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MIX1_UV_EN                            :  1;		/*  6.. 6, 0x00000040 */
				FIELD  MIX1_UV_DEFAULT                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  MIX1_B0                               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  MIX1_B1                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  MIX1_DT                               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX1_CTRL_0;	/* DIP_X_MIX1_CTRL_0, DIP_A_MIX1_CTRL_0*/

typedef volatile union _DIP_X_REG_MIX1_CTRL_1_
{
		volatile struct	/* 0x15022C74 */
		{
				FIELD  MIX1_M0                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  MIX1_M1                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX1_CTRL_1;	/* DIP_X_MIX1_CTRL_1, DIP_A_MIX1_CTRL_1*/

typedef volatile union _DIP_X_REG_MIX1_SPARE_
{
		volatile struct	/* 0x15022C78 */
		{
				FIELD  MIX1_SPARE                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX1_SPARE;	/* DIP_X_MIX1_SPARE, DIP_A_MIX1_SPARE*/

typedef volatile union _DIP_X_REG_MIX2_CTRL_0_
{
		volatile struct	/* 0x15022C80 */
		{
				FIELD  MIX2_WT_SEL                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  MIX2_Y_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MIX2_Y_DEFAULT                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MIX2_UV_EN                            :  1;		/*  6.. 6, 0x00000040 */
				FIELD  MIX2_UV_DEFAULT                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  MIX2_B0                               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  MIX2_B1                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  MIX2_DT                               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX2_CTRL_0;	/* DIP_X_MIX2_CTRL_0, DIP_A_MIX2_CTRL_0*/

typedef volatile union _DIP_X_REG_MIX2_CTRL_1_
{
		volatile struct	/* 0x15022C84 */
		{
				FIELD  MIX2_M0                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  MIX2_M1                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX2_CTRL_1;	/* DIP_X_MIX2_CTRL_1, DIP_A_MIX2_CTRL_1*/

typedef volatile union _DIP_X_REG_MIX2_SPARE_
{
		volatile struct	/* 0x15022C88 */
		{
				FIELD  MIX2_SPARE                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX2_SPARE;	/* DIP_X_MIX2_SPARE, DIP_A_MIX2_SPARE*/

typedef volatile union _DIP_X_REG_MIX3_CTRL_0_
{
		volatile struct	/* 0x15022C90 */
		{
				FIELD  MIX3_WT_SEL                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  MIX3_Y_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MIX3_Y_DEFAULT                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  MIX3_UV_EN                            :  1;		/*  6.. 6, 0x00000040 */
				FIELD  MIX3_UV_DEFAULT                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  MIX3_B0                               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  MIX3_B1                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  MIX3_DT                               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX3_CTRL_0;	/* DIP_X_MIX3_CTRL_0, DIP_A_MIX3_CTRL_0*/

typedef volatile union _DIP_X_REG_MIX3_CTRL_1_
{
		volatile struct	/* 0x15022C94 */
		{
				FIELD  MIX3_M0                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  MIX3_M1                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX3_CTRL_1;	/* DIP_X_MIX3_CTRL_1, DIP_A_MIX3_CTRL_1*/

typedef volatile union _DIP_X_REG_MIX3_SPARE_
{
		volatile struct	/* 0x15022C98 */
		{
				FIELD  MIX3_SPARE                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MIX3_SPARE;	/* DIP_X_MIX3_SPARE, DIP_A_MIX3_SPARE*/

typedef volatile union _DIP_X_REG_SL2D_CEN_
{
		volatile struct	/* 0x15022CA0 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_CEN;	/* DIP_X_SL2D_CEN, DIP_A_SL2D_CEN*/

typedef volatile union _DIP_X_REG_SL2D_RR_CON0_
{
		volatile struct	/* 0x15022CA4 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_RR_CON0;	/* DIP_X_SL2D_RR_CON0, DIP_A_SL2D_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2D_RR_CON1_
{
		volatile struct	/* 0x15022CA8 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_RR_CON1;	/* DIP_X_SL2D_RR_CON1, DIP_A_SL2D_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2D_GAIN_
{
		volatile struct	/* 0x15022CAC */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_GAIN;	/* DIP_X_SL2D_GAIN, DIP_A_SL2D_GAIN*/

typedef volatile union _DIP_X_REG_SL2D_RZ_
{
		volatile struct	/* 0x15022CB0 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_RZ;	/* DIP_X_SL2D_RZ, DIP_A_SL2D_RZ*/

typedef volatile union _DIP_X_REG_SL2D_XOFF_
{
		volatile struct	/* 0x15022CB4 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_XOFF;	/* DIP_X_SL2D_XOFF, DIP_A_SL2D_XOFF*/

typedef volatile union _DIP_X_REG_SL2D_YOFF_
{
		volatile struct	/* 0x15022CB8 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_YOFF;	/* DIP_X_SL2D_YOFF, DIP_A_SL2D_YOFF*/

typedef volatile union _DIP_X_REG_SL2D_SLP_CON0_
{
		volatile struct	/* 0x15022CBC */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_SLP_CON0;	/* DIP_X_SL2D_SLP_CON0, DIP_A_SL2D_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2D_SLP_CON1_
{
		volatile struct	/* 0x15022CC0 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_SLP_CON1;	/* DIP_X_SL2D_SLP_CON1, DIP_A_SL2D_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2D_SIZE_
{
		volatile struct	/* 0x15022CC4 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2D_SIZE;	/* DIP_X_SL2D_SIZE, DIP_A_SL2D_SIZE*/

typedef volatile union _DIP_X_REG_SL2E_CEN_
{
		volatile struct	/* 0x15022CE0 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_CEN;	/* DIP_X_SL2E_CEN, DIP_A_SL2E_CEN*/

typedef volatile union _DIP_X_REG_SL2E_RR_CON0_
{
		volatile struct	/* 0x15022CE4 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_RR_CON0;	/* DIP_X_SL2E_RR_CON0, DIP_A_SL2E_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2E_RR_CON1_
{
		volatile struct	/* 0x15022CE8 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_RR_CON1;	/* DIP_X_SL2E_RR_CON1, DIP_A_SL2E_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2E_GAIN_
{
		volatile struct	/* 0x15022CEC */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_GAIN;	/* DIP_X_SL2E_GAIN, DIP_A_SL2E_GAIN*/

typedef volatile union _DIP_X_REG_SL2E_RZ_
{
		volatile struct	/* 0x15022CF0 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_RZ;	/* DIP_X_SL2E_RZ, DIP_A_SL2E_RZ*/

typedef volatile union _DIP_X_REG_SL2E_XOFF_
{
		volatile struct	/* 0x15022CF4 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_XOFF;	/* DIP_X_SL2E_XOFF, DIP_A_SL2E_XOFF*/

typedef volatile union _DIP_X_REG_SL2E_YOFF_
{
		volatile struct	/* 0x15022CF8 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_YOFF;	/* DIP_X_SL2E_YOFF, DIP_A_SL2E_YOFF*/

typedef volatile union _DIP_X_REG_SL2E_SLP_CON0_
{
		volatile struct	/* 0x15022CFC */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_SLP_CON0;	/* DIP_X_SL2E_SLP_CON0, DIP_A_SL2E_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2E_SLP_CON1_
{
		volatile struct	/* 0x15022D00 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_SLP_CON1;	/* DIP_X_SL2E_SLP_CON1, DIP_A_SL2E_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2E_SIZE_
{
		volatile struct	/* 0x15022D04 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2E_SIZE;	/* DIP_X_SL2E_SIZE, DIP_A_SL2E_SIZE*/

typedef volatile union _DIP_X_REG_MDP_CROP_X_
{
		volatile struct	/* 0x15022D20 */
		{
				FIELD  MDP_CROP_STR_X                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  MDP_CROP_END_X                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_CROP_X;	/* DIP_X_MDP_CROP_X, DIP_A_MDP_CROP_X*/

typedef volatile union _DIP_X_REG_MDP_CROP_Y_
{
		volatile struct	/* 0x15022D24 */
		{
				FIELD  MDP_CROP_STR_Y                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  MDP_CROP_END_Y                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MDP_CROP_Y;	/* DIP_X_MDP_CROP_Y, DIP_A_MDP_CROP_Y*/

typedef volatile union _DIP_X_REG_ANR2_CON1_
{
		volatile struct	/* 0x15022D30 */
		{
				FIELD  ANR2_ENC                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ANR2_ENY                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  ANR2_SCALE_MODE                       :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  6;		/*  6..11, 0x00000FC0 */
				FIELD  ANR2_MODE                             :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR2_TILE_EDGE                        :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  ANR2_LCE_LINK                         :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_CON1;	/* DIP_X_ANR2_CON1, DIP_A_ANR2_CON1*/

typedef volatile union _DIP_X_REG_ANR2_CON2_
{
		volatile struct	/* 0x15022D34 */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR2_C_MED_EN                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR2_C_SM_EDGE                        :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  ANR2_FLT_C                            :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_CON2;	/* DIP_X_ANR2_CON2, DIP_A_ANR2_CON2*/

typedef volatile union _DIP_X_REG_ANR2_YAD1_
{
		volatile struct	/* 0x15022D38 */
		{
				FIELD  rsv_0                                 : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  ANR2_K_TH_C                           :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_YAD1;	/* DIP_X_ANR2_YAD1, DIP_A_ANR2_YAD1*/

typedef volatile union _DIP_X_REG_ANR2_Y4LUT1_
{
		volatile struct	/* 0x15022D40 */
		{
				FIELD  ANR2_Y_CPX1                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_Y_CPX2                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR2_Y_CPX3                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_Y4LUT1;	/* DIP_X_ANR2_Y4LUT1, DIP_A_ANR2_Y4LUT1*/

typedef volatile union _DIP_X_REG_ANR2_Y4LUT2_
{
		volatile struct	/* 0x15022D44 */
		{
				FIELD  ANR2_Y_SCALE_CPY0                     :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR2_Y_SCALE_CPY1                     :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR2_Y_SCALE_CPY2                     :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR2_Y_SCALE_CPY3                     :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_Y4LUT2;	/* DIP_X_ANR2_Y4LUT2, DIP_A_ANR2_Y4LUT2*/

typedef volatile union _DIP_X_REG_ANR2_Y4LUT3_
{
		volatile struct	/* 0x15022D48 */
		{
				FIELD  ANR2_Y_SCALE_SP0                      :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR2_Y_SCALE_SP1                      :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR2_Y_SCALE_SP2                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR2_Y_SCALE_SP3                      :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_Y4LUT3;	/* DIP_X_ANR2_Y4LUT3, DIP_A_ANR2_Y4LUT3*/

typedef volatile union _DIP_X_REG_ANR2_L4LUT1_
{
		volatile struct	/* 0x15022D60 */
		{
				FIELD  ANR2_LCE_X1                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_LCE_X2                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR2_LCE_X3                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_L4LUT1;	/* DIP_X_ANR2_L4LUT1, DIP_A_ANR2_L4LUT1*/

typedef volatile union _DIP_X_REG_ANR2_L4LUT2_
{
		volatile struct	/* 0x15022D64 */
		{
				FIELD  ANR2_LCE_GAIN0                        :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR2_LCE_GAIN1                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR2_LCE_GAIN2                        :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR2_LCE_GAIN3                        :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_L4LUT2;	/* DIP_X_ANR2_L4LUT2, DIP_A_ANR2_L4LUT2*/

typedef volatile union _DIP_X_REG_ANR2_L4LUT3_
{
		volatile struct	/* 0x15022D68 */
		{
				FIELD  ANR2_LCE_SP0                          :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR2_LCE_SP1                          :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR2_LCE_SP2                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR2_LCE_SP3                          :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_L4LUT3;	/* DIP_X_ANR2_L4LUT3, DIP_A_ANR2_L4LUT3*/

typedef volatile union _DIP_X_REG_ANR2_CAD_
{
		volatile struct	/* 0x15022D70 */
		{
				FIELD  ANR2_PTC_VGAIN                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR2_C_GAIN                           :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR2_PTC_GAIN_TH                      :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR2_C_L_DIFF_TH                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR2_C_MODE                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_CAD;	/* DIP_X_ANR2_CAD, DIP_A_ANR2_CAD*/

typedef volatile union _DIP_X_REG_ANR2_PTC_
{
		volatile struct	/* 0x15022D74 */
		{
				FIELD  ANR2_PTC1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_PTC2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR2_PTC3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR2_PTC4                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_PTC;	/* DIP_X_ANR2_PTC, DIP_A_ANR2_PTC*/

typedef volatile union _DIP_X_REG_ANR2_LCE_
{
		volatile struct	/* 0x15022D78 */
		{
				FIELD  ANR2_LCE_C_GAIN                       :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  ANR2_LM_WT                            :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_LCE;	/* DIP_X_ANR2_LCE, DIP_A_ANR2_LCE*/

typedef volatile union _DIP_X_REG_ANR2_MED1_
{
		volatile struct	/* 0x15022D7C */
		{
				FIELD  ANR2_COR_TH                           :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR2_COR_SL                           :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  ANR2_MCD_TH                           :  5;		/* 12..16, 0x0001F000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR2_MCD_SL                           :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR2_LCL_TH                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_MED1;	/* DIP_X_ANR2_MED1, DIP_A_ANR2_MED1*/

typedef volatile union _DIP_X_REG_ANR2_MED2_
{
		volatile struct	/* 0x15022D80 */
		{
				FIELD  ANR2_LCL_SL                           :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  ANR2_LCL_LV                           :  5;		/*  4.. 8, 0x000001F0 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  ANR2_SCL_TH                           :  6;		/* 12..17, 0x0003F000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  ANR2_SCL_SL                           :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR2_SCL_LV                           :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_MED2;	/* DIP_X_ANR2_MED2, DIP_A_ANR2_MED2*/

typedef volatile union _DIP_X_REG_ANR2_MED3_
{
		volatile struct	/* 0x15022D84 */
		{
				FIELD  ANR2_NCL_TH                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_NCL_SL                           :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  ANR2_NCL_LV                           :  5;		/* 12..16, 0x0001F000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR2_VAR                              :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR2_Y0                               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_MED3;	/* DIP_X_ANR2_MED3, DIP_A_ANR2_MED3*/

typedef volatile union _DIP_X_REG_ANR2_MED4_
{
		volatile struct	/* 0x15022D88 */
		{
				FIELD  ANR2_Y1                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR2_Y2                               :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR2_Y3                               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR2_Y4                               :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_MED4;	/* DIP_X_ANR2_MED4, DIP_A_ANR2_MED4*/

typedef volatile union _DIP_X_REG_ANR2_MED5_
{
		volatile struct	/* 0x15022D8C */
		{
				FIELD  ANR2_LCL_OFT                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_SCL_OFT                          :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR2_NCL_OFT                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_MED5;	/* DIP_X_ANR2_MED5, DIP_A_ANR2_MED5*/

typedef volatile union _DIP_X_REG_CCR_RSV1_
{
		volatile struct	/* 0x15022D90 */
		{
				FIELD  CCR_RSV1                              : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_RSV1;	/* DIP_X_CCR_RSV1, DIP_A_CCR_RSV1*/

typedef volatile union _DIP_X_REG_ANR2_ACTY_
{
		volatile struct	/* 0x15022DA0 */
		{
				FIELD  ANR2_ACT_TH_Y                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_ACT_BLD_BASE_Y                   :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR2_ACT_SLANT_Y                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR2_ACT_BLD_TH_Y                     :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_ACTY;	/* DIP_X_ANR2_ACTY, DIP_A_ANR2_ACTY*/

typedef volatile union _DIP_X_REG_ANR2_ACTC_
{
		volatile struct	/* 0x15022DA4 */
		{
				FIELD  ANR2_ACT_TH_C                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR2_ACT_BLD_BASE_C                   :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR2_ACT_SLANT_C                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR2_ACT_BLD_TH_C                     :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_ACTC;	/* DIP_X_ANR2_ACTC, DIP_A_ANR2_ACTC*/

typedef volatile union _DIP_X_REG_ANR2_RSV1_
{
		volatile struct	/* 0x15022DA8 */
		{
				FIELD  ANR2_RSV1                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_RSV1;	/* DIP_X_ANR2_RSV1, DIP_A_ANR2_RSV1*/

typedef volatile union _DIP_X_REG_ANR2_RSV2_
{
		volatile struct	/* 0x15022DAC */
		{
				FIELD  ANR2_RSV2                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR2_RSV2;	/* DIP_X_ANR2_RSV2, DIP_A_ANR2_RSV2*/

typedef volatile union _DIP_X_REG_CCR_CON_
{
		volatile struct	/* 0x15022DB0 */
		{
				FIELD  CCR_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CCR_LCE_LINK                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CCR_LCE_MODE                          :  2;		/*  2.. 3, 0x0000000C */
				FIELD  rsv_4                                 :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CCR_OR_MODE                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CCR_UV_GAIN_MODE                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  CCR_UV_GAIN2                          :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  CCR_Y_CPX3                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_CON;	/* DIP_X_CCR_CON, DIP_A_CCR_CON*/

typedef volatile union _DIP_X_REG_CCR_YLUT_
{
		volatile struct	/* 0x15022DB4 */
		{
				FIELD  CCR_Y_CPX1                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  CCR_Y_CPX2                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCR_Y_SP1                             :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  CCR_Y_CPY1                            :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_YLUT;	/* DIP_X_CCR_YLUT, DIP_A_CCR_YLUT*/

typedef volatile union _DIP_X_REG_CCR_UVLUT_
{
		volatile struct	/* 0x15022DB8 */
		{
				FIELD  CCR_UV_X1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  CCR_UV_X2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCR_UV_X3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  CCR_UV_GAIN1                          :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_UVLUT;	/* DIP_X_CCR_UVLUT, DIP_A_CCR_UVLUT*/

typedef volatile union _DIP_X_REG_CCR_YLUT2_
{
		volatile struct	/* 0x15022DBC */
		{
				FIELD  CCR_Y_SP0                             :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CCR_Y_SP2                             :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CCR_Y_CPY0                            :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  CCR_Y_CPY2                            :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_YLUT2;	/* DIP_X_CCR_YLUT2, DIP_A_CCR_YLUT2*/

typedef volatile union _DIP_X_REG_CCR_SAT_CTRL_
{
		volatile struct	/* 0x15022DC0 */
		{
				FIELD  CCR_MODE                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CCR_CEN_U                             :  6;		/*  4.. 9, 0x000003F0 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  CCR_CEN_V                             :  6;		/* 12..17, 0x0003F000 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_SAT_CTRL;	/* DIP_X_CCR_SAT_CTRL, DIP_A_CCR_SAT_CTRL*/

typedef volatile union _DIP_X_REG_CCR_UVLUT_SP_
{
		volatile struct	/* 0x15022DC4 */
		{
				FIELD  CCR_UV_GAIN_SP1                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  CCR_UV_GAIN_SP2                       : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_UVLUT_SP;	/* DIP_X_CCR_UVLUT_SP, DIP_A_CCR_UVLUT_SP*/

typedef volatile union _DIP_X_REG_CCR_HUE1_
{
		volatile struct	/* 0x15022DC8 */
		{
				FIELD  CCR_HUE_X1                            :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  CCR_HUE_X2                            :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_HUE1;	/* DIP_X_CCR_HUE1, DIP_A_CCR_HUE1*/

typedef volatile union _DIP_X_REG_CCR_HUE2_
{
		volatile struct	/* 0x15022DCC */
		{
				FIELD  CCR_HUE_X3                            :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  CCR_HUE_X4                            :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_HUE2;	/* DIP_X_CCR_HUE2, DIP_A_CCR_HUE2*/

typedef volatile union _DIP_X_REG_CCR_HUE3_
{
		volatile struct	/* 0x15022DD0 */
		{
				FIELD  CCR_HUE_SP1                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  CCR_HUE_SP2                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCR_HUE_GAIN1                         :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  CCR_HUE_GAIN2                         :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_HUE3;	/* DIP_X_CCR_HUE3, DIP_A_CCR_HUE3*/

typedef volatile union _DIP_X_REG_CCR_L4LUT1_
{
		volatile struct	/* 0x15022DD4 */
		{
				FIELD  CCR_LCE_X1                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  CCR_LCE_X2                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  CCR_LCE_X3                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_L4LUT1;	/* DIP_X_CCR_L4LUT1, DIP_A_CCR_L4LUT1*/

typedef volatile union _DIP_X_REG_CCR_L4LUT2_
{
		volatile struct	/* 0x15022DD8 */
		{
				FIELD  CCR_LCE_GAIN0                         :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CCR_LCE_GAIN1                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CCR_LCE_GAIN2                         :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  CCR_LCE_GAIN3                         :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_L4LUT2;	/* DIP_X_CCR_L4LUT2, DIP_A_CCR_L4LUT2*/

typedef volatile union _DIP_X_REG_CCR_L4LUT3_
{
		volatile struct	/* 0x15022DDC */
		{
				FIELD  CCR_LCE_SP0                           :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  CCR_LCE_SP1                           :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CCR_LCE_SP2                           :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  CCR_LCE_SP3                           :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CCR_L4LUT3;	/* DIP_X_CCR_L4LUT3, DIP_A_CCR_L4LUT3*/

typedef volatile union _DIP_X_REG_BOK_CON_
{
		volatile struct	/* 0x15022DE0 */
		{
				FIELD  BOK_MODE                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  BOK_AP_MODE                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  BOK_FGBG_MODE                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  BOK_FGBG_WT                           :  4;		/* 12..15, 0x0000F000 */
				FIELD  BOK_PF_EN                             :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BOK_CON;	/* DIP_X_BOK_CON, DIP_A_BOK_CON*/

typedef volatile union _DIP_X_REG_BOK_TUN_
{
		volatile struct	/* 0x15022DE4 */
		{
				FIELD  BOK_STR_WT                            :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BOK_WT_GAIN                           :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BOK_INTENSITY                         :  8;		/* 16..23, 0x00FF0000 */
				FIELD  BOK_DOF_M                             :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BOK_TUN;	/* DIP_X_BOK_TUN, DIP_A_BOK_TUN*/

typedef volatile union _DIP_X_REG_BOK_OFF_
{
		volatile struct	/* 0x15022DE8 */
		{
				FIELD  BOK_XOFF                              :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  BOK_YOFF                              :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BOK_OFF;	/* DIP_X_BOK_OFF, DIP_A_BOK_OFF*/

typedef volatile union _DIP_X_REG_BOK_RSV1_
{
		volatile struct	/* 0x15022DEC */
		{
				FIELD  BOK_RSV1                              : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BOK_RSV1;	/* DIP_X_BOK_RSV1, DIP_A_BOK_RSV1*/

typedef volatile union _DIP_X_REG_ABF_CON1_
{
		volatile struct	/* 0x15022DF0 */
		{
				FIELD  ABF_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  ABF_MODE                              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ABF_AVE_WIN                           :  2;		/*  8.. 9, 0x00000300 */
				FIELD  ABF_W_DST                             :  2;		/* 10..11, 0x00000C00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CON1;	/* DIP_X_ABF_CON1, DIP_A_ABF_CON1*/

typedef volatile union _DIP_X_REG_ABF_CON2_
{
		volatile struct	/* 0x15022DF4 */
		{
				FIELD  ABF_DES_NUM                           :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  6;		/*  2.. 7, 0x000000FC */
				FIELD  ABF_DSA_STEP                          :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CON2;	/* DIP_X_ABF_CON2, DIP_A_ABF_CON2*/

typedef volatile union _DIP_X_REG_ABF_RCON_
{
		volatile struct	/* 0x15022DF8 */
		{
				FIELD  ABF_R1                                :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  ABF_R2                                :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_RCON;	/* DIP_X_ABF_RCON, DIP_A_ABF_RCON*/

typedef volatile union _DIP_X_REG_ABF_YLUT_
{
		volatile struct	/* 0x15022DFC */
		{
				FIELD  ABF_Y0                                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ABF_Y1                                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ABF_Y2                                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ABF_Y3                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_YLUT;	/* DIP_X_ABF_YLUT, DIP_A_ABF_YLUT*/

typedef volatile union _DIP_X_REG_ABF_CXLUT_
{
		volatile struct	/* 0x15022E00 */
		{
				FIELD  ABF_CX0                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ABF_CX1                               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ABF_CX2                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ABF_CX3                               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CXLUT;	/* DIP_X_ABF_CXLUT, DIP_A_ABF_CXLUT*/

typedef volatile union _DIP_X_REG_ABF_CYLUT_
{
		volatile struct	/* 0x15022E04 */
		{
				FIELD  ABF_CY0                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ABF_CY1                               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ABF_CY2                               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ABF_CY3                               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CYLUT;	/* DIP_X_ABF_CYLUT, DIP_A_ABF_CYLUT*/

typedef volatile union _DIP_X_REG_ABF_YSP_
{
		volatile struct	/* 0x15022E08 */
		{
				FIELD  ABF_Y_SP0                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  ABF_Y_SP1                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_YSP;	/* DIP_X_ABF_YSP, DIP_A_ABF_YSP*/

typedef volatile union _DIP_X_REG_ABF_CXSP_
{
		volatile struct	/* 0x15022E0C */
		{
				FIELD  ABF_CX_SP0                            : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  ABF_CX_SP1                            : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CXSP;	/* DIP_X_ABF_CXSP, DIP_A_ABF_CXSP*/

typedef volatile union _DIP_X_REG_ABF_CYSP_
{
		volatile struct	/* 0x15022E10 */
		{
				FIELD  ABF_CY_SP0                            : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  ABF_CY_SP1                            : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CYSP;	/* DIP_X_ABF_CYSP, DIP_A_ABF_CYSP*/

typedef volatile union _DIP_X_REG_ABF_CLP_
{
		volatile struct	/* 0x15022E14 */
		{
				FIELD  ABF_STHRE_R                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ABF_STHRE_G                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ABF_STHRE_B                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_CLP;	/* DIP_X_ABF_CLP, DIP_A_ABF_CLP*/

typedef volatile union _DIP_X_REG_ABF_DIFF_
{
		volatile struct	/* 0x15022E18 */
		{
				FIELD  rsv_0                                 :  3;		/*  0.. 2, 0x00000007 */
				FIELD  ABF_1_DIFF                            :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  rsv_8                                 :  3;		/*  8..10, 0x00000700 */
				FIELD  ABF_2_DIFF                            :  5;		/* 11..15, 0x0000F800 */
				FIELD  rsv_16                                :  3;		/* 16..18, 0x00070000 */
				FIELD  ABF_3_DIFF                            :  5;		/* 19..23, 0x00F80000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_DIFF;	/* DIP_X_ABF_DIFF, DIP_A_ABF_DIFF*/

typedef volatile union _DIP_X_REG_ABF_RSV1_
{
		volatile struct	/* 0x15022E1C */
		{
				FIELD  ABF_RSV                               : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ABF_RSV1;	/* DIP_X_ABF_RSV1, DIP_A_ABF_RSV1*/

typedef volatile union _DIP_X_REG_UNP_OFST_
{
		volatile struct	/* 0x15022E30 */
		{
				FIELD  UNP_OFST_STB                          :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  UNP_OFST_EDB                          :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_UNP_OFST;	/* DIP_X_UNP_OFST, DIP_A_UNP_OFST*/

typedef volatile union _DIP_X_REG_C02_CON_
{
		volatile struct	/* 0x15022E40 */
		{
				FIELD  C02_TPIPE_EDGE                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C02_CON;	/* DIP_X_C02_CON, DIP_A_C02_CON*/

typedef volatile union _DIP_X_REG_C02_CROP_CON1_
{
		volatile struct	/* 0x15022E44 */
		{
				FIELD  C02_CROP_XSTART                       : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  C02_CROP_XEND                         : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C02_CROP_CON1;	/* DIP_X_C02_CROP_CON1, DIP_A_C02_CROP_CON1*/

typedef volatile union _DIP_X_REG_C02_CROP_CON2_
{
		volatile struct	/* 0x15022E48 */
		{
				FIELD  C02_CROP_YSTART                       : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  C02_CROP_YEND                         : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C02_CROP_CON2;	/* DIP_X_C02_CROP_CON2, DIP_A_C02_CROP_CON2*/

typedef volatile union _DIP_X_REG_FE_CTRL1_
{
		volatile struct	/* 0x15022E50 */
		{
				FIELD  FE_MODE                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  FE_PARAM                              :  7;		/*  2.. 8, 0x000001FC */
				FIELD  FE_FLT_EN                             :  1;		/*  9.. 9, 0x00000200 */
				FIELD  FE_TH_G                               :  8;		/* 10..17, 0x0003FC00 */
				FIELD  FE_TH_C                               : 12;		/* 18..29, 0x3FFC0000 */
				FIELD  FE_DSCR_SBIT                          :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FE_CTRL1;	/* DIP_X_FE_CTRL1, DIP_A_FE_CTRL1*/

typedef volatile union _DIP_X_REG_FE_IDX_CTRL_
{
		volatile struct	/* 0x15022E54 */
		{
				FIELD  FE_XIDX                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  FE_YIDX                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FE_IDX_CTRL;	/* DIP_X_FE_IDX_CTRL, DIP_A_FE_IDX_CTRL*/

typedef volatile union _DIP_X_REG_FE_CROP_CTRL1_
{
		volatile struct	/* 0x15022E58 */
		{
				FIELD  FE_START_X                            : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  FE_START_Y                            : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FE_CROP_CTRL1;	/* DIP_X_FE_CROP_CTRL1, DIP_A_FE_CROP_CTRL1*/

typedef volatile union _DIP_X_REG_FE_CROP_CTRL2_
{
		volatile struct	/* 0x15022E5C */
		{
				FIELD  FE_IN_WD                              : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  FE_IN_HT                              : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FE_CROP_CTRL2;	/* DIP_X_FE_CROP_CTRL2, DIP_A_FE_CROP_CTRL2*/

typedef volatile union _DIP_X_REG_FE_CTRL2_
{
		volatile struct	/* 0x15022E60 */
		{
				FIELD  FE_TDR_EDGE                           :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FE_CTRL2;	/* DIP_X_FE_CTRL2, DIP_A_FE_CTRL2*/

typedef volatile union _DIP_X_REG_CRSP_CTRL_
{
		volatile struct	/* 0x15022E70 */
		{
				FIELD  CRSP_HORI_EN                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CRSP_VERT_EN                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CRSP_OUTPUT_WAIT_EN                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CRSP_RSV_1                            : 12;		/*  4..15, 0x0000FFF0 */
				FIELD  rsv_16                                : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  CRSP_CROP_EN                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRSP_CTRL;	/* DIP_X_CRSP_CTRL, DIP_A_CRSP_CTRL*/

typedef volatile union _DIP_X_REG_CRSP_OUT_IMG_
{
		volatile struct	/* 0x15022E78 */
		{
				FIELD  CRSP_WD                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CRSP_HT                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRSP_OUT_IMG;	/* DIP_X_CRSP_OUT_IMG, DIP_A_CRSP_OUT_IMG*/

typedef volatile union _DIP_X_REG_CRSP_STEP_OFST_
{
		volatile struct	/* 0x15022E7C */
		{
				FIELD  CRSP_STEP_X                           :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  CRSP_OFST_X                           :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  CRSP_STEP_Y                           :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  5;		/* 19..23, 0x00F80000 */
				FIELD  CRSP_OFST_Y                           :  2;		/* 24..25, 0x03000000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRSP_STEP_OFST;	/* DIP_X_CRSP_STEP_OFST, DIP_A_CRSP_STEP_OFST*/

typedef volatile union _DIP_X_REG_CRSP_CROP_X_
{
		volatile struct	/* 0x15022E80 */
		{
				FIELD  CRSP_CROP_STR_X                       : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CRSP_CROP_END_X                       : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRSP_CROP_X;	/* DIP_X_CRSP_CROP_X, DIP_A_CRSP_CROP_X*/

typedef volatile union _DIP_X_REG_CRSP_CROP_Y_
{
		volatile struct	/* 0x15022E84 */
		{
				FIELD  CRSP_CROP_STR_Y                       : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CRSP_CROP_END_Y                       : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CRSP_CROP_Y;	/* DIP_X_CRSP_CROP_Y, DIP_A_CRSP_CROP_Y*/

typedef volatile union _DIP_X_REG_C02B_CON_
{
		volatile struct	/* 0x15022E90 */
		{
				FIELD  C02_TPIPE_EDGE                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C02B_CON;	/* DIP_X_C02B_CON, DIP_A_C02B_CON*/

typedef volatile union _DIP_X_REG_C02B_CROP_CON1_
{
		volatile struct	/* 0x15022E94 */
		{
				FIELD  C02_CROP_XSTART                       : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  C02_CROP_XEND                         : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C02B_CROP_CON1;	/* DIP_X_C02B_CROP_CON1, DIP_A_C02B_CROP_CON1*/

typedef volatile union _DIP_X_REG_C02B_CROP_CON2_
{
		volatile struct	/* 0x15022E98 */
		{
				FIELD  C02_CROP_YSTART                       : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  C02_CROP_YEND                         : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C02B_CROP_CON2;	/* DIP_X_C02B_CROP_CON2, DIP_A_C02B_CROP_CON2*/

typedef volatile union _DIP_X_REG_C24_TILE_EDGE_
{
		volatile struct	/* 0x15022EA0 */
		{
				FIELD  C24_TILE_EDGE                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C24_TILE_EDGE;	/* DIP_X_C24_TILE_EDGE, DIP_A_C24_TILE_EDGE*/

typedef volatile union _DIP_X_REG_C24B_TILE_EDGE_
{
		volatile struct	/* 0x15022EB0 */
		{
				FIELD  C24_TILE_EDGE                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_C24B_TILE_EDGE;	/* DIP_X_C24B_TILE_EDGE, DIP_A_C24B_TILE_EDGE*/

typedef volatile union _DIP_X_REG_LCE25_CON_
{
		volatile struct	/* 0x15022EC0 */
		{
				FIELD  LCE_GLOB                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  LCE_GLOB_VHALF                        :  7;		/*  1.. 7, 0x000000FE */
				FIELD  LCE_EDGE                              :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  RESERVED                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_CON;	/* DIP_X_LCE25_CON, DIP_A_LCE25_CON*/

typedef volatile union _DIP_X_REG_LCE25_ZR_
{
		volatile struct	/* 0x15022EC4 */
		{
				FIELD  LCE_BCMK_X                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  LCE_BCMK_Y                            : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_ZR;	/* DIP_X_LCE25_ZR, DIP_A_LCE25_ZR*/

typedef volatile union _DIP_X_REG_LCE25_SLM_SIZE_
{
		volatile struct	/* 0x15022EC8 */
		{
				FIELD  LCE_SLM_WD                            :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  LCE_SLM_HT                            :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_SLM_SIZE;	/* DIP_X_LCE25_SLM_SIZE, DIP_A_LCE25_SLM_SIZE*/

typedef volatile union _DIP_X_REG_LCE25_OFST_
{
		volatile struct	/* 0x15022ECC */
		{
				FIELD  LCE_OFST_X                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  LCE_OFST_Y                            : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_OFST;	/* DIP_X_LCE25_OFST, DIP_A_LCE25_OFST*/

typedef volatile union _DIP_X_REG_LCE25_BIAS_
{
		volatile struct	/* 0x15022ED0 */
		{
				FIELD  LCE_BIAS_X                            :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  LCE_BIAS_Y                            :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                : 22;		/* 10..31, 0xFFFFFC00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_BIAS;	/* DIP_X_LCE25_BIAS, DIP_A_LCE25_BIAS*/

typedef volatile union _DIP_X_REG_LCE25_IMAGE_SIZE_
{
		volatile struct	/* 0x15022ED4 */
		{
				FIELD  LCE_IMAGE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LCE_IMAGE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_IMAGE_SIZE;	/* DIP_X_LCE25_IMAGE_SIZE, DIP_A_LCE25_IMAGE_SIZE*/

typedef volatile union _DIP_X_REG_LCE25_BIL_TH0_
{
		volatile struct	/* 0x15022ED8 */
		{
				FIELD  LCE_BIL_TH1                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_BIL_TH2                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_BIL_TH0;	/* DIP_X_LCE25_BIL_TH0, DIP_A_LCE25_BIL_TH0*/

typedef volatile union _DIP_X_REG_LCE25_BIL_TH1_
{
		volatile struct	/* 0x15022EDC */
		{
				FIELD  LCE_BIL_TH3                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_BIL_TH4                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_BIL_TH1;	/* DIP_X_LCE25_BIL_TH1, DIP_A_LCE25_BIL_TH1*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA0_
{
		volatile struct	/* 0x15022EE0 */
		{
				FIELD  LCE_CEN_END                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_CEN_BLD_WT                        :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  LCE_GLOB_TONE                         :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA0;	/* DIP_X_LCE25_TM_PARA0, DIP_A_LCE25_TM_PARA0*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA1_
{
		volatile struct	/* 0x15022EE4 */
		{
				FIELD  LCE_CEN_MAX_SLP                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  LCE_CEN_MIN_SLP                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  LCE_TC_P1                             : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA1;	/* DIP_X_LCE25_TM_PARA1, DIP_A_LCE25_TM_PARA1*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA2_
{
		volatile struct	/* 0x15022EE8 */
		{
				FIELD  LCE_TC_P50                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_TC_P500                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA2;	/* DIP_X_LCE25_TM_PARA2, DIP_A_LCE25_TM_PARA2*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA3_
{
		volatile struct	/* 0x15022EEC */
		{
				FIELD  LCE_TC_P950                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_TC_P999                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA3;	/* DIP_X_LCE25_TM_PARA3, DIP_A_LCE25_TM_PARA3*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA4_
{
		volatile struct	/* 0x15022EF0 */
		{
				FIELD  LCE_TC_O1                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_TC_O50                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA4;	/* DIP_X_LCE25_TM_PARA4, DIP_A_LCE25_TM_PARA4*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA5_
{
		volatile struct	/* 0x15022EF4 */
		{
				FIELD  LCE_TC_O500                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  LCE_TC_O950                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA5;	/* DIP_X_LCE25_TM_PARA5, DIP_A_LCE25_TM_PARA5*/

typedef volatile union _DIP_X_REG_LCE25_TM_PARA6_
{
		volatile struct	/* 0x15022EF8 */
		{
				FIELD  LCE_TC_O999                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LCE25_TM_PARA6;	/* DIP_X_LCE25_TM_PARA6, DIP_A_LCE25_TM_PARA6*/

typedef volatile union _DIP_X_REG_FM_SIZE_
{
		volatile struct	/* 0x15022F40 */
		{
				FIELD  FM_OFFSET_X                           :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  FM_OFFSET_Y                           :  5;		/*  8..12, 0x00001F00 */
				FIELD  FM_SR_TYPE                            :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  FM_WIDTH                              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  FM_HEIGHT                             :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FM_SIZE;	/* DIP_X_FM_SIZE, DIP_A_FM_SIZE*/

typedef volatile union _DIP_X_REG_FM_TH_CON0_
{
		volatile struct	/* 0x15022F44 */
		{
				FIELD  FM_MIN_RATIO                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  FM_SAD_TH                             : 10;		/*  8..17, 0x0003FF00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FM_RES_TH                             : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FM_TH_CON0;	/* DIP_X_FM_TH_CON0, DIP_A_FM_TH_CON0*/

typedef volatile union _DIP_X_REG_FM_ACC_RES_
{
		volatile struct	/* 0x15022F48 */
		{
				FIELD  FM_ACC_RES                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FM_ACC_RES;	/* DIP_X_FM_ACC_RES, DIP_A_FM_ACC_RES*/

typedef volatile union _DIP_X_REG_MFB_LL_CON5_
{
		volatile struct	/* 0x15022F78 */
		{
				FIELD  BLD_LL_GRAD_R1                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  BLD_LL_GRAD_R2                        :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BLD_LL_TH3                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  BLD_LL_TH4                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON5;	/* DIP_X_MFB_LL_CON5, DIP_A_MFB_LL_CON5*/

typedef volatile union _DIP_X_REG_MFB_LL_CON6_
{
		volatile struct	/* 0x15022F7C */
		{
				FIELD  BLD_LL_TH5                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  BLD_LL_TH6                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BLD_LL_TH7                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  BLD_LL_TH8                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON6;	/* DIP_X_MFB_LL_CON6, DIP_A_MFB_LL_CON6*/

typedef volatile union _DIP_X_REG_MFB_LL_CON7_
{
		volatile struct	/* 0x15022F80 */
		{
				FIELD  BLD_LL_C1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  BLD_LL_C2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BLD_LL_C3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON7;	/* DIP_X_MFB_LL_CON7, DIP_A_MFB_LL_CON7*/

typedef volatile union _DIP_X_REG_MFB_LL_CON8_
{
		volatile struct	/* 0x15022F84 */
		{
				FIELD  BLD_LL_SU1                            :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_LL_SU2                            :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_LL_SU3                            :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON8;	/* DIP_X_MFB_LL_CON8, DIP_A_MFB_LL_CON8*/

typedef volatile union _DIP_X_REG_MFB_LL_CON9_
{
		volatile struct	/* 0x15022F88 */
		{
				FIELD  BLD_LL_SL1                            :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_LL_SL2                            :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_LL_SL3                            :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON9;	/* DIP_X_MFB_LL_CON9, DIP_A_MFB_LL_CON9*/

typedef volatile union _DIP_X_REG_MFB_LL_CON10_
{
		volatile struct	/* 0x15022F8C */
		{
				FIELD  BLD_CONF_MAP_EN                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  BLD_LL_GRAD_EN                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  BLD_LL_GRAD_ENTH                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_LL_CON10;	/* DIP_X_MFB_LL_CON10, DIP_A_MFB_LL_CON10*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON0_
{
		volatile struct	/* 0x15022F90 */
		{
				FIELD  BLD_MBD_MAX_WT                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON0;	/* DIP_X_MFB_MBD_CON0, DIP_A_MFB_MBD_CON0*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON1_
{
		volatile struct	/* 0x15022F94 */
		{
				FIELD  BLD_MBD_YL1_THL_0                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL1_THL_1                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL1_THL_2                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL1_THL_3                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON1;	/* DIP_X_MFB_MBD_CON1, DIP_A_MFB_MBD_CON1*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON2_
{
		volatile struct	/* 0x15022F98 */
		{
				FIELD  BLD_MBD_YL1_THL_4                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL1_THH_0                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL1_THH_1                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL1_THH_2                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON2;	/* DIP_X_MFB_MBD_CON2, DIP_A_MFB_MBD_CON2*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON3_
{
		volatile struct	/* 0x15022F9C */
		{
				FIELD  BLD_MBD_YL1_THH_3                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL1_THH_4                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL2_THL_0                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL2_THL_1                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON3;	/* DIP_X_MFB_MBD_CON3, DIP_A_MFB_MBD_CON3*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON4_
{
		volatile struct	/* 0x15022FA0 */
		{
				FIELD  BLD_MBD_YL2_THL_2                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL2_THL_3                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL2_THL_4                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL2_THH_0                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON4;	/* DIP_X_MFB_MBD_CON4, DIP_A_MFB_MBD_CON4*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON5_
{
		volatile struct	/* 0x15022FA4 */
		{
				FIELD  BLD_MBD_YL2_THH_1                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL2_THH_2                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL2_THH_3                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL2_THH_4                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON5;	/* DIP_X_MFB_MBD_CON5, DIP_A_MFB_MBD_CON5*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON6_
{
		volatile struct	/* 0x15022FA8 */
		{
				FIELD  BLD_MBD_YL3_THL_0                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL3_THL_1                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL3_THL_2                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL3_THL_3                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON6;	/* DIP_X_MFB_MBD_CON6, DIP_A_MFB_MBD_CON6*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON7_
{
		volatile struct	/* 0x15022FAC */
		{
				FIELD  BLD_MBD_YL3_THL_4                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL3_THH_0                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_YL3_THH_1                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_YL3_THH_2                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON7;	/* DIP_X_MFB_MBD_CON7, DIP_A_MFB_MBD_CON7*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON8_
{
		volatile struct	/* 0x15022FB0 */
		{
				FIELD  BLD_MBD_YL3_THH_3                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_YL3_THH_4                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_CL1_THL_0                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_CL1_THL_1                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON8;	/* DIP_X_MFB_MBD_CON8, DIP_A_MFB_MBD_CON8*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON9_
{
		volatile struct	/* 0x15022FB4 */
		{
				FIELD  BLD_MBD_CL1_THL_2                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_CL1_THL_3                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_CL1_THL_4                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_CL1_THH_0                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON9;	/* DIP_X_MFB_MBD_CON9, DIP_A_MFB_MBD_CON9*/

typedef volatile union _DIP_X_REG_MFB_MBD_CON10_
{
		volatile struct	/* 0x15022FB8 */
		{
				FIELD  BLD_MBD_CL1_THH_1                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BLD_MBD_CL1_THH_2                     :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BLD_MBD_CL1_THH_3                     :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BLD_MBD_CL1_THH_4                     :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_MFB_MBD_CON10;	/* DIP_X_MFB_MBD_CON10, DIP_A_MFB_MBD_CON10*/

typedef volatile union _DIP_X_REG_FLC_OFFST0_
{
		volatile struct	/* 0x15022FC0 */
		{
				FIELD  FLC_OFST_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC_OFFST0;	/* DIP_X_FLC_OFFST0, DIP_A_FLC_OFFST0*/

typedef volatile union _DIP_X_REG_FLC_OFFST1_
{
		volatile struct	/* 0x15022FC4 */
		{
				FIELD  FLC_OFST_G                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC_OFFST1;	/* DIP_X_FLC_OFFST1, DIP_A_FLC_OFFST1*/

typedef volatile union _DIP_X_REG_FLC_OFFST2_
{
		volatile struct	/* 0x15022FC8 */
		{
				FIELD  FLC_OFST_R                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC_OFFST2;	/* DIP_X_FLC_OFFST2, DIP_A_FLC_OFFST2*/

typedef volatile union _DIP_X_REG_FLC_GAIN0_
{
		volatile struct	/* 0x15022FD0 */
		{
				FIELD  FLC_GAIN_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC_GAIN0;	/* DIP_X_FLC_GAIN0, DIP_A_FLC_GAIN0*/

typedef volatile union _DIP_X_REG_FLC_GAIN1_
{
		volatile struct	/* 0x15022FD4 */
		{
				FIELD  FLC_GAIN_G                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC_GAIN1;	/* DIP_X_FLC_GAIN1, DIP_A_FLC_GAIN1*/

typedef volatile union _DIP_X_REG_FLC_GAIN2_
{
		volatile struct	/* 0x15022FD8 */
		{
				FIELD  FLC_GAIN_R                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC_GAIN2;	/* DIP_X_FLC_GAIN2, DIP_A_FLC_GAIN2*/

typedef volatile union _DIP_X_REG_FLC2_OFFST0_
{
		volatile struct	/* 0x15022FE0 */
		{
				FIELD  FLC2_OFST_B                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC2_OFFST0;	/* DIP_X_FLC2_OFFST0, DIP_A_FLC2_OFFST0*/

typedef volatile union _DIP_X_REG_FLC2_OFFST1_
{
		volatile struct	/* 0x15022FE4 */
		{
				FIELD  FLC2_OFST_G                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC2_OFFST1;	/* DIP_X_FLC2_OFFST1, DIP_A_FLC2_OFFST1*/

typedef volatile union _DIP_X_REG_FLC2_OFFST2_
{
		volatile struct	/* 0x15022FE8 */
		{
				FIELD  FLC2_OFST_R                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC2_OFFST2;	/* DIP_X_FLC2_OFFST2, DIP_A_FLC2_OFFST2*/

typedef volatile union _DIP_X_REG_FLC2_GAIN0_
{
		volatile struct	/* 0x15022FF0 */
		{
				FIELD  FLC2_GAIN_B                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC2_GAIN0;	/* DIP_X_FLC2_GAIN0, DIP_A_FLC2_GAIN0*/

typedef volatile union _DIP_X_REG_FLC2_GAIN1_
{
		volatile struct	/* 0x15022FF4 */
		{
				FIELD  FLC2_GAIN_G                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC2_GAIN1;	/* DIP_X_FLC2_GAIN1, DIP_A_FLC2_GAIN1*/

typedef volatile union _DIP_X_REG_FLC2_GAIN2_
{
		volatile struct	/* 0x15022FF8 */
		{
				FIELD  FLC2_GAIN_R                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_FLC2_GAIN2;	/* DIP_X_FLC2_GAIN2, DIP_A_FLC2_GAIN2*/

typedef volatile union _DIP_X_REG_GGM_LUT_RB_
{
		volatile struct	/* 0x15023000 ~ 0x1502323F */
		{
				FIELD  GGM_R                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  GGM_B                                 : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_GGM_LUT_RB;	/* DIP_X_GGM_LUT_RB, DIP_A_GGM_LUT_RB*/

typedef volatile union _DIP_X_REG_GGM_LUT_G_
{
		volatile struct	/* 0x15023240 ~ 0x1502347F */
		{
				FIELD  GGM_G                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_GGM_LUT_G;	/* DIP_X_GGM_LUT_G, DIP_A_GGM_LUT_G*/

typedef volatile union _DIP_X_REG_GGM_CTRL_
{
		volatile struct	/* 0x15023480 */
		{
				FIELD  GGM_LNR                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_GGM_CTRL;	/* DIP_X_GGM_CTRL, DIP_A_GGM_CTRL*/

typedef volatile union _DIP_X_REG_PCA_TBL_
{
		volatile struct	/* 0x15023800 ~ 0x15023D9F */
		{
				FIELD  PCA_LUMA_GAIN                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  PCA_SAT_GAIN                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  PCA_HUE_SHIFT                         :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_TBL;	/* DIP_X_PCA_TBL, DIP_A_PCA_TBL*/

typedef volatile union _DIP_X_REG_PCA_CON1_
{
		volatile struct	/* 0x15023E00 */
		{
				FIELD  PCA_LUT_360                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  PCA_Y2YLUT_EN                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PCA_CTRL_BDR                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  PCA_CTRL_OFST                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RSV                                   :  1;		/*  4.. 4, 0x00000010 */
				FIELD  PCA_S_TH_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PCA_CFC_EN                            :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PCA_CNV_EN                            :  1;		/*  7.. 7, 0x00000080 */
				FIELD  PCA_TILE_EDGE                         :  4;		/*  8..11, 0x00000F00 */
				FIELD  PCA_LR                                :  5;		/* 12..16, 0x0001F000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON1;	/* DIP_X_PCA_CON1, DIP_A_PCA_CON1*/

typedef volatile union _DIP_X_REG_PCA_CON2_
{
		volatile struct	/* 0x15023E04 */
		{
				FIELD  PCA_C_TH                              :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PCA_CNV_01                            : 11;		/*  8..18, 0x0007FF00 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_CNV_00                            : 11;		/* 20..30, 0x7FF00000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON2;	/* DIP_X_PCA_CON2, DIP_A_PCA_CON2*/

typedef volatile union _DIP_X_REG_PCA_CON3_
{
		volatile struct	/* 0x15023E08 */
		{
				FIELD  PCA_HG                                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PCA_CNV_10                            : 11;		/*  8..18, 0x0007FF00 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_CNV_02                            : 11;		/* 20..30, 0x7FF00000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON3;	/* DIP_X_PCA_CON3, DIP_A_PCA_CON3*/

typedef volatile union _DIP_X_REG_PCA_CON4_
{
		volatile struct	/* 0x15023E0C */
		{
				FIELD  PCA_HR                                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PCA_CNV_12                            : 11;		/*  8..18, 0x0007FF00 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_CNV_11                            : 11;		/* 20..30, 0x7FF00000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON4;	/* DIP_X_PCA_CON4, DIP_A_PCA_CON4*/

typedef volatile union _DIP_X_REG_PCA_CON5_
{
		volatile struct	/* 0x15023E10 */
		{
				FIELD  PCA_HB                                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PCA_CNV_21                            : 11;		/*  8..18, 0x0007FF00 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  PCA_CNV_20                            : 11;		/* 20..30, 0x7FF00000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON5;	/* DIP_X_PCA_CON5, DIP_A_PCA_CON5*/

typedef volatile union _DIP_X_REG_PCA_CON6_
{
		volatile struct	/* 0x15023E14 */
		{
				FIELD  PCA_LB                                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PCA_LG                                :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RSV                                   :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  PCA_CNV_22                            : 11;		/* 20..30, 0x7FF00000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON6;	/* DIP_X_PCA_CON6, DIP_A_PCA_CON6*/

typedef volatile union _DIP_X_REG_PCA_CON7_
{
		volatile struct	/* 0x15023E18 */
		{
				FIELD  PCA_S_TH                              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  PCA_CMAX                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  PCA_H                                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  PCA_L                                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_PCA_CON7;	/* DIP_X_PCA_CON7, DIP_A_PCA_CON7*/

typedef volatile union _DIP_X_REG_OBC2_OFFST0_
{
		volatile struct	/* 0x15023E40 */
		{
				FIELD  OBC_OFST_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_OFFST0;	/* DIP_X_OBC2_OFFST0, DIP_A_OBC2_OFFST0*/

typedef volatile union _DIP_X_REG_OBC2_OFFST1_
{
		volatile struct	/* 0x15023E44 */
		{
				FIELD  OBC_OFST_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_OFFST1;	/* DIP_X_OBC2_OFFST1, DIP_A_OBC2_OFFST1*/

typedef volatile union _DIP_X_REG_OBC2_OFFST2_
{
		volatile struct	/* 0x15023E48 */
		{
				FIELD  OBC_OFST_GB                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_OFFST2;	/* DIP_X_OBC2_OFFST2, DIP_A_OBC2_OFFST2*/

typedef volatile union _DIP_X_REG_OBC2_OFFST3_
{
		volatile struct	/* 0x15023E4C */
		{
				FIELD  OBC_OFST_R                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_OFFST3;	/* DIP_X_OBC2_OFFST3, DIP_A_OBC2_OFFST3*/

typedef volatile union _DIP_X_REG_OBC2_GAIN0_
{
		volatile struct	/* 0x15023E50 */
		{
				FIELD  OBC_GAIN_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_GAIN0;	/* DIP_X_OBC2_GAIN0, DIP_A_OBC2_GAIN0*/

typedef volatile union _DIP_X_REG_OBC2_GAIN1_
{
		volatile struct	/* 0x15023E54 */
		{
				FIELD  OBC_GAIN_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_GAIN1;	/* DIP_X_OBC2_GAIN1, DIP_A_OBC2_GAIN1*/

typedef volatile union _DIP_X_REG_OBC2_GAIN2_
{
		volatile struct	/* 0x15023E58 */
		{
				FIELD  OBC_GAIN_GB                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_GAIN2;	/* DIP_X_OBC2_GAIN2, DIP_A_OBC2_GAIN2*/

typedef volatile union _DIP_X_REG_OBC2_GAIN3_
{
		volatile struct	/* 0x15023E5C */
		{
				FIELD  OBC_GAIN_R                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_OBC2_GAIN3;	/* DIP_X_OBC2_GAIN3, DIP_A_OBC2_GAIN3*/

typedef volatile union _DIP_X_REG_BNR2_BPC_CON_
{
		volatile struct	/* 0x15023E70 */
		{
				FIELD  BPC_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  BPC_LUT_EN                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  BPC_TABLE_END_MODE                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BPC_AVG_MODE                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  BPC_DTC_MODE                          :  2;		/* 12..13, 0x00003000 */
				FIELD  BPC_CS_MODE                           :  2;		/* 14..15, 0x0000C000 */
				FIELD  BPC_CRC_MODE                          :  2;		/* 16..17, 0x00030000 */
				FIELD  BPC_EXC                               :  1;		/* 18..18, 0x00040000 */
				FIELD  BPC_BLD_MODE                          :  1;		/* 19..19, 0x00080000 */
				FIELD  BNR_LE_INV_CTL                        :  4;		/* 20..23, 0x00F00000 */
				FIELD  BNR_OSC_COUNT                         :  4;		/* 24..27, 0x0F000000 */
				FIELD  BNR_EDGE                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_CON;	/* DIP_X_BNR2_BPC_CON, DIP_A_BNR2_BPC_CON*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH1_
{
		volatile struct	/* 0x15023E74 */
		{
				FIELD  BPC_TH_LWB                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_TH_Y                              : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_BLD_SLP0                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH1;	/* DIP_X_BNR2_BPC_TH1, DIP_A_BNR2_BPC_TH1*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH2_
{
		volatile struct	/* 0x15023E78 */
		{
				FIELD  BPC_TH_UPB                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  BPC_BLD0                              :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  BPC_BLD1                              :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH2;	/* DIP_X_BNR2_BPC_TH2, DIP_A_BNR2_BPC_TH2*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH3_
{
		volatile struct	/* 0x15023E7C */
		{
				FIELD  BPC_TH_XA                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_TH_XB                             : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_TH_SLA                            :  4;		/* 24..27, 0x0F000000 */
				FIELD  BPC_TH_SLB                            :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH3;	/* DIP_X_BNR2_BPC_TH3, DIP_A_BNR2_BPC_TH3*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH4_
{
		volatile struct	/* 0x15023E80 */
		{
				FIELD  BPC_DK_TH_XA                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_DK_TH_XB                          : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_DK_TH_SLA                         :  4;		/* 24..27, 0x0F000000 */
				FIELD  BPC_DK_TH_SLB                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH4;	/* DIP_X_BNR2_BPC_TH4, DIP_A_BNR2_BPC_TH4*/

typedef volatile union _DIP_X_REG_BNR2_BPC_DTC_
{
		volatile struct	/* 0x15023E84 */
		{
				FIELD  BPC_RNG                               :  4;		/*  0.. 3, 0x0000000F */
				FIELD  BPC_CS_RNG                            :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  BPC_CT_LV                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  BPC_TH_MUL                            :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  BPC_NO_LV                             :  3;		/* 24..26, 0x07000000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_DTC;	/* DIP_X_BNR2_BPC_DTC, DIP_A_BNR2_BPC_DTC*/

typedef volatile union _DIP_X_REG_BNR2_BPC_COR_
{
		volatile struct	/* 0x15023E88 */
		{
				FIELD  BPC_DIR_MAX                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  BPC_DIR_TH                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPC_RANK_IDXR                         :  3;		/* 16..18, 0x00070000 */
				FIELD  BPC_RANK_IDXG                         :  3;		/* 19..21, 0x00380000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BPC_DIR_TH2                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_COR;	/* DIP_X_BNR2_BPC_COR, DIP_A_BNR2_BPC_COR*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TBLI1_
{
		volatile struct	/* 0x15023E8C */
		{
				FIELD  BPC_XOFFSET                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BPC_YOFFSET                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TBLI1;	/* DIP_X_BNR2_BPC_TBLI1, DIP_A_BNR2_BPC_TBLI1*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TBLI2_
{
		volatile struct	/* 0x15023E90 */
		{
				FIELD  BPC_XSIZE                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BPC_YSIZE                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TBLI2;	/* DIP_X_BNR2_BPC_TBLI2, DIP_A_BNR2_BPC_TBLI2*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH1_C_
{
		volatile struct	/* 0x15023E94 */
		{
				FIELD  BPC_C_TH_LWB                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_C_TH_Y                            : 12;		/* 12..23, 0x00FFF000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH1_C;	/* DIP_X_BNR2_BPC_TH1_C, DIP_A_BNR2_BPC_TH1_C*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH2_C_
{
		volatile struct	/* 0x15023E98 */
		{
				FIELD  BPC_C_TH_UPB                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  1;		/* 12..12, 0x00001000 */
				FIELD  BPC_RANK_IDXB                         :  3;		/* 13..15, 0x0000E000 */
				FIELD  BPC_BLD_LWB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH2_C;	/* DIP_X_BNR2_BPC_TH2_C, DIP_A_BNR2_BPC_TH2_C*/

typedef volatile union _DIP_X_REG_BNR2_BPC_TH3_C_
{
		volatile struct	/* 0x15023E9C */
		{
				FIELD  BPC_C_TH_XA                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_C_TH_XB                           : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_C_TH_SLA                          :  4;		/* 24..27, 0x0F000000 */
				FIELD  BPC_C_TH_SLB                          :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_BPC_TH3_C;	/* DIP_X_BNR2_BPC_TH3_C, DIP_A_BNR2_BPC_TH3_C*/

typedef volatile union _DIP_X_REG_BNR2_NR1_CON_
{
		volatile struct	/* 0x15023EA0 */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  NR1_CT_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_NR1_CON;	/* DIP_X_BNR2_NR1_CON, DIP_A_BNR2_NR1_CON*/

typedef volatile union _DIP_X_REG_BNR2_NR1_CT_CON_
{
		volatile struct	/* 0x15023EA4 */
		{
				FIELD  NR1_CT_MD                             :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR1_CT_MD2                            :  2;		/*  2.. 3, 0x0000000C */
				FIELD  NR1_CT_THRD                           : 10;		/*  4..13, 0x00003FF0 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  NR1_MBND                              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  NR1_CT_SLOPE                          :  2;		/* 28..29, 0x30000000 */
				FIELD  NR1_CT_DIV                            :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_NR1_CT_CON;	/* DIP_X_BNR2_NR1_CT_CON, DIP_A_BNR2_NR1_CT_CON*/

typedef volatile union _DIP_X_REG_BNR2_RSV1_
{
		volatile struct	/* 0x15023EA8 */
		{
				FIELD  RSV1                                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_RSV1;	/* DIP_X_BNR2_RSV1, DIP_A_BNR2_RSV1*/

typedef volatile union _DIP_X_REG_BNR2_RSV2_
{
		volatile struct	/* 0x15023EAC */
		{
				FIELD  RSV2                                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_RSV2;	/* DIP_X_BNR2_RSV2, DIP_A_BNR2_RSV2*/

typedef volatile union _DIP_X_REG_BNR2_PDC_CON_
{
		volatile struct	/* 0x15023EB0 */
		{
				FIELD  PDC_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  PDC_CT                                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PDC_MODE                              :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  PDC_OUT                               :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_CON;	/* DIP_X_BNR2_PDC_CON, DIP_A_BNR2_PDC_CON*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_L0_
{
		volatile struct	/* 0x15023EB4 */
		{
				FIELD  PDC_GCF_L00                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L10                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_L0;	/* DIP_X_BNR2_PDC_GAIN_L0, DIP_A_BNR2_PDC_GAIN_L0*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_L1_
{
		volatile struct	/* 0x15023EB8 */
		{
				FIELD  PDC_GCF_L01                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L20                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_L1;	/* DIP_X_BNR2_PDC_GAIN_L1, DIP_A_BNR2_PDC_GAIN_L1*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_L2_
{
		volatile struct	/* 0x15023EBC */
		{
				FIELD  PDC_GCF_L11                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L02                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_L2;	/* DIP_X_BNR2_PDC_GAIN_L2, DIP_A_BNR2_PDC_GAIN_L2*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_L3_
{
		volatile struct	/* 0x15023EC0 */
		{
				FIELD  PDC_GCF_L30                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L21                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_L3;	/* DIP_X_BNR2_PDC_GAIN_L3, DIP_A_BNR2_PDC_GAIN_L3*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_L4_
{
		volatile struct	/* 0x15023EC4 */
		{
				FIELD  PDC_GCF_L12                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L03                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_L4;	/* DIP_X_BNR2_PDC_GAIN_L4, DIP_A_BNR2_PDC_GAIN_L4*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_R0_
{
		volatile struct	/* 0x15023EC8 */
		{
				FIELD  PDC_GCF_R00                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R10                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_R0;	/* DIP_X_BNR2_PDC_GAIN_R0, DIP_A_BNR2_PDC_GAIN_R0*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_R1_
{
		volatile struct	/* 0x15023ECC */
		{
				FIELD  PDC_GCF_R01                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R20                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_R1;	/* DIP_X_BNR2_PDC_GAIN_R1, DIP_A_BNR2_PDC_GAIN_R1*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_R2_
{
		volatile struct	/* 0x15023ED0 */
		{
				FIELD  PDC_GCF_R11                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R02                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_R2;	/* DIP_X_BNR2_PDC_GAIN_R2, DIP_A_BNR2_PDC_GAIN_R2*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_R3_
{
		volatile struct	/* 0x15023ED4 */
		{
				FIELD  PDC_GCF_R30                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R21                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_R3;	/* DIP_X_BNR2_PDC_GAIN_R3, DIP_A_BNR2_PDC_GAIN_R3*/

typedef volatile union _DIP_X_REG_BNR2_PDC_GAIN_R4_
{
		volatile struct	/* 0x15023ED8 */
		{
				FIELD  PDC_GCF_R12                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R03                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_GAIN_R4;	/* DIP_X_BNR2_PDC_GAIN_R4, DIP_A_BNR2_PDC_GAIN_R4*/

typedef volatile union _DIP_X_REG_BNR2_PDC_TH_GB_
{
		volatile struct	/* 0x15023EDC */
		{
				FIELD  PDC_GTH                               : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_BTH                               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_TH_GB;	/* DIP_X_BNR2_PDC_TH_GB, DIP_A_BNR2_PDC_TH_GB*/

typedef volatile union _DIP_X_REG_BNR2_PDC_TH_IA_
{
		volatile struct	/* 0x15023EE0 */
		{
				FIELD  PDC_ITH                               : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_ATH                               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_TH_IA;	/* DIP_X_BNR2_PDC_TH_IA, DIP_A_BNR2_PDC_TH_IA*/

typedef volatile union _DIP_X_REG_BNR2_PDC_TH_HD_
{
		volatile struct	/* 0x15023EE4 */
		{
				FIELD  PDC_NTH                               : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_DTH                               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_TH_HD;	/* DIP_X_BNR2_PDC_TH_HD, DIP_A_BNR2_PDC_TH_HD*/

typedef volatile union _DIP_X_REG_BNR2_PDC_SL_
{
		volatile struct	/* 0x15023EE8 */
		{
				FIELD  PDC_GSL                               :  4;		/*  0.. 3, 0x0000000F */
				FIELD  PDC_BSL                               :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  PDC_ISL                               :  4;		/*  8..11, 0x00000F00 */
				FIELD  PDC_ASL                               :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_NORM                          :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_SL;	/* DIP_X_BNR2_PDC_SL, DIP_A_BNR2_PDC_SL*/

typedef volatile union _DIP_X_REG_BNR2_PDC_POS_
{
		volatile struct	/* 0x15023EEC */
		{
				FIELD  PDC_XCENTER                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  PDC_YCENTER                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_BNR2_PDC_POS;	/* DIP_X_BNR2_PDC_POS, DIP_A_BNR2_PDC_POS*/

typedef volatile union _DIP_X_REG_RMG2_HDR_CFG_
{
		volatile struct	/* 0x15023EF0 */
		{
				FIELD  RMG_IHDR_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RMG_IHDR_LE_FIRST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RMG_ZHDR_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RMG_ZHDR_RLE                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RMG_ZHDR_GLE                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RMG_ZHDR_BLE                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RMG_HDR_TH                            : 12;		/*  8..19, 0x000FFF00 */
				FIELD  RMG_OSC_TH                            : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMG2_HDR_CFG;	/* DIP_X_RMG2_HDR_CFG, DIP_A_RMG2_HDR_CFG*/

typedef volatile union _DIP_X_REG_RMG2_HDR_GAIN_
{
		volatile struct	/* 0x15023EF4 */
		{
				FIELD  RMG_HDR_GAIN                          :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  RMG_HDR_RATIO                         :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  RMG_LE_INV_CTL                        :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMG2_HDR_GAIN;	/* DIP_X_RMG2_HDR_GAIN, DIP_A_RMG2_HDR_GAIN*/

typedef volatile union _DIP_X_REG_RMG2_HDR_CFG2_
{
		volatile struct	/* 0x15023EF8 */
		{
				FIELD  RMG_HDR_THK                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMG2_HDR_CFG2;	/* DIP_X_RMG2_HDR_CFG2, DIP_A_RMG2_HDR_CFG2*/

typedef volatile union _DIP_X_REG_RMM2_OSC_
{
		volatile struct	/* 0x15023F10 */
		{
				FIELD  RMM_OSC_TH                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  RMM_SEDIR_SL                          :  3;		/* 12..14, 0x00007000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  RMM_SEBLD_WD                          :  4;		/* 16..19, 0x000F0000 */
				FIELD  RMM_LEBLD_WD                          :  4;		/* 20..23, 0x00F00000 */
				FIELD  RMM_LE_INV_CTL                        :  4;		/* 24..27, 0x0F000000 */
				FIELD  RMM_EDGE                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_OSC;	/* DIP_X_RMM2_OSC, DIP_A_RMM2_OSC*/

typedef volatile union _DIP_X_REG_RMM2_MC_
{
		volatile struct	/* 0x15023F14 */
		{
				FIELD  RMM_MO_EDGE                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RMM_MO_EN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_MOBLD_FT                          :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RMM_MOTH_RATIO                        :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RMM_HORI_ADDWT                        :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_MC;	/* DIP_X_RMM2_MC, DIP_A_RMM2_MC*/

typedef volatile union _DIP_X_REG_RMM2_REVG_1_
{
		volatile struct	/* 0x15023F18 */
		{
				FIELD  RMM_REVG_R                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  RMM_REVG_GR                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_REVG_1;	/* DIP_X_RMM2_REVG_1, DIP_A_RMM2_REVG_1*/

typedef volatile union _DIP_X_REG_RMM2_REVG_2_
{
		volatile struct	/* 0x15023F1C */
		{
				FIELD  RMM_REVG_B                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  RMM_REVG_GB                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_REVG_2;	/* DIP_X_RMM2_REVG_2, DIP_A_RMM2_REVG_2*/

typedef volatile union _DIP_X_REG_RMM2_LEOS_
{
		volatile struct	/* 0x15023F20 */
		{
				FIELD  RMM_LEOS_GRAY                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_LEOS;	/* DIP_X_RMM2_LEOS, DIP_A_RMM2_LEOS*/

typedef volatile union _DIP_X_REG_RMM2_MC2_
{
		volatile struct	/* 0x15023F24 */
		{
				FIELD  RMM_MOSE_TH                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  RMM_MOSE_BLDWD                        :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_MC2;	/* DIP_X_RMM2_MC2, DIP_A_RMM2_MC2*/

typedef volatile union _DIP_X_REG_RMM2_DIFF_LB_
{
		volatile struct	/* 0x15023F28 */
		{
				FIELD  RMM_DIFF_LB                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_DIFF_LB;	/* DIP_X_RMM2_DIFF_LB, DIP_A_RMM2_DIFF_LB*/

typedef volatile union _DIP_X_REG_RMM2_MA_
{
		volatile struct	/* 0x15023F2C */
		{
				FIELD  RMM_MASE_RATIO                        :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  RMM_OSBLD_WD                          :  4;		/*  8..11, 0x00000F00 */
				FIELD  RMM_MASE_BLDWD                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  RMM_SENOS_LEFAC                       :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  RMM_SEYOS_LEFAC                       :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_MA;	/* DIP_X_RMM2_MA, DIP_A_RMM2_MA*/

typedef volatile union _DIP_X_REG_RMM2_TUNE_
{
		volatile struct	/* 0x15023F30 */
		{
				FIELD  RMM_PSHOR_SEEN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RMM_PS_BLUR                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RMM_OSC_REPEN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RMM_SOFT_TH_EN                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RMM_LE_LOWPA_EN                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RMM_SE_LOWPA_EN                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RMM_PSSEC_ONLY                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  RMM_OSCLE_ONLY                        :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RMM_PS_TH                             : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  RMM_MOLE_DIREN                        :  1;		/* 28..28, 0x10000000 */
				FIELD  RMM_MOSE_DIREN                        :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RMM2_TUNE;	/* DIP_X_RMM2_TUNE, DIP_A_RMM2_TUNE*/

typedef volatile union _DIP_X_REG_RCP2_CROP_CON1_
{
		volatile struct	/* 0x15023F60 */
		{
				FIELD  RCP_STR_X                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  RCP_END_X                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RCP2_CROP_CON1;	/* DIP_X_RCP2_CROP_CON1, DIP_A_RCP2_CROP_CON1*/

typedef volatile union _DIP_X_REG_RCP2_CROP_CON2_
{
		volatile struct	/* 0x15023F64 */
		{
				FIELD  RCP_STR_Y                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  RCP_END_Y                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RCP2_CROP_CON2;	/* DIP_X_RCP2_CROP_CON2, DIP_A_RCP2_CROP_CON2*/

typedef volatile union _DIP_X_REG_LSC2_CTL1_
{
		volatile struct	/* 0x15023F70 */
		{
				FIELD  SDBLK_YOFST                           :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 10;		/*  6..15, 0x0000FFC0 */
				FIELD  SDBLK_XOFST                           :  6;		/* 16..21, 0x003F0000 */
				FIELD  LSC_EXTEND_COEF_MODE                  :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  SD_COEFRD_MODE                        :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  SD_ULTRA_MODE                         :  1;		/* 28..28, 0x10000000 */
				FIELD  LSC_PRC_MODE                          :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_CTL1;	/* DIP_X_LSC2_CTL1, DIP_A_LSC2_CTL1*/

typedef volatile union _DIP_X_REG_LSC2_CTL2_
{
		volatile struct	/* 0x15023F74 */
		{
				FIELD  LSC_SDBLK_WIDTH                       : 13;		/*  0..12, 0x00001FFF */
				FIELD  LSC_SDBLK_XNUM                        :  5;		/* 13..17, 0x0003E000 */
				FIELD  LSC_OFLN                              :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_CTL2;	/* DIP_X_LSC2_CTL2, DIP_A_LSC2_CTL2*/

typedef volatile union _DIP_X_REG_LSC2_CTL3_
{
		volatile struct	/* 0x15023F78 */
		{
				FIELD  LSC_SDBLK_HEIGHT                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  LSC_SDBLK_YNUM                        :  5;		/* 13..17, 0x0003E000 */
				FIELD  LSC_SPARE                             : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_CTL3;	/* DIP_X_LSC2_CTL3, DIP_A_LSC2_CTL3*/

typedef volatile union _DIP_X_REG_LSC2_LBLOCK_
{
		volatile struct	/* 0x15023F7C */
		{
				FIELD  LSC_SDBLK_lHEIGHT                     : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LSC_SDBLK_lWIDTH                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_LBLOCK;	/* DIP_X_LSC2_LBLOCK, DIP_A_LSC2_LBLOCK*/

typedef volatile union _DIP_X_REG_LSC2_RATIO_0_
{
		volatile struct	/* 0x15023F80 */
		{
				FIELD  LSC_RA03                              :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  LSC_RA02                              :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LSC_RA01                              :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  LSC_RA00                              :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_RATIO_0;	/* DIP_X_LSC2_RATIO_0, DIP_A_LSC2_RATIO_0*/

typedef volatile union _DIP_X_REG_LSC2_TPIPE_OFST_
{
		volatile struct	/* 0x15023F84 */
		{
				FIELD  LSC_TPIPE_OFST_Y                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LSC_TPIPE_OFST_X                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_TPIPE_OFST;	/* DIP_X_LSC2_TPIPE_OFST, DIP_A_LSC2_TPIPE_OFST*/

typedef volatile union _DIP_X_REG_LSC2_TPIPE_SIZE_
{
		volatile struct	/* 0x15023F88 */
		{
				FIELD  LSC_TPIPE_SIZE_Y                      : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LSC_TPIPE_SIZE_X                      : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_TPIPE_SIZE;	/* DIP_X_LSC2_TPIPE_SIZE, DIP_A_LSC2_TPIPE_SIZE*/

typedef volatile union _DIP_X_REG_LSC2_GAIN_TH_
{
		volatile struct	/* 0x15023F8C */
		{
				FIELD  LSC_GAIN_TH2                          :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSC_GAIN_TH1                          :  9;		/* 10..18, 0x0007FC00 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  LSC_GAIN_TH0                          :  9;		/* 20..28, 0x1FF00000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_GAIN_TH;	/* DIP_X_LSC2_GAIN_TH, DIP_A_LSC2_GAIN_TH*/

typedef volatile union _DIP_X_REG_LSC2_RATIO_1_
{
		volatile struct	/* 0x15023F90 */
		{
				FIELD  LSC_RA13                              :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  LSC_RA12                              :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LSC_RA11                              :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  LSC_RA10                              :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_LSC2_RATIO_1;	/* DIP_X_LSC2_RATIO_1, DIP_A_LSC2_RATIO_1*/

typedef volatile union _DIP_X_REG_DBS2_SIGMA_
{
		volatile struct	/* 0x15023FA0 */
		{
				FIELD  DBS_OFST                              : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  DBS_SL                                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_SIGMA;	/* DIP_X_DBS2_SIGMA, DIP_A_DBS2_SIGMA*/

typedef volatile union _DIP_X_REG_DBS2_BSTBL_0_
{
		volatile struct	/* 0x15023FA4 */
		{
				FIELD  DBS_BIAS_Y0                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y1                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y2                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_BIAS_Y3                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_BSTBL_0;	/* DIP_X_DBS2_BSTBL_0, DIP_A_DBS2_BSTBL_0*/

typedef volatile union _DIP_X_REG_DBS2_BSTBL_1_
{
		volatile struct	/* 0x15023FA8 */
		{
				FIELD  DBS_BIAS_Y4                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y5                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y6                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_BIAS_Y7                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_BSTBL_1;	/* DIP_X_DBS2_BSTBL_1, DIP_A_DBS2_BSTBL_1*/

typedef volatile union _DIP_X_REG_DBS2_BSTBL_2_
{
		volatile struct	/* 0x15023FAC */
		{
				FIELD  DBS_BIAS_Y8                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y9                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y10                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_BIAS_Y11                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_BSTBL_2;	/* DIP_X_DBS2_BSTBL_2, DIP_A_DBS2_BSTBL_2*/

typedef volatile union _DIP_X_REG_DBS2_BSTBL_3_
{
		volatile struct	/* 0x15023FB0 */
		{
				FIELD  DBS_BIAS_Y12                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y13                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y14                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_BSTBL_3;	/* DIP_X_DBS2_BSTBL_3, DIP_A_DBS2_BSTBL_3*/

typedef volatile union _DIP_X_REG_DBS2_CTL_
{
		volatile struct	/* 0x15023FB4 */
		{
				FIELD  DBS_HDR_GNP                           :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  DBS_SL_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  DBS_LE_INV_CTL                        :  4;		/*  8..11, 0x00000F00 */
				FIELD  DBS_EDGE                              :  4;		/* 12..15, 0x0000F000 */
				FIELD  DBS_HDR_GAIN                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_HDR_GAIN2                         :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_CTL;	/* DIP_X_DBS2_CTL, DIP_A_DBS2_CTL*/

typedef volatile union _DIP_X_REG_DBS2_CTL_2_
{
		volatile struct	/* 0x15023FB8 */
		{
				FIELD  DBS_HDR_OSCTH                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_CTL_2;	/* DIP_X_DBS2_CTL_2, DIP_A_DBS2_CTL_2*/

typedef volatile union _DIP_X_REG_DBS2_SIGMA_2_
{
		volatile struct	/* 0x15023FBC */
		{
				FIELD  DBS_MUL_B                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_MUL_GB                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_MUL_GR                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_MUL_R                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_SIGMA_2;	/* DIP_X_DBS2_SIGMA_2, DIP_A_DBS2_SIGMA_2*/

typedef volatile union _DIP_X_REG_DBS2_YGN_
{
		volatile struct	/* 0x15023FC0 */
		{
				FIELD  DBS_YGN_B                             :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  DBS_YGN_GB                            :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  DBS_YGN_GR                            :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DBS_YGN_R                             :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_YGN;	/* DIP_X_DBS2_YGN, DIP_A_DBS2_YGN*/

typedef volatile union _DIP_X_REG_DBS2_SL_Y12_
{
		volatile struct	/* 0x15023FC4 */
		{
				FIELD  DBS_SL_Y1                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_Y2                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_SL_Y12;	/* DIP_X_DBS2_SL_Y12, DIP_A_DBS2_SL_Y12*/

typedef volatile union _DIP_X_REG_DBS2_SL_Y34_
{
		volatile struct	/* 0x15023FC8 */
		{
				FIELD  DBS_SL_Y3                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_Y4                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_SL_Y34;	/* DIP_X_DBS2_SL_Y34, DIP_A_DBS2_SL_Y34*/

typedef volatile union _DIP_X_REG_DBS2_SL_G12_
{
		volatile struct	/* 0x15023FCC */
		{
				FIELD  DBS_SL_G1                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_G2                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_SL_G12;	/* DIP_X_DBS2_SL_G12, DIP_A_DBS2_SL_G12*/

typedef volatile union _DIP_X_REG_DBS2_SL_G34_
{
		volatile struct	/* 0x15023FD0 */
		{
				FIELD  DBS_SL_G3                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_G4                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_DBS2_SL_G34;	/* DIP_X_DBS2_SL_G34, DIP_A_DBS2_SL_G34*/

typedef volatile union _DIP_X_REG_ANR_TBL_
{
		volatile struct	/* 0x15024000 ~ 0x150243FF */
		{
				FIELD  ANR_TBL_Y0                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR_TBL_U0                            :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR_TBL_V0                            :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  ANR_TBL_Y1                            :  4;		/* 16..19, 0x000F0000 */
				FIELD  ANR_TBL_U1                            :  4;		/* 20..23, 0x00F00000 */
				FIELD  ANR_TBL_V1                            :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_TBL;	/* DIP_X_ANR_TBL, DIP_A_ANR_TBL*/

typedef volatile union _DIP_X_REG_ANR_CON1_
{
		volatile struct	/* 0x15024400 */
		{
				FIELD  ANR_ENC                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  ANR_ENY                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  ANR_SCALE_MODE                        :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_Y_DIR                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  ANR_TILE_EDGE                         :  4;		/* 16..19, 0x000F0000 */
				FIELD  ANR_MEDIAN_EN                         :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_LCE_LINK                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  ANR_TABLE_EN                          :  1;		/* 28..28, 0x10000000 */
				FIELD  ANR_TBL_PRC                           :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_CON1;	/* DIP_X_ANR_CON1, DIP_A_ANR_CON1*/

typedef volatile union _DIP_X_REG_ANR_CON2_
{
		volatile struct	/* 0x15024404 */
		{
				FIELD  ANR_IMPL_MODE                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  ANR_C_MED_EN                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_C_SM_EDGE                         :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  ANR_FLT_C                             :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_LR                                :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR_ALPHA                             :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR_C_SM_EDGE_TH                      :  3;		/* 24..26, 0x07000000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_CON2;	/* DIP_X_ANR_CON2, DIP_A_ANR_CON2*/

typedef volatile union _DIP_X_REG_ANR_YAD1_
{
		volatile struct	/* 0x15024408 */
		{
				FIELD  ANR_CEN_GAIN_LO_TH                    :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_CEN_GAIN_HI_TH                    :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_K_LO_TH                           :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  ANR_K_HI_TH                           :  4;		/* 24..27, 0x0F000000 */
				FIELD  ANR_K_TH_C                            :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_YAD1;	/* DIP_X_ANR_YAD1, DIP_A_ANR_YAD1*/

typedef volatile union _DIP_X_REG_ANR_YAD2_
{
		volatile struct	/* 0x1502440C */
		{
				FIELD  ANR_PTY_VGAIN                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR_PTY_GAIN_TH                       :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_K_RAT                             :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_YAD2;	/* DIP_X_ANR_YAD2, DIP_A_ANR_YAD2*/

typedef volatile union _DIP_X_REG_ANR_Y4LUT1_
{
		volatile struct	/* 0x15024410 */
		{
				FIELD  ANR_Y_CPX1                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_Y_CPX2                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_Y_CPX3                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_Y4LUT1;	/* DIP_X_ANR_Y4LUT1, DIP_A_ANR_Y4LUT1*/

typedef volatile union _DIP_X_REG_ANR_Y4LUT2_
{
		volatile struct	/* 0x15024414 */
		{
				FIELD  ANR_Y_SCALE_CPY0                      :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_Y_SCALE_CPY1                      :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_Y_SCALE_CPY2                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_Y_SCALE_CPY3                      :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_Y4LUT2;	/* DIP_X_ANR_Y4LUT2, DIP_A_ANR_Y4LUT2*/

typedef volatile union _DIP_X_REG_ANR_Y4LUT3_
{
		volatile struct	/* 0x15024418 */
		{
				FIELD  ANR_Y_SCALE_SP0                       :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_Y_SCALE_SP1                       :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_Y_SCALE_SP2                       :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_Y_SCALE_SP3                       :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_Y4LUT3;	/* DIP_X_ANR_Y4LUT3, DIP_A_ANR_Y4LUT3*/

typedef volatile union _DIP_X_REG_ANR_C4LUT1_
{
		volatile struct	/* 0x1502441C */
		{
				FIELD  ANR_C_CPX1                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_C_CPX2                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_C_CPX3                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_C4LUT1;	/* DIP_X_ANR_C4LUT1, DIP_A_ANR_C4LUT1*/

typedef volatile union _DIP_X_REG_ANR_C4LUT2_
{
		volatile struct	/* 0x15024420 */
		{
				FIELD  ANR_C_SCALE_CPY0                      :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_C_SCALE_CPY1                      :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_C_SCALE_CPY2                      :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_C_SCALE_CPY3                      :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_C4LUT2;	/* DIP_X_ANR_C4LUT2, DIP_A_ANR_C4LUT2*/

typedef volatile union _DIP_X_REG_ANR_C4LUT3_
{
		volatile struct	/* 0x15024424 */
		{
				FIELD  ANR_C_SCALE_SP0                       :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_C_SCALE_SP1                       :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_C_SCALE_SP2                       :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_C_SCALE_SP3                       :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_C4LUT3;	/* DIP_X_ANR_C4LUT3, DIP_A_ANR_C4LUT3*/

typedef volatile union _DIP_X_REG_ANR_A4LUT2_
{
		volatile struct	/* 0x15024428 */
		{
				FIELD  ANR_Y_ACT_CPY0                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_Y_ACT_CPY1                        :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_Y_ACT_CPY2                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR_Y_ACT_CPY3                        :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_A4LUT2;	/* DIP_X_ANR_A4LUT2, DIP_A_ANR_A4LUT2*/

typedef volatile union _DIP_X_REG_ANR_A4LUT3_
{
		volatile struct	/* 0x1502442C */
		{
				FIELD  ANR_Y_ACT_SP0                         :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_Y_ACT_SP1                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_Y_ACT_SP2                         :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR_Y_ACT_SP3                         :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_A4LUT3;	/* DIP_X_ANR_A4LUT3, DIP_A_ANR_A4LUT3*/

typedef volatile union _DIP_X_REG_ANR_L4LUT1_
{
		volatile struct	/* 0x15024430 */
		{
				FIELD  ANR_LCE_X1                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_LCE_X2                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_LCE_X3                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_L4LUT1;	/* DIP_X_ANR_L4LUT1, DIP_A_ANR_L4LUT1*/

typedef volatile union _DIP_X_REG_ANR_L4LUT2_
{
		volatile struct	/* 0x15024434 */
		{
				FIELD  ANR_LCE_GAIN0                         :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_LCE_GAIN1                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_LCE_GAIN2                         :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR_LCE_GAIN3                         :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_L4LUT2;	/* DIP_X_ANR_L4LUT2, DIP_A_ANR_L4LUT2*/

typedef volatile union _DIP_X_REG_ANR_L4LUT3_
{
		volatile struct	/* 0x15024438 */
		{
				FIELD  ANR_LCE_SP0                           :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_LCE_SP1                           :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_LCE_SP2                           :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR_LCE_SP3                           :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_L4LUT3;	/* DIP_X_ANR_L4LUT3, DIP_A_ANR_L4LUT3*/

typedef volatile union _DIP_X_REG_ANR_PTY_
{
		volatile struct	/* 0x1502443C */
		{
				FIELD  ANR_PTY1                              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_PTY2                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_PTY3                              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR_PTY4                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_PTY;	/* DIP_X_ANR_PTY, DIP_A_ANR_PTY*/

typedef volatile union _DIP_X_REG_ANR_CAD_
{
		volatile struct	/* 0x15024440 */
		{
				FIELD  ANR_PTC_VGAIN                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR_PTC_GAIN_TH                       :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_C_L_DIFF_TH                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_CAD;	/* DIP_X_ANR_CAD, DIP_A_ANR_CAD*/

typedef volatile union _DIP_X_REG_ANR_PTC_
{
		volatile struct	/* 0x15024444 */
		{
				FIELD  ANR_PTC1                              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_PTC2                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_PTC3                              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR_PTC4                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_PTC;	/* DIP_X_ANR_PTC, DIP_A_ANR_PTC*/

typedef volatile union _DIP_X_REG_ANR_LCE_
{
		volatile struct	/* 0x15024448 */
		{
				FIELD  ANR_LCE_C_GAIN                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR_LCE_SCALE_GAIN                    :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  ANR_LM_WT                             :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_LCE;	/* DIP_X_ANR_LCE, DIP_A_ANR_LCE*/

typedef volatile union _DIP_X_REG_ANR_MED1_
{
		volatile struct	/* 0x1502444C */
		{
				FIELD  ANR_COR_TH                            :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_COR_SL                            :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  ANR_MCD_TH                            :  5;		/* 12..16, 0x0001F000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR_MCD_SL                            :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR_LCL_TH                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_MED1;	/* DIP_X_ANR_MED1, DIP_A_ANR_MED1*/

typedef volatile union _DIP_X_REG_ANR_MED2_
{
		volatile struct	/* 0x15024450 */
		{
				FIELD  ANR_LCL_SL                            :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  ANR_LCL_LV                            :  5;		/*  4.. 8, 0x000001F0 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  ANR_SCL_TH                            :  6;		/* 12..17, 0x0003F000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  ANR_SCL_SL                            :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR_SCL_LV                            :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_MED2;	/* DIP_X_ANR_MED2, DIP_A_ANR_MED2*/

typedef volatile union _DIP_X_REG_ANR_MED3_
{
		volatile struct	/* 0x15024454 */
		{
				FIELD  ANR_NCL_TH                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_NCL_SL                            :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  ANR_NCL_LV                            :  5;		/* 12..16, 0x0001F000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR_VAR                               :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR_Y0                                :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_MED3;	/* DIP_X_ANR_MED3, DIP_A_ANR_MED3*/

typedef volatile union _DIP_X_REG_ANR_MED4_
{
		volatile struct	/* 0x15024458 */
		{
				FIELD  ANR_Y1                                :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_Y2                                :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_Y3                                :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR_Y4                                :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_MED4;	/* DIP_X_ANR_MED4, DIP_A_ANR_MED4*/

typedef volatile union _DIP_X_REG_ANR_MED5_
{
		volatile struct	/* 0x1502445C */
		{
				FIELD  ANR_LCL_OFT                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_SCL_OFT                           :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_NCL_OFT                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_MED5;	/* DIP_X_ANR_MED5, DIP_A_ANR_MED5*/

typedef volatile union _DIP_X_REG_ANR_HP1_
{
		volatile struct	/* 0x15024460 */
		{
				FIELD  ANR_HP_A                              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_HP_B                              :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_HP_C                              :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_HP_D                              :  4;		/* 24..27, 0x0F000000 */
				FIELD  ANR_HP_E                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_HP1;	/* DIP_X_ANR_HP1, DIP_A_ANR_HP1*/

typedef volatile union _DIP_X_REG_ANR_HP2_
{
		volatile struct	/* 0x15024464 */
		{
				FIELD  ANR_HP_S1                             :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR_HP_S2                             :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR_HP_X1                             :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_HP_F                              :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_HP2;	/* DIP_X_ANR_HP2, DIP_A_ANR_HP2*/

typedef volatile union _DIP_X_REG_ANR_HP3_
{
		volatile struct	/* 0x15024468 */
		{
				FIELD  ANR_HP_Y_GAIN_CLIP                    :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  ANR_HP_Y_SP                           :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_HP_Y_LO                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR_HP_CLIP                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_HP3;	/* DIP_X_ANR_HP3, DIP_A_ANR_HP3*/

typedef volatile union _DIP_X_REG_ANR_ACT1_
{
		volatile struct	/* 0x1502446C */
		{
				FIELD  ANR_ACT_LCE_GAIN                      :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR_ACT_SCALE_OFT                     :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_ACT_SCALE_GAIN                    :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  ANR_ACT_DIF_GAIN                      :  4;		/* 20..23, 0x00F00000 */
				FIELD  ANR_ACT_DIF_LO_TH                     :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACT1;	/* DIP_X_ANR_ACT1, DIP_A_ANR_ACT1*/

typedef volatile union _DIP_X_REG_ANR_ACT2_
{
		volatile struct	/* 0x15024470 */
		{
				FIELD  ANR_ACT_DIF_HI_TH                     :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_ACT_SIZE_GAIN                     :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  ANR_ACT_SIZE_LO_TH                    :  5;		/* 12..16, 0x0001F000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR_COR_TH1                           :  5;		/* 20..24, 0x01F00000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  ANR_COR_SL1                           :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACT2;	/* DIP_X_ANR_ACT2, DIP_A_ANR_ACT2*/

typedef volatile union _DIP_X_REG_ANR_ACT3_
{
		volatile struct	/* 0x15024474 */
		{
				FIELD  ANR_COR_ACT_TH                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_COR_ACT_SL1                       :  4;		/*  8..11, 0x00000F00 */
				FIELD  ANR_COR_ACT_SL2                       :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACT3;	/* DIP_X_ANR_ACT3, DIP_A_ANR_ACT3*/

typedef volatile union _DIP_X_REG_ANR_ACT4_
{
		volatile struct	/* 0x15024478 */
		{
				FIELD  ANR_Y_ACT_CEN_OFT                     :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_Y_ACT_CEN_GAIN                    :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_Y_ACT_CEN_TH                      :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACT4;	/* DIP_X_ANR_ACT4, DIP_A_ANR_ACT4*/

typedef volatile union _DIP_X_REG_ANR_ACTYHL_
{
		volatile struct	/* 0x1502447C */
		{
				FIELD  ANR_ACT_TH_Y_HL                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_ACT_BLD_BASE_Y_HL                 :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_ACT_SLANT_Y_HL                    :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_ACT_BLD_TH_Y_HL                   :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTYHL;	/* DIP_X_ANR_ACTYHL, DIP_A_ANR_ACTYHL*/

typedef volatile union _DIP_X_REG_ANR_ACTYHH_
{
		volatile struct	/* 0x15024480 */
		{
				FIELD  ANR_ACT_TH_Y_HH                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_ACT_BLD_BASE_Y_HH                 :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_ACT_SLANT_Y_HH                    :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_ACT_BLD_TH_Y_HH                   :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTYHH;	/* DIP_X_ANR_ACTYHH, DIP_A_ANR_ACTYHH*/

typedef volatile union _DIP_X_REG_ANR_ACTYL_
{
		volatile struct	/* 0x15024484 */
		{
				FIELD  ANR_ACT_TH_Y_L                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_ACT_BLD_BASE_Y_L                  :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_ACT_SLANT_Y_L                     :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_ACT_BLD_TH_Y_L                    :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTYL;	/* DIP_X_ANR_ACTYL, DIP_A_ANR_ACTYL*/

typedef volatile union _DIP_X_REG_ANR_ACTYHL2_
{
		volatile struct	/* 0x15024488 */
		{
				FIELD  ANR_LUMA_TH_Y_HL                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_LUMA_BLD_BASE_Y_HL                :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_LUMA_SLANT_Y_HL                   :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_LUMA_BLD_TH_Y_HL                  :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTYHL2;	/* DIP_X_ANR_ACTYHL2, DIP_A_ANR_ACTYHL2*/

typedef volatile union _DIP_X_REG_ANR_ACTYHH2_
{
		volatile struct	/* 0x1502448C */
		{
				FIELD  ANR_LUMA_TH_Y_HH                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_LUMA_BLD_BASE_Y_HH                :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_LUMA_SLANT_Y_HH                   :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_LUMA_BLD_TH_Y_HH                  :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTYHH2;	/* DIP_X_ANR_ACTYHH2, DIP_A_ANR_ACTYHH2*/

typedef volatile union _DIP_X_REG_ANR_ACTYL2_
{
		volatile struct	/* 0x15024490 */
		{
				FIELD  ANR_LUMA_TH_Y_L                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_LUMA_BLD_BASE_Y_L                 :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_LUMA_SLANT_Y_L                    :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_LUMA_BLD_TH_Y_L                   :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTYL2;	/* DIP_X_ANR_ACTYL2, DIP_A_ANR_ACTYL2*/

typedef volatile union _DIP_X_REG_ANR_ACTC_
{
		volatile struct	/* 0x15024494 */
		{
				FIELD  ANR_ACT_TH_C                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_ACT_BLD_BASE_C                    :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  ANR_ACT_SLANT_C                       :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  ANR_ACT_BLD_TH_C                      :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_ACTC;	/* DIP_X_ANR_ACTC, DIP_A_ANR_ACTC*/

typedef volatile union _DIP_X_REG_ANR_YLAD_
{
		volatile struct	/* 0x15024498 */
		{
				FIELD  ANR_CEN_GAIN_LO_TH_LPF                :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  ANR_CEN_GAIN_HI_TH_LPF                :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  ANR_K_LMT                             :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  ANR_K_LPF                             :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR_K_HPF                             :  2;		/* 24..25, 0x03000000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_YLAD;	/* DIP_X_ANR_YLAD, DIP_A_ANR_YLAD*/

typedef volatile union _DIP_X_REG_ANR_YLAD2_
{
		volatile struct	/* 0x1502449C */
		{
				FIELD  ANR_PTY_L_GAIN                        :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  ANR_PTY_H_GAIN                        :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  ANR_BLEND_TH_L                        :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  ANR_BLEND_TH_H                        :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_YLAD2;	/* DIP_X_ANR_YLAD2, DIP_A_ANR_YLAD2*/

typedef volatile union _DIP_X_REG_ANR_YLAD3_
{
		volatile struct	/* 0x150244A0 */
		{
				FIELD  ANR_HI_LMT1                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_HI_LMT2                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_LO_LMT1                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR_LO_LMT2                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_YLAD3;	/* DIP_X_ANR_YLAD3, DIP_A_ANR_YLAD3*/

typedef volatile union _DIP_X_REG_ANR_PTYL_
{
		volatile struct	/* 0x150244A4 */
		{
				FIELD  ANR_PTY1_LPF                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  ANR_PTY2_LPF                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  ANR_PTY3_LPF                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  ANR_PTY4_LPF                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_PTYL;	/* DIP_X_ANR_PTYL, DIP_A_ANR_PTYL*/

typedef volatile union _DIP_X_REG_ANR_LCOEF_
{
		volatile struct	/* 0x150244A8 */
		{
				FIELD  ANR_COEF_A                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR_COEF_B                            :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  ANR_COEF_C                            :  4;		/*  8..11, 0x00000F00 */
				FIELD  ANR_COEF_D                            :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_LCOEF;	/* DIP_X_ANR_LCOEF, DIP_A_ANR_LCOEF*/

typedef volatile union _DIP_X_REG_ANR_YDIR_
{
		volatile struct	/* 0x150244AC */
		{
				FIELD  ANR_Y_DIR_GAIN                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  ANR_Y_DIR_VER_W_TH                    :  6;		/*  4.. 9, 0x000003F0 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  ANR_Y_DIR_VER_W_SL                    :  4;		/* 12..15, 0x0000F000 */
				FIELD  ANR_Y_DIR_DIAG_W_TH                   :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  ANR_Y_DIR_DIAG_W_SL                   :  4;		/* 24..27, 0x0F000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_YDIR;	/* DIP_X_ANR_YDIR, DIP_A_ANR_YDIR*/

typedef volatile union _DIP_X_REG_ANR_RSV1_
{
		volatile struct	/* 0x150244B0 */
		{
				FIELD  ANR_RSV1                              : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_ANR_RSV1;	/* DIP_X_ANR_RSV1, DIP_A_ANR_RSV1*/

typedef volatile union _DIP_X_REG_SL2G_CEN_
{
		volatile struct	/* 0x15024500 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_CEN;	/* DIP_X_SL2G_CEN, DIP_A_SL2G_CEN*/

typedef volatile union _DIP_X_REG_SL2G_RR_CON0_
{
		volatile struct	/* 0x15024504 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_RR_CON0;	/* DIP_X_SL2G_RR_CON0, DIP_A_SL2G_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2G_RR_CON1_
{
		volatile struct	/* 0x15024508 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_RR_CON1;	/* DIP_X_SL2G_RR_CON1, DIP_A_SL2G_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2G_GAIN_
{
		volatile struct	/* 0x1502450C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_GAIN;	/* DIP_X_SL2G_GAIN, DIP_A_SL2G_GAIN*/

typedef volatile union _DIP_X_REG_SL2G_RZ_
{
		volatile struct	/* 0x15024510 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_RZ;	/* DIP_X_SL2G_RZ, DIP_A_SL2G_RZ*/

typedef volatile union _DIP_X_REG_SL2G_XOFF_
{
		volatile struct	/* 0x15024514 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_XOFF;	/* DIP_X_SL2G_XOFF, DIP_A_SL2G_XOFF*/

typedef volatile union _DIP_X_REG_SL2G_YOFF_
{
		volatile struct	/* 0x15024518 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_YOFF;	/* DIP_X_SL2G_YOFF, DIP_A_SL2G_YOFF*/

typedef volatile union _DIP_X_REG_SL2G_SLP_CON0_
{
		volatile struct	/* 0x1502451C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_SLP_CON0;	/* DIP_X_SL2G_SLP_CON0, DIP_A_SL2G_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2G_SLP_CON1_
{
		volatile struct	/* 0x15024520 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_SLP_CON1;	/* DIP_X_SL2G_SLP_CON1, DIP_A_SL2G_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2G_SIZE_
{
		volatile struct	/* 0x15024524 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2G_SIZE;	/* DIP_X_SL2G_SIZE, DIP_A_SL2G_SIZE*/

typedef volatile union _DIP_X_REG_SL2H_CEN_
{
		volatile struct	/* 0x15024540 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_CEN;	/* DIP_X_SL2H_CEN, DIP_A_SL2H_CEN*/

typedef volatile union _DIP_X_REG_SL2H_RR_CON0_
{
		volatile struct	/* 0x15024544 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_RR_CON0;	/* DIP_X_SL2H_RR_CON0, DIP_A_SL2H_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2H_RR_CON1_
{
		volatile struct	/* 0x15024548 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_RR_CON1;	/* DIP_X_SL2H_RR_CON1, DIP_A_SL2H_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2H_GAIN_
{
		volatile struct	/* 0x1502454C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_GAIN;	/* DIP_X_SL2H_GAIN, DIP_A_SL2H_GAIN*/

typedef volatile union _DIP_X_REG_SL2H_RZ_
{
		volatile struct	/* 0x15024550 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_RZ;	/* DIP_X_SL2H_RZ, DIP_A_SL2H_RZ*/

typedef volatile union _DIP_X_REG_SL2H_XOFF_
{
		volatile struct	/* 0x15024554 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_XOFF;	/* DIP_X_SL2H_XOFF, DIP_A_SL2H_XOFF*/

typedef volatile union _DIP_X_REG_SL2H_YOFF_
{
		volatile struct	/* 0x15024558 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_YOFF;	/* DIP_X_SL2H_YOFF, DIP_A_SL2H_YOFF*/

typedef volatile union _DIP_X_REG_SL2H_SLP_CON0_
{
		volatile struct	/* 0x1502455C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_SLP_CON0;	/* DIP_X_SL2H_SLP_CON0, DIP_A_SL2H_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2H_SLP_CON1_
{
		volatile struct	/* 0x15024560 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_SLP_CON1;	/* DIP_X_SL2H_SLP_CON1, DIP_A_SL2H_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2H_SIZE_
{
		volatile struct	/* 0x15024564 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2H_SIZE;	/* DIP_X_SL2H_SIZE, DIP_A_SL2H_SIZE*/

typedef volatile union _DIP_X_REG_RNR_CON1_
{
		volatile struct	/* 0x150245B0 */
		{
				FIELD  RNR_RAT                               :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RNR_EPS                               :  8;		/*  9..16, 0x0001FE00 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_CON1;	/* DIP_X_RNR_CON1, DIP_A_RNR_CON1*/

typedef volatile union _DIP_X_REG_RNR_VC0_
{
		volatile struct	/* 0x150245B4 */
		{
				FIELD  RNR_VC0_R                             :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RNR_VC0_G                             :  9;		/*  9..17, 0x0003FE00 */
				FIELD  RNR_VC0_B                             :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_VC0;	/* DIP_X_RNR_VC0, DIP_A_RNR_VC0*/

typedef volatile union _DIP_X_REG_RNR_VC1_
{
		volatile struct	/* 0x150245B8 */
		{
				FIELD  RNR_VC1_R                             :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RNR_VC1_G                             :  9;		/*  9..17, 0x0003FE00 */
				FIELD  RNR_VC1_B                             :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_VC1;	/* DIP_X_RNR_VC1, DIP_A_RNR_VC1*/

typedef volatile union _DIP_X_REG_RNR_GO_B_
{
		volatile struct	/* 0x150245BC */
		{
				FIELD  RNR_OFST_B                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  RNR_GAIN_B                            : 13;		/* 15..27, 0x0FFF8000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_GO_B;	/* DIP_X_RNR_GO_B, DIP_A_RNR_GO_B*/

typedef volatile union _DIP_X_REG_RNR_GO_G_
{
		volatile struct	/* 0x150245C0 */
		{
				FIELD  RNR_OFST_G                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  RNR_GAIN_G                            : 13;		/* 15..27, 0x0FFF8000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_GO_G;	/* DIP_X_RNR_GO_G, DIP_A_RNR_GO_G*/

typedef volatile union _DIP_X_REG_RNR_GO_R_
{
		volatile struct	/* 0x150245C4 */
		{
				FIELD  RNR_OFST_R                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  RNR_GAIN_R                            : 13;		/* 15..27, 0x0FFF8000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_GO_R;	/* DIP_X_RNR_GO_R, DIP_A_RNR_GO_R*/

typedef volatile union _DIP_X_REG_RNR_GAIN_ISO_
{
		volatile struct	/* 0x150245C8 */
		{
				FIELD  RNR_GAIN_ISO                          : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_GAIN_ISO;	/* DIP_X_RNR_GAIN_ISO, DIP_A_RNR_GAIN_ISO*/

typedef volatile union _DIP_X_REG_RNR_L_
{
		volatile struct	/* 0x150245CC */
		{
				FIELD  RNR_L_R                               :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RNR_L_G                               :  9;		/*  9..17, 0x0003FE00 */
				FIELD  RNR_L_B                               :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_L;	/* DIP_X_RNR_L, DIP_A_RNR_L*/

typedef volatile union _DIP_X_REG_RNR_C1_
{
		volatile struct	/* 0x150245D0 */
		{
				FIELD  RNR_C1_R                              :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RNR_C1_G                              :  9;		/*  9..17, 0x0003FE00 */
				FIELD  RNR_C1_B                              :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_C1;	/* DIP_X_RNR_C1, DIP_A_RNR_C1*/

typedef volatile union _DIP_X_REG_RNR_C2_
{
		volatile struct	/* 0x150245D4 */
		{
				FIELD  RNR_C2_R                              :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RNR_C2_G                              :  9;		/*  9..17, 0x0003FE00 */
				FIELD  RNR_C2_B                              :  9;		/* 18..26, 0x07FC0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_C2;	/* DIP_X_RNR_C2, DIP_A_RNR_C2*/

typedef volatile union _DIP_X_REG_RNR_RNG_
{
		volatile struct	/* 0x150245D8 */
		{
				FIELD  RNR_RNG1                              :  6;		/*  0.. 5, 0x0000003F */
				FIELD  RNR_RNG2                              :  6;		/*  6..11, 0x00000FC0 */
				FIELD  RNR_RNG3                              :  6;		/* 12..17, 0x0003F000 */
				FIELD  RNR_RNG4                              :  6;		/* 18..23, 0x00FC0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_RNG;	/* DIP_X_RNR_RNG, DIP_A_RNR_RNG*/

typedef volatile union _DIP_X_REG_RNR_CON2_
{
		volatile struct	/* 0x150245DC */
		{
				FIELD  RNR_MED_RAT                           :  7;		/*  0.. 6, 0x0000007F */
				FIELD  RNR_PRF_RAT                           :  7;		/*  7..13, 0x00003F80 */
				FIELD  RNR_RAD                               :  3;		/* 14..16, 0x0001C000 */
				FIELD  RNR_CTHR                              :  6;		/* 17..22, 0x007E0000 */
				FIELD  RNR_CTHL                              :  6;		/* 23..28, 0x1F800000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_CON2;	/* DIP_X_RNR_CON2, DIP_A_RNR_CON2*/

typedef volatile union _DIP_X_REG_RNR_CON3_
{
		volatile struct	/* 0x150245E0 */
		{
				FIELD  RNR_FL_MODE                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RNR_GD_RAT                            :  6;		/*  1.. 6, 0x0000007E */
				FIELD  RNR_LLP_RAT                           :  8;		/*  7..14, 0x00007F80 */
				FIELD  RNR_INT_OFST                          :  8;		/* 15..22, 0x007F8000 */
				FIELD  rsv_23                                :  9;		/* 23..31, 0xFF800000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_CON3;	/* DIP_X_RNR_CON3, DIP_A_RNR_CON3*/

typedef volatile union _DIP_X_REG_RNR_SL_
{
		volatile struct	/* 0x150245E4 */
		{
				FIELD  RNR_SL_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RNR_SL_Y2                             : 10;		/*  1..10, 0x000007FE */
				FIELD  RNR_SL_Y1                             : 10;		/* 11..20, 0x001FF800 */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_SL;	/* DIP_X_RNR_SL, DIP_A_RNR_SL*/

typedef volatile union _DIP_X_REG_RNR_SSL_STH_
{
		volatile struct	/* 0x150245E8 */
		{
				FIELD  RNR_SSL_C2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  RNR_STH_C2                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  RNR_SSL_C1                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  RNR_STH_C1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_SSL_STH;	/* DIP_X_RNR_SSL_STH, DIP_A_RNR_SSL_STH*/

typedef volatile union _DIP_X_REG_RNR_TILE_EDGE_
{
		volatile struct	/* 0x150245EC */
		{
				FIELD  RNR_TILE_EDGE                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_RNR_TILE_EDGE;	/* DIP_X_RNR_TILE_EDGE, DIP_A_RNR_TILE_EDGE*/

typedef volatile union _DIP_X_REG_HFG_CON_0_
{
		volatile struct	/* 0x15024630 */
		{
				FIELD  DIP_HFC_STD                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_CON_0;	/* DIP_X_HFG_CON_0, DIP_A_HFG_CON_0*/

typedef volatile union _DIP_X_REG_HFG_LUMA_0_
{
		volatile struct	/* 0x15024634 */
		{
				FIELD  HFC_LUMA_CPX1                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  HFC_LUMA_CPX2                         :  8;		/*  8..15, 0x0000FF00 */
				FIELD  HFC_LUMA_CPX3                         :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_LUMA_0;	/* DIP_X_HFG_LUMA_0, DIP_A_HFG_LUMA_0*/

typedef volatile union _DIP_X_REG_HFG_LUMA_1_
{
		volatile struct	/* 0x15024638 */
		{
				FIELD  HFC_LUMA_CPY0                         :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  HFC_LUMA_CPY1                         :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  HFC_LUMA_CPY2                         :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  HFC_LUMA_CPY3                         :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_LUMA_1;	/* DIP_X_HFG_LUMA_1, DIP_A_HFG_LUMA_1*/

typedef volatile union _DIP_X_REG_HFG_LUMA_2_
{
		volatile struct	/* 0x1502463C */
		{
				FIELD  HFC_LUMA_SP0                          :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  HFC_LUMA_SP1                          :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  HFC_LUMA_SP2                          :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  HFC_LUMA_SP3                          :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_LUMA_2;	/* DIP_X_HFG_LUMA_2, DIP_A_HFG_LUMA_2*/

typedef volatile union _DIP_X_REG_HFG_LCE_0_
{
		volatile struct	/* 0x15024640 */
		{
				FIELD  HFC_LCE_CPX1                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  HFC_LCE_CPX2                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  HFC_LCE_CPX3                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_LCE_0;	/* DIP_X_HFG_LCE_0, DIP_A_HFG_LCE_0*/

typedef volatile union _DIP_X_REG_HFG_LCE_1_
{
		volatile struct	/* 0x15024644 */
		{
				FIELD  HFC_LCE_CPY0                          :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  HFC_LCE_CPY1                          :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  HFC_LCE_CPY2                          :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  HFC_LCE_CPY3                          :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_LCE_1;	/* DIP_X_HFG_LCE_1, DIP_A_HFG_LCE_1*/

typedef volatile union _DIP_X_REG_HFG_LCE_2_
{
		volatile struct	/* 0x15024648 */
		{
				FIELD  HFC_LCE_SP0                           :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  HFC_LCE_SP1                           :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  HFC_LCE_SP2                           :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  HFC_LCE_SP3                           :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_LCE_2;	/* DIP_X_HFG_LCE_2, DIP_A_HFG_LCE_2*/

typedef volatile union _DIP_X_REG_HFG_RAN_0_
{
		volatile struct	/* 0x1502464C */
		{
				FIELD  RANSED_GSEED                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RANSED_SEED0                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_RAN_0;	/* DIP_X_HFG_RAN_0, DIP_A_HFG_RAN_0*/

typedef volatile union _DIP_X_REG_HFG_RAN_1_
{
		volatile struct	/* 0x15024650 */
		{
				FIELD  RANSED_SEED1                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RANSED_SEED2                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_RAN_1;	/* DIP_X_HFG_RAN_1, DIP_A_HFG_RAN_1*/

typedef volatile union _DIP_X_REG_HFG_RAN_2_
{
		volatile struct	/* 0x15024654 */
		{
				FIELD  RANSED_XOSFS                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RANSED_YOSFS                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_RAN_2;	/* DIP_X_HFG_RAN_2, DIP_A_HFG_RAN_2*/

typedef volatile union _DIP_X_REG_HFG_RAN_3_
{
		volatile struct	/* 0x15024658 */
		{
				FIELD  RANSED_IMG_WD                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_RAN_3;	/* DIP_X_HFG_RAN_3, DIP_A_HFG_RAN_3*/

typedef volatile union _DIP_X_REG_HFG_RAN_4_
{
		volatile struct	/* 0x1502465C */
		{
				FIELD  HFG_T_WIDTH                           : 16;		/*  0..15, 0x0000FFFF */
				FIELD  HFG_T_HEIGHT                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_RAN_4;	/* DIP_X_HFG_RAN_4, DIP_A_HFG_RAN_4*/

typedef volatile union _DIP_X_REG_HFG_CROP_X_
{
		volatile struct	/* 0x15024660 */
		{
				FIELD  HFG_CROP_STR_X                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  HFG_CROP_END_X                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_CROP_X;	/* DIP_X_HFG_CROP_X, DIP_A_HFG_CROP_X*/

typedef volatile union _DIP_X_REG_HFG_CROP_Y_
{
		volatile struct	/* 0x15024664 */
		{
				FIELD  HFG_CROP_STR_Y                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  HFG_CROP_END_Y                        : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_HFG_CROP_Y;	/* DIP_X_HFG_CROP_Y, DIP_A_HFG_CROP_Y*/

typedef volatile union _DIP_X_REG_SL2I_CEN_
{
		volatile struct	/* 0x15024670 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_CEN;	/* DIP_X_SL2I_CEN, DIP_A_SL2I_CEN*/

typedef volatile union _DIP_X_REG_SL2I_RR_CON0_
{
		volatile struct	/* 0x15024674 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_RR_CON0;	/* DIP_X_SL2I_RR_CON0, DIP_A_SL2I_RR_CON0*/

typedef volatile union _DIP_X_REG_SL2I_RR_CON1_
{
		volatile struct	/* 0x15024678 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_RR_CON1;	/* DIP_X_SL2I_RR_CON1, DIP_A_SL2I_RR_CON1*/

typedef volatile union _DIP_X_REG_SL2I_GAIN_
{
		volatile struct	/* 0x1502467C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_GAIN;	/* DIP_X_SL2I_GAIN, DIP_A_SL2I_GAIN*/

typedef volatile union _DIP_X_REG_SL2I_RZ_
{
		volatile struct	/* 0x15024680 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_RZ;	/* DIP_X_SL2I_RZ, DIP_A_SL2I_RZ*/

typedef volatile union _DIP_X_REG_SL2I_XOFF_
{
		volatile struct	/* 0x15024684 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_XOFF;	/* DIP_X_SL2I_XOFF, DIP_A_SL2I_XOFF*/

typedef volatile union _DIP_X_REG_SL2I_YOFF_
{
		volatile struct	/* 0x15024688 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_YOFF;	/* DIP_X_SL2I_YOFF, DIP_A_SL2I_YOFF*/

typedef volatile union _DIP_X_REG_SL2I_SLP_CON0_
{
		volatile struct	/* 0x1502468C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_SLP_CON0;	/* DIP_X_SL2I_SLP_CON0, DIP_A_SL2I_SLP_CON0*/

typedef volatile union _DIP_X_REG_SL2I_SLP_CON1_
{
		volatile struct	/* 0x15024690 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_SLP_CON1;	/* DIP_X_SL2I_SLP_CON1, DIP_A_SL2I_SLP_CON1*/

typedef volatile union _DIP_X_REG_SL2I_SIZE_
{
		volatile struct	/* 0x15024694 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_SL2I_SIZE;	/* DIP_X_SL2I_SIZE, DIP_A_SL2I_SIZE*/

typedef volatile union _DIP_X_REG_ISO_ADAP_
{
    volatile struct /* 0x15024698 */
    {
            FIELD  ISO_ADAPTIVE          : 32;      /*  0..31, 0xFFFFFFFF */
    } Bits;
    UINT32 Raw;
}DIP_X_REG_ISO_ADAP;

typedef volatile union _DIP_X_REG_LCE25_TPIPE_SLM_
{
        volatile struct /* 0x15026494 */
        {
                FIELD  LCE_TPIPE_SLM_WD                      : 16;      /*  0..15, 0x0000FFFF */
                FIELD  LCE_TPIPE_SLM_HT                      : 16;      /* 16..31, 0xFFFF0000 */
        } Bits;
        UINT32 Raw;
}DIP_X_REG_LCE25_TPIPE_SLM;

typedef volatile union _DIP_X_REG_LCE25_TPIPE_OFFSET_
{
        volatile struct /* 0x15026498 */
        {
                FIELD  LCE_TPIPE_OFFSET_X                    : 16;      /*  0..15, 0x0000FFFF */
                FIELD  LCE_TPIPE_OFFSET_Y                    : 16;      /* 16..31, 0xFFFF0000 */
        } Bits;
        UINT32 Raw;
}DIP_X_REG_LCE25_TPIPE_OFFSET;
typedef volatile union _DIP_X_REG_LCE25_TPIPE_OUT_
{
        volatile struct /* 0x1502649C */
        {
                FIELD  LCE_TPIPE_OUT_HT                      : 16;      /*  0..15, 0x0000FFFF */
                FIELD  rsv_16                                : 16;      /* 16..31, 0xFFFF0000 */
        } Bits;
        UINT32 Raw;
}DIP_X_REG_LCE25_TPIPE_OUT;

typedef volatile union _DIP_X_REG_NR3D_VIPI_SIZE_
{
        volatile struct /* 0x150264xx */
        {
                FIELD  NR3D_VIPI_WIDTH                       : 16;      /*  0..15, 0x0000FFFF */
                FIELD  NR3D_VIPI_HEIGHT                      : 16;      /* 16..31, 0xFFFF0000 */
        } Bits;
        UINT32 Raw;
}DIP_X_REG_NR3D_VIPI_SIZE;

typedef volatile union _DIP_X_REG_NR3D_VIPI_OFFSET_
{
        volatile struct /* 0x150264xx */
        {
                FIELD  NR3D_VIPI_OFFSET                      : 32;      /*  0..31, 0xFFFFFFFF */
        } Bits;
        UINT32 Raw;
}DIP_X_REG_NR3D_VIPI_OFFSET;

typedef volatile union _DIP_X_REG_CAM_COLOR_CFG_MAIN_
{
		volatile struct	/* 0x150246F0 */
		{
				FIELD  COLOR_C2P_BYPASS                      :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_P2C_BYPASS                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_YENG_BYPASS                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  COLOR_SENG_BYPASS                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_HENG_BYPASS                     :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  2;		/*  5.. 6, 0x00000060 */
				FIELD  COLOR_ALL_BYPASS                      :  1;		/*  7.. 7, 0x00000080 */
				FIELD  COLOR_WIDE_GAMUT_EN                   :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  4;		/*  9..12, 0x00001E00 */
				FIELD  COLOR_SEQ_SEL                         :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  COLOR_S_G_Y_EN                        :  1;		/* 15..15, 0x00008000 */
				FIELD  COLOR_C_PP_CM_DBG_SEL                 :  4;		/* 16..19, 0x000F0000 */
				FIELD  COLOR_LSP_EN                          :  1;		/* 20..20, 0x00100000 */
				FIELD  COLOR_LSP_SAT_LIMIT                   :  1;		/* 21..21, 0x00200000 */
				FIELD  COLOR_LSP_INK_EN                      :  1;		/* 22..22, 0x00400000 */
				FIELD  COLOR_LSP_SAT_SRC                     :  1;		/* 23..23, 0x00800000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CFG_MAIN;	/* DIP_X_CAM_COLOR_CFG_MAIN, DIP_A_CAM_COLOR_CFG_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PXL_CNT_MAIN_
{
		volatile struct	/* 0x150246F4 */
		{
				FIELD  COLOR_PIC_H_CNT                       : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PXL_CNT_MAIN;	/* DIP_X_CAM_COLOR_PXL_CNT_MAIN, DIP_A_CAM_COLOR_PXL_CNT_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LINE_CNT_MAIN_
{
		volatile struct	/* 0x150246F8 */
		{
				FIELD  COLOR_LINE_CNT                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_PIC_V_CNT                       : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LINE_CNT_MAIN;	/* DIP_X_CAM_COLOR_LINE_CNT_MAIN, DIP_A_CAM_COLOR_LINE_CNT_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_WIN_X_MAIN_
{
		volatile struct	/* 0x150246FC */
		{
				FIELD  COLOR_WIN_X_START                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_WIN_X_END                       : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_WIN_X_MAIN;	/* DIP_X_CAM_COLOR_WIN_X_MAIN, DIP_A_CAM_COLOR_WIN_X_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_WIN_Y_MAIN_
{
		volatile struct	/* 0x15024700 */
		{
				FIELD  COLOR_WIN_Y_START                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_WIN_Y_END                       : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_WIN_Y_MAIN;	/* DIP_X_CAM_COLOR_WIN_Y_MAIN, DIP_A_CAM_COLOR_WIN_Y_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_TIMING_DETECTION_0_
{
		volatile struct	/* 0x15024704 */
		{
				FIELD  COLOR_HTOTAL_CNT                      : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_VTOTAL_CNT                      : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_TIMING_DETECTION_0;	/* DIP_X_CAM_COLOR_TIMING_DETECTION_0, DIP_A_CAM_COLOR_TIMING_DETECTION_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_TIMING_DETECTION_1_
{
		volatile struct	/* 0x15024708 */
		{
				FIELD  COLOR_HDE_CNT                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_VDE_CNT                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_TIMING_DETECTION_1;	/* DIP_X_CAM_COLOR_TIMING_DETECTION_1, DIP_A_CAM_COLOR_TIMING_DETECTION_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_DBG_CFG_MAIN_
{
		volatile struct	/* 0x1502470C */
		{
				FIELD  COLOR_INK_EN                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_CAP_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  COLOR_SPLIT_EN                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_SPLIT_SWAP                      :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  COLOR_Y_INK                           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  COLOR_U_INK                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  COLOR_V_INK                           :  1;		/* 10..10, 0x00000400 */
				FIELD  COLOR_W1_INK_EN                       :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  COLOR_Y_INK_MODE                      :  3;		/* 16..18, 0x00070000 */
				FIELD  COLOR_U_INK_MODE                      :  3;		/* 19..21, 0x00380000 */
				FIELD  COLOR_V_INK_MODE                      :  3;		/* 22..24, 0x01C00000 */
				FIELD  COLOR_Y_INK_SHIFT                     :  2;		/* 25..26, 0x06000000 */
				FIELD  COLOR_U_INK_SHIFT                     :  2;		/* 27..28, 0x18000000 */
				FIELD  COLOR_V_INK_SHIFT                     :  2;		/* 29..30, 0x60000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_DBG_CFG_MAIN;	/* DIP_X_CAM_COLOR_DBG_CFG_MAIN, DIP_A_CAM_COLOR_DBG_CFG_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_C_BOOST_MAIN_
{
		volatile struct	/* 0x15024710 */
		{
				FIELD  COLOR_C_BOOST_GAIN                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  5;		/*  8..12, 0x00001F00 */
				FIELD  COLOR_C_NEW_BOOST_EN                  :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  COLOR_C_NEW_BOOST_LMT_L               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_C_NEW_BOOST_LMT_U               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_C_BOOST_MAIN;	/* DIP_X_CAM_COLOR_C_BOOST_MAIN, DIP_A_CAM_COLOR_C_BOOST_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_C_BOOST_MAIN_2_
{
		volatile struct	/* 0x15024714 */
		{
				FIELD  COLOR_COLOR_CBOOST_YOFFSET            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_COLOR_CBOOST_YOFFSET_SEL        :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  6;		/* 18..23, 0x00FC0000 */
				FIELD  COLOR_COLOR_CBOOST_YCONST             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_C_BOOST_MAIN_2;	/* DIP_X_CAM_COLOR_C_BOOST_MAIN_2, DIP_A_CAM_COLOR_C_BOOST_MAIN_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LUMA_ADJ_
{
		volatile struct	/* 0x15024718 */
		{
				FIELD  COLOR_Y_LEVEL_ADJ                     :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  COLOR_Y_SLOPE_LMT                     :  8;		/*  8..15, 0x0000FF00 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LUMA_ADJ;	/* DIP_X_CAM_COLOR_LUMA_ADJ, DIP_A_CAM_COLOR_LUMA_ADJ*/

typedef volatile union _DIP_X_REG_CAM_COLOR_G_PIC_ADJ_MAIN_1_
{
		volatile struct	/* 0x1502471C */
		{
				FIELD  COLOR_G_CONTRAST                      : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_G_BRIGHTNESS                    : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_G_PIC_ADJ_MAIN_1;	/* DIP_X_CAM_COLOR_G_PIC_ADJ_MAIN_1, DIP_A_CAM_COLOR_G_PIC_ADJ_MAIN_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_G_PIC_ADJ_MAIN_2_
{
		volatile struct	/* 0x15024720 */
		{
				FIELD  COLOR_G_SATURATION                    : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                : 22;		/* 10..31, 0xFFFFFC00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_G_PIC_ADJ_MAIN_2;	/* DIP_X_CAM_COLOR_G_PIC_ADJ_MAIN_2, DIP_A_CAM_COLOR_G_PIC_ADJ_MAIN_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_POS_MAIN_
{
		volatile struct	/* 0x15024724 */
		{
				FIELD  COLOR_POS_X                           : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_POS_Y                           : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_POS_MAIN;	/* DIP_X_CAM_COLOR_POS_MAIN, DIP_A_CAM_COLOR_POS_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_INK_DATA_MAIN_
{
		volatile struct	/* 0x15024728 */
		{
				FIELD  COLOR_INK_DATA_Y                      : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_INK_DATA_U                      : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_INK_DATA_MAIN;	/* DIP_X_CAM_COLOR_INK_DATA_MAIN, DIP_A_CAM_COLOR_INK_DATA_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_INK_DATA_MAIN_CR_
{
		volatile struct	/* 0x1502472C */
		{
				FIELD  COLOR_INK_DATA_V                      : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                : 22;		/* 10..31, 0xFFFFFC00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_INK_DATA_MAIN_CR;	/* DIP_X_CAM_COLOR_INK_DATA_MAIN_CR, DIP_A_CAM_COLOR_INK_DATA_MAIN_CR*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CAP_IN_DATA_MAIN_
{
		volatile struct	/* 0x15024730 */
		{
				FIELD  COLOR_CAP_IN_DATA_Y                   : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CAP_IN_DATA_U                   : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CAP_IN_DATA_MAIN;	/* DIP_X_CAM_COLOR_CAP_IN_DATA_MAIN, DIP_A_CAM_COLOR_CAP_IN_DATA_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CAP_IN_DATA_MAIN_CR_
{
		volatile struct	/* 0x15024734 */
		{
				FIELD  COLOR_CAP_IN_DATA_V                   : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                : 22;		/* 10..31, 0xFFFFFC00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CAP_IN_DATA_MAIN_CR;	/* DIP_X_CAM_COLOR_CAP_IN_DATA_MAIN_CR, DIP_A_CAM_COLOR_CAP_IN_DATA_MAIN_CR*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CAP_OUT_DATA_MAIN_
{
		volatile struct	/* 0x15024738 */
		{
				FIELD  COLOR_CAP_OUT_DATA_Y                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CAP_OUT_DATA_U                  : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CAP_OUT_DATA_MAIN;	/* DIP_X_CAM_COLOR_CAP_OUT_DATA_MAIN, DIP_A_CAM_COLOR_CAP_OUT_DATA_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CAP_OUT_DATA_MAIN_CR_
{
		volatile struct	/* 0x1502473C */
		{
				FIELD  COLOR_CAP_OUT_DATA_V                  : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CAP_OUT_DATA_MAIN_CR;	/* DIP_X_CAM_COLOR_CAP_OUT_DATA_MAIN_CR, DIP_A_CAM_COLOR_CAP_OUT_DATA_MAIN_CR*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_1_0_MAIN_
{
		volatile struct	/* 0x15024740 */
		{
				FIELD  COLOR_Y_SLOPE_0                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_1                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_1_0_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_1_0_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_1_0_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_3_2_MAIN_
{
		volatile struct	/* 0x15024744 */
		{
				FIELD  COLOR_Y_SLOPE_2                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_3                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_3_2_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_3_2_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_3_2_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_5_4_MAIN_
{
		volatile struct	/* 0x15024748 */
		{
				FIELD  COLOR_Y_SLOPE_4                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_5                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_5_4_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_5_4_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_5_4_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_7_6_MAIN_
{
		volatile struct	/* 0x1502474C */
		{
				FIELD  COLOR_Y_SLOPE_6                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_7                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_7_6_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_7_6_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_7_6_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_9_8_MAIN_
{
		volatile struct	/* 0x15024750 */
		{
				FIELD  COLOR_Y_SLOPE_8                       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_9                       :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_9_8_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_9_8_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_9_8_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_11_10_MAIN_
{
		volatile struct	/* 0x15024754 */
		{
				FIELD  COLOR_Y_SLOPE_10                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_11                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_11_10_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_11_10_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_11_10_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_13_12_MAIN_
{
		volatile struct	/* 0x15024758 */
		{
				FIELD  COLOR_Y_SLOPE_12                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_13                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_13_12_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_13_12_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_13_12_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_Y_SLOPE_15_14_MAIN_
{
		volatile struct	/* 0x1502475C */
		{
				FIELD  COLOR_Y_SLOPE_14                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_Y_SLOPE_15                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_Y_SLOPE_15_14_MAIN;	/* DIP_X_CAM_COLOR_Y_SLOPE_15_14_MAIN, DIP_A_CAM_COLOR_Y_SLOPE_15_14_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_0_
{
		volatile struct	/* 0x15024760 */
		{
				FIELD  COLOR_HUE_TO_HUE_0                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_HUE_TO_HUE_1                    :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_HUE_TO_HUE_2                    :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_HUE_TO_HUE_3                    :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_0;	/* DIP_X_CAM_COLOR_LOCAL_HUE_CD_0, DIP_A_CAM_COLOR_LOCAL_HUE_CD_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_1_
{
		volatile struct	/* 0x15024764 */
		{
				FIELD  COLOR_HUE_TO_HUE_4                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_HUE_TO_HUE_5                    :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_HUE_TO_HUE_6                    :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_HUE_TO_HUE_7                    :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_1;	/* DIP_X_CAM_COLOR_LOCAL_HUE_CD_1, DIP_A_CAM_COLOR_LOCAL_HUE_CD_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_2_
{
		volatile struct	/* 0x15024768 */
		{
				FIELD  COLOR_HUE_TO_HUE_8                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_HUE_TO_HUE_9                    :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_HUE_TO_HUE_10                   :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_HUE_TO_HUE_11                   :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_2;	/* DIP_X_CAM_COLOR_LOCAL_HUE_CD_2, DIP_A_CAM_COLOR_LOCAL_HUE_CD_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_3_
{
		volatile struct	/* 0x1502476C */
		{
				FIELD  COLOR_HUE_TO_HUE_12                   :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_HUE_TO_HUE_13                   :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_HUE_TO_HUE_14                   :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_HUE_TO_HUE_15                   :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_3;	/* DIP_X_CAM_COLOR_LOCAL_HUE_CD_3, DIP_A_CAM_COLOR_LOCAL_HUE_CD_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_4_
{
		volatile struct	/* 0x15024770 */
		{
				FIELD  COLOR_HUE_TO_HUE_16                   :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_HUE_TO_HUE_17                   :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_HUE_TO_HUE_18                   :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_HUE_TO_HUE_19                   :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_4;	/* DIP_X_CAM_COLOR_LOCAL_HUE_CD_4, DIP_A_CAM_COLOR_LOCAL_HUE_CD_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_TWO_D_WINDOW_1_
{
		volatile struct	/* 0x15024774 */
		{
				FIELD  COLOR_W1_HUE_LOWER                    :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_W1_HUE_UPPER                    :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_W1_SAT_LOWER                    :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_W1_SAT_UPPER                    :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_TWO_D_WINDOW_1;	/* DIP_X_CAM_COLOR_TWO_D_WINDOW_1, DIP_A_CAM_COLOR_TWO_D_WINDOW_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_TWO_D_W1_RESULT_
{
		volatile struct	/* 0x15024778 */
		{
				FIELD  COLOR_W1_HIT_OUTER                    : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_TWO_D_W1_RESULT;	/* DIP_X_CAM_COLOR_TWO_D_W1_RESULT, DIP_A_CAM_COLOR_TWO_D_W1_RESULT*/

typedef volatile union _DIP_X_REG_CAM_COLOR_SAT_HIST_X_CFG_MAIN_
{
		volatile struct	/* 0x1502477C */
		{
				FIELD  COLOR_HIST_X_START                    : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_HIST_X_END                      : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_SAT_HIST_X_CFG_MAIN;	/* DIP_X_CAM_COLOR_SAT_HIST_X_CFG_MAIN, DIP_A_CAM_COLOR_SAT_HIST_X_CFG_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_SAT_HIST_Y_CFG_MAIN_
{
		volatile struct	/* 0x15024780 */
		{
				FIELD  COLOR_HIST_Y_START                    : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_HIST_Y_END                      : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_SAT_HIST_Y_CFG_MAIN;	/* DIP_X_CAM_COLOR_SAT_HIST_Y_CFG_MAIN, DIP_A_CAM_COLOR_SAT_HIST_Y_CFG_MAIN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_BWS_2_
{
		volatile struct	/* 0x15024784 */
		{
				FIELD  rsv_0                                 : 26;		/*  0..25, 0x03FFFFFF */
				FIELD  COLOR_CAM_COLOR_ATPG_OB               :  1;		/* 26..26, 0x04000000 */
				FIELD  COLOR_CAM_COLOR_ATPG_CT               :  1;		/* 27..27, 0x08000000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_BWS_2;	/* DIP_X_CAM_COLOR_BWS_2, DIP_A_CAM_COLOR_BWS_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CRC_0_
{
		volatile struct	/* 0x15024788 */
		{
				FIELD  COLOR_CRC_R_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_CRC_L_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_C_CRC_STILL_CHECK_TRIG          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  COLOR_CRC_STILL_CHECK_DONE            :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_CRC_NON_STILL_CNT               :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  COLOR_CRC_STILL_CHECK_MAX             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CRC_SRC_SEL                     :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CRC_0;	/* DIP_X_CAM_COLOR_CRC_0, DIP_A_CAM_COLOR_CRC_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CRC_1_
{
		volatile struct	/* 0x1502478C */
		{
				FIELD  COLOR_CRC_CLIP_H_START                : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  COLOR_CRC_CLIP_H_END                  : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CRC_1;	/* DIP_X_CAM_COLOR_CRC_1, DIP_A_CAM_COLOR_CRC_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CRC_2_
{
		volatile struct	/* 0x15024790 */
		{
				FIELD  COLOR_CRC_CLIP_V_START                : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  COLOR_CRC_CLIP_V_END                  : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CRC_2;	/* DIP_X_CAM_COLOR_CRC_2, DIP_A_CAM_COLOR_CRC_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CRC_3_
{
		volatile struct	/* 0x15024794 */
		{
				FIELD  COLOR_CRC_V_MASK                      : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CRC_C_MASK                      : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CRC_Y_MASK                      : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CRC_3;	/* DIP_X_CAM_COLOR_CRC_3, DIP_A_CAM_COLOR_CRC_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CRC_4_
{
		volatile struct	/* 0x15024798 */
		{
				FIELD  COLOR_CRC_RESULT                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CRC_4;	/* DIP_X_CAM_COLOR_CRC_4, DIP_A_CAM_COLOR_CRC_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_0_
{
		volatile struct	/* 0x1502479C */
		{
				FIELD  COLOR_SAT_GAIN1_HUE_0                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN1_HUE_1                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN1_HUE_2                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN1_HUE_3                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_0;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_1_
{
		volatile struct	/* 0x150247A0 */
		{
				FIELD  COLOR_SAT_GAIN1_HUE_4                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN1_HUE_5                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN1_HUE_6                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN1_HUE_7                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_1;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_1, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_2_
{
		volatile struct	/* 0x150247A4 */
		{
				FIELD  COLOR_SAT_GAIN1_HUE_8                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN1_HUE_9                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN1_HUE_10                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN1_HUE_11                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_2;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_2, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_3_
{
		volatile struct	/* 0x150247A8 */
		{
				FIELD  COLOR_SAT_GAIN1_HUE_12                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN1_HUE_13                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN1_HUE_14                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN1_HUE_15                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_3;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_3, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_4_
{
		volatile struct	/* 0x150247AC */
		{
				FIELD  COLOR_SAT_GAIN1_HUE_16                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN1_HUE_17                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN1_HUE_18                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN1_HUE_19                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_4;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_0_
{
		volatile struct	/* 0x150247B0 */
		{
				FIELD  COLOR_SAT_GAIN2_HUE_0                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN2_HUE_1                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN2_HUE_2                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN2_HUE_3                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_0;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_1_
{
		volatile struct	/* 0x150247B4 */
		{
				FIELD  COLOR_SAT_GAIN2_HUE_4                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN2_HUE_5                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN2_HUE_6                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN2_HUE_7                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_1;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_1, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_2_
{
		volatile struct	/* 0x150247B8 */
		{
				FIELD  COLOR_SAT_GAIN2_HUE_8                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN2_HUE_9                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN2_HUE_10                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN2_HUE_11                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_2;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_2, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_3_
{
		volatile struct	/* 0x150247BC */
		{
				FIELD  COLOR_SAT_GAIN2_HUE_12                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN2_HUE_13                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN2_HUE_14                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN2_HUE_15                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_3;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_3, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_4_
{
		volatile struct	/* 0x150247C0 */
		{
				FIELD  COLOR_SAT_GAIN2_HUE_16                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN2_HUE_17                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN2_HUE_18                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN2_HUE_19                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_4;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_0_
{
		volatile struct	/* 0x150247C4 */
		{
				FIELD  COLOR_SAT_GAIN3_HUE_0                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN3_HUE_1                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN3_HUE_2                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN3_HUE_3                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_0;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_1_
{
		volatile struct	/* 0x150247C8 */
		{
				FIELD  COLOR_SAT_GAIN3_HUE_4                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN3_HUE_5                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN3_HUE_6                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN3_HUE_7                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_1;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_1, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_2_
{
		volatile struct	/* 0x150247CC */
		{
				FIELD  COLOR_SAT_GAIN3_HUE_8                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN3_HUE_9                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN3_HUE_10                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN3_HUE_11                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_2;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_2, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_3_
{
		volatile struct	/* 0x150247D0 */
		{
				FIELD  COLOR_SAT_GAIN3_HUE_12                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN3_HUE_13                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN3_HUE_14                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN3_HUE_15                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_3;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_3, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_4_
{
		volatile struct	/* 0x150247D4 */
		{
				FIELD  COLOR_SAT_GAIN3_HUE_16                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_GAIN3_HUE_17                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_GAIN3_HUE_18                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_GAIN3_HUE_19                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_4;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_0_
{
		volatile struct	/* 0x150247D8 */
		{
				FIELD  COLOR_SAT_POINT1_HUE_0                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT1_HUE_1                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT1_HUE_2                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT1_HUE_3                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_0;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_0, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_1_
{
		volatile struct	/* 0x150247DC */
		{
				FIELD  COLOR_SAT_POINT1_HUE_4                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT1_HUE_5                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT1_HUE_6                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT1_HUE_7                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_1;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_1, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_2_
{
		volatile struct	/* 0x150247E0 */
		{
				FIELD  COLOR_SAT_POINT1_HUE_8                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT1_HUE_9                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT1_HUE_10               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT1_HUE_11               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_2;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_2, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_3_
{
		volatile struct	/* 0x150247E4 */
		{
				FIELD  COLOR_SAT_POINT1_HUE_12               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT1_HUE_13               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT1_HUE_14               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT1_HUE_15               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_3;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_3, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_4_
{
		volatile struct	/* 0x150247E8 */
		{
				FIELD  COLOR_SAT_POINT1_HUE_16               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT1_HUE_17               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT1_HUE_18               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT1_HUE_19               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_4;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_4, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_0_
{
		volatile struct	/* 0x150247EC */
		{
				FIELD  COLOR_SAT_POINT2_HUE_0                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT2_HUE_1                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT2_HUE_2                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT2_HUE_3                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_0;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_0, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_1_
{
		volatile struct	/* 0x150247F0 */
		{
				FIELD  COLOR_SAT_POINT2_HUE_4                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT2_HUE_5                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT2_HUE_6                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT2_HUE_7                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_1;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_1, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_2_
{
		volatile struct	/* 0x150247F4 */
		{
				FIELD  COLOR_SAT_POINT2_HUE_8                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT2_HUE_9                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT2_HUE_10               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT2_HUE_11               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_2;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_2, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_3_
{
		volatile struct	/* 0x150247F8 */
		{
				FIELD  COLOR_SAT_POINT2_HUE_12               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT2_HUE_13               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT2_HUE_14               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT2_HUE_15               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_3;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_3, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_4_
{
		volatile struct	/* 0x150247FC */
		{
				FIELD  COLOR_SAT_POINT2_HUE_16               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_SAT_POINT2_HUE_17               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_SAT_POINT2_HUE_18               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_SAT_POINT2_HUE_19               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_4;	/* DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_4, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_START_
{
		volatile struct	/* 0x15024800 */
		{
				FIELD  COLOR_DISP_COLOR_START                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_DISP_COLOR_OUT_SEL              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_DISP_COLOR_WRAP_MODE            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  COLOR_DISP_COLOR_DBUF_VSYNC           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_DIRECT_YUV_BIT_SEL              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  COLOR_STOP_TO_WDMA                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  COLOR_DISP_COLOR_SW_RST_ENGINE        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  COLOR_DISP_COLOR_DBG_SEL              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_START;	/* DIP_X_CAM_COLOR_START, DIP_A_CAM_COLOR_START*/

typedef volatile union _DIP_X_REG_CAM_COLOR_INTEN_
{
		volatile struct	/* 0x15024804 */
		{
				FIELD  COLOR_DISP_COLOR_INTEN_FR_COMPLETE    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_DISP_COLOR_INTEN_FR_DONE        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_DISP_COLOR_INTEN_FR_UNDERRUN    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_INTEN;	/* DIP_X_CAM_COLOR_INTEN, DIP_A_CAM_COLOR_INTEN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_INTSTA_
{
		volatile struct	/* 0x15024808 */
		{
				FIELD  COLOR_DISP_COLOR_INTSTA_FR_COMPLETE   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_DISP_COLOR_INTSTA_FR_DONE       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_DISP_COLOR_INTSTA_FR_UNDERRUN   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_INTSTA;	/* DIP_X_CAM_COLOR_INTSTA, DIP_A_CAM_COLOR_INTSTA*/

typedef volatile union _DIP_X_REG_CAM_COLOR_OUT_SEL_
{
		volatile struct	/* 0x1502480C */
		{
				FIELD  COLOR_REG_CHA_SEL                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_REG_CHA_ROUND                   :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_REG_CHA_UV                      :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_REG_CHB_SEL                     :  1;		/*  4.. 4, 0x00000010 */
				FIELD  COLOR_REG_CHB_ROUND                   :  1;		/*  5.. 5, 0x00000020 */
				FIELD  COLOR_REG_CHB_UV                      :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  COLOR_REG_CHC_SEL                     :  1;		/*  8.. 8, 0x00000100 */
				FIELD  COLOR_REG_CHC_ROUND                   :  1;		/*  9.. 9, 0x00000200 */
				FIELD  COLOR_REG_CHC_UV                      :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_OUT_SEL;	/* DIP_X_CAM_COLOR_OUT_SEL, DIP_A_CAM_COLOR_OUT_SEL*/

typedef volatile union _DIP_X_REG_CAM_COLOR_FRAME_DONE_DEL_
{
		volatile struct	/* 0x15024810 */
		{
				FIELD  COLOR_DISP_COLOR_FRAME_DONE_DEL       :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_FRAME_DONE_DEL;	/* DIP_X_CAM_COLOR_FRAME_DONE_DEL, DIP_A_CAM_COLOR_FRAME_DONE_DEL*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CRC_
{
		volatile struct	/* 0x15024814 */
		{
				FIELD  COLOR_DISP_COLOR_CRC_CEN              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_DISP_COLOR_CRC_START            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_DISP_COLOR_CRC_CLR              :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CRC;	/* DIP_X_CAM_COLOR_CRC, DIP_A_CAM_COLOR_CRC*/

typedef volatile union _DIP_X_REG_CAM_COLOR_SW_SCRATCH_
{
		volatile struct	/* 0x15024818 */
		{
				FIELD  COLOR_DISP_COLOR_SW_SCRATCH           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_SW_SCRATCH;	/* DIP_X_CAM_COLOR_SW_SCRATCH, DIP_A_CAM_COLOR_SW_SCRATCH*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CK_ON_
{
		volatile struct	/* 0x1502481C */
		{
				FIELD  COLOR_DISP_COLOR_CK_ON                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CK_ON;	/* DIP_X_CAM_COLOR_CK_ON, DIP_A_CAM_COLOR_CK_ON*/

typedef volatile union _DIP_X_REG_CAM_COLOR_INTERNAL_IP_WIDTH_
{
		volatile struct	/* 0x15024820 */
		{
				FIELD  COLOR_DISP_COLOR_INTERNAL_IP_WIDTH    : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_INTERNAL_IP_WIDTH;	/* DIP_X_CAM_COLOR_INTERNAL_IP_WIDTH, DIP_A_CAM_COLOR_INTERNAL_IP_WIDTH*/

typedef volatile union _DIP_X_REG_CAM_COLOR_INTERNAL_IP_HEIGHT_
{
		volatile struct	/* 0x15024824 */
		{
				FIELD  COLOR_DISP_COLOR_INTERNAL_IP_HEIGHT   : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_INTERNAL_IP_HEIGHT;	/* DIP_X_CAM_COLOR_INTERNAL_IP_HEIGHT, DIP_A_CAM_COLOR_INTERNAL_IP_HEIGHT*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM1_EN_
{
		volatile struct	/* 0x15024828 */
		{
				FIELD  COLOR_DISP_COLOR_CM1_EN               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_DISP_COLOR_CM1_CLIP_EN          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM1_EN;	/* DIP_X_CAM_COLOR_CM1_EN, DIP_A_CAM_COLOR_CM1_EN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM2_EN_
{
		volatile struct	/* 0x1502482C */
		{
				FIELD  COLOR_DISP_COLOR_CM2_EN               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_DISP_COLOR_CM2_CLIP_SEL         :  2;		/*  1.. 2, 0x00000006 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_DISP_COLOR_CM2_ROUND_OFF        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM2_EN;	/* DIP_X_CAM_COLOR_CM2_EN, DIP_A_CAM_COLOR_CM2_EN*/

typedef volatile union _DIP_X_REG_CAM_COLOR_SHADOW_CTRL_
{
		volatile struct	/* 0x15024830 */
		{
				FIELD  COLOR_BYPASS_SHADOW                   :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_FORCE_COMMIT                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_READ_WRK_REG                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_SHADOW_CTRL;	/* DIP_X_CAM_COLOR_SHADOW_CTRL, DIP_A_CAM_COLOR_SHADOW_CTRL*/

typedef volatile union _DIP_X_REG_CAM_COLOR_R0_CRC_
{
		volatile struct	/* 0x15024834 */
		{
				FIELD  COLOR_DISP_COLOR_CRC_OUT_0            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  COLOR_DISP_COLOR_CRC_RDY_0            :  1;		/* 16..16, 0x00010000 */
				FIELD  COLOR_DISP_COLOR_ENGINE_END           :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_R0_CRC;	/* DIP_X_CAM_COLOR_R0_CRC, DIP_A_CAM_COLOR_R0_CRC*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_0_
{
		volatile struct	/* 0x15024838 */
		{
				FIELD  COLOR_S_GAIN_Y0_HUE_0                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y0_HUE_1                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y0_HUE_2                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y0_HUE_3                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_0;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y0_0, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_1_
{
		volatile struct	/* 0x1502483C */
		{
				FIELD  COLOR_S_GAIN_Y0_HUE_4                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y0_HUE_5                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y0_HUE_6                 :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y0_HUE_7                 :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_1;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y0_1, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_2_
{
		volatile struct	/* 0x15024840 */
		{
				FIELD  COLOR_S_GAIN_Y0_HUE_8                 :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y0_HUE_9                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y0_HUE_10                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y0_HUE_11                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_2;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y0_2, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_3_
{
		volatile struct	/* 0x15024844 */
		{
				FIELD  COLOR_S_GAIN_Y0_HUE_12                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y0_HUE_13                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y0_HUE_14                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y0_HUE_15                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_3;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y0_3, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_4_
{
		volatile struct	/* 0x15024848 */
		{
				FIELD  COLOR_S_GAIN_Y0_HUE_16                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y0_HUE_17                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y0_HUE_18                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y0_HUE_19                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_4;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y0_4, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_0_
{
		volatile struct	/* 0x1502484C */
		{
				FIELD  COLOR_S_GAIN_Y64_HUE_0                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y64_HUE_1                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y64_HUE_2                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y64_HUE_3                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_0;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y64_0, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_1_
{
		volatile struct	/* 0x15024850 */
		{
				FIELD  COLOR_S_GAIN_Y64_HUE_4                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y64_HUE_5                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y64_HUE_6                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y64_HUE_7                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_1;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y64_1, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_2_
{
		volatile struct	/* 0x15024854 */
		{
				FIELD  COLOR_S_GAIN_Y64_HUE_8                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y64_HUE_9                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y64_HUE_10               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y64_HUE_11               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_2;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y64_2, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_3_
{
		volatile struct	/* 0x15024858 */
		{
				FIELD  COLOR_S_GAIN_Y64_HUE_12               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y64_HUE_13               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y64_HUE_14               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y64_HUE_15               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_3;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y64_3, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_4_
{
		volatile struct	/* 0x1502485C */
		{
				FIELD  COLOR_S_GAIN_Y64_HUE_16               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y64_HUE_17               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y64_HUE_18               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y64_HUE_19               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_4;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y64_4, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_0_
{
		volatile struct	/* 0x15024860 */
		{
				FIELD  COLOR_S_GAIN_Y128_HUE_0               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y128_HUE_1               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y128_HUE_2               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y128_HUE_3               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_0;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y128_0, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_1_
{
		volatile struct	/* 0x15024864 */
		{
				FIELD  COLOR_S_GAIN_Y128_HUE_4               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y128_HUE_5               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y128_HUE_6               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y128_HUE_7               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_1;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y128_1, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_2_
{
		volatile struct	/* 0x15024868 */
		{
				FIELD  COLOR_S_GAIN_Y128_HUE_8               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y128_HUE_9               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y128_HUE_10              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y128_HUE_11              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_2;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y128_2, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_3_
{
		volatile struct	/* 0x1502486C */
		{
				FIELD  COLOR_S_GAIN_Y128_HUE_12              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y128_HUE_13              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y128_HUE_14              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y128_HUE_15              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_3;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y128_3, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_4_
{
		volatile struct	/* 0x15024870 */
		{
				FIELD  COLOR_S_GAIN_Y128_HUE_16              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y128_HUE_17              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y128_HUE_18              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y128_HUE_19              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_4;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y128_4, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_0_
{
		volatile struct	/* 0x15024874 */
		{
				FIELD  COLOR_S_GAIN_Y192_HUE_0               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y192_HUE_1               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y192_HUE_2               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y192_HUE_3               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_0;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y192_0, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_1_
{
		volatile struct	/* 0x15024878 */
		{
				FIELD  COLOR_S_GAIN_Y192_HUE_4               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y192_HUE_5               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y192_HUE_6               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y192_HUE_7               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_1;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y192_1, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_2_
{
		volatile struct	/* 0x1502487C */
		{
				FIELD  COLOR_S_GAIN_Y192_HUE_8               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y192_HUE_9               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y192_HUE_10              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y192_HUE_11              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_2;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y192_2, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_3_
{
		volatile struct	/* 0x15024880 */
		{
				FIELD  COLOR_S_GAIN_Y192_HUE_12              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y192_HUE_13              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y192_HUE_14              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y192_HUE_15              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_3;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y192_3, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_4_
{
		volatile struct	/* 0x15024884 */
		{
				FIELD  COLOR_S_GAIN_Y192_HUE_16              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y192_HUE_17              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y192_HUE_18              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y192_HUE_19              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_4;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y192_4, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_0_
{
		volatile struct	/* 0x15024888 */
		{
				FIELD  COLOR_S_GAIN_Y256_HUE_0               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y256_HUE_1               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y256_HUE_2               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y256_HUE_3               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_0;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y256_0, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_1_
{
		volatile struct	/* 0x1502488C */
		{
				FIELD  COLOR_S_GAIN_Y256_HUE_4               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y256_HUE_5               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y256_HUE_6               :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y256_HUE_7               :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_1;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y256_1, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_2_
{
		volatile struct	/* 0x15024890 */
		{
				FIELD  COLOR_S_GAIN_Y256_HUE_8               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y256_HUE_9               :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y256_HUE_10              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y256_HUE_11              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_2;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y256_2, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_3_
{
		volatile struct	/* 0x15024894 */
		{
				FIELD  COLOR_S_GAIN_Y256_HUE_12              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y256_HUE_13              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y256_HUE_14              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y256_HUE_15              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_3;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y256_3, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_4_
{
		volatile struct	/* 0x15024898 */
		{
				FIELD  COLOR_S_GAIN_Y256_HUE_16              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_S_GAIN_Y256_HUE_17              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_S_GAIN_Y256_HUE_18              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_S_GAIN_Y256_HUE_19              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_4;	/* DIP_X_CAM_COLOR_S_GAIN_BY_Y256_4, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LSP_1_
{
		volatile struct	/* 0x1502489C */
		{
				FIELD  COLOR_LSP_LIRE_YSLOPE                 :  7;		/*  0.. 6, 0x0000007F */
				FIELD  COLOR_LSP_LIRE_SSLOPE                 :  7;		/*  7..13, 0x00003F80 */
				FIELD  COLOR_LSP_LIRE_YTH                    :  8;		/* 14..21, 0x003FC000 */
				FIELD  COLOR_LSP_LIRE_STH                    :  7;		/* 22..28, 0x1FC00000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LSP_1;	/* DIP_X_CAM_COLOR_LSP_1, DIP_A_CAM_COLOR_LSP_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_LSP_2_
{
		volatile struct	/* 0x150248A0 */
		{
				FIELD  COLOR_LSP_LIRE_GAIN                   :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  COLOR_LSP_LSAT_GAIN                   :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  COLOR_LSP_LSAT_STH                    :  7;		/* 16..22, 0x007F0000 */
				FIELD  COLOR_LSP_LSAT_SSLOPE                 :  7;		/* 23..29, 0x3F800000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_LSP_2;	/* DIP_X_CAM_COLOR_LSP_2, DIP_A_CAM_COLOR_LSP_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_CONTROL_
{
		volatile struct	/* 0x150248A4 */
		{
				FIELD  COLOR_CM_BYPASS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  COLOR_CM_W1_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  COLOR_CM_W1_WGT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  COLOR_CM_W1_INK_EN                    :  1;		/*  3.. 3, 0x00000008 */
				FIELD  COLOR_CM_W2_EN                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  COLOR_CM_W2_WGT_EN                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  COLOR_CM_W2_INK_EN                    :  1;		/*  6.. 6, 0x00000040 */
				FIELD  COLOR_CM_W3_EN                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  COLOR_CM_W3_WGT_EN                    :  1;		/*  8.. 8, 0x00000100 */
				FIELD  COLOR_CM_W3_INK_EN                    :  1;		/*  9.. 9, 0x00000200 */
				FIELD  COLOR_CM_INK_DELTA_MODE               :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  COLOR_CM_INK_CH                       :  2;		/* 12..13, 0x00003000 */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_CONTROL;	/* DIP_X_CAM_COLOR_CM_CONTROL, DIP_A_CAM_COLOR_CM_CONTROL*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_HUE_0_
{
		volatile struct	/* 0x150248A8 */
		{
				FIELD  COLOR_CM_H_W1_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W1_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_H_W1_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_HUE_0;	/* DIP_X_CAM_COLOR_CM_W1_HUE_0, DIP_A_CAM_COLOR_CM_W1_HUE_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_HUE_1_
{
		volatile struct	/* 0x150248AC */
		{
				FIELD  COLOR_CM_H_W1_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W1_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_H_W1_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_HUE_1;	/* DIP_X_CAM_COLOR_CM_W1_HUE_1, DIP_A_CAM_COLOR_CM_W1_HUE_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_HUE_2_
{
		volatile struct	/* 0x150248B0 */
		{
				FIELD  COLOR_CM_H_W1_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W1_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_H_W1_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_HUE_2;	/* DIP_X_CAM_COLOR_CM_W1_HUE_2, DIP_A_CAM_COLOR_CM_W1_HUE_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_HUE_3_
{
		volatile struct	/* 0x150248B4 */
		{
				FIELD  COLOR_CM_H_W1_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_H_W1_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_H_W1_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_H_W1_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_HUE_3;	/* DIP_X_CAM_COLOR_CM_W1_HUE_3, DIP_A_CAM_COLOR_CM_W1_HUE_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_HUE_4_
{
		volatile struct	/* 0x150248B8 */
		{
				FIELD  COLOR_CM_H_W1_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_H_W1_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_HUE_4;	/* DIP_X_CAM_COLOR_CM_W1_HUE_4, DIP_A_CAM_COLOR_CM_W1_HUE_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_LUMA_0_
{
		volatile struct	/* 0x150248BC */
		{
				FIELD  COLOR_CM_Y_W1_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W1_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_Y_W1_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_LUMA_0;	/* DIP_X_CAM_COLOR_CM_W1_LUMA_0, DIP_A_CAM_COLOR_CM_W1_LUMA_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_LUMA_1_
{
		volatile struct	/* 0x150248C0 */
		{
				FIELD  COLOR_CM_Y_W1_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W1_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_Y_W1_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_LUMA_1;	/* DIP_X_CAM_COLOR_CM_W1_LUMA_1, DIP_A_CAM_COLOR_CM_W1_LUMA_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_LUMA_2_
{
		volatile struct	/* 0x150248C4 */
		{
				FIELD  COLOR_CM_Y_W1_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W1_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_Y_W1_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_LUMA_2;	/* DIP_X_CAM_COLOR_CM_W1_LUMA_2, DIP_A_CAM_COLOR_CM_W1_LUMA_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_LUMA_3_
{
		volatile struct	/* 0x150248C8 */
		{
				FIELD  COLOR_CM_Y_W1_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_Y_W1_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_Y_W1_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_Y_W1_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_LUMA_3;	/* DIP_X_CAM_COLOR_CM_W1_LUMA_3, DIP_A_CAM_COLOR_CM_W1_LUMA_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_LUMA_4_
{
		volatile struct	/* 0x150248CC */
		{
				FIELD  COLOR_CM_Y_W1_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_Y_W1_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_LUMA_4;	/* DIP_X_CAM_COLOR_CM_W1_LUMA_4, DIP_A_CAM_COLOR_CM_W1_LUMA_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_SAT_0_
{
		volatile struct	/* 0x150248D0 */
		{
				FIELD  COLOR_CM_S_W1_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W1_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_S_W1_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_SAT_0;	/* DIP_X_CAM_COLOR_CM_W1_SAT_0, DIP_A_CAM_COLOR_CM_W1_SAT_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_SAT_1_
{
		volatile struct	/* 0x150248D4 */
		{
				FIELD  COLOR_CM_S_W1_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W1_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_S_W1_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_SAT_1;	/* DIP_X_CAM_COLOR_CM_W1_SAT_1, DIP_A_CAM_COLOR_CM_W1_SAT_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_SAT_2_
{
		volatile struct	/* 0x150248D8 */
		{
				FIELD  COLOR_CM_S_W1_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W1_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_S_W1_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_SAT_2;	/* DIP_X_CAM_COLOR_CM_W1_SAT_2, DIP_A_CAM_COLOR_CM_W1_SAT_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_SAT_3_
{
		volatile struct	/* 0x150248DC */
		{
				FIELD  COLOR_CM_S_W1_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_S_W1_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_S_W1_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_S_W1_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_SAT_3;	/* DIP_X_CAM_COLOR_CM_W1_SAT_3, DIP_A_CAM_COLOR_CM_W1_SAT_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W1_SAT_4_
{
		volatile struct	/* 0x150248E0 */
		{
				FIELD  COLOR_CM_S_W1_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_S_W1_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W1_SAT_4;	/* DIP_X_CAM_COLOR_CM_W1_SAT_4, DIP_A_CAM_COLOR_CM_W1_SAT_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_HUE_0_
{
		volatile struct	/* 0x150248E4 */
		{
				FIELD  COLOR_CM_H_W2_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W2_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_H_W2_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_HUE_0;	/* DIP_X_CAM_COLOR_CM_W2_HUE_0, DIP_A_CAM_COLOR_CM_W2_HUE_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_HUE_1_
{
		volatile struct	/* 0x150248E8 */
		{
				FIELD  COLOR_CM_H_W2_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W2_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_H_W2_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_HUE_1;	/* DIP_X_CAM_COLOR_CM_W2_HUE_1, DIP_A_CAM_COLOR_CM_W2_HUE_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_HUE_2_
{
		volatile struct	/* 0x150248EC */
		{
				FIELD  COLOR_CM_H_W2_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W2_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_H_W2_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_HUE_2;	/* DIP_X_CAM_COLOR_CM_W2_HUE_2, DIP_A_CAM_COLOR_CM_W2_HUE_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_HUE_3_
{
		volatile struct	/* 0x150248F0 */
		{
				FIELD  COLOR_CM_H_W2_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_H_W2_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_H_W2_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_H_W2_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_HUE_3;	/* DIP_X_CAM_COLOR_CM_W2_HUE_3, DIP_A_CAM_COLOR_CM_W2_HUE_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_HUE_4_
{
		volatile struct	/* 0x150248F4 */
		{
				FIELD  COLOR_CM_H_W2_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_H_W2_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_HUE_4;	/* DIP_X_CAM_COLOR_CM_W2_HUE_4, DIP_A_CAM_COLOR_CM_W2_HUE_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_LUMA_0_
{
		volatile struct	/* 0x150248F8 */
		{
				FIELD  COLOR_CM_Y_W2_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W2_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_Y_W2_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_LUMA_0;	/* DIP_X_CAM_COLOR_CM_W2_LUMA_0, DIP_A_CAM_COLOR_CM_W2_LUMA_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_LUMA_1_
{
		volatile struct	/* 0x150248FC */
		{
				FIELD  COLOR_CM_Y_W2_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W2_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_Y_W2_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_LUMA_1;	/* DIP_X_CAM_COLOR_CM_W2_LUMA_1, DIP_A_CAM_COLOR_CM_W2_LUMA_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_LUMA_2_
{
		volatile struct	/* 0x15024900 */
		{
				FIELD  COLOR_CM_Y_W2_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W2_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_Y_W2_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_LUMA_2;	/* DIP_X_CAM_COLOR_CM_W2_LUMA_2, DIP_A_CAM_COLOR_CM_W2_LUMA_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_LUMA_3_
{
		volatile struct	/* 0x15024904 */
		{
				FIELD  COLOR_CM_Y_W2_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_Y_W2_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_Y_W2_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_Y_W2_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_LUMA_3;	/* DIP_X_CAM_COLOR_CM_W2_LUMA_3, DIP_A_CAM_COLOR_CM_W2_LUMA_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_LUMA_4_
{
		volatile struct	/* 0x15024908 */
		{
				FIELD  COLOR_CM_Y_W2_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_Y_W2_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_LUMA_4;	/* DIP_X_CAM_COLOR_CM_W2_LUMA_4, DIP_A_CAM_COLOR_CM_W2_LUMA_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_SAT_0_
{
		volatile struct	/* 0x1502490C */
		{
				FIELD  COLOR_CM_S_W2_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W2_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_S_W2_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_SAT_0;	/* DIP_X_CAM_COLOR_CM_W2_SAT_0, DIP_A_CAM_COLOR_CM_W2_SAT_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_SAT_1_
{
		volatile struct	/* 0x15024910 */
		{
				FIELD  COLOR_CM_S_W2_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W2_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_S_W2_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_SAT_1;	/* DIP_X_CAM_COLOR_CM_W2_SAT_1, DIP_A_CAM_COLOR_CM_W2_SAT_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_SAT_2_
{
		volatile struct	/* 0x15024914 */
		{
				FIELD  COLOR_CM_S_W2_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W2_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_S_W2_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_SAT_2;	/* DIP_X_CAM_COLOR_CM_W2_SAT_2, DIP_A_CAM_COLOR_CM_W2_SAT_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_SAT_3_
{
		volatile struct	/* 0x15024918 */
		{
				FIELD  COLOR_CM_S_W2_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_S_W2_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_S_W2_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_S_W2_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_SAT_3;	/* DIP_X_CAM_COLOR_CM_W2_SAT_3, DIP_A_CAM_COLOR_CM_W2_SAT_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W2_SAT_4_
{
		volatile struct	/* 0x1502491C */
		{
				FIELD  COLOR_CM_S_W2_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_S_W2_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W2_SAT_4;	/* DIP_X_CAM_COLOR_CM_W2_SAT_4, DIP_A_CAM_COLOR_CM_W2_SAT_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_HUE_0_
{
		volatile struct	/* 0x15024920 */
		{
				FIELD  COLOR_CM_H_W3_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W3_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_H_W3_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_HUE_0;	/* DIP_X_CAM_COLOR_CM_W3_HUE_0, DIP_A_CAM_COLOR_CM_W3_HUE_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_HUE_1_
{
		volatile struct	/* 0x15024924 */
		{
				FIELD  COLOR_CM_H_W3_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W3_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_H_W3_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_HUE_1;	/* DIP_X_CAM_COLOR_CM_W3_HUE_1, DIP_A_CAM_COLOR_CM_W3_HUE_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_HUE_2_
{
		volatile struct	/* 0x15024928 */
		{
				FIELD  COLOR_CM_H_W3_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_H_W3_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_H_W3_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_HUE_2;	/* DIP_X_CAM_COLOR_CM_W3_HUE_2, DIP_A_CAM_COLOR_CM_W3_HUE_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_HUE_3_
{
		volatile struct	/* 0x1502492C */
		{
				FIELD  COLOR_CM_H_W3_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_H_W3_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_H_W3_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_H_W3_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_HUE_3;	/* DIP_X_CAM_COLOR_CM_W3_HUE_3, DIP_A_CAM_COLOR_CM_W3_HUE_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_HUE_4_
{
		volatile struct	/* 0x15024930 */
		{
				FIELD  COLOR_CM_H_W3_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_H_W3_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_HUE_4;	/* DIP_X_CAM_COLOR_CM_W3_HUE_4, DIP_A_CAM_COLOR_CM_W3_HUE_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_LUMA_0_
{
		volatile struct	/* 0x15024934 */
		{
				FIELD  COLOR_CM_Y_W3_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W3_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_Y_W3_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_LUMA_0;	/* DIP_X_CAM_COLOR_CM_W3_LUMA_0, DIP_A_CAM_COLOR_CM_W3_LUMA_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_LUMA_1_
{
		volatile struct	/* 0x15024938 */
		{
				FIELD  COLOR_CM_Y_W3_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W3_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_Y_W3_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_LUMA_1;	/* DIP_X_CAM_COLOR_CM_W3_LUMA_1, DIP_A_CAM_COLOR_CM_W3_LUMA_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_LUMA_2_
{
		volatile struct	/* 0x1502493C */
		{
				FIELD  COLOR_CM_Y_W3_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_Y_W3_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_Y_W3_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_LUMA_2;	/* DIP_X_CAM_COLOR_CM_W3_LUMA_2, DIP_A_CAM_COLOR_CM_W3_LUMA_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_LUMA_3_
{
		volatile struct	/* 0x15024940 */
		{
				FIELD  COLOR_CM_Y_W3_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_Y_W3_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_Y_W3_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_Y_W3_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_LUMA_3;	/* DIP_X_CAM_COLOR_CM_W3_LUMA_3, DIP_A_CAM_COLOR_CM_W3_LUMA_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_LUMA_4_
{
		volatile struct	/* 0x15024944 */
		{
				FIELD  COLOR_CM_Y_W3_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_Y_W3_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_LUMA_4;	/* DIP_X_CAM_COLOR_CM_W3_LUMA_4, DIP_A_CAM_COLOR_CM_W3_LUMA_4*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_SAT_0_
{
		volatile struct	/* 0x15024948 */
		{
				FIELD  COLOR_CM_S_W3_L                       : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W3_U                       : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_S_W3_POINT0                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_SAT_0;	/* DIP_X_CAM_COLOR_CM_W3_SAT_0, DIP_A_CAM_COLOR_CM_W3_SAT_0*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_SAT_1_
{
		volatile struct	/* 0x1502494C */
		{
				FIELD  COLOR_CM_S_W3_POINT1                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W3_POINT2                  : 10;		/* 10..19, 0x000FFC00 */
				FIELD  COLOR_CM_S_W3_POINT3                  : 10;		/* 20..29, 0x3FF00000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_SAT_1;	/* DIP_X_CAM_COLOR_CM_W3_SAT_1, DIP_A_CAM_COLOR_CM_W3_SAT_1*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_SAT_2_
{
		volatile struct	/* 0x15024950 */
		{
				FIELD  COLOR_CM_S_W3_POINT4                  : 10;		/*  0.. 9, 0x000003FF */
				FIELD  COLOR_CM_S_W3_SLOPE0                  :  8;		/* 10..17, 0x0003FC00 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  COLOR_CM_S_W3_SLOPE1                  :  8;		/* 20..27, 0x0FF00000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_SAT_2;	/* DIP_X_CAM_COLOR_CM_W3_SAT_2, DIP_A_CAM_COLOR_CM_W3_SAT_2*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_SAT_3_
{
		volatile struct	/* 0x15024954 */
		{
				FIELD  COLOR_CM_S_W3_SLOPE2                  :  8;		/*  0.. 7, 0x000000FF */
				FIELD  COLOR_CM_S_W3_SLOPE3                  :  8;		/*  8..15, 0x0000FF00 */
				FIELD  COLOR_CM_S_W3_SLOPE4                  :  8;		/* 16..23, 0x00FF0000 */
				FIELD  COLOR_CM_S_W3_SLOPE5                  :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_SAT_3;	/* DIP_X_CAM_COLOR_CM_W3_SAT_3, DIP_A_CAM_COLOR_CM_W3_SAT_3*/

typedef volatile union _DIP_X_REG_CAM_COLOR_CM_W3_SAT_4_
{
		volatile struct	/* 0x15024958 */
		{
				FIELD  COLOR_CM_S_W3_WGT_LSLOPE              : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  COLOR_CM_S_W3_WGT_USLOPE              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}DIP_X_REG_CAM_COLOR_CM_W3_SAT_4;	/* DIP_X_CAM_COLOR_CM_W3_SAT_4, DIP_A_CAM_COLOR_CM_W3_SAT_4*/

typedef volatile union _CAM_REG_CTL_START_
{
		volatile struct	/* 0x1A004000 */
		{
				FIELD  CQ_THR0_START                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_THR1_START                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  CQ_THR2_START                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  CQ_THR3_START                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  CQ_THR4_START                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  CQ_THR5_START                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_THR6_START                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_THR7_START                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_THR8_START                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CQ_THR9_START                         :  1;		/*  9.. 9, 0x00000200 */
				FIELD  CQ_THR10_START                        :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  CQ_THR12_START                        :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_START;	/* CAM_CTL_START, CAM_A_CTL_START*/

typedef volatile union _CAM_REG_CTL_EN_
{
		volatile struct	/* 0x1A004004 */
		{
				FIELD  TG_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DMX_EN                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGM_EN                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RMG_EN                                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_EN                                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  OBC_EN                                :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BNR_EN                                :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LSC_EN                                :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CAC_EN                                :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RPG_EN                                :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZ_EN                                :  1;		/* 10..10, 0x00000400 */
				FIELD  RMX_EN                                :  1;		/* 11..11, 0x00000800 */
				FIELD  PAKG_EN                               :  1;		/* 12..12, 0x00001000 */
				FIELD  BMX_EN                                :  1;		/* 13..13, 0x00002000 */
				FIELD  CPG_EN                                :  1;		/* 14..14, 0x00004000 */
				FIELD  PAK_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  UFE_EN                                :  1;		/* 16..16, 0x00010000 */
				FIELD  AF_EN                                 :  1;		/* 17..17, 0x00020000 */
				FIELD  SGG1_EN                               :  1;		/* 18..18, 0x00040000 */
				FIELD  AA_EN                                 :  1;		/* 19..19, 0x00080000 */
				FIELD  QBIN1_EN                              :  1;		/* 20..20, 0x00100000 */
				FIELD  LCS_EN                                :  1;		/* 21..21, 0x00200000 */
				FIELD  QBIN2_EN                              :  1;		/* 22..22, 0x00400000 */
				FIELD  RCP_EN                                :  1;		/* 23..23, 0x00800000 */
				FIELD  RCP3_EN                               :  1;		/* 24..24, 0x01000000 */
				FIELD  PMX_EN                                :  1;		/* 25..25, 0x02000000 */
				FIELD  PKP_EN                                :  1;		/* 26..26, 0x04000000 */
				FIELD  BIN_EN                                :  1;		/* 27..27, 0x08000000 */
				FIELD  DBS_EN                                :  1;		/* 28..28, 0x10000000 */
				FIELD  DBN_EN                                :  1;		/* 29..29, 0x20000000 */
				FIELD  PBN_EN                                :  1;		/* 30..30, 0x40000000 */
				FIELD  UFEG_EN                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_EN;	/* CAM_CTL_EN, CAM_A_CTL_EN*/

typedef volatile union _CAM_REG_CTL_DMA_EN_
{
		volatile struct	/* 0x1A004008 */
		{
				FIELD  IMGO_EN                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_EN                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_EN                               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_EN                                :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_EN                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_EN                                :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_EN                                :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_EN                               :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_EN                               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_EN                               :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_EN                                :  1;		/* 10..10, 0x00000400 */
				FIELD  LSC3I_EN                              :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 10;		/* 12..21, 0x003FF000 */
				FIELD  QBIN4_EN                              :  1;		/* 22..22, 0x00400000 */
				FIELD  PS_EN                                 :  1;		/* 23..23, 0x00800000 */
				FIELD  HLR_EN                                :  1;		/* 24..24, 0x01000000 */
				FIELD  AMX_EN                                :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2F_EN                               :  1;		/* 26..26, 0x04000000 */
				FIELD  VBN_EN                                :  1;		/* 27..27, 0x08000000 */
				FIELD  SL2J_EN                               :  1;		/* 28..28, 0x10000000 */
				FIELD  STM_EN                                :  1;		/* 29..29, 0x20000000 */
				FIELD  SCM_EN                                :  1;		/* 30..30, 0x40000000 */
				FIELD  SGG5_EN                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DMA_EN;	/* CAM_CTL_DMA_EN, CAM_A_CTL_DMA_EN*/

typedef volatile union _CAM_REG_CTL_FMT_SEL_
{
		volatile struct	/* 0x1A00400C */
		{
				FIELD  PIX_ID                                :  2;		/*  0.. 1, 0x00000003 */
				FIELD  RRZO_FMT                              :  2;		/*  2.. 3, 0x0000000C */
				FIELD  IMGO_FMT                              :  5;		/*  4.. 8, 0x000001F0 */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PIX_BUS_DMXO                          :  2;		/* 10..11, 0x00000C00 */
				FIELD  TG_FMT                                :  3;		/* 12..14, 0x00007000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  TG_SWAP                               :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DMX_ID                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  PIX_BUS_DMXI                          :  2;		/* 24..25, 0x03000000 */
				FIELD  PIX_BUS_BMXO                          :  2;		/* 26..27, 0x0C000000 */
				FIELD  PIX_BUS_RMXO                          :  2;		/* 28..29, 0x30000000 */
				FIELD  RRZO_FG_MODE                          :  1;		/* 30..30, 0x40000000 */
				FIELD  LP_MODE                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_FMT_SEL;	/* CAM_CTL_FMT_SEL, CAM_A_CTL_FMT_SEL*/

typedef volatile union _CAM_REG_CTL_SEL_
{
		volatile struct	/* 0x1A004010 */
		{
				FIELD  DMX_SEL                               :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  HDS1_SEL                              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  BMX_SEL                               :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  SGG_SEL                               :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  1;		/* 13..13, 0x00002000 */
				FIELD  LCS_SEL                               :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  IMG_SEL                               :  2;		/* 16..17, 0x00030000 */
				FIELD  UFE_SEL                               :  2;		/* 18..19, 0x000C0000 */
				FIELD  FLK1_SEL                              :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  PMX_SEL                               :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  RCP3_SEL                              :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  1;		/* 25..25, 0x02000000 */
				FIELD  UFEG_SEL                              :  1;		/* 26..26, 0x04000000 */
				FIELD  rsv_27                                :  1;		/* 27..27, 0x08000000 */
				FIELD  RCP_SEL                               :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  1;		/* 29..29, 0x20000000 */
				FIELD  AAO_SEL                               :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_SEL;	/* CAM_CTL_SEL, CAM_A_CTL_SEL*/

typedef volatile union _CAM_REG_CTL_MISC_
{
		volatile struct	/* 0x1A004014 */
		{
				FIELD  DB_LOAD_HOLD                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  DB_EN                                 :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  APB_CLK_GATE_BYPASS                   :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_MISC;	/* CAM_CTL_MISC, CAM_A_CTL_MISC*/

typedef volatile union _CAM_REG_CTL_RAW_INT_EN_
{
		volatile struct	/* 0x1A004020 */
		{
				FIELD  VS_INT_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_INT1_EN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_INT2_EN                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON_EN                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_CODE_ERR_EN                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_APB_ERR_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_VS_ERR_EN                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  IMGO_DROP_FRAME_EN                    :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZO_DROP_FRAME_EN                    :  1;		/* 10..10, 0x00000400 */
				FIELD  PASS1_DON_EN                          :  1;		/* 11..11, 0x00000800 */
				FIELD  SOF_INT_EN                            :  1;		/* 12..12, 0x00001000 */
				FIELD  SOF_WAIT_EN                           :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  AMX_ERR_EN                            :  1;		/* 15..15, 0x00008000 */
				FIELD  RMX_ERR_EN                            :  1;		/* 16..16, 0x00010000 */
				FIELD  BMX_ERR_EN                            :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_ERR_EN                           :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_ERR_EN                            :  1;		/* 19..19, 0x00080000 */
				FIELD  IMGO_ERR_EN                           :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_ERR_EN                            :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_ERR_EN                            :  1;		/* 22..22, 0x00400000 */
				FIELD  LCSO_ERR_EN                           :  1;		/* 23..23, 0x00800000 */
				FIELD  BPC_ERR_EN                            :  1;		/* 24..24, 0x01000000 */
				FIELD  LSC_ERR_EN                            :  1;		/* 25..25, 0x02000000 */
				FIELD  CAC_ERR_EN                            :  1;		/* 26..26, 0x04000000 */
				FIELD  UFEO_ERR_EN                           :  1;		/* 27..27, 0x08000000 */
				FIELD  PDO_ERR_EN                            :  1;		/* 28..28, 0x10000000 */
				FIELD  DMA_ERR_EN                            :  1;		/* 29..29, 0x20000000 */
				FIELD  SW_PASS1_DON_EN                       :  1;		/* 30..30, 0x40000000 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_INT_EN;	/* CAM_CTL_RAW_INT_EN, CAM_A_CTL_RAW_INT_EN*/

typedef volatile union _CAM_REG_CTL_RAW_INT_STATUS_
{
		volatile struct	/* 0x1A004024 */
		{
				FIELD  VS_INT_ST                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_INT1_ST                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_INT2_ST                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON_ST                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_ST                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_ST                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_CODE_ERR_ST                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_APB_ERR_ST                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_VS_ERR_ST                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  IMGO_DROP_FRAME_ST                    :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZO_DROP_FRAME_ST                    :  1;		/* 10..10, 0x00000400 */
				FIELD  PASS1_DON_ST                          :  1;		/* 11..11, 0x00000800 */
				FIELD  SOF_INT_ST                            :  1;		/* 12..12, 0x00001000 */
				FIELD  SOF_WAIT_ST                           :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  AMX_ERR_ST                            :  1;		/* 15..15, 0x00008000 */
				FIELD  RMX_ERR_ST                            :  1;		/* 16..16, 0x00010000 */
				FIELD  BMX_ERR_ST                            :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_ERR_ST                           :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_ERR_ST                            :  1;		/* 19..19, 0x00080000 */
				FIELD  IMGO_ERR_ST                           :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_ERR_ST                            :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_ERR_ST                            :  1;		/* 22..22, 0x00400000 */
				FIELD  LCSO_ERR_ST                           :  1;		/* 23..23, 0x00800000 */
				FIELD  BNR_ERR_ST                            :  1;		/* 24..24, 0x01000000 */
				FIELD  LSC_ERR_ST                            :  1;		/* 25..25, 0x02000000 */
				FIELD  CAC_ERR_ST                            :  1;		/* 26..26, 0x04000000 */
				FIELD  UFEO_ERR_ST                           :  1;		/* 27..27, 0x08000000 */
				FIELD  PDO_ERR_ST                            :  1;		/* 28..28, 0x10000000 */
				FIELD  DMA_ERR_ST                            :  1;		/* 29..29, 0x20000000 */
				FIELD  SW_PASS1_DON_ST                       :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_INT_STATUS;	/* CAM_CTL_RAW_INT_STATUS, CAM_A_CTL_RAW_INT_STATUS*/

typedef volatile union _CAM_REG_CTL_RAW_INT_STATUSX_
{
		volatile struct	/* 0x1A004028 */
		{
				FIELD  VS_INT_ST                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_INT1_ST                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_INT2_ST                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON_ST                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_ST                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_ST                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_CODE_ERR_ST                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_APB_ERR_ST                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_VS_ERR_ST                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  IMGO_DROP_FRAME_ST                    :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZO_DROP_FRAME_ST                    :  1;		/* 10..10, 0x00000400 */
				FIELD  PASS1_DON_ST                          :  1;		/* 11..11, 0x00000800 */
				FIELD  SOF_INT_ST                            :  1;		/* 12..12, 0x00001000 */
				FIELD  SOF_WAIT_ST                           :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  AMX_ERR_ST                            :  1;		/* 15..15, 0x00008000 */
				FIELD  RMX_ERR_ST                            :  1;		/* 16..16, 0x00010000 */
				FIELD  BMX_ERR_ST                            :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_ERR_ST                           :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_ERR_ST                            :  1;		/* 19..19, 0x00080000 */
				FIELD  IMGO_ERR_ST                           :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_ERR_ST                            :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_ERR_ST                            :  1;		/* 22..22, 0x00400000 */
				FIELD  LCSO_ERR_ST                           :  1;		/* 23..23, 0x00800000 */
				FIELD  BNR_ERR_ST                            :  1;		/* 24..24, 0x01000000 */
				FIELD  LSC_ERR_ST                            :  1;		/* 25..25, 0x02000000 */
				FIELD  CAC_ERR_ST                            :  1;		/* 26..26, 0x04000000 */
				FIELD  UFEO_ERR_ST                           :  1;		/* 27..27, 0x08000000 */
				FIELD  PDO_ERR_ST                            :  1;		/* 28..28, 0x10000000 */
				FIELD  DMA_ERR_ST                            :  1;		/* 29..29, 0x20000000 */
				FIELD  SW_PASS1_DON_ST                       :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_INT_STATUSX;	/* CAM_CTL_RAW_INT_STATUSX, CAM_A_CTL_RAW_INT_STATUSX*/

typedef volatile union _CAM_REG_CTL_RAW_INT2_EN_
{
		volatile struct	/* 0x1A004030 */
		{
				FIELD  IMGO_DONE_EN                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DONE_EN                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DONE_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EISO_DONE_EN                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_DONE_EN                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AFO_DONE_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  LCSO_DONE_EN                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  AAO_DONE_EN                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSC3I_DONE_EN                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  BPCI_DONE_EN                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSCI_DONE_EN                          :  1;		/* 10..10, 0x00000400 */
				FIELD  CACI_DONE_EN                          :  1;		/* 11..11, 0x00000800 */
				FIELD  AF_TAR_DONE_EN                        :  1;		/* 12..12, 0x00001000 */
				FIELD  PDO_DONE_EN                           :  1;		/* 13..13, 0x00002000 */
				FIELD  PSO_DONE_EN                           :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR0_DONE_EN                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR1_DONE_EN                       :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR2_DONE_EN                       :  1;		/* 18..18, 0x00040000 */
				FIELD  CQ_THR3_DONE_EN                       :  1;		/* 19..19, 0x00080000 */
				FIELD  CQ_THR4_DONE_EN                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_THR5_DONE_EN                       :  1;		/* 21..21, 0x00200000 */
				FIELD  CQ_THR6_DONE_EN                       :  1;		/* 22..22, 0x00400000 */
				FIELD  CQ_THR7_DONE_EN                       :  1;		/* 23..23, 0x00800000 */
				FIELD  CQ_THR8_DONE_EN                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CQ_THR9_DONE_EN                       :  1;		/* 25..25, 0x02000000 */
				FIELD  CQ_THR10_DONE_EN                      :  1;		/* 26..26, 0x04000000 */
				FIELD  CQ_THR11_DONE_EN                      :  1;		/* 27..27, 0x08000000 */
				FIELD  CQ_THR12_DONE_EN                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_INT2_EN;	/* CAM_CTL_RAW_INT2_EN, CAM_A_CTL_RAW_INT2_EN*/

typedef volatile union _CAM_REG_CTL_RAW_INT2_STATUS_
{
		volatile struct	/* 0x1A004034 */
		{
				FIELD  IMGO_DONE_ST                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DONE_ST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DONE_ST                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EISO_DONE_ST                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_DONE_ST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AFO_DEONE_ST                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  LCSO_DONE_ST                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  AAO_DONE_ST                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSC3I_DONE_ST                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  BPCI_DONE_ST                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSCI_DONE_ST                          :  1;		/* 10..10, 0x00000400 */
				FIELD  CACI_DONE_ST                          :  1;		/* 11..11, 0x00000800 */
				FIELD  AF_TAR_DONE_ST                        :  1;		/* 12..12, 0x00001000 */
				FIELD  PDO_DONE_ST                           :  1;		/* 13..13, 0x00002000 */
				FIELD  PSO_DONE_ST                           :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR0_DONE_ST                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR1_DONE_ST                       :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR2_DONE_ST                       :  1;		/* 18..18, 0x00040000 */
				FIELD  CQ_THR3_DONE_ST                       :  1;		/* 19..19, 0x00080000 */
				FIELD  CQ_THR4_DONE_ST                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_THR5_DONE_ST                       :  1;		/* 21..21, 0x00200000 */
				FIELD  CQ_THR6_DONE_ST                       :  1;		/* 22..22, 0x00400000 */
				FIELD  CQ_THR7_DONE_ST                       :  1;		/* 23..23, 0x00800000 */
				FIELD  CQ_THR8_DONE_ST                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CQ_THR9_DONE_ST                       :  1;		/* 25..25, 0x02000000 */
				FIELD  CQ_THR10_DONE_ST                      :  1;		/* 26..26, 0x04000000 */
				FIELD  CQ_THR11_DONE_ST                      :  1;		/* 27..27, 0x08000000 */
				FIELD  CQ_THR12_DONE_ST                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_INT2_STATUS;	/* CAM_CTL_RAW_INT2_STATUS, CAM_A_CTL_RAW_INT2_STATUS*/

typedef volatile union _CAM_REG_CTL_RAW_INT2_STATUSX_
{
		volatile struct	/* 0x1A004038 */
		{
				FIELD  IMGO_DONE_ST                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DONE_ST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DONE_ST                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EISO_DONE_ST                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_DONE_ST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AFO_DEONE_ST                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  LCSO_DONE_ST                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  AAO_DONE_ST                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSC3I_DONE_ST                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  BPCI_DONE_ST                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSCI_DONE_ST                          :  1;		/* 10..10, 0x00000400 */
				FIELD  CACI_DONE_ST                          :  1;		/* 11..11, 0x00000800 */
				FIELD  AF_TAR_DONE_ST                        :  1;		/* 12..12, 0x00001000 */
				FIELD  PDO_DONE_ST                           :  1;		/* 13..13, 0x00002000 */
				FIELD  PSO_DONE_ST                           :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR0_DONE_ST                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR1_DONE_ST                       :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR2_DONE_ST                       :  1;		/* 18..18, 0x00040000 */
				FIELD  CQ_THR3_DONE_ST                       :  1;		/* 19..19, 0x00080000 */
				FIELD  CQ_THR4_DONE_ST                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_THR5_DONE_ST                       :  1;		/* 21..21, 0x00200000 */
				FIELD  CQ_THR6_DONE_ST                       :  1;		/* 22..22, 0x00400000 */
				FIELD  CQ_THR7_DONE_ST                       :  1;		/* 23..23, 0x00800000 */
				FIELD  CQ_THR8_DONE_ST                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CQ_THR9_DONE_ST                       :  1;		/* 25..25, 0x02000000 */
				FIELD  CQ_THR10_DONE_ST                      :  1;		/* 26..26, 0x04000000 */
				FIELD  CQ_THR11_DONE_ST                      :  1;		/* 27..27, 0x08000000 */
				FIELD  CQ_THR12_DONE_ST                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_INT2_STATUSX;	/* CAM_CTL_RAW_INT2_STATUSX, CAM_A_CTL_RAW_INT2_STATUSX*/

typedef volatile union _CAM_REG_CTL_SW_CTL_
{
		volatile struct	/* 0x1A004040 */
		{
				FIELD  SW_RST_Trig                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SW_RST_ST                             :  1;		/*  1.. 1, 0x00000002 */
				FIELD  HW_RST                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_SW_CTL;	/* CAM_CTL_SW_CTL, CAM_A_CTL_SW_CTL*/

typedef volatile union _CAM_REG_CTL_AB_DONE_SEL_
{
		volatile struct	/* 0x1A004044 */
		{
				FIELD  IMGO_A_DONE_SEL                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_A_DONE_SEL                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_A_DONE_SEL                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_A_DONE_SEL                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_A_DONE_SEL                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_A_DONE_SEL                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_A_DONE_SEL                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_A_DONE_SEL                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_A_DONE_SEL                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_A_DONE_SEL                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_A_DONE_SEL                        :  1;		/* 10..10, 0x00000400 */
				FIELD  TG_A_DONE_SEL                         :  1;		/* 11..11, 0x00000800 */
				FIELD  LSC3I_A_DONE_SEL                      :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  IMGO_B_DONE_SEL                       :  1;		/* 16..16, 0x00010000 */
				FIELD  UFEO_B_DONE_SEL                       :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_B_DONE_SEL                       :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_B_DONE_SEL                        :  1;		/* 19..19, 0x00080000 */
				FIELD  LCSO_B_DONE_SEL                       :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_B_DONE_SEL                        :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_B_DONE_SEL                        :  1;		/* 22..22, 0x00400000 */
				FIELD  BPCI_B_DONE_SEL                       :  1;		/* 23..23, 0x00800000 */
				FIELD  LSCI_B_DONE_SEL                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CACI_B_DONE_SEL                       :  1;		/* 25..25, 0x02000000 */
				FIELD  PDO_B_DONE_SEL                        :  1;		/* 26..26, 0x04000000 */
				FIELD  TG_B_DONE_SEL                         :  1;		/* 27..27, 0x08000000 */
				FIELD  LSC3I_B_DONE_SEL                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_AB_DONE_SEL;	/* CAM_CTL_AB_DONE_SEL, CAM_A_CTL_AB_DONE_SEL*/

typedef volatile union _CAM_REG_CTL_CD_DONE_SEL_
{
		volatile struct	/* 0x1A004048 */
		{
				FIELD  IMGO_C_DONE_SEL                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_C_DONE_SEL                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_C_DONE_SEL                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_C_DONE_SEL                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_C_DONE_SEL                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_C_DONE_SEL                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_C_DONE_SEL                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_C_DONE_SEL                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_C_DONE_SEL                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_C_DONE_SEL                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_C_DONE_SEL                        :  1;		/* 10..10, 0x00000400 */
				FIELD  TG_C_DONE_SEL                         :  1;		/* 11..11, 0x00000800 */
				FIELD  LSC3I_C_DONE_SEL                      :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  IMGO_D_DONE_SEL                       :  1;		/* 16..16, 0x00010000 */
				FIELD  UFEO_D_DONE_SEL                       :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_D_DONE_SEL                       :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_D_DONE_SEL                        :  1;		/* 19..19, 0x00080000 */
				FIELD  LCSO_D_DONE_SEL                       :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_D_DONE_SEL                        :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_D_DONE_SEL                        :  1;		/* 22..22, 0x00400000 */
				FIELD  BPCI_D_DONE_SEL                       :  1;		/* 23..23, 0x00800000 */
				FIELD  LSCI_D_DONE_SEL                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CACI_D_DONE_SEL                       :  1;		/* 25..25, 0x02000000 */
				FIELD  PDO_D_DONE_SEL                        :  1;		/* 26..26, 0x04000000 */
				FIELD  TG_D_DONE_SEL                         :  1;		/* 27..27, 0x08000000 */
				FIELD  LSC3I_D_DONE_SEL                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_CD_DONE_SEL;	/* CAM_CTL_CD_DONE_SEL, CAM_A_CTL_CD_DONE_SEL*/

typedef volatile union _CAM_REG_CTL_UNI_DONE_SEL_
{
		volatile struct	/* 0x1A00404C */
		{
				FIELD  DONE_SEL_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RSSO_A_DONE_SEL                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EISO_A_DONE_SEL                       :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_A_DONE_SEL                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_UNI_DONE_SEL;	/* CAM_CTL_UNI_DONE_SEL, CAM_A_CTL_UNI_DONE_SEL*/

// Add manually for twin use
typedef volatile union _CAM_REG_CTL_TWIN_STATUS_
{
        volatile struct /* 0x1A004050 */
        {
                FIELD  TWIN_EN                               : 1;       /*  0.. 0, 0x00000001 */
                FIELD  TWIN_MODULE                           : 2;
                FIELD  SPARE0                                : 29;      /*  3..31, 0xFFFFFFFE */
        } Bits;
        UINT32 Raw;
}CAM_REG_CTL_TWIN_STATUS;    /* CAM_CTL_TWIN_STATUS */

typedef volatile union _CAM_REG_CTL_SPARE1_
{
		volatile struct	/* 0x1A004054 */
		{
				FIELD  SPARE1                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_SPARE1;	/* CAM_CTL_SPARE1, CAM_A_CTL_SPARE1*/

typedef volatile union _CAM_REG_CTL_SPARE2_
{
		volatile struct	/* 0x1A004058 */
		{
				FIELD  SPARE2                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_SPARE2;	/* CAM_CTL_SPARE2, CAM_A_CTL_SPARE2*/

typedef volatile union _CAM_REG_CTL_SW_PASS1_DONE_
{
		volatile struct	/* 0x1A00405C */
		{
				FIELD  DOWN_SAMPLE_PERIOD                    :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  DOWN_SAMPLE_EN                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  IMGO_FIFO_FULL_DROP                   :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZO_FIFO_FULL_DROP                   :  1;		/* 10..10, 0x00000400 */
				FIELD  LCSO_FIFO_FULL_DROP                   :  1;		/* 11..11, 0x00000800 */
				FIELD  UFEO_FIFO_FULL_DROP                   :  1;		/* 12..12, 0x00001000 */
				FIELD  EISO_FIFO_FULL_DROP                   :  1;		/* 13..13, 0x00002000 */
				FIELD  RSSO_FIFO_FULL_DROP                   :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_SW_PASS1_DONE;	/* CAM_CTL_SW_PASS1_DONE, CAM_A_CTL_SW_PASS1_DONE*/

typedef volatile union _CAM_REG_CTL_FBC_RCNT_INC_
{
		volatile struct	/* 0x1A004060 */
		{
				FIELD  IMGO_RCNT_INC                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_RCNT_INC                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  LCSO_RCNT_INC                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AAO_RCNT_INC                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  PDO_A_RCNT_INC                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AFO_A_RCNT_INC                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  AFO_B_RCNT_INC                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  AFO_C_RCNT_INC                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AFO_D_RCNT_INC                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  UFEO_RCNT_INC                         :  1;		/*  9.. 9, 0x00000200 */
				FIELD  EISO_RCNT_INC                         :  1;		/* 10..10, 0x00000400 */
				FIELD  RSSO_RCNT_INC                         :  1;		/* 11..11, 0x00000800 */
				FIELD  FLKO_RCNT_INC                         :  1;		/* 12..12, 0x00001000 */
				FIELD  PSO_RCNT_INC                          :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_FBC_RCNT_INC;	/* CAM_CTL_FBC_RCNT_INC, CAM_A_CTL_FBC_RCNT_INC*/

typedef volatile union _CAM_REG_CTL_DBG_SET_
{
		volatile struct	/* 0x1A004070 */
		{
				FIELD  DEBUG_MOD_SEL                         :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DEBUG_SEL                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  DEBUG_TOP_SEL                         :  4;		/* 12..15, 0x0000F000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DBG_SET;	/* CAM_CTL_DBG_SET, CAM_A_CTL_DBG_SET*/

typedef volatile union _CAM_REG_CTL_DBG_PORT_
{
		volatile struct	/* 0x1A004074 */
		{
				FIELD  CTL_DBG_PORT                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DBG_PORT;	/* CAM_CTL_DBG_PORT, CAM_A_CTL_DBG_PORT*/

typedef volatile union _CAM_REG_CTL_DATE_CODE_
{
		volatile struct	/* 0x1A004078 */
		{
				FIELD  CTL_DATE_CODE                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DATE_CODE;	/* CAM_CTL_DATE_CODE, CAM_A_CTL_DATE_CODE*/

typedef volatile union _CAM_REG_CTL_PROJ_CODE_
{
		volatile struct	/* 0x1A00407C */
		{
				FIELD  CTL_PROJ_CODE                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_PROJ_CODE;	/* CAM_CTL_PROJ_CODE, CAM_A_CTL_PROJ_CODE*/

typedef volatile union _CAM_REG_CTL_RAW_DCM_DIS_
{
		volatile struct	/* 0x1A004080 */
		{
				FIELD  TG_DCM_DIS                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DMX_DCM_DIS                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGM_DCM_DIS                           :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RMG_DCM_DIS                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_DCM_DIS                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  OBC_DCM_DIS                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BNR_DCM_DIS                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LSC_DCM_DIS                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CAC_DCM_DIS                           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RPG_DCM_DIS                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZ_DCM_DIS                           :  1;		/* 10..10, 0x00000400 */
				FIELD  RMX_DCM_DIS                           :  1;		/* 11..11, 0x00000800 */
				FIELD  PAKG_DCM_DIS                          :  1;		/* 12..12, 0x00001000 */
				FIELD  BMX_DCM_DIS                           :  1;		/* 13..13, 0x00002000 */
				FIELD  CPG_DCM_DIS                           :  1;		/* 14..14, 0x00004000 */
				FIELD  PAK_DCM_DIS                           :  1;		/* 15..15, 0x00008000 */
				FIELD  UFE_DCM_DIS                           :  1;		/* 16..16, 0x00010000 */
				FIELD  AF_DCM_DIS                            :  1;		/* 17..17, 0x00020000 */
				FIELD  SGG1_DCM_DIS                          :  1;		/* 18..18, 0x00040000 */
				FIELD  AA_DCM_DIS                            :  1;		/* 19..19, 0x00080000 */
				FIELD  QBIN1_DCM_DIS                         :  1;		/* 20..20, 0x00100000 */
				FIELD  LCS_DCM_DIS                           :  1;		/* 21..21, 0x00200000 */
				FIELD  QBIN2_DCM_DIS                         :  1;		/* 22..22, 0x00400000 */
				FIELD  RCP_DCM_DIS                           :  1;		/* 23..23, 0x00800000 */
				FIELD  RCP3_DCM_DIS                          :  1;		/* 24..24, 0x01000000 */
				FIELD  PMX_DCM_DIS                           :  1;		/* 25..25, 0x02000000 */
				FIELD  PKP_DCM_DIS                           :  1;		/* 26..26, 0x04000000 */
				FIELD  BIN_DCM_DIS                           :  1;		/* 27..27, 0x08000000 */
				FIELD  DBS_DCM_DIS                           :  1;		/* 28..28, 0x10000000 */
				FIELD  DBN_DCM_DIS                           :  1;		/* 29..29, 0x20000000 */
				FIELD  PBN_DCM_DIS                           :  1;		/* 30..30, 0x40000000 */
				FIELD  UFEG_DCM_DIS                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_DCM_DIS;	/* CAM_CTL_RAW_DCM_DIS, CAM_A_CTL_RAW_DCM_DIS*/

typedef volatile union _CAM_REG_CTL_DMA_DCM_DIS_
{
		volatile struct	/* 0x1A004084 */
		{
				FIELD  IMGO_DCM_DIS                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DCM_DIS                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DCM_DIS                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_DCM_DIS                           :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_DCM_DIS                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_DCM_DIS                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_DCM_DIS                           :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_DCM_DIS                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_DCM_DIS                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_DCM_DIS                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_DCM_DIS                           :  1;		/* 10..10, 0x00000400 */
				FIELD  LSC3I_DCM_DIS                         :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 10;		/* 12..21, 0x003FF000 */
				FIELD  QBIN4_DCM_DIS                         :  1;		/* 22..22, 0x00400000 */
				FIELD  PS_DCM_DIS                            :  1;		/* 23..23, 0x00800000 */
				FIELD  HLR_DCM_DIS                           :  1;		/* 24..24, 0x01000000 */
				FIELD  AMX_DCM_DIS                           :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2F_DCM_DIS                          :  1;		/* 26..26, 0x04000000 */
				FIELD  VBN_DCM_DIS                           :  1;		/* 27..27, 0x08000000 */
				FIELD  SL2J_DCM_DIS                          :  1;		/* 28..28, 0x10000000 */
				FIELD  STM_DCM_DIS                           :  1;		/* 29..29, 0x20000000 */
				FIELD  SCM_DCM_DIS                           :  1;		/* 30..30, 0x40000000 */
				FIELD  SGG5_DCM_DIS                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DMA_DCM_DIS;	/* CAM_CTL_DMA_DCM_DIS, CAM_A_CTL_DMA_DCM_DIS*/

typedef volatile union _CAM_REG_CTL_TOP_DCM_DIS_
{
		volatile struct	/* 0x1A004088 */
		{
				FIELD  TOP_DCM_DIS                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_TOP_DCM_DIS;	/* CAM_CTL_TOP_DCM_DIS, CAM_A_CTL_TOP_DCM_DIS*/

typedef volatile union _CAM_REG_CTL_RAW_DCM_STATUS_
{
		volatile struct	/* 0x1A004090 */
		{
				FIELD  TG_DCM_STATUS                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DMX_DCM_STATUS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGM_DCM_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RMG_DCM_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_DCM_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  OBC_DCM_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BNR_DCM_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LSC_DCM_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CAC_DCM_STATUS                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RPG_DCM_STATUS                        :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZ_DCM_STATUS                        :  1;		/* 10..10, 0x00000400 */
				FIELD  RMX_DCM_STATUS                        :  1;		/* 11..11, 0x00000800 */
				FIELD  PAKG_DCM_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  BMX_DCM_STATUS                        :  1;		/* 13..13, 0x00002000 */
				FIELD  CPG_DCM_STATUS                        :  1;		/* 14..14, 0x00004000 */
				FIELD  PAK_DCM_STATUS                        :  1;		/* 15..15, 0x00008000 */
				FIELD  UFE_DCM_STATUS                        :  1;		/* 16..16, 0x00010000 */
				FIELD  AF_DCM_STATUS                         :  1;		/* 17..17, 0x00020000 */
				FIELD  SGG1_DCM_STATUS                       :  1;		/* 18..18, 0x00040000 */
				FIELD  AA_DCM_STATUS                         :  1;		/* 19..19, 0x00080000 */
				FIELD  QBIN1_DCM_STATUS                      :  1;		/* 20..20, 0x00100000 */
				FIELD  LCS_DCM_STATUS                        :  1;		/* 21..21, 0x00200000 */
				FIELD  QBIN2_DCM_STATUS                      :  1;		/* 22..22, 0x00400000 */
				FIELD  RCP_DCM_DIS                           :  1;		/* 23..23, 0x00800000 */
				FIELD  RCP3_DCM_STATUS                       :  1;		/* 24..24, 0x01000000 */
				FIELD  PMX_DCM_STATUS                        :  1;		/* 25..25, 0x02000000 */
				FIELD  PKP_DCM_STATUS                        :  1;		/* 26..26, 0x04000000 */
				FIELD  BIN_DCM_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  DBS_DCM_STATUS                        :  1;		/* 28..28, 0x10000000 */
				FIELD  DBN_DCM_STATUS                        :  1;		/* 29..29, 0x20000000 */
				FIELD  PBN_DCM_STATUS                        :  1;		/* 30..30, 0x40000000 */
				FIELD  UFEG_DCM_STATUS                       :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_DCM_STATUS;	/* CAM_CTL_RAW_DCM_STATUS, CAM_A_CTL_RAW_DCM_STATUS*/

typedef volatile union _CAM_REG_CTL_DMA_DCM_STATUS_
{
		volatile struct	/* 0x1A004094 */
		{
				FIELD  IMGO_DCM_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DCM_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DCM_STATUS                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_DCM_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_DCM_STATUS                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_DCM_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_DCM_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_DCM_STATUS                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_DCM_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_DCM_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_DCM_STATUS                        :  1;		/* 10..10, 0x00000400 */
				FIELD  LSC3I_DCM_STATUS                      :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 10;		/* 12..21, 0x003FF000 */
				FIELD  QBIN4_DCM_STATUS                      :  1;		/* 22..22, 0x00400000 */
				FIELD  PS_DCM_STATUS                         :  1;		/* 23..23, 0x00800000 */
				FIELD  HLR_DCM_STATUS                        :  1;		/* 24..24, 0x01000000 */
				FIELD  AMX_DCM_STATUS                        :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2F_DCM_STATUS                       :  1;		/* 26..26, 0x04000000 */
				FIELD  VBN_DCM_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  SL2J_DCM_STATUS                       :  1;		/* 28..28, 0x10000000 */
				FIELD  STM_DCM_STATUS                        :  1;		/* 29..29, 0x20000000 */
				FIELD  SCM_DCM_STATUS                        :  1;		/* 30..30, 0x40000000 */
				FIELD  SGG5_DCM_STATUS                       :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DMA_DCM_STATUS;	/* CAM_CTL_DMA_DCM_STATUS, CAM_A_CTL_DMA_DCM_STATUS*/

typedef volatile union _CAM_REG_CTL_TOP_DCM_STATUS_
{
		volatile struct	/* 0x1A004098 */
		{
				FIELD  TOP_DCM_STATUS                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_TOP_DCM_STATUS;	/* CAM_CTL_TOP_DCM_STATUS, CAM_A_CTL_TOP_DCM_STATUS*/

typedef volatile union _CAM_REG_CTL_RAW_REQ_STATUS_
{
		volatile struct	/* 0x1A0040A0 */
		{
				FIELD  TG_REQ_STATUS                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DMX_REQ_STATUS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGM_REQ_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RMG_REQ_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_REQ_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  OBC_REQ_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BNR_REQ_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LSC_REQ_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CAC_REQ_STATUS                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RPG_REQ_STATUS                        :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZ_REQ_STATUS                        :  1;		/* 10..10, 0x00000400 */
				FIELD  RMX_REQ_STATUS                        :  1;		/* 11..11, 0x00000800 */
				FIELD  PAKG_REQ_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  BMX_REQ_STATUS                        :  1;		/* 13..13, 0x00002000 */
				FIELD  CPG_REQ_STATUS                        :  1;		/* 14..14, 0x00004000 */
				FIELD  PAK_REQ_STATUS                        :  1;		/* 15..15, 0x00008000 */
				FIELD  UFE_REQ_STATUS                        :  1;		/* 16..16, 0x00010000 */
				FIELD  AF_REQ_STATUS                         :  1;		/* 17..17, 0x00020000 */
				FIELD  SGG1_REQ_STATUS                       :  1;		/* 18..18, 0x00040000 */
				FIELD  AA_REQ_STATUS                         :  1;		/* 19..19, 0x00080000 */
				FIELD  QBIN1_REQ_STATUS                      :  1;		/* 20..20, 0x00100000 */
				FIELD  LCS_REQ_STATUS                        :  1;		/* 21..21, 0x00200000 */
				FIELD  QBIN2_REQ_STATUS                      :  1;		/* 22..22, 0x00400000 */
				FIELD  RCP_REQ_DIS                           :  1;		/* 23..23, 0x00800000 */
				FIELD  RCP3_REQ_STATUS                       :  1;		/* 24..24, 0x01000000 */
				FIELD  PMX_REQ_STATUS                        :  1;		/* 25..25, 0x02000000 */
				FIELD  PKP_REQ_STATUS                        :  1;		/* 26..26, 0x04000000 */
				FIELD  BIN_REQ_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  DBS_REQ_STATUS                        :  1;		/* 28..28, 0x10000000 */
				FIELD  DBN_REQ_STATUS                        :  1;		/* 29..29, 0x20000000 */
				FIELD  PBN_REQ_STATUS                        :  1;		/* 30..30, 0x40000000 */
				FIELD  UFEG_REQ_STATUS                       :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_REQ_STATUS;	/* CAM_CTL_RAW_REQ_STATUS, CAM_A_CTL_RAW_REQ_STATUS*/

typedef volatile union _CAM_REG_CTL_DMA_REQ_STATUS_
{
		volatile struct	/* 0x1A0040A4 */
		{
				FIELD  IMGO_REQ_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_REQ_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_REQ_STATUS                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_REQ_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_REQ_STATUS                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_REQ_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_REQ_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_REQ_STATUS                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_REQ_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_REQ_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_REQ_STATUS                        :  1;		/* 10..10, 0x00000400 */
				FIELD  LSC3I_REQ_STATUS                      :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 10;		/* 12..21, 0x003FF000 */
				FIELD  QBIN4_REQ_STATUS                      :  1;		/* 22..22, 0x00400000 */
				FIELD  PS_REQ_STATUS                         :  1;		/* 23..23, 0x00800000 */
				FIELD  HLR_REQ_STATUS                        :  1;		/* 24..24, 0x01000000 */
				FIELD  AMX_REQ_STATUS                        :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2F_REQ_STATUS                       :  1;		/* 26..26, 0x04000000 */
				FIELD  VBN_REQ_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  SL2J_REQ_STATUS                       :  1;		/* 28..28, 0x10000000 */
				FIELD  STM_REQ_STATUS                        :  1;		/* 29..29, 0x20000000 */
				FIELD  SCM_REQ_STATUS                        :  1;		/* 30..30, 0x40000000 */
				FIELD  SGG5_REQ_STATUS                       :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DMA_REQ_STATUS;	/* CAM_CTL_DMA_REQ_STATUS, CAM_A_CTL_DMA_REQ_STATUS*/

typedef volatile union _CAM_REG_CTL_RAW_RDY_STATUS_
{
		volatile struct	/* 0x1A0040A8 */
		{
				FIELD  TG_RDY_STATUS                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DMX_RDY_STATUS                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SGM_RDY_STATUS                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  RMG_RDY_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_RDY_STATUS                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  OBC_RDY_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BNR_RDY_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  LSC_RDY_STATUS                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CAC_RDY_STATUS                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  RPG_RDY_STATUS                        :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZ_RDY_STATUS                        :  1;		/* 10..10, 0x00000400 */
				FIELD  RMX_RDY_STATUS                        :  1;		/* 11..11, 0x00000800 */
				FIELD  PAKG_RDY_STATUS                       :  1;		/* 12..12, 0x00001000 */
				FIELD  BMX_RDY_STATUS                        :  1;		/* 13..13, 0x00002000 */
				FIELD  CPG_RDY_STATUS                        :  1;		/* 14..14, 0x00004000 */
				FIELD  PAK_RDY_STATUS                        :  1;		/* 15..15, 0x00008000 */
				FIELD  UFE_RDY_STATUS                        :  1;		/* 16..16, 0x00010000 */
				FIELD  AF_RDY_STATUS                         :  1;		/* 17..17, 0x00020000 */
				FIELD  SGG1_RDY_STATUS                       :  1;		/* 18..18, 0x00040000 */
				FIELD  AA_RDY_STATUS                         :  1;		/* 19..19, 0x00080000 */
				FIELD  QBIN1_RDY_STATUS                      :  1;		/* 20..20, 0x00100000 */
				FIELD  LCS_RDY_STATUS                        :  1;		/* 21..21, 0x00200000 */
				FIELD  QBIN2_RDY_STATUS                      :  1;		/* 22..22, 0x00400000 */
				FIELD  RCP_RDY_STATUS                        :  1;		/* 23..23, 0x00800000 */
				FIELD  RCP3_RDY_STATUS                       :  1;		/* 24..24, 0x01000000 */
				FIELD  PMX_RDY_STATUS                        :  1;		/* 25..25, 0x02000000 */
				FIELD  PKP_RDY_STATUS                        :  1;		/* 26..26, 0x04000000 */
				FIELD  BIN_RDY_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  DBS_RDY_STATUS                        :  1;		/* 28..28, 0x10000000 */
				FIELD  DBN_RDY_STATUS                        :  1;		/* 29..29, 0x20000000 */
				FIELD  PBN_RDY_STATUS                        :  1;		/* 30..30, 0x40000000 */
				FIELD  UFEG_RDY_STATUS                       :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_RDY_STATUS;	/* CAM_CTL_RAW_RDY_STATUS, CAM_A_CTL_RAW_RDY_STATUS*/

typedef volatile union _CAM_REG_CTL_DMA_RDY_STATUS_
{
		volatile struct	/* 0x1A0040AC */
		{
				FIELD  IMGO_RDY_STATUS                       :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_RDY_STATUS                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_RDY_STATUS                       :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_RDY_STATUS                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_RDY_STATUS                       :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AAO_RDY_STATUS                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PSO_RDY_STATUS                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BPCI_RDY_STATUS                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSCI_RDY_STATUS                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  CACI_RDY_STATUS                       :  1;		/*  9.. 9, 0x00000200 */
				FIELD  PDO_RDY_STATUS                        :  1;		/* 10..10, 0x00000400 */
				FIELD  LSC3I_RDY_STATUS                      :  1;		/* 11..11, 0x00000800 */
				FIELD  rsv_12                                : 10;		/* 12..21, 0x003FF000 */
				FIELD  QBIN4_RDY_STATUS                      :  1;		/* 22..22, 0x00400000 */
				FIELD  PS_RDY_STATUS                         :  1;		/* 23..23, 0x00800000 */
				FIELD  HLR_RDY_STATUS                        :  1;		/* 24..24, 0x01000000 */
				FIELD  AMX_RDY_STATUS                        :  1;		/* 25..25, 0x02000000 */
				FIELD  SL2F_RDY_STATUS                       :  1;		/* 26..26, 0x04000000 */
				FIELD  VBN_RDY_STATUS                        :  1;		/* 27..27, 0x08000000 */
				FIELD  SL2J_RDY_STATUS                       :  1;		/* 28..28, 0x10000000 */
				FIELD  STM_RDY_STATUS                        :  1;		/* 29..29, 0x20000000 */
				FIELD  SCM_RDY_STATUS                        :  1;		/* 30..30, 0x40000000 */
				FIELD  SGG5_RDY_STATUS                       :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_DMA_RDY_STATUS;	/* CAM_CTL_DMA_RDY_STATUS, CAM_A_CTL_DMA_RDY_STATUS*/

typedef volatile union _CAM_REG_CTL_RAW_CCU_INT_EN_
{
		volatile struct	/* 0x1A0040B0 */
		{
				FIELD  VS_INT_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_INT1_EN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_INT2_EN                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON_EN                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_CODE_ERR_EN                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_APB_ERR_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_VS_ERR_EN                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  IMGO_DROP_FRAME_EN                    :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZO_DROP_FRAME_EN                    :  1;		/* 10..10, 0x00000400 */
				FIELD  PASS1_DON_EN                          :  1;		/* 11..11, 0x00000800 */
				FIELD  SOF_INT_EN                            :  1;		/* 12..12, 0x00001000 */
				FIELD  SOF_WAIT_EN                           :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  AMX_ERR_EN                            :  1;		/* 15..15, 0x00008000 */
				FIELD  RMX_ERR_EN                            :  1;		/* 16..16, 0x00010000 */
				FIELD  BMX_ERR_EN                            :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_ERR_EN                           :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_ERR_EN                            :  1;		/* 19..19, 0x00080000 */
				FIELD  IMGO_ERR_EN                           :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_ERR_EN                            :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_ERR_EN                            :  1;		/* 22..22, 0x00400000 */
				FIELD  LCSO_ERR_EN                           :  1;		/* 23..23, 0x00800000 */
				FIELD  BPC_ERR_EN                            :  1;		/* 24..24, 0x01000000 */
				FIELD  LSC_ERR_EN                            :  1;		/* 25..25, 0x02000000 */
				FIELD  CAC_ERR_EN                            :  1;		/* 26..26, 0x04000000 */
				FIELD  UFEO_ERR_EN                           :  1;		/* 27..27, 0x08000000 */
				FIELD  PDO_ERR_EN                            :  1;		/* 28..28, 0x10000000 */
				FIELD  DMA_ERR_EN                            :  1;		/* 29..29, 0x20000000 */
				FIELD  SW_PASS1_DON_EN                       :  1;		/* 30..30, 0x40000000 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_CCU_INT_EN;	/* CAM_CTL_RAW_CCU_INT_EN, CAM_A_CTL_RAW_CCU_INT_EN*/

typedef volatile union _CAM_REG_CTL_RAW_CCU_INT_STATUS_
{
		volatile struct	/* 0x1A0040B4 */
		{
				FIELD  VS_INT_ST                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_INT1_ST                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_INT2_ST                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON_ST                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_ST                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_ST                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  CQ_CODE_ERR_ST                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  CQ_APB_ERR_ST                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  CQ_VS_ERR_ST                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  IMGO_DROP_FRAME_ST                    :  1;		/*  9.. 9, 0x00000200 */
				FIELD  RRZO_DROP_FRAME_ST                    :  1;		/* 10..10, 0x00000400 */
				FIELD  PASS1_DON_ST                          :  1;		/* 11..11, 0x00000800 */
				FIELD  SOF_INT_ST                            :  1;		/* 12..12, 0x00001000 */
				FIELD  SOF_WAIT_ST                           :  1;		/* 13..13, 0x00002000 */
				FIELD  rsv_14                                :  1;		/* 14..14, 0x00004000 */
				FIELD  AMX_ERR_ST                            :  1;		/* 15..15, 0x00008000 */
				FIELD  RMX_ERR_ST                            :  1;		/* 16..16, 0x00010000 */
				FIELD  BMX_ERR_ST                            :  1;		/* 17..17, 0x00020000 */
				FIELD  RRZO_ERR_ST                           :  1;		/* 18..18, 0x00040000 */
				FIELD  AFO_ERR_ST                            :  1;		/* 19..19, 0x00080000 */
				FIELD  IMGO_ERR_ST                           :  1;		/* 20..20, 0x00100000 */
				FIELD  AAO_ERR_ST                            :  1;		/* 21..21, 0x00200000 */
				FIELD  PSO_ERR_ST                            :  1;		/* 22..22, 0x00400000 */
				FIELD  LCSO_ERR_ST                           :  1;		/* 23..23, 0x00800000 */
				FIELD  BNR_ERR_ST                            :  1;		/* 24..24, 0x01000000 */
				FIELD  LSC_ERR_ST                            :  1;		/* 25..25, 0x02000000 */
				FIELD  CAC_ERR_ST                            :  1;		/* 26..26, 0x04000000 */
				FIELD  UFEO_ERR_ST                           :  1;		/* 27..27, 0x08000000 */
				FIELD  PDO_ERR_ST                            :  1;		/* 28..28, 0x10000000 */
				FIELD  DMA_ERR_ST                            :  1;		/* 29..29, 0x20000000 */
				FIELD  SW_PASS1_DON_ST                       :  1;		/* 30..30, 0x40000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_CCU_INT_STATUS;	/* CAM_CTL_RAW_CCU_INT_STATUS, CAM_A_CTL_RAW_CCU_INT_STATUS*/

typedef volatile union _CAM_REG_CTL_RAW_CCU_INT2_EN_
{
		volatile struct	/* 0x1A0040B8 */
		{
				FIELD  IMGO_DONE_EN                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DONE_EN                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DONE_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EISO_DONE_EN                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_DONE_EN                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AFO_DONE_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  LCSO_DONE_EN                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  AAO_DONE_EN                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSC3I_DONE_EN                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  BPCI_DONE_EN                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSCI_DONE_EN                          :  1;		/* 10..10, 0x00000400 */
				FIELD  CACI_DONE_EN                          :  1;		/* 11..11, 0x00000800 */
				FIELD  AF_TAR_DONE_EN                        :  1;		/* 12..12, 0x00001000 */
				FIELD  PDO_DONE_EN                           :  1;		/* 13..13, 0x00002000 */
				FIELD  PSO_DONE_EN                           :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR0_DONE_EN                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR1_DONE_EN                       :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR2_DONE_EN                       :  1;		/* 18..18, 0x00040000 */
				FIELD  CQ_THR3_DONE_EN                       :  1;		/* 19..19, 0x00080000 */
				FIELD  CQ_THR4_DONE_EN                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_THR5_DONE_EN                       :  1;		/* 21..21, 0x00200000 */
				FIELD  CQ_THR6_DONE_EN                       :  1;		/* 22..22, 0x00400000 */
				FIELD  CQ_THR7_DONE_EN                       :  1;		/* 23..23, 0x00800000 */
				FIELD  CQ_THR8_DONE_EN                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CQ_THR9_DONE_EN                       :  1;		/* 25..25, 0x02000000 */
				FIELD  CQ_THR10_DONE_EN                      :  1;		/* 26..26, 0x04000000 */
				FIELD  CQ_THR11_DONE_EN                      :  1;		/* 27..27, 0x08000000 */
				FIELD  CQ_THR12_DONE_EN                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_CCU_INT2_EN;	/* CAM_CTL_RAW_CCU_INT2_EN, CAM_A_CTL_RAW_CCU_INT2_EN*/

typedef volatile union _CAM_REG_CTL_RAW_CCU_INT2_STATUS_
{
		volatile struct	/* 0x1A0040BC */
		{
				FIELD  IMGO_DONE_ST                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  UFEO_DONE_ST                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZO_DONE_ST                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EISO_DONE_ST                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FLKO_DONE_ST                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  AFO_DEONE_ST                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  LCSO_DONE_ST                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  AAO_DONE_ST                           :  1;		/*  7.. 7, 0x00000080 */
				FIELD  LSC3I_DONE_ST                         :  1;		/*  8.. 8, 0x00000100 */
				FIELD  BPCI_DONE_ST                          :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSCI_DONE_ST                          :  1;		/* 10..10, 0x00000400 */
				FIELD  CACI_DONE_ST                          :  1;		/* 11..11, 0x00000800 */
				FIELD  AF_TAR_DONE_ST                        :  1;		/* 12..12, 0x00001000 */
				FIELD  PDO_DONE_ST                           :  1;		/* 13..13, 0x00002000 */
				FIELD  PSO_DONE_ST                           :  1;		/* 14..14, 0x00004000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  CQ_THR0_DONE_ST                       :  1;		/* 16..16, 0x00010000 */
				FIELD  CQ_THR1_DONE_ST                       :  1;		/* 17..17, 0x00020000 */
				FIELD  CQ_THR2_DONE_ST                       :  1;		/* 18..18, 0x00040000 */
				FIELD  CQ_THR3_DONE_ST                       :  1;		/* 19..19, 0x00080000 */
				FIELD  CQ_THR4_DONE_ST                       :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_THR5_DONE_ST                       :  1;		/* 21..21, 0x00200000 */
				FIELD  CQ_THR6_DONE_ST                       :  1;		/* 22..22, 0x00400000 */
				FIELD  CQ_THR7_DONE_ST                       :  1;		/* 23..23, 0x00800000 */
				FIELD  CQ_THR8_DONE_ST                       :  1;		/* 24..24, 0x01000000 */
				FIELD  CQ_THR9_DONE_ST                       :  1;		/* 25..25, 0x02000000 */
				FIELD  CQ_THR10_DONE_ST                      :  1;		/* 26..26, 0x04000000 */
				FIELD  CQ_THR11_DONE_ST                      :  1;		/* 27..27, 0x08000000 */
				FIELD  CQ_THR12_DONE_ST                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CTL_RAW_CCU_INT2_STATUS;	/* CAM_CTL_RAW_CCU_INT2_STATUS, CAM_A_CTL_RAW_CCU_INT2_STATUS*/

typedef volatile union _CAM_REG_FBC_IMGO_CTL1_
{
		volatile struct	/* 0x1A004110 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_IMGO_CTL1;	/* CAM_FBC_IMGO_CTL1, CAM_A_FBC_IMGO_CTL1*/

typedef volatile union _CAM_REG_FBC_IMGO_CTL2_
{
		volatile struct	/* 0x1A004114 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_IMGO_CTL2;	/* CAM_FBC_IMGO_CTL2, CAM_A_FBC_IMGO_CTL2*/

typedef volatile union _CAM_REG_FBC_RRZO_CTL1_
{
		volatile struct	/* 0x1A004118 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_RRZO_CTL1;	/* CAM_FBC_RRZO_CTL1, CAM_A_FBC_RRZO_CTL1*/

typedef volatile union _CAM_REG_FBC_RRZO_CTL2_
{
		volatile struct	/* 0x1A00411C */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_RRZO_CTL2;	/* CAM_FBC_RRZO_CTL2, CAM_A_FBC_RRZO_CTL2*/

typedef volatile union _CAM_REG_FBC_UFEO_CTL1_
{
		volatile struct	/* 0x1A004120 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_UFEO_CTL1;	/* CAM_FBC_UFEO_CTL1, CAM_A_FBC_UFEO_CTL1*/

typedef volatile union _CAM_REG_FBC_UFEO_CTL2_
{
		volatile struct	/* 0x1A004124 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_UFEO_CTL2;	/* CAM_FBC_UFEO_CTL2, CAM_A_FBC_UFEO_CTL2*/

typedef volatile union _CAM_REG_FBC_LCSO_CTL1_
{
		volatile struct	/* 0x1A004128 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_LCSO_CTL1;	/* CAM_FBC_LCSO_CTL1, CAM_A_FBC_LCSO_CTL1*/

typedef volatile union _CAM_REG_FBC_LCSO_CTL2_
{
		volatile struct	/* 0x1A00412C */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_LCSO_CTL2;	/* CAM_FBC_LCSO_CTL2, CAM_A_FBC_LCSO_CTL2*/

typedef volatile union _CAM_REG_FBC_AFO_CTL1_
{
		volatile struct	/* 0x1A004130 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_AFO_CTL1;	/* CAM_FBC_AFO_CTL1, CAM_A_FBC_AFO_CTL1*/

typedef volatile union _CAM_REG_FBC_AFO_CTL2_
{
		volatile struct	/* 0x1A004134 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_AFO_CTL2;	/* CAM_FBC_AFO_CTL2, CAM_A_FBC_AFO_CTL2*/

typedef volatile union _CAM_REG_FBC_AAO_CTL1_
{
		volatile struct	/* 0x1A004138 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_AAO_CTL1;	/* CAM_FBC_AAO_CTL1, CAM_A_FBC_AAO_CTL1*/

typedef volatile union _CAM_REG_FBC_AAO_CTL2_
{
		volatile struct	/* 0x1A00413C */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_AAO_CTL2;	/* CAM_FBC_AAO_CTL2, CAM_A_FBC_AAO_CTL2*/

typedef volatile union _CAM_REG_FBC_PDO_CTL1_
{
		volatile struct	/* 0x1A004140 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_PDO_CTL1;	/* CAM_FBC_PDO_CTL1, CAM_A_FBC_PDO_CTL1*/

typedef volatile union _CAM_REG_FBC_PDO_CTL2_
{
		volatile struct	/* 0x1A004144 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_PDO_CTL2;	/* CAM_FBC_PDO_CTL2, CAM_A_FBC_PDO_CTL2*/

typedef volatile union _CAM_REG_FBC_PSO_CTL1_
{
		volatile struct	/* 0x1A004148 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_PSO_CTL1;	/* CAM_FBC_PSO_CTL1, CAM_A_FBC_PSO_CTL1*/

typedef volatile union _CAM_REG_FBC_PSO_CTL2_
{
		volatile struct	/* 0x1A00414C */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_FBC_PSO_CTL2;	/* CAM_FBC_PSO_CTL2, CAM_A_FBC_PSO_CTL2*/

typedef volatile union _CAM_REG_CQ_EN_
{
		volatile struct	/* 0x1A004160 */
		{
				FIELD  CQ_APB_2T                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  CQ_DROP_FRAME_EN                      :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  CQ_DB_EN                              :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  CQ_DB_LOAD_MODE                       :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  CQ_RESET                              :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_EN;	/* CAM_CQ_EN, CAM_A_CQ_EN*/

typedef volatile union _CAM_REG_CQ_THR0_CTL_
{
		volatile struct	/* 0x1A004164 */
		{
				FIELD  CQ_THR0_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR0_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR0_CTL;	/* CAM_CQ_THR0_CTL, CAM_A_CQ_THR0_CTL*/

typedef volatile union _CAM_REG_CQ_THR0_BASEADDR_
{
		volatile struct	/* 0x1A004168 */
		{
				FIELD  CQ_THR0_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR0_BASEADDR;	/* CAM_CQ_THR0_BASEADDR, CAM_A_CQ_THR0_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR0_DESC_SIZE_
{
		volatile struct	/* 0x1A00416C */
		{
				FIELD  CQ_THR0_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR0_DESC_SIZE;	/* CAM_CQ_THR0_DESC_SIZE, CAM_A_CQ_THR0_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR1_CTL_
{
		volatile struct	/* 0x1A004170 */
		{
				FIELD  CQ_THR1_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR1_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR1_CTL;	/* CAM_CQ_THR1_CTL, CAM_A_CQ_THR1_CTL*/

typedef volatile union _CAM_REG_CQ_THR1_BASEADDR_
{
		volatile struct	/* 0x1A004174 */
		{
				FIELD  CQ_THR1_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR1_BASEADDR;	/* CAM_CQ_THR1_BASEADDR, CAM_A_CQ_THR1_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR1_DESC_SIZE_
{
		volatile struct	/* 0x1A004178 */
		{
				FIELD  CQ_THR1_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR1_DESC_SIZE;	/* CAM_CQ_THR1_DESC_SIZE, CAM_A_CQ_THR1_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR2_CTL_
{
		volatile struct	/* 0x1A00417C */
		{
				FIELD  CQ_THR2_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR2_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR2_CTL;	/* CAM_CQ_THR2_CTL, CAM_A_CQ_THR2_CTL*/

typedef volatile union _CAM_REG_CQ_THR2_BASEADDR_
{
		volatile struct	/* 0x1A004180 */
		{
				FIELD  CQ_THR2_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR2_BASEADDR;	/* CAM_CQ_THR2_BASEADDR, CAM_A_CQ_THR2_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR2_DESC_SIZE_
{
		volatile struct	/* 0x1A004184 */
		{
				FIELD  CQ_THR2_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR2_DESC_SIZE;	/* CAM_CQ_THR2_DESC_SIZE, CAM_A_CQ_THR2_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR3_CTL_
{
		volatile struct	/* 0x1A004188 */
		{
				FIELD  CQ_THR3_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR3_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR3_CTL;	/* CAM_CQ_THR3_CTL, CAM_A_CQ_THR3_CTL*/

typedef volatile union _CAM_REG_CQ_THR3_BASEADDR_
{
		volatile struct	/* 0x1A00418C */
		{
				FIELD  CQ_THR3_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR3_BASEADDR;	/* CAM_CQ_THR3_BASEADDR, CAM_A_CQ_THR3_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR3_DESC_SIZE_
{
		volatile struct	/* 0x1A004190 */
		{
				FIELD  CQ_THR3_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR3_DESC_SIZE;	/* CAM_CQ_THR3_DESC_SIZE, CAM_A_CQ_THR3_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR4_CTL_
{
		volatile struct	/* 0x1A004194 */
		{
				FIELD  CQ_THR4_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR4_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR4_CTL;	/* CAM_CQ_THR4_CTL, CAM_A_CQ_THR4_CTL*/

typedef volatile union _CAM_REG_CQ_THR4_BASEADDR_
{
		volatile struct	/* 0x1A004198 */
		{
				FIELD  CQ_THR4_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR4_BASEADDR;	/* CAM_CQ_THR4_BASEADDR, CAM_A_CQ_THR4_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR4_DESC_SIZE_
{
		volatile struct	/* 0x1A00419C */
		{
				FIELD  CQ_THR4_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR4_DESC_SIZE;	/* CAM_CQ_THR4_DESC_SIZE, CAM_A_CQ_THR4_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR5_CTL_
{
		volatile struct	/* 0x1A0041A0 */
		{
				FIELD  CQ_THR5_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR5_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR5_CTL;	/* CAM_CQ_THR5_CTL, CAM_A_CQ_THR5_CTL*/

typedef volatile union _CAM_REG_CQ_THR5_BASEADDR_
{
		volatile struct	/* 0x1A0041A4 */
		{
				FIELD  CQ_THR5_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR5_BASEADDR;	/* CAM_CQ_THR5_BASEADDR, CAM_A_CQ_THR5_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR5_DESC_SIZE_
{
		volatile struct	/* 0x1A0041A8 */
		{
				FIELD  CQ_THR5_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR5_DESC_SIZE;	/* CAM_CQ_THR5_DESC_SIZE, CAM_A_CQ_THR5_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR6_CTL_
{
		volatile struct	/* 0x1A0041AC */
		{
				FIELD  CQ_THR6_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR6_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR6_CTL;	/* CAM_CQ_THR6_CTL, CAM_A_CQ_THR6_CTL*/

typedef volatile union _CAM_REG_CQ_THR6_BASEADDR_
{
		volatile struct	/* 0x1A0041B0 */
		{
				FIELD  CQ_THR6_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR6_BASEADDR;	/* CAM_CQ_THR6_BASEADDR, CAM_A_CQ_THR6_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR6_DESC_SIZE_
{
		volatile struct	/* 0x1A0041B4 */
		{
				FIELD  CQ_THR6_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR6_DESC_SIZE;	/* CAM_CQ_THR6_DESC_SIZE, CAM_A_CQ_THR6_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR7_CTL_
{
		volatile struct	/* 0x1A0041B8 */
		{
				FIELD  CQ_THR7_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR7_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR7_CTL;	/* CAM_CQ_THR7_CTL, CAM_A_CQ_THR7_CTL*/

typedef volatile union _CAM_REG_CQ_THR7_BASEADDR_
{
		volatile struct	/* 0x1A0041BC */
		{
				FIELD  CQ_THR7_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR7_BASEADDR;	/* CAM_CQ_THR7_BASEADDR, CAM_A_CQ_THR7_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR7_DESC_SIZE_
{
		volatile struct	/* 0x1A0041C0 */
		{
				FIELD  CQ_THR7_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR7_DESC_SIZE;	/* CAM_CQ_THR7_DESC_SIZE, CAM_A_CQ_THR7_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR8_CTL_
{
		volatile struct	/* 0x1A0041C4 */
		{
				FIELD  CQ_THR8_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR8_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR8_CTL;	/* CAM_CQ_THR8_CTL, CAM_A_CQ_THR8_CTL*/

typedef volatile union _CAM_REG_CQ_THR8_BASEADDR_
{
		volatile struct	/* 0x1A0041C8 */
		{
				FIELD  CQ_THR8_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR8_BASEADDR;	/* CAM_CQ_THR8_BASEADDR, CAM_A_CQ_THR8_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR8_DESC_SIZE_
{
		volatile struct	/* 0x1A0041CC */
		{
				FIELD  CQ_THR8_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR8_DESC_SIZE;	/* CAM_CQ_THR8_DESC_SIZE, CAM_A_CQ_THR8_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR9_CTL_
{
		volatile struct	/* 0x1A0041D0 */
		{
				FIELD  CQ_THR9_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR9_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR9_CTL;	/* CAM_CQ_THR9_CTL, CAM_A_CQ_THR9_CTL*/

typedef volatile union _CAM_REG_CQ_THR9_BASEADDR_
{
		volatile struct	/* 0x1A0041D4 */
		{
				FIELD  CQ_THR9_BASEADDR                      : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR9_BASEADDR;	/* CAM_CQ_THR9_BASEADDR, CAM_A_CQ_THR9_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR9_DESC_SIZE_
{
		volatile struct	/* 0x1A0041D8 */
		{
				FIELD  CQ_THR9_DESC_SIZE                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR9_DESC_SIZE;	/* CAM_CQ_THR9_DESC_SIZE, CAM_A_CQ_THR9_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR10_CTL_
{
		volatile struct	/* 0x1A0041DC */
		{
				FIELD  CQ_THR10_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR10_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR10_CTL;	/* CAM_CQ_THR10_CTL, CAM_A_CQ_THR10_CTL*/

typedef volatile union _CAM_REG_CQ_THR10_BASEADDR_
{
		volatile struct	/* 0x1A0041E0 */
		{
				FIELD  CQ_THR10_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR10_BASEADDR;	/* CAM_CQ_THR10_BASEADDR, CAM_A_CQ_THR10_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR10_DESC_SIZE_
{
		volatile struct	/* 0x1A0041E4 */
		{
				FIELD  CQ_THR10_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR10_DESC_SIZE;	/* CAM_CQ_THR10_DESC_SIZE, CAM_A_CQ_THR10_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR11_CTL_
{
		volatile struct	/* 0x1A0041E8 */
		{
				FIELD  CQ_THR11_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR11_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR11_CTL;	/* CAM_CQ_THR11_CTL, CAM_A_CQ_THR11_CTL*/

typedef volatile union _CAM_REG_CQ_THR11_BASEADDR_
{
		volatile struct	/* 0x1A0041EC */
		{
				FIELD  CQ_THR11_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR11_BASEADDR;	/* CAM_CQ_THR11_BASEADDR, CAM_A_CQ_THR11_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR11_DESC_SIZE_
{
		volatile struct	/* 0x1A0041F0 */
		{
				FIELD  CQ_THR11_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR11_DESC_SIZE;	/* CAM_CQ_THR11_DESC_SIZE, CAM_A_CQ_THR11_DESC_SIZE*/

typedef volatile union _CAM_REG_CQ_THR12_CTL_
{
		volatile struct	/* 0x1A0041F4 */
		{
				FIELD  CQ_THR12_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  CQ_THR12_MODE                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR12_CTL;	/* CAM_CQ_THR12_CTL, CAM_A_CQ_THR12_CTL*/

typedef volatile union _CAM_REG_CQ_THR12_BASEADDR_
{
		volatile struct	/* 0x1A0041F8 */
		{
				FIELD  CQ_THR12_BASEADDR                     : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR12_BASEADDR;	/* CAM_CQ_THR12_BASEADDR, CAM_A_CQ_THR12_BASEADDR*/

typedef volatile union _CAM_REG_CQ_THR12_DESC_SIZE_
{
		volatile struct	/* 0x1A0041FC */
		{
				FIELD  CQ_THR12_DESC_SIZE                    : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ_THR12_DESC_SIZE;	/* CAM_CQ_THR12_DESC_SIZE, CAM_A_CQ_THR12_DESC_SIZE*/

typedef volatile union _CAM_REG_DMA_SOFT_RSTSTAT_
{
		volatile struct	/* 0x1A004200 */
		{
				FIELD  IMGO_SOFT_RST_STAT                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_SOFT_RST_STAT                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_SOFT_RST_STAT                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_SOFT_RST_STAT                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_SOFT_RST_STAT                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_SOFT_RST_STAT                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_SOFT_RST_STAT                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PSO_SOFT_RST_STAT                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPCI_SOFT_RST_STAT                    :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_SOFT_RST_STAT                    :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_SOFT_RST_STAT                    :  1;		/* 18..18, 0x00040000 */
				FIELD  LSC3I_SOFT_RST_STAT                   :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_SOFT_RSTSTAT;	/* CAM_DMA_SOFT_RSTSTAT, CAM_A_DMA_SOFT_RSTSTAT*/

typedef volatile union _CAM_REG_CQ0I_BASE_ADDR_
{
		volatile struct	/* 0x1A004204 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ0I_BASE_ADDR;	/* CAM_CQ0I_BASE_ADDR, CAM_A_CQ0I_BASE_ADDR*/

typedef volatile union _CAM_REG_CQ0I_XSIZE_
{
		volatile struct	/* 0x1A004208 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CQ0I_XSIZE;	/* CAM_CQ0I_XSIZE, CAM_A_CQ0I_XSIZE*/

typedef volatile union _CAM_REG_VERTICAL_FLIP_EN_
{
		volatile struct	/* 0x1A00420C */
		{
				FIELD  IMGO_V_FLIP_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_V_FLIP_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_V_FLIP_EN                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_V_FLIP_EN                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_V_FLIP_EN                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_V_FLIP_EN                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_V_FLIP_EN                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PSO_V_FLIP_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPCI_V_FLIP_EN                        :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_V_FLIP_EN                        :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_V_FLIP_EN                        :  1;		/* 18..18, 0x00040000 */
				FIELD  LSC3I_V_FLIP_EN                       :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_VERTICAL_FLIP_EN;	/* CAM_VERTICAL_FLIP_EN, CAM_A_VERTICAL_FLIP_EN*/

typedef volatile union _CAM_REG_DMA_SOFT_RESET_
{
		volatile struct	/* 0x1A004210 */
		{
				FIELD  IMGO_SOFT_RST                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_SOFT_RST                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_SOFT_RST                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_SOFT_RST                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_SOFT_RST                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_SOFT_RST                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_SOFT_RST                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PSO_SOFT_RST                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPCI_SOFT_RST                         :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_SOFT_RST                         :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_SOFT_RST                         :  1;		/* 18..18, 0x00040000 */
				FIELD  LSC3I_SOFT_RST                        :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 11;		/* 20..30, 0x7FF00000 */
				FIELD  SEPARATE_SOFT_RST_EN                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_SOFT_RESET;	/* CAM_DMA_SOFT_RESET, CAM_A_DMA_SOFT_RESET*/

typedef volatile union _CAM_REG_LAST_ULTRA_EN_
{
		volatile struct	/* 0x1A004214 */
		{
				FIELD  IMGO_LAST_ULTRA_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_LAST_ULTRA_EN                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_LAST_ULTRA_EN                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_LAST_ULTRA_EN                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_LAST_ULTRA_EN                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_LAST_ULTRA_EN                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_LAST_ULTRA_EN                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PSO_LAST_ULTRA_EN                     :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPCI_LAST_ULTRA_EN                    :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_LAST_ULTRA_EN                    :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_LAST_ULTRA_EN                    :  1;		/* 18..18, 0x00040000 */
				FIELD  LSC3I_LAST_ULTRA_EN                   :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LAST_ULTRA_EN;	/* CAM_LAST_ULTRA_EN, CAM_A_LAST_ULTRA_EN*/

typedef volatile union _CAM_REG_SPECIAL_FUN_EN_
{
		volatile struct	/* 0x1A004218 */
		{
				FIELD  rsv_0                                 : 20;		/*  0..19, 0x000FFFFF */
				FIELD  CONTINUOUS_COM_CON                    :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  MULTI_PLANE_ID_EN                     :  1;		/* 24..24, 0x01000000 */
				FIELD  CONTINUOUS_COM_EN                     :  1;		/* 25..25, 0x02000000 */
				FIELD  FIFO_CHANGE_EN                        :  1;		/* 26..26, 0x04000000 */
				FIELD  GCLAST_EN                             :  1;		/* 27..27, 0x08000000 */
				FIELD  CQ_ULTRA_BPCI_EN                      :  1;		/* 28..28, 0x10000000 */
				FIELD  CQ_ULTRA_LSCI_EN                      :  1;		/* 29..29, 0x20000000 */
				FIELD  UFOG_RRZO_EN                          :  1;		/* 30..30, 0x40000000 */
				FIELD  UFO_IMGO_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SPECIAL_FUN_EN;	/* CAM_SPECIAL_FUN_EN, CAM_A_SPECIAL_FUN_EN*/

typedef volatile union _CAM_REG_IMGO_BASE_ADDR_
{
		volatile struct	/* 0x1A004220 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_BASE_ADDR;	/* CAM_IMGO_BASE_ADDR, CAM_A_IMGO_BASE_ADDR*/

typedef volatile union _CAM_REG_IMGO_OFST_ADDR_
{
		volatile struct	/* 0x1A004228 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_OFST_ADDR;	/* CAM_IMGO_OFST_ADDR, CAM_A_IMGO_OFST_ADDR*/

typedef volatile union _CAM_REG_IMGO_XSIZE_
{
		volatile struct	/* 0x1A004230 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_XSIZE;	/* CAM_IMGO_XSIZE, CAM_A_IMGO_XSIZE*/

typedef volatile union _CAM_REG_IMGO_YSIZE_
{
		volatile struct	/* 0x1A004234 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_YSIZE;	/* CAM_IMGO_YSIZE, CAM_A_IMGO_YSIZE*/

typedef volatile union _CAM_REG_IMGO_STRIDE_
{
		volatile struct	/* 0x1A004238 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_STRIDE;	/* CAM_IMGO_STRIDE, CAM_A_IMGO_STRIDE*/

typedef volatile union _CAM_REG_IMGO_CON_
{
		volatile struct	/* 0x1A00423C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_CON;	/* CAM_IMGO_CON, CAM_A_IMGO_CON*/

typedef volatile union _CAM_REG_IMGO_CON2_
{
		volatile struct	/* 0x1A004240 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_CON2;	/* CAM_IMGO_CON2, CAM_A_IMGO_CON2*/

typedef volatile union _CAM_REG_IMGO_CON3_
{
		volatile struct	/* 0x1A004244 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_CON3;	/* CAM_IMGO_CON3, CAM_A_IMGO_CON3*/

typedef volatile union _CAM_REG_IMGO_CROP_
{
		volatile struct	/* 0x1A004248 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_CROP;	/* CAM_IMGO_CROP, CAM_A_IMGO_CROP*/

typedef volatile union _CAM_REG_RRZO_BASE_ADDR_
{
		volatile struct	/* 0x1A004250 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_BASE_ADDR;	/* CAM_RRZO_BASE_ADDR, CAM_A_RRZO_BASE_ADDR*/

typedef volatile union _CAM_REG_RRZO_OFST_ADDR_
{
		volatile struct	/* 0x1A004258 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_OFST_ADDR;	/* CAM_RRZO_OFST_ADDR, CAM_A_RRZO_OFST_ADDR*/

typedef volatile union _CAM_REG_RRZO_XSIZE_
{
		volatile struct	/* 0x1A004260 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_XSIZE;	/* CAM_RRZO_XSIZE, CAM_A_RRZO_XSIZE*/

typedef volatile union _CAM_REG_RRZO_YSIZE_
{
		volatile struct	/* 0x1A004264 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_YSIZE;	/* CAM_RRZO_YSIZE, CAM_A_RRZO_YSIZE*/

typedef volatile union _CAM_REG_RRZO_STRIDE_
{
		volatile struct	/* 0x1A004268 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_STRIDE;	/* CAM_RRZO_STRIDE, CAM_A_RRZO_STRIDE*/

typedef volatile union _CAM_REG_RRZO_CON_
{
		volatile struct	/* 0x1A00426C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_CON;	/* CAM_RRZO_CON, CAM_A_RRZO_CON*/

typedef volatile union _CAM_REG_RRZO_CON2_
{
		volatile struct	/* 0x1A004270 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_CON2;	/* CAM_RRZO_CON2, CAM_A_RRZO_CON2*/

typedef volatile union _CAM_REG_RRZO_CON3_
{
		volatile struct	/* 0x1A004274 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_CON3;	/* CAM_RRZO_CON3, CAM_A_RRZO_CON3*/

typedef volatile union _CAM_REG_RRZO_CROP_
{
		volatile struct	/* 0x1A004278 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_CROP;	/* CAM_RRZO_CROP, CAM_A_RRZO_CROP*/

typedef volatile union _CAM_REG_AAO_BASE_ADDR_
{
		volatile struct	/* 0x1A004280 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_BASE_ADDR;	/* CAM_AAO_BASE_ADDR, CAM_A_AAO_BASE_ADDR*/

typedef volatile union _CAM_REG_AAO_OFST_ADDR_
{
		volatile struct	/* 0x1A004288 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_OFST_ADDR;	/* CAM_AAO_OFST_ADDR, CAM_A_AAO_OFST_ADDR*/

typedef volatile union _CAM_REG_AAO_XSIZE_
{
		volatile struct	/* 0x1A004290 */
		{
				FIELD  XSIZE                                 : 17;		/*  0..16, 0x0001FFFF */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_XSIZE;	/* CAM_AAO_XSIZE, CAM_A_AAO_XSIZE*/

typedef volatile union _CAM_REG_AAO_YSIZE_
{
		volatile struct	/* 0x1A004294 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_YSIZE;	/* CAM_AAO_YSIZE, CAM_A_AAO_YSIZE*/

typedef volatile union _CAM_REG_AAO_STRIDE_
{
		volatile struct	/* 0x1A004298 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  6;		/* 18..23, 0x00FC0000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_STRIDE;	/* CAM_AAO_STRIDE, CAM_A_AAO_STRIDE*/

typedef volatile union _CAM_REG_AAO_CON_
{
		volatile struct	/* 0x1A00429C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_CON;	/* CAM_AAO_CON, CAM_A_AAO_CON*/

typedef volatile union _CAM_REG_AAO_CON2_
{
		volatile struct	/* 0x1A0042A0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_CON2;	/* CAM_AAO_CON2, CAM_A_AAO_CON2*/

typedef volatile union _CAM_REG_AAO_CON3_
{
		volatile struct	/* 0x1A0042A4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_CON3;	/* CAM_AAO_CON3, CAM_A_AAO_CON3*/

typedef volatile union _CAM_REG_AFO_BASE_ADDR_
{
		volatile struct	/* 0x1A0042B0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_BASE_ADDR;	/* CAM_AFO_BASE_ADDR, CAM_A_AFO_BASE_ADDR*/

typedef volatile union _CAM_REG_AFO_OFST_ADDR_
{
		volatile struct	/* 0x1A0042B8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_OFST_ADDR;	/* CAM_AFO_OFST_ADDR, CAM_A_AFO_OFST_ADDR*/

typedef volatile union _CAM_REG_AFO_XSIZE_
{
		volatile struct	/* 0x1A0042C0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_XSIZE;	/* CAM_AFO_XSIZE, CAM_A_AFO_XSIZE*/

typedef volatile union _CAM_REG_AFO_YSIZE_
{
		volatile struct	/* 0x1A0042C4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_YSIZE;	/* CAM_AFO_YSIZE, CAM_A_AFO_YSIZE*/

typedef volatile union _CAM_REG_AFO_STRIDE_
{
		volatile struct	/* 0x1A0042C8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_STRIDE;	/* CAM_AFO_STRIDE, CAM_A_AFO_STRIDE*/

typedef volatile union _CAM_REG_AFO_CON_
{
		volatile struct	/* 0x1A0042CC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_CON;	/* CAM_AFO_CON, CAM_A_AFO_CON*/

typedef volatile union _CAM_REG_AFO_CON2_
{
		volatile struct	/* 0x1A0042D0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_CON2;	/* CAM_AFO_CON2, CAM_A_AFO_CON2*/

typedef volatile union _CAM_REG_AFO_CON3_
{
		volatile struct	/* 0x1A0042D4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_CON3;	/* CAM_AFO_CON3, CAM_A_AFO_CON3*/

typedef volatile union _CAM_REG_LCSO_BASE_ADDR_
{
		volatile struct	/* 0x1A0042E0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_BASE_ADDR;	/* CAM_LCSO_BASE_ADDR, CAM_A_LCSO_BASE_ADDR*/

typedef volatile union _CAM_REG_LCSO_OFST_ADDR_
{
		volatile struct	/* 0x1A0042E8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_OFST_ADDR;	/* CAM_LCSO_OFST_ADDR, CAM_A_LCSO_OFST_ADDR*/

typedef volatile union _CAM_REG_LCSO_XSIZE_
{
		volatile struct	/* 0x1A0042F0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_XSIZE;	/* CAM_LCSO_XSIZE, CAM_A_LCSO_XSIZE*/

typedef volatile union _CAM_REG_LCSO_YSIZE_
{
		volatile struct	/* 0x1A0042F4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_YSIZE;	/* CAM_LCSO_YSIZE, CAM_A_LCSO_YSIZE*/

typedef volatile union _CAM_REG_LCSO_STRIDE_
{
		volatile struct	/* 0x1A0042F8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_STRIDE;	/* CAM_LCSO_STRIDE, CAM_A_LCSO_STRIDE*/

typedef volatile union _CAM_REG_LCSO_CON_
{
		volatile struct	/* 0x1A0042FC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_CON;	/* CAM_LCSO_CON, CAM_A_LCSO_CON*/

typedef volatile union _CAM_REG_LCSO_CON2_
{
		volatile struct	/* 0x1A004300 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_CON2;	/* CAM_LCSO_CON2, CAM_A_LCSO_CON2*/

typedef volatile union _CAM_REG_LCSO_CON3_
{
		volatile struct	/* 0x1A004304 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_CON3;	/* CAM_LCSO_CON3, CAM_A_LCSO_CON3*/

typedef volatile union _CAM_REG_UFEO_BASE_ADDR_
{
		volatile struct	/* 0x1A004310 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_BASE_ADDR;	/* CAM_UFEO_BASE_ADDR, CAM_A_UFEO_BASE_ADDR*/

typedef volatile union _CAM_REG_UFEO_OFST_ADDR_
{
		volatile struct	/* 0x1A004318 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_OFST_ADDR;	/* CAM_UFEO_OFST_ADDR, CAM_A_UFEO_OFST_ADDR*/

typedef volatile union _CAM_REG_UFEO_XSIZE_
{
		volatile struct	/* 0x1A004320 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_XSIZE;	/* CAM_UFEO_XSIZE, CAM_A_UFEO_XSIZE*/

typedef volatile union _CAM_REG_UFEO_YSIZE_
{
		volatile struct	/* 0x1A004324 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_YSIZE;	/* CAM_UFEO_YSIZE, CAM_A_UFEO_YSIZE*/

typedef volatile union _CAM_REG_UFEO_STRIDE_
{
		volatile struct	/* 0x1A004328 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_STRIDE;	/* CAM_UFEO_STRIDE, CAM_A_UFEO_STRIDE*/

typedef volatile union _CAM_REG_UFEO_CON_
{
		volatile struct	/* 0x1A00432C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_CON;	/* CAM_UFEO_CON, CAM_A_UFEO_CON*/

typedef volatile union _CAM_REG_UFEO_CON2_
{
		volatile struct	/* 0x1A004330 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_CON2;	/* CAM_UFEO_CON2, CAM_A_UFEO_CON2*/

typedef volatile union _CAM_REG_UFEO_CON3_
{
		volatile struct	/* 0x1A004334 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_CON3;	/* CAM_UFEO_CON3, CAM_A_UFEO_CON3*/

typedef volatile union _CAM_REG_PDO_BASE_ADDR_
{
		volatile struct	/* 0x1A004340 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_BASE_ADDR;	/* CAM_PDO_BASE_ADDR, CAM_A_PDO_BASE_ADDR*/

typedef volatile union _CAM_REG_PDO_OFST_ADDR_
{
		volatile struct	/* 0x1A004348 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_OFST_ADDR;	/* CAM_PDO_OFST_ADDR, CAM_A_PDO_OFST_ADDR*/

typedef volatile union _CAM_REG_PDO_XSIZE_
{
		volatile struct	/* 0x1A004350 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_XSIZE;	/* CAM_PDO_XSIZE, CAM_A_PDO_XSIZE*/

typedef volatile union _CAM_REG_PDO_YSIZE_
{
		volatile struct	/* 0x1A004354 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_YSIZE;	/* CAM_PDO_YSIZE, CAM_A_PDO_YSIZE*/

typedef volatile union _CAM_REG_PDO_STRIDE_
{
		volatile struct	/* 0x1A004358 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_STRIDE;	/* CAM_PDO_STRIDE, CAM_A_PDO_STRIDE*/

typedef volatile union _CAM_REG_PDO_CON_
{
		volatile struct	/* 0x1A00435C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_CON;	/* CAM_PDO_CON, CAM_A_PDO_CON*/

typedef volatile union _CAM_REG_PDO_CON2_
{
		volatile struct	/* 0x1A004360 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_CON2;	/* CAM_PDO_CON2, CAM_A_PDO_CON2*/

typedef volatile union _CAM_REG_PDO_CON3_
{
		volatile struct	/* 0x1A004364 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_CON3;	/* CAM_PDO_CON3, CAM_A_PDO_CON3*/

typedef volatile union _CAM_REG_BPCI_BASE_ADDR_
{
		volatile struct	/* 0x1A004370 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_BASE_ADDR;	/* CAM_BPCI_BASE_ADDR, CAM_A_BPCI_BASE_ADDR*/

typedef volatile union _CAM_REG_BPCI_OFST_ADDR_
{
		volatile struct	/* 0x1A004378 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_OFST_ADDR;	/* CAM_BPCI_OFST_ADDR, CAM_A_BPCI_OFST_ADDR*/

typedef volatile union _CAM_REG_BPCI_XSIZE_
{
		volatile struct	/* 0x1A004380 */
		{
				FIELD  XSIZE                                 : 20;		/*  0..19, 0x000FFFFF */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_XSIZE;	/* CAM_BPCI_XSIZE, CAM_A_BPCI_XSIZE*/

typedef volatile union _CAM_REG_BPCI_YSIZE_
{
		volatile struct	/* 0x1A004384 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_YSIZE;	/* CAM_BPCI_YSIZE, CAM_A_BPCI_YSIZE*/

typedef volatile union _CAM_REG_BPCI_STRIDE_
{
		volatile struct	/* 0x1A004388 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_STRIDE;	/* CAM_BPCI_STRIDE, CAM_A_BPCI_STRIDE*/

typedef volatile union _CAM_REG_BPCI_CON_
{
		volatile struct	/* 0x1A00438C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_CON;	/* CAM_BPCI_CON, CAM_A_BPCI_CON*/

typedef volatile union _CAM_REG_BPCI_CON2_
{
		volatile struct	/* 0x1A004390 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_CON2;	/* CAM_BPCI_CON2, CAM_A_BPCI_CON2*/

typedef volatile union _CAM_REG_BPCI_CON3_
{
		volatile struct	/* 0x1A004394 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_CON3;	/* CAM_BPCI_CON3, CAM_A_BPCI_CON3*/

typedef volatile union _CAM_REG_CACI_BASE_ADDR_
{
		volatile struct	/* 0x1A0043A0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_BASE_ADDR;	/* CAM_CACI_BASE_ADDR, CAM_A_CACI_BASE_ADDR*/

typedef volatile union _CAM_REG_CACI_OFST_ADDR_
{
		volatile struct	/* 0x1A0043A8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_OFST_ADDR;	/* CAM_CACI_OFST_ADDR, CAM_A_CACI_OFST_ADDR*/

typedef volatile union _CAM_REG_CACI_XSIZE_
{
		volatile struct	/* 0x1A0043B0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_XSIZE;	/* CAM_CACI_XSIZE, CAM_A_CACI_XSIZE*/

typedef volatile union _CAM_REG_CACI_YSIZE_
{
		volatile struct	/* 0x1A0043B4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_YSIZE;	/* CAM_CACI_YSIZE, CAM_A_CACI_YSIZE*/

typedef volatile union _CAM_REG_CACI_STRIDE_
{
		volatile struct	/* 0x1A0043B8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_STRIDE;	/* CAM_CACI_STRIDE, CAM_A_CACI_STRIDE*/

typedef volatile union _CAM_REG_CACI_CON_
{
		volatile struct	/* 0x1A0043BC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_CON;	/* CAM_CACI_CON, CAM_A_CACI_CON*/

typedef volatile union _CAM_REG_CACI_CON2_
{
		volatile struct	/* 0x1A0043C0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_CON2;	/* CAM_CACI_CON2, CAM_A_CACI_CON2*/

typedef volatile union _CAM_REG_CACI_CON3_
{
		volatile struct	/* 0x1A0043C4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_CON3;	/* CAM_CACI_CON3, CAM_A_CACI_CON3*/

typedef volatile union _CAM_REG_LSCI_BASE_ADDR_
{
		volatile struct	/* 0x1A0043D0 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_BASE_ADDR;	/* CAM_LSCI_BASE_ADDR, CAM_A_LSCI_BASE_ADDR*/

typedef volatile union _CAM_REG_LSCI_OFST_ADDR_
{
		volatile struct	/* 0x1A0043D8 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_OFST_ADDR;	/* CAM_LSCI_OFST_ADDR, CAM_A_LSCI_OFST_ADDR*/

typedef volatile union _CAM_REG_LSCI_XSIZE_
{
		volatile struct	/* 0x1A0043E0 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_XSIZE;	/* CAM_LSCI_XSIZE, CAM_A_LSCI_XSIZE*/

typedef volatile union _CAM_REG_LSCI_YSIZE_
{
		volatile struct	/* 0x1A0043E4 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_YSIZE;	/* CAM_LSCI_YSIZE, CAM_A_LSCI_YSIZE*/

typedef volatile union _CAM_REG_LSCI_STRIDE_
{
		volatile struct	/* 0x1A0043E8 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_STRIDE;	/* CAM_LSCI_STRIDE, CAM_A_LSCI_STRIDE*/

typedef volatile union _CAM_REG_LSCI_CON_
{
		volatile struct	/* 0x1A0043EC */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_CON;	/* CAM_LSCI_CON, CAM_A_LSCI_CON*/

typedef volatile union _CAM_REG_LSCI_CON2_
{
		volatile struct	/* 0x1A0043F0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_CON2;	/* CAM_LSCI_CON2, CAM_A_LSCI_CON2*/

typedef volatile union _CAM_REG_LSCI_CON3_
{
		volatile struct	/* 0x1A0043F4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_CON3;	/* CAM_LSCI_CON3, CAM_A_LSCI_CON3*/

typedef volatile union _CAM_REG_LSC3I_BASE_ADDR_
{
		volatile struct	/* 0x1A004400 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_BASE_ADDR;	/* CAM_LSC3I_BASE_ADDR, CAM_A_LSC3I_BASE_ADDR*/

typedef volatile union _CAM_REG_LSC3I_OFST_ADDR_
{
		volatile struct	/* 0x1A004408 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_OFST_ADDR;	/* CAM_LSC3I_OFST_ADDR, CAM_A_LSC3I_OFST_ADDR*/

typedef volatile union _CAM_REG_LSC3I_XSIZE_
{
		volatile struct	/* 0x1A004410 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_XSIZE;	/* CAM_LSC3I_XSIZE, CAM_A_LSC3I_XSIZE*/

typedef volatile union _CAM_REG_LSC3I_YSIZE_
{
		volatile struct	/* 0x1A004414 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_YSIZE;	/* CAM_LSC3I_YSIZE, CAM_A_LSC3I_YSIZE*/

typedef volatile union _CAM_REG_LSC3I_STRIDE_
{
		volatile struct	/* 0x1A004418 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  FORMAT                                :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  2;		/* 21..22, 0x00600000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  5;		/* 25..29, 0x3E000000 */
				FIELD  SWAP                                  :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_STRIDE;	/* CAM_LSC3I_STRIDE, CAM_A_LSC3I_STRIDE*/

typedef volatile union _CAM_REG_LSC3I_CON_
{
		volatile struct	/* 0x1A00441C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_CON;	/* CAM_LSC3I_CON, CAM_A_LSC3I_CON*/

typedef volatile union _CAM_REG_LSC3I_CON2_
{
		volatile struct	/* 0x1A004420 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_CON2;	/* CAM_LSC3I_CON2, CAM_A_LSC3I_CON2*/

typedef volatile union _CAM_REG_LSC3I_CON3_
{
		volatile struct	/* 0x1A004424 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_CON3;	/* CAM_LSC3I_CON3, CAM_A_LSC3I_CON3*/

typedef volatile union _CAM_REG_DMA_ERR_CTRL_
{
		volatile struct	/* 0x1A004440 */
		{
				FIELD  IMGO_A_ERR                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_A_ERR                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_A_ERR                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_A_ERR                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_A_ERR                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_A_ERR                            :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_A_ERR                             :  1;		/*  6.. 6, 0x00000040 */
				FIELD  PSO_A_ERR                             :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPCI_A_ERR                            :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_A_ERR                            :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_A_ERR                            :  1;		/* 18..18, 0x00040000 */
				FIELD  LSC3I_A_ERR                           :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 11;		/* 20..30, 0x7FF00000 */
				FIELD  ERR_CLR_MD                            :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_ERR_CTRL;	/* CAM_DMA_ERR_CTRL, CAM_A_DMA_ERR_CTRL*/

typedef volatile union _CAM_REG_IMGO_ERR_STAT_
{
		volatile struct	/* 0x1A004444 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_ERR_STAT;	/* CAM_IMGO_ERR_STAT, CAM_A_IMGO_ERR_STAT*/

typedef volatile union _CAM_REG_RRZO_ERR_STAT_
{
		volatile struct	/* 0x1A004448 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_ERR_STAT;	/* CAM_RRZO_ERR_STAT, CAM_A_RRZO_ERR_STAT*/

typedef volatile union _CAM_REG_AAO_ERR_STAT_
{
		volatile struct	/* 0x1A00444C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_ERR_STAT;	/* CAM_AAO_ERR_STAT, CAM_A_AAO_ERR_STAT*/

typedef volatile union _CAM_REG_AFO_ERR_STAT_
{
		volatile struct	/* 0x1A004450 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_ERR_STAT;	/* CAM_AFO_ERR_STAT, CAM_A_AFO_ERR_STAT*/

typedef volatile union _CAM_REG_LCSO_ERR_STAT_
{
		volatile struct	/* 0x1A004454 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_ERR_STAT;	/* CAM_LCSO_ERR_STAT, CAM_A_LCSO_ERR_STAT*/

typedef volatile union _CAM_REG_UFEO_ERR_STAT_
{
		volatile struct	/* 0x1A004458 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_ERR_STAT;	/* CAM_UFEO_ERR_STAT, CAM_A_UFEO_ERR_STAT*/

typedef volatile union _CAM_REG_PDO_ERR_STAT_
{
		volatile struct	/* 0x1A00445C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_ERR_STAT;	/* CAM_PDO_ERR_STAT, CAM_A_PDO_ERR_STAT*/

typedef volatile union _CAM_REG_BPCI_ERR_STAT_
{
		volatile struct	/* 0x1A004460 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BPCI_ERR_STAT;	/* CAM_BPCI_ERR_STAT, CAM_A_BPCI_ERR_STAT*/

typedef volatile union _CAM_REG_CACI_ERR_STAT_
{
		volatile struct	/* 0x1A004464 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CACI_ERR_STAT;	/* CAM_CACI_ERR_STAT, CAM_A_CACI_ERR_STAT*/

typedef volatile union _CAM_REG_LSCI_ERR_STAT_
{
		volatile struct	/* 0x1A004468 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSCI_ERR_STAT;	/* CAM_LSCI_ERR_STAT, CAM_A_LSCI_ERR_STAT*/

typedef volatile union _CAM_REG_LSC3I_ERR_STAT_
{
		volatile struct	/* 0x1A00446C */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC3I_ERR_STAT;	/* CAM_LSC3I_ERR_STAT, CAM_A_LSC3I_ERR_STAT*/

typedef volatile union _CAM_REG_DMA_DEBUG_ADDR_
{
		volatile struct	/* 0x1A004470 */
		{
				FIELD  DEBUG_ADDR                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_DEBUG_ADDR;	/* CAM_DMA_DEBUG_ADDR, CAM_A_DMA_DEBUG_ADDR*/

typedef volatile union _CAM_REG_DMA_RSV1_
{
		volatile struct	/* 0x1A004474 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_RSV1;	/* CAM_DMA_RSV1, CAM_A_DMA_RSV1*/

typedef volatile union _CAM_REG_DMA_RSV2_
{
		volatile struct	/* 0x1A004478 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_RSV2;	/* CAM_DMA_RSV2, CAM_A_DMA_RSV2*/

typedef volatile union _CAM_REG_DMA_RSV3_
{
		volatile struct	/* 0x1A00447C */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_RSV3;	/* CAM_DMA_RSV3, CAM_A_DMA_RSV3*/

typedef volatile union _CAM_REG_DMA_RSV4_
{
		volatile struct	/* 0x1A004480 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_RSV4;	/* CAM_DMA_RSV4, CAM_A_DMA_RSV4*/

typedef volatile union _CAM_REG_DMA_RSV5_
{
		volatile struct	/* 0x1A004484 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_RSV5;	/* CAM_DMA_RSV5, CAM_A_DMA_RSV5*/

typedef volatile union _CAM_REG_DMA_RSV6_
{
		volatile struct	/* 0x1A004488 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_RSV6;	/* CAM_DMA_RSV6, CAM_A_DMA_RSV6*/

typedef volatile union _CAM_REG_DMA_DEBUG_SEL_
{
		volatile struct	/* 0x1A00448C */
		{
				FIELD  DMA_TOP_SEL                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  R_W_DMA_TOP_SEL                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SUB_MODULE_SEL                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  4;		/* 24..27, 0x0F000000 */
				FIELD  PDO_FIFO_FULL_XSIZE                   :  1;		/* 28..28, 0x10000000 */
				FIELD  IMGO_UFE_FIFO_FULL_XSIZE              :  1;		/* 29..29, 0x20000000 */
				FIELD  ARBITER_BVALID_FULL                   :  1;		/* 30..30, 0x40000000 */
				FIELD  ARBITER_COM_FULL                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_DEBUG_SEL;	/* CAM_DMA_DEBUG_SEL, CAM_A_DMA_DEBUG_SEL*/

typedef volatile union _CAM_REG_DMA_BW_SELF_TEST_
{
		volatile struct	/* 0x1A004490 */
		{
				FIELD  BW_SELF_TEST_EN_IMGO                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  BW_SELF_TEST_EN_RRZO                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  BW_SELF_TEST_EN_AAO                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  BW_SELF_TEST_EN_AFO                   :  1;		/*  3.. 3, 0x00000008 */
				FIELD  BW_SELF_TEST_EN_LCSO                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  BW_SELF_TEST_EN_UFEO                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BW_SELF_TEST_EN_PDO                   :  1;		/*  6.. 6, 0x00000040 */
				FIELD  BW_SELF_TEST_EN_PSO                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_BW_SELF_TEST;	/* CAM_DMA_BW_SELF_TEST, CAM_A_DMA_BW_SELF_TEST*/

typedef volatile union _CAM_REG_TG_SEN_MODE_
{
		volatile struct	/* 0x1A004500 */
		{
				FIELD  CMOS_EN                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DBL_DATA_BUS                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SOT_MODE                              :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SOT_CLR_MODE                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  SOF_SRC                               :  2;		/*  8.. 9, 0x00000300 */
				FIELD  EOF_SRC                               :  2;		/* 10..11, 0x00000C00 */
				FIELD  PXL_CNT_RST_SRC                       :  1;		/* 12..12, 0x00001000 */
				FIELD  DBL_DATA_BUS1                         :  1;		/* 13..13, 0x00002000 */
				FIELD  SOF_WAIT_CQ                           :  1;		/* 14..14, 0x00004000 */
				FIELD  FIFO_FULL_CTL_EN                      :  1;		/* 15..15, 0x00008000 */
				FIELD  TIME_STP_EN                           :  1;		/* 16..16, 0x00010000 */
				FIELD  VS_SUB_EN                             :  1;		/* 17..17, 0x00020000 */
				FIELD  SOF_SUB_EN                            :  1;		/* 18..18, 0x00040000 */
				FIELD  I2C_CQ_EN                             :  1;		/* 19..19, 0x00080000 */
				FIELD  EOF_ALS_RDY_EN                        :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_SEL                                :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_SEN_MODE;	/* CAM_TG_SEN_MODE, CAM_A_TG_SEN_MODE*/

typedef volatile union _CAM_REG_TG_VF_CON_
{
		volatile struct	/* 0x1A004504 */
		{
				FIELD  VFDATA_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SINGLE_MODE                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  FR_CON                                :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SP_DELAY                              :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  SPDELAY_MODE                          :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_VF_CON;	/* CAM_TG_VF_CON, CAM_A_TG_VF_CON*/

typedef volatile union _CAM_REG_TG_SEN_GRAB_PXL_
{
		volatile struct	/* 0x1A004508 */
		{
				FIELD  PXL_S                                 : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  PXL_E                                 : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_SEN_GRAB_PXL;	/* CAM_TG_SEN_GRAB_PXL, CAM_A_TG_SEN_GRAB_PXL*/

typedef volatile union _CAM_REG_TG_SEN_GRAB_LIN_
{
		volatile struct	/* 0x1A00450C */
		{
				FIELD  LIN_S                                 : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LIN_E                                 : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_SEN_GRAB_LIN;	/* CAM_TG_SEN_GRAB_LIN, CAM_A_TG_SEN_GRAB_LIN*/

typedef volatile union _CAM_REG_TG_PATH_CFG_
{
		volatile struct	/* 0x1A004510 */
		{
				FIELD  SEN_IN_LSB                            :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  JPGINF_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MEMIN_EN                              :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  JPG_LINEND_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DB_LOAD_DIS                           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DB_LOAD_SRC                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DB_LOAD_VSPOL                         :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  YUV_U2S_DIS                           :  1;		/* 12..12, 0x00001000 */
				FIELD  YUV_BIN_EN                            :  1;		/* 13..13, 0x00002000 */
				FIELD  TG_ERR_SEL                            :  1;		/* 14..14, 0x00004000 */
				FIELD  TG_FULL_SEL                           :  1;		/* 15..15, 0x00008000 */
				FIELD  TG_FULL_SEL2                          :  1;		/* 16..16, 0x00010000 */
				FIELD  FLUSH_DISABLE                         :  1;		/* 17..17, 0x00020000 */
				FIELD  INT_BANK_DISABLE                      :  1;		/* 18..18, 0x00040000 */
				FIELD  EXP_ESC                               :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_PATH_CFG;	/* CAM_TG_PATH_CFG, CAM_A_TG_PATH_CFG*/

typedef volatile union _CAM_REG_TG_MEMIN_CTL_
{
		volatile struct	/* 0x1A004514 */
		{
				FIELD  MEMIN_DUMMYPXL                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  MEMIN_DUMMYLIN                        :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_MEMIN_CTL;	/* CAM_TG_MEMIN_CTL, CAM_A_TG_MEMIN_CTL*/

typedef volatile union _CAM_REG_TG_INT1_
{
		volatile struct	/* 0x1A004518 */
		{
				FIELD  TG_INT1_LINENO                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  TG_INT1_PXLNO                         : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  VSYNC_INT_POL                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_INT1;	/* CAM_TG_INT1, CAM_A_TG_INT1*/

typedef volatile union _CAM_REG_TG_INT2_
{
		volatile struct	/* 0x1A00451C */
		{
				FIELD  TG_INT2_LINENO                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  TG_INT2_PXLNO                         : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_INT2;	/* CAM_TG_INT2, CAM_A_TG_INT2*/

typedef volatile union _CAM_REG_TG_SOF_CNT_
{
		volatile struct	/* 0x1A004520 */
		{
				FIELD  SOF_CNT                               : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_SOF_CNT;	/* CAM_TG_SOF_CNT, CAM_A_TG_SOF_CNT*/

typedef volatile union _CAM_REG_TG_SOT_CNT_
{
		volatile struct	/* 0x1A004524 */
		{
				FIELD  SOT_CNT                               : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_SOT_CNT;	/* CAM_TG_SOT_CNT, CAM_A_TG_SOT_CNT*/

typedef volatile union _CAM_REG_TG_EOT_CNT_
{
		volatile struct	/* 0x1A004528 */
		{
				FIELD  EOT_CNT                               : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_EOT_CNT;	/* CAM_TG_EOT_CNT, CAM_A_TG_EOT_CNT*/

typedef volatile union _CAM_REG_TG_ERR_CTL_
{
		volatile struct	/* 0x1A00452C */
		{
				FIELD  GRAB_ERR_FLIMIT_NO                    :  4;		/*  0.. 3, 0x0000000F */
				FIELD  GRAB_ERR_FLIMIT_EN                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  GRAB_ERR_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  REZ_OVRUN_FLIMIT_NO                   :  4;		/*  8..11, 0x00000F00 */
				FIELD  REZ_OVRUN_FLIMIT_EN                   :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  DBG_SRC_SEL                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_ERR_CTL;	/* CAM_TG_ERR_CTL, CAM_A_TG_ERR_CTL*/

typedef volatile union _CAM_REG_TG_DAT_NO_
{
		volatile struct	/* 0x1A004530 */
		{
				FIELD  DAT_NO                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_DAT_NO;	/* CAM_TG_DAT_NO, CAM_A_TG_DAT_NO*/

typedef volatile union _CAM_REG_TG_FRM_CNT_ST_
{
		volatile struct	/* 0x1A004534 */
		{
				FIELD  REZ_OVRUN_FCNT                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  GRAB_ERR_FCNT                         :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FRM_CNT_ST;	/* CAM_TG_FRM_CNT_ST, CAM_A_TG_FRM_CNT_ST*/

typedef volatile union _CAM_REG_TG_FRMSIZE_ST_
{
		volatile struct	/* 0x1A004538 */
		{
				FIELD  LINE_CNT                              : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  PXL_CNT                               : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FRMSIZE_ST;	/* CAM_TG_FRMSIZE_ST, CAM_A_TG_FRMSIZE_ST*/

typedef volatile union _CAM_REG_TG_INTER_ST_
{
		volatile struct	/* 0x1A00453C */
		{
				FIELD  SYN_VF_DATA_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  OUT_RDY                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  OUT_REQ                               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  TG_CAM_CS                             :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CAM_FRM_CNT                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_INTER_ST;	/* CAM_TG_INTER_ST, CAM_A_TG_INTER_ST*/

typedef volatile union _CAM_REG_TG_FLASHA_CTL_
{
		volatile struct	/* 0x1A004540 */
		{
				FIELD  FLASHA_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLASH_EN                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  FLASHA_STARTPNT                       :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FLASHA_END_FRM                        :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  FLASH_POL                             :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHA_CTL;	/* CAM_TG_FLASHA_CTL, CAM_A_TG_FLASHA_CTL*/

typedef volatile union _CAM_REG_TG_FLASHA_LINE_CNT_
{
		volatile struct	/* 0x1A004544 */
		{
				FIELD  FLASHA_LUNIT_NO                       : 20;		/*  0..19, 0x000FFFFF */
				FIELD  FLASHA_LUNIT                          :  4;		/* 20..23, 0x00F00000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHA_LINE_CNT;	/* CAM_TG_FLASHA_LINE_CNT, CAM_A_TG_FLASHA_LINE_CNT*/

typedef volatile union _CAM_REG_TG_FLASHA_POS_
{
		volatile struct	/* 0x1A004548 */
		{
				FIELD  FLASHA_PXL                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FLASHA_LINE                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHA_POS;	/* CAM_TG_FLASHA_POS, CAM_A_TG_FLASHA_POS*/

typedef volatile union _CAM_REG_TG_FLASHB_CTL_
{
		volatile struct	/* 0x1A00454C */
		{
				FIELD  FLASHB_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLASHB_TRIG_SRC                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  FLASHB_STARTPNT                       :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FLASHB_START_FRM                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  FLASHB_CONT_FRM                       :  3;		/* 12..14, 0x00007000 */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHB_CTL;	/* CAM_TG_FLASHB_CTL, CAM_A_TG_FLASHB_CTL*/

typedef volatile union _CAM_REG_TG_FLASHB_LINE_CNT_
{
		volatile struct	/* 0x1A004550 */
		{
				FIELD  FLASHB_LUNIT_NO                       : 20;		/*  0..19, 0x000FFFFF */
				FIELD  FLASHB_LUNIT                          :  4;		/* 20..23, 0x00F00000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHB_LINE_CNT;	/* CAM_TG_FLASHB_LINE_CNT, CAM_A_TG_FLASHB_LINE_CNT*/

typedef volatile union _CAM_REG_TG_FLASHB_POS_
{
		volatile struct	/* 0x1A004554 */
		{
				FIELD  FLASHB_PXL                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FLASHB_LINE                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHB_POS;	/* CAM_TG_FLASHB_POS, CAM_A_TG_FLASHB_POS*/

typedef volatile union _CAM_REG_TG_FLASHB_POS1_
{
		volatile struct	/* 0x1A004558 */
		{
				FIELD  FLASHB_CYC_CNT                        : 20;		/*  0..19, 0x000FFFFF */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FLASHB_POS1;	/* CAM_TG_FLASHB_POS1, CAM_A_TG_FLASHB_POS1*/

typedef volatile union _CAM_REG_TG_I2C_CQ_TRIG_
{
		volatile struct	/* 0x1A004560 */
		{
				FIELD  TG_I2C_CQ_TRIG                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_I2C_CQ_TRIG;	/* CAM_TG_I2C_CQ_TRIG, CAM_A_TG_I2C_CQ_TRIG*/

typedef volatile union _CAM_REG_TG_CQ_TIMING_
{
		volatile struct	/* 0x1A004564 */
		{
				FIELD  TG_I2C_CQ_TIM                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_CQ_TIMING;	/* CAM_TG_CQ_TIMING, CAM_A_TG_CQ_TIMING*/

typedef volatile union _CAM_REG_TG_CQ_NUM_
{
		volatile struct	/* 0x1A004568 */
		{
				FIELD  TG_CQ_NUM                             :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_CQ_NUM;	/* CAM_TG_CQ_NUM, CAM_A_TG_CQ_NUM*/

typedef volatile union _CAM_REG_TG_TIME_STAMP_
{
		volatile struct	/* 0x1A004570 */
		{
				FIELD  TG_TIME_STAMP                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_TIME_STAMP;	/* CAM_TG_TIME_STAMP, CAM_A_TG_TIME_STAMP*/

typedef volatile union _CAM_REG_TG_SUB_PERIOD_
{
		volatile struct	/* 0x1A004574 */
		{
				FIELD  VS_PERIOD                             :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  SOF_PERIOD                            :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_SUB_PERIOD;	/* CAM_TG_SUB_PERIOD, CAM_A_TG_SUB_PERIOD*/

typedef volatile union _CAM_REG_TG_DAT_NO_R_
{
		volatile struct	/* 0x1A004578 */
		{
				FIELD  DAT_NO                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_DAT_NO_R;	/* CAM_TG_DAT_NO_R, CAM_A_TG_DAT_NO_R*/

typedef volatile union _CAM_REG_TG_FRMSIZE_ST_R_
{
		volatile struct	/* 0x1A00457C */
		{
				FIELD  LINE_CNT                              : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  PXL_CNT                               : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_TG_FRMSIZE_ST_R;	/* CAM_TG_FRMSIZE_ST_R, CAM_A_TG_FRMSIZE_ST_R*/

typedef volatile union _CAM_REG_DMX_CTL_
{
		volatile struct	/* 0x1A004580 */
		{
				FIELD  DMX_SRAM_SIZE                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  DMX_EDGE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 11;		/* 20..30, 0x7FF00000 */
				FIELD  DMX_EDGE_SET                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMX_CTL;	/* CAM_DMX_CTL, CAM_A_DMX_CTL*/

typedef volatile union _CAM_REG_DMX_CROP_
{
		volatile struct	/* 0x1A004584 */
		{
				FIELD  DMX_STR_X                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  DMX_END_X                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMX_CROP;	/* CAM_DMX_CROP, CAM_A_DMX_CROP*/

typedef volatile union _CAM_REG_DMX_VSIZE_
{
		volatile struct	/* 0x1A004588 */
		{
				FIELD  DMX_HT                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMX_VSIZE;	/* CAM_DMX_VSIZE, CAM_A_DMX_VSIZE*/

typedef volatile union _CAM_REG_RMG_HDR_CFG_
{
		volatile struct	/* 0x1A0045A0 */
		{
				FIELD  RMG_IHDR_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RMG_IHDR_LE_FIRST                     :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RMG_ZHDR_EN                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RMG_ZHDR_RLE                          :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RMG_ZHDR_GLE                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RMG_ZHDR_BLE                          :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RMG_HDR_TH                            : 12;		/*  8..19, 0x000FFF00 */
				FIELD  RMG_OSC_TH                            : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMG_HDR_CFG;	/* CAM_RMG_HDR_CFG, CAM_A_RMG_HDR_CFG*/

typedef volatile union _CAM_REG_RMG_HDR_GAIN_
{
		volatile struct	/* 0x1A0045A4 */
		{
				FIELD  RMG_HDR_GAIN                          :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  RMG_HDR_RATIO                         :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  RMG_LE_INV_CTL                        :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMG_HDR_GAIN;	/* CAM_RMG_HDR_GAIN, CAM_A_RMG_HDR_GAIN*/

typedef volatile union _CAM_REG_RMG_HDR_CFG2_
{
		volatile struct	/* 0x1A0045A8 */
		{
				FIELD  RMG_HDR_THK                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMG_HDR_CFG2;	/* CAM_RMG_HDR_CFG2, CAM_A_RMG_HDR_CFG2*/

typedef volatile union _CAM_REG_RMM_OSC_
{
		volatile struct	/* 0x1A0045C0 */
		{
				FIELD  RMM_OSC_TH                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  RMM_SEDIR_SL                          :  3;		/* 12..14, 0x00007000 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  RMM_SEBLD_WD                          :  4;		/* 16..19, 0x000F0000 */
				FIELD  RMM_LEBLD_WD                          :  4;		/* 20..23, 0x00F00000 */
				FIELD  RMM_LE_INV_CTL                        :  4;		/* 24..27, 0x0F000000 */
				FIELD  RMM_EDGE                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_OSC;	/* CAM_RMM_OSC, CAM_A_RMM_OSC*/

typedef volatile union _CAM_REG_RMM_MC_
{
		volatile struct	/* 0x1A0045C4 */
		{
				FIELD  RMM_MO_EDGE                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RMM_MO_EN                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  RMM_MOBLD_FT                          :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RMM_MOTH_RATIO                        :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RMM_HORI_ADDWT                        :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                : 11;		/* 21..31, 0xFFE00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_MC;	/* CAM_RMM_MC, CAM_A_RMM_MC*/

typedef volatile union _CAM_REG_RMM_REVG_1_
{
		volatile struct	/* 0x1A0045C8 */
		{
				FIELD  RMM_REVG_R                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  RMM_REVG_GR                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_REVG_1;	/* CAM_RMM_REVG_1, CAM_A_RMM_REVG_1*/

typedef volatile union _CAM_REG_RMM_REVG_2_
{
		volatile struct	/* 0x1A0045CC */
		{
				FIELD  RMM_REVG_B                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  RMM_REVG_GB                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_REVG_2;	/* CAM_RMM_REVG_2, CAM_A_RMM_REVG_2*/

typedef volatile union _CAM_REG_RMM_LEOS_
{
		volatile struct	/* 0x1A0045D0 */
		{
				FIELD  RMM_LEOS_GRAY                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_LEOS;	/* CAM_RMM_LEOS, CAM_A_RMM_LEOS*/

typedef volatile union _CAM_REG_RMM_MC2_
{
		volatile struct	/* 0x1A0045D4 */
		{
				FIELD  RMM_MOSE_TH                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  RMM_MOSE_BLDWD                        :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_MC2;	/* CAM_RMM_MC2, CAM_A_RMM_MC2*/

typedef volatile union _CAM_REG_RMM_DIFF_LB_
{
		volatile struct	/* 0x1A0045D8 */
		{
				FIELD  RMM_DIFF_LB                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_DIFF_LB;	/* CAM_RMM_DIFF_LB, CAM_A_RMM_DIFF_LB*/

typedef volatile union _CAM_REG_RMM_MA_
{
		volatile struct	/* 0x1A0045DC */
		{
				FIELD  RMM_MASE_RATIO                        :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  RMM_OSBLD_WD                          :  4;		/*  8..11, 0x00000F00 */
				FIELD  RMM_MASE_BLDWD                        :  4;		/* 12..15, 0x0000F000 */
				FIELD  RMM_SENOS_LEFAC                       :  5;		/* 16..20, 0x001F0000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  RMM_SEYOS_LEFAC                       :  5;		/* 24..28, 0x1F000000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_MA;	/* CAM_RMM_MA, CAM_A_RMM_MA*/

typedef volatile union _CAM_REG_RMM_TUNE_
{
		volatile struct	/* 0x1A0045E0 */
		{
				FIELD  RMM_PSHOR_SEEN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RMM_PS_BLUR                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  RMM_OSC_REPEN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  RMM_SOFT_TH_EN                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  RMM_LE_LOWPA_EN                       :  1;		/*  6.. 6, 0x00000040 */
				FIELD  RMM_SE_LOWPA_EN                       :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RMM_PSSEC_ONLY                        :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  RMM_OSCLE_ONLY                        :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RMM_PS_TH                             : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  RMM_MOLE_DIREN                        :  1;		/* 28..28, 0x10000000 */
				FIELD  RMM_MOSE_DIREN                        :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMM_TUNE;	/* CAM_RMM_TUNE, CAM_A_RMM_TUNE*/

typedef volatile union _CAM_REG_OBC_OFFST0_
{
		volatile struct	/* 0x1A0045F0 */
		{
				FIELD  OBC_OFST_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_OFFST0;	/* CAM_OBC_OFFST0, CAM_A_OBC_OFFST0*/

typedef volatile union _CAM_REG_OBC_OFFST1_
{
		volatile struct	/* 0x1A0045F4 */
		{
				FIELD  OBC_OFST_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_OFFST1;	/* CAM_OBC_OFFST1, CAM_A_OBC_OFFST1*/

typedef volatile union _CAM_REG_OBC_OFFST2_
{
		volatile struct	/* 0x1A0045F8 */
		{
				FIELD  OBC_OFST_GB                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_OFFST2;	/* CAM_OBC_OFFST2, CAM_A_OBC_OFFST2*/

typedef volatile union _CAM_REG_OBC_OFFST3_
{
		volatile struct	/* 0x1A0045FC */
		{
				FIELD  OBC_OFST_R                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_OFFST3;	/* CAM_OBC_OFFST3, CAM_A_OBC_OFFST3*/

typedef volatile union _CAM_REG_OBC_GAIN0_
{
		volatile struct	/* 0x1A004600 */
		{
				FIELD  OBC_GAIN_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_GAIN0;	/* CAM_OBC_GAIN0, CAM_A_OBC_GAIN0*/

typedef volatile union _CAM_REG_OBC_GAIN1_
{
		volatile struct	/* 0x1A004604 */
		{
				FIELD  OBC_GAIN_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_GAIN1;	/* CAM_OBC_GAIN1, CAM_A_OBC_GAIN1*/

typedef volatile union _CAM_REG_OBC_GAIN2_
{
		volatile struct	/* 0x1A004608 */
		{
				FIELD  OBC_GAIN_GB                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_GAIN2;	/* CAM_OBC_GAIN2, CAM_A_OBC_GAIN2*/

typedef volatile union _CAM_REG_OBC_GAIN3_
{
		volatile struct	/* 0x1A00460C */
		{
				FIELD  OBC_GAIN_R                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_OBC_GAIN3;	/* CAM_OBC_GAIN3, CAM_A_OBC_GAIN3*/

typedef volatile union _CAM_REG_BNR_BPC_CON_
{
		volatile struct	/* 0x1A004620 */
		{
				FIELD  BPC_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  BPC_LUT_EN                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  BPC_TABLE_END_MODE                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BPC_AVG_MODE                          :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  3;		/*  9..11, 0x00000E00 */
				FIELD  BPC_DTC_MODE                          :  2;		/* 12..13, 0x00003000 */
				FIELD  BPC_CS_MODE                           :  2;		/* 14..15, 0x0000C000 */
				FIELD  BPC_CRC_MODE                          :  2;		/* 16..17, 0x00030000 */
				FIELD  BPC_EXC                               :  1;		/* 18..18, 0x00040000 */
				FIELD  BPC_BLD_MODE                          :  1;		/* 19..19, 0x00080000 */
				FIELD  BNR_LE_INV_CTL                        :  4;		/* 20..23, 0x00F00000 */
				FIELD  BNR_OSC_COUNT                         :  4;		/* 24..27, 0x0F000000 */
				FIELD  BNR_EDGE                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_CON;	/* CAM_BNR_BPC_CON, CAM_A_BNR_BPC_CON*/

typedef volatile union _CAM_REG_BNR_BPC_TH1_
{
		volatile struct	/* 0x1A004624 */
		{
				FIELD  BPC_TH_LWB                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_TH_Y                              : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_BLD_SLP0                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH1;	/* CAM_BNR_BPC_TH1, CAM_A_BNR_BPC_TH1*/

typedef volatile union _CAM_REG_BNR_BPC_TH2_
{
		volatile struct	/* 0x1A004628 */
		{
				FIELD  BPC_TH_UPB                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  BPC_BLD0                              :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  BPC_BLD1                              :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH2;	/* CAM_BNR_BPC_TH2, CAM_A_BNR_BPC_TH2*/

typedef volatile union _CAM_REG_BNR_BPC_TH3_
{
		volatile struct	/* 0x1A00462C */
		{
				FIELD  BPC_TH_XA                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_TH_XB                             : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_TH_SLA                            :  4;		/* 24..27, 0x0F000000 */
				FIELD  BPC_TH_SLB                            :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH3;	/* CAM_BNR_BPC_TH3, CAM_A_BNR_BPC_TH3*/

typedef volatile union _CAM_REG_BNR_BPC_TH4_
{
		volatile struct	/* 0x1A004630 */
		{
				FIELD  BPC_DK_TH_XA                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_DK_TH_XB                          : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_DK_TH_SLA                         :  4;		/* 24..27, 0x0F000000 */
				FIELD  BPC_DK_TH_SLB                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH4;	/* CAM_BNR_BPC_TH4, CAM_A_BNR_BPC_TH4*/

typedef volatile union _CAM_REG_BNR_BPC_DTC_
{
		volatile struct	/* 0x1A004634 */
		{
				FIELD  BPC_RNG                               :  4;		/*  0.. 3, 0x0000000F */
				FIELD  BPC_CS_RNG                            :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  BPC_CT_LV                             :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  BPC_TH_MUL                            :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                :  4;		/* 20..23, 0x00F00000 */
				FIELD  BPC_NO_LV                             :  3;		/* 24..26, 0x07000000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_DTC;	/* CAM_BNR_BPC_DTC, CAM_A_BNR_BPC_DTC*/

typedef volatile union _CAM_REG_BNR_BPC_COR_
{
		volatile struct	/* 0x1A004638 */
		{
				FIELD  BPC_DIR_MAX                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  BPC_DIR_TH                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BPC_RANK_IDXR                         :  3;		/* 16..18, 0x00070000 */
				FIELD  BPC_RANK_IDXG                         :  3;		/* 19..21, 0x00380000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  BPC_DIR_TH2                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_COR;	/* CAM_BNR_BPC_COR, CAM_A_BNR_BPC_COR*/

typedef volatile union _CAM_REG_BNR_BPC_TBLI1_
{
		volatile struct	/* 0x1A00463C */
		{
				FIELD  BPC_XOFFSET                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BPC_YOFFSET                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TBLI1;	/* CAM_BNR_BPC_TBLI1, CAM_A_BNR_BPC_TBLI1*/

typedef volatile union _CAM_REG_BNR_BPC_TBLI2_
{
		volatile struct	/* 0x1A004640 */
		{
				FIELD  BPC_XSIZE                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  BPC_YSIZE                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TBLI2;	/* CAM_BNR_BPC_TBLI2, CAM_A_BNR_BPC_TBLI2*/

typedef volatile union _CAM_REG_BNR_BPC_TH1_C_
{
		volatile struct	/* 0x1A004644 */
		{
				FIELD  BPC_C_TH_LWB                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_C_TH_Y                            : 12;		/* 12..23, 0x00FFF000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH1_C;	/* CAM_BNR_BPC_TH1_C, CAM_A_BNR_BPC_TH1_C*/

typedef volatile union _CAM_REG_BNR_BPC_TH2_C_
{
		volatile struct	/* 0x1A004648 */
		{
				FIELD  BPC_C_TH_UPB                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  1;		/* 12..12, 0x00001000 */
				FIELD  BPC_RANK_IDXB                         :  3;		/* 13..15, 0x0000E000 */
				FIELD  BPC_BLD_LWB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH2_C;	/* CAM_BNR_BPC_TH2_C, CAM_A_BNR_BPC_TH2_C*/

typedef volatile union _CAM_REG_BNR_BPC_TH3_C_
{
		volatile struct	/* 0x1A00464C */
		{
				FIELD  BPC_C_TH_XA                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  BPC_C_TH_XB                           : 12;		/* 12..23, 0x00FFF000 */
				FIELD  BPC_C_TH_SLA                          :  4;		/* 24..27, 0x0F000000 */
				FIELD  BPC_C_TH_SLB                          :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_BPC_TH3_C;	/* CAM_BNR_BPC_TH3_C, CAM_A_BNR_BPC_TH3_C*/

typedef volatile union _CAM_REG_BNR_NR1_CON_
{
		volatile struct	/* 0x1A004650 */
		{
				FIELD  rsv_0                                 :  4;		/*  0.. 3, 0x0000000F */
				FIELD  NR1_CT_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_NR1_CON;	/* CAM_BNR_NR1_CON, CAM_A_BNR_NR1_CON*/

typedef volatile union _CAM_REG_BNR_NR1_CT_CON_
{
		volatile struct	/* 0x1A004654 */
		{
				FIELD  NR1_CT_MD                             :  2;		/*  0.. 1, 0x00000003 */
				FIELD  NR1_CT_MD2                            :  2;		/*  2.. 3, 0x0000000C */
				FIELD  NR1_CT_THRD                           : 10;		/*  4..13, 0x00003FF0 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  NR1_MBND                              : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  2;		/* 26..27, 0x0C000000 */
				FIELD  NR1_CT_SLOPE                          :  2;		/* 28..29, 0x30000000 */
				FIELD  NR1_CT_DIV                            :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_NR1_CT_CON;	/* CAM_BNR_NR1_CT_CON, CAM_A_BNR_NR1_CT_CON*/

typedef volatile union _CAM_REG_BNR_RSV1_
{
		volatile struct	/* 0x1A004658 */
		{
				FIELD  RSV1                                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_RSV1;	/* CAM_BNR_RSV1, CAM_A_BNR_RSV1*/

typedef volatile union _CAM_REG_BNR_RSV2_
{
		volatile struct	/* 0x1A00465C */
		{
				FIELD  RSV2                                  : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_RSV2;	/* CAM_BNR_RSV2, CAM_A_BNR_RSV2*/

typedef volatile union _CAM_REG_BNR_PDC_CON_
{
		volatile struct	/* 0x1A004660 */
		{
				FIELD  PDC_EN                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  PDC_CT                                :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  PDC_MODE                              :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  PDC_OUT                               :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_CON;	/* CAM_BNR_PDC_CON, CAM_A_BNR_PDC_CON*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_L0_
{
		volatile struct	/* 0x1A004664 */
		{
				FIELD  PDC_GCF_L00                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L10                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_L0;	/* CAM_BNR_PDC_GAIN_L0, CAM_A_BNR_PDC_GAIN_L0*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_L1_
{
		volatile struct	/* 0x1A004668 */
		{
				FIELD  PDC_GCF_L01                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L20                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_L1;	/* CAM_BNR_PDC_GAIN_L1, CAM_A_BNR_PDC_GAIN_L1*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_L2_
{
		volatile struct	/* 0x1A00466C */
		{
				FIELD  PDC_GCF_L11                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L02                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_L2;	/* CAM_BNR_PDC_GAIN_L2, CAM_A_BNR_PDC_GAIN_L2*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_L3_
{
		volatile struct	/* 0x1A004670 */
		{
				FIELD  PDC_GCF_L30                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L21                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_L3;	/* CAM_BNR_PDC_GAIN_L3, CAM_A_BNR_PDC_GAIN_L3*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_L4_
{
		volatile struct	/* 0x1A004674 */
		{
				FIELD  PDC_GCF_L12                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_L03                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_L4;	/* CAM_BNR_PDC_GAIN_L4, CAM_A_BNR_PDC_GAIN_L4*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_R0_
{
		volatile struct	/* 0x1A004678 */
		{
				FIELD  PDC_GCF_R00                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R10                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_R0;	/* CAM_BNR_PDC_GAIN_R0, CAM_A_BNR_PDC_GAIN_R0*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_R1_
{
		volatile struct	/* 0x1A00467C */
		{
				FIELD  PDC_GCF_R01                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R20                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_R1;	/* CAM_BNR_PDC_GAIN_R1, CAM_A_BNR_PDC_GAIN_R1*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_R2_
{
		volatile struct	/* 0x1A004680 */
		{
				FIELD  PDC_GCF_R11                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R02                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_R2;	/* CAM_BNR_PDC_GAIN_R2, CAM_A_BNR_PDC_GAIN_R2*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_R3_
{
		volatile struct	/* 0x1A004684 */
		{
				FIELD  PDC_GCF_R30                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R21                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_R3;	/* CAM_BNR_PDC_GAIN_R3, CAM_A_BNR_PDC_GAIN_R3*/

typedef volatile union _CAM_REG_BNR_PDC_GAIN_R4_
{
		volatile struct	/* 0x1A004688 */
		{
				FIELD  PDC_GCF_R12                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_R03                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_GAIN_R4;	/* CAM_BNR_PDC_GAIN_R4, CAM_A_BNR_PDC_GAIN_R4*/

typedef volatile union _CAM_REG_BNR_PDC_TH_GB_
{
		volatile struct	/* 0x1A00468C */
		{
				FIELD  PDC_GTH                               : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_BTH                               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_TH_GB;	/* CAM_BNR_PDC_TH_GB, CAM_A_BNR_PDC_TH_GB*/

typedef volatile union _CAM_REG_BNR_PDC_TH_IA_
{
		volatile struct	/* 0x1A004690 */
		{
				FIELD  PDC_ITH                               : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_ATH                               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_TH_IA;	/* CAM_BNR_PDC_TH_IA, CAM_A_BNR_PDC_TH_IA*/

typedef volatile union _CAM_REG_BNR_PDC_TH_HD_
{
		volatile struct	/* 0x1A004694 */
		{
				FIELD  PDC_NTH                               : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_DTH                               : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_TH_HD;	/* CAM_BNR_PDC_TH_HD, CAM_A_BNR_PDC_TH_HD*/

typedef volatile union _CAM_REG_BNR_PDC_SL_
{
		volatile struct	/* 0x1A004698 */
		{
				FIELD  PDC_GSL                               :  4;		/*  0.. 3, 0x0000000F */
				FIELD  PDC_BSL                               :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  PDC_ISL                               :  4;		/*  8..11, 0x00000F00 */
				FIELD  PDC_ASL                               :  4;		/* 12..15, 0x0000F000 */
				FIELD  PDC_GCF_NORM                          :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_SL;	/* CAM_BNR_PDC_SL, CAM_A_BNR_PDC_SL*/

typedef volatile union _CAM_REG_BNR_PDC_POS_
{
		volatile struct	/* 0x1A00469C */
		{
				FIELD  PDC_XCENTER                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  PDC_YCENTER                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BNR_PDC_POS;	/* CAM_BNR_PDC_POS, CAM_A_BNR_PDC_POS*/

typedef volatile union _CAM_REG_SCM_CFG0_
{
		volatile struct	/* 0x1A0046B0 */
		{
				FIELD  SCM_IHDR_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SCM_ZHDR_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CAM_REG_SCM_CFG0;	/* CAM_SCM_CFG0, CAM_A_SCM_CFG0*/

typedef volatile union _CAM_REG_SCM_CFG1_
{
		volatile struct	/* 0x1A0046B4 */
		{
				FIELD  SCM_IHDR_LE_FIRST                     :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SCM_ZHDR_RLE                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SCM_ZHDR_GLE                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SCM_ZHDR_BLE                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  SCM_LIN_SEL                           :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  SCM_LE_INV_CTL                        :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SCM_CFG1;	/* CAM_SCM_CFG1, CAM_A_SCM_CFG1*/

typedef volatile union _CAM_REG_RPG_SATU_1_
{
		volatile struct	/* 0x1A0046C0 */
		{
				FIELD  RPG_SATU_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  RPG_SATU_GB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RPG_SATU_1;	/* CAM_RPG_SATU_1, CAM_A_RPG_SATU_1*/

typedef volatile union _CAM_REG_RPG_SATU_2_
{
		volatile struct	/* 0x1A0046C4 */
		{
				FIELD  RPG_SATU_GR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  RPG_SATU_R                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RPG_SATU_2;	/* CAM_RPG_SATU_2, CAM_A_RPG_SATU_2*/

typedef volatile union _CAM_REG_RPG_GAIN_1_
{
		volatile struct	/* 0x1A0046C8 */
		{
				FIELD  RPG_GAIN_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RPG_GAIN_GB                           : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RPG_GAIN_1;	/* CAM_RPG_GAIN_1, CAM_A_RPG_GAIN_1*/

typedef volatile union _CAM_REG_RPG_GAIN_2_
{
		volatile struct	/* 0x1A0046CC */
		{
				FIELD  RPG_GAIN_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  RPG_GAIN_R                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RPG_GAIN_2;	/* CAM_RPG_GAIN_2, CAM_A_RPG_GAIN_2*/

typedef volatile union _CAM_REG_RPG_OFST_1_
{
		volatile struct	/* 0x1A0046D0 */
		{
				FIELD  RPG_OFST_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  RPG_OFST_GB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RPG_OFST_1;	/* CAM_RPG_OFST_1, CAM_A_RPG_OFST_1*/

typedef volatile union _CAM_REG_RPG_OFST_2_
{
		volatile struct	/* 0x1A0046D4 */
		{
				FIELD  RPG_OFST_GR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  RPG_OFST_R                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RPG_OFST_2;	/* CAM_RPG_OFST_2, CAM_A_RPG_OFST_2*/

typedef volatile union _CAM_REG_RRZ_CTL_
{
		volatile struct	/* 0x1A0046E0 */
		{
				FIELD  RRZ_HORI_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZ_VERT_EN                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  RRZ_OUTPUT_WAIT_EN                    :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 13;		/*  3..15, 0x0000FFF8 */
				FIELD  RRZ_HORI_TBL_SEL                      :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  RRZ_VERT_TBL_SEL                      :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_CTL;	/* CAM_RRZ_CTL, CAM_A_RRZ_CTL*/

typedef volatile union _CAM_REG_RRZ_IN_IMG_
{
		volatile struct	/* 0x1A0046E4 */
		{
				FIELD  RRZ_IN_WD                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RRZ_IN_HT                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_IN_IMG;	/* CAM_RRZ_IN_IMG, CAM_A_RRZ_IN_IMG*/

typedef volatile union _CAM_REG_RRZ_OUT_IMG_
{
		volatile struct	/* 0x1A0046E8 */
		{
				FIELD  RRZ_OUT_WD                            : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RRZ_OUT_HT                            : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_OUT_IMG;	/* CAM_RRZ_OUT_IMG, CAM_A_RRZ_OUT_IMG*/

typedef volatile union _CAM_REG_RRZ_HORI_STEP_
{
		volatile struct	/* 0x1A0046EC */
		{
				FIELD  RRZ_HORI_STEP                         : 18;		/*  0..17, 0x0003FFFF */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_HORI_STEP;	/* CAM_RRZ_HORI_STEP, CAM_A_RRZ_HORI_STEP*/

typedef volatile union _CAM_REG_RRZ_VERT_STEP_
{
		volatile struct	/* 0x1A0046F0 */
		{
				FIELD  RRZ_VERT_STEP                         : 18;		/*  0..17, 0x0003FFFF */
				FIELD  rsv_18                                : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_VERT_STEP;	/* CAM_RRZ_VERT_STEP, CAM_A_RRZ_VERT_STEP*/

typedef volatile union _CAM_REG_RRZ_HORI_INT_OFST_
{
		volatile struct	/* 0x1A0046F4 */
		{
				FIELD  RRZ_HORI_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_HORI_INT_OFST;	/* CAM_RRZ_HORI_INT_OFST, CAM_A_RRZ_HORI_INT_OFST*/

typedef volatile union _CAM_REG_RRZ_HORI_SUB_OFST_
{
		volatile struct	/* 0x1A0046F8 */
		{
				FIELD  RRZ_HORI_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_HORI_SUB_OFST;	/* CAM_RRZ_HORI_SUB_OFST, CAM_A_RRZ_HORI_SUB_OFST*/

typedef volatile union _CAM_REG_RRZ_VERT_INT_OFST_
{
		volatile struct	/* 0x1A0046FC */
		{
				FIELD  RRZ_VERT_INT_OFST                     : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_VERT_INT_OFST;	/* CAM_RRZ_VERT_INT_OFST, CAM_A_RRZ_VERT_INT_OFST*/

typedef volatile union _CAM_REG_RRZ_VERT_SUB_OFST_
{
		volatile struct	/* 0x1A004700 */
		{
				FIELD  RRZ_VERT_SUB_OFST                     : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_VERT_SUB_OFST;	/* CAM_RRZ_VERT_SUB_OFST, CAM_A_RRZ_VERT_SUB_OFST*/

typedef volatile union _CAM_REG_RRZ_MODE_TH_
{
		volatile struct	/* 0x1A004704 */
		{
				FIELD  RRZ_TH_MD                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  RRZ_TH_HI                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  RRZ_TH_LO                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  RRZ_TH_MD2                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_MODE_TH;	/* CAM_RRZ_MODE_TH, CAM_A_RRZ_MODE_TH*/

typedef volatile union _CAM_REG_RRZ_MODE_CTL_
{
		volatile struct	/* 0x1A004708 */
		{
				FIELD  RRZ_PRF_BLD                           :  9;		/*  0.. 8, 0x000001FF */
				FIELD  RRZ_PRF                               :  2;		/*  9..10, 0x00000600 */
				FIELD  RRZ_BLD_SL                            :  5;		/* 11..15, 0x0000F800 */
				FIELD  RRZ_CR_MODE                           :  1;		/* 16..16, 0x00010000 */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZ_MODE_CTL;	/* CAM_RRZ_MODE_CTL, CAM_A_RRZ_MODE_CTL*/

typedef volatile union _CAM_REG_RMX_CTL_
{
		volatile struct	/* 0x1A004740 */
		{
				FIELD  RMX_SRAM_SIZE                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RMX_EDGE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  RMX_SINGLE_MODE_1                     :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  RMX_SINGLE_MODE_2                     :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  6;		/* 25..30, 0x7E000000 */
				FIELD  RMX_EDGE_SET                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMX_CTL;	/* CAM_RMX_CTL, CAM_A_RMX_CTL*/

typedef volatile union _CAM_REG_RMX_CROP_
{
		volatile struct	/* 0x1A004744 */
		{
				FIELD  RMX_STR_X                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  RMX_END_X                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMX_CROP;	/* CAM_RMX_CROP, CAM_A_RMX_CROP*/

typedef volatile union _CAM_REG_RMX_VSIZE_
{
		volatile struct	/* 0x1A004748 */
		{
				FIELD  RMX_HT                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RMX_VSIZE;	/* CAM_RMX_VSIZE, CAM_A_RMX_VSIZE*/

typedef volatile union _CAM_REG_SGG5_PGN_
{
		volatile struct	/* 0x1A004760 */
		{
				FIELD  SGG_GAIN                              : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SGG5_PGN;	/* CAM_SGG5_PGN, CAM_A_SGG5_PGN*/

typedef volatile union _CAM_REG_SGG5_GMRC_1_
{
		volatile struct	/* 0x1A004764 */
		{
				FIELD  SGG_GMR_1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SGG_GMR_4                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SGG5_GMRC_1;	/* CAM_SGG5_GMRC_1, CAM_A_SGG5_GMRC_1*/

typedef volatile union _CAM_REG_SGG5_GMRC_2_
{
		volatile struct	/* 0x1A004768 */
		{
				FIELD  SGG_GMR_5                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_6                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_7                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SGG5_GMRC_2;	/* CAM_SGG5_GMRC_2, CAM_A_SGG5_GMRC_2*/

typedef volatile union _CAM_REG_BMX_CTL_
{
		volatile struct	/* 0x1A004780 */
		{
				FIELD  BMX_SRAM_SIZE                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BMX_EDGE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  BMX_SINGLE_MODE_1                     :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  BMX_SINGLE_MODE_2                     :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  6;		/* 25..30, 0x7E000000 */
				FIELD  BMX_EDGE_SET                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BMX_CTL;	/* CAM_BMX_CTL, CAM_A_BMX_CTL*/

typedef volatile union _CAM_REG_BMX_CROP_
{
		volatile struct	/* 0x1A004784 */
		{
				FIELD  BMX_STR_X                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BMX_END_X                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BMX_CROP;	/* CAM_BMX_CROP, CAM_A_BMX_CROP*/

typedef volatile union _CAM_REG_BMX_VSIZE_
{
		volatile struct	/* 0x1A004788 */
		{
				FIELD  BMX_HT                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BMX_VSIZE;	/* CAM_BMX_VSIZE, CAM_A_BMX_VSIZE*/

typedef volatile union _CAM_REG_UFE_CON_
{
		volatile struct	/* 0x1A0047C0 */
		{
				FIELD  UFE_FORCE_PCM                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  UFE_TCCT_BYP                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFE_CON;	/* CAM_UFE_CON, CAM_A_UFE_CON*/

typedef volatile union _CAM_REG_LSC_CTL1_
{
		volatile struct	/* 0x1A0047D0 */
		{
				FIELD  SDBLK_YOFST                           :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 : 10;		/*  6..15, 0x0000FFC0 */
				FIELD  SDBLK_XOFST                           :  6;		/* 16..21, 0x003F0000 */
				FIELD  LSC_EXTEND_COEF_MODE                  :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  SD_COEFRD_MODE                        :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  SD_ULTRA_MODE                         :  1;		/* 28..28, 0x10000000 */
				FIELD  LSC_PRC_MODE                          :  1;		/* 29..29, 0x20000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_CTL1;	/* CAM_LSC_CTL1, CAM_A_LSC_CTL1*/

typedef volatile union _CAM_REG_LSC_CTL2_
{
		volatile struct	/* 0x1A0047D4 */
		{
				FIELD  LSC_SDBLK_WIDTH                       : 13;		/*  0..12, 0x00001FFF */
				FIELD  LSC_SDBLK_XNUM                        :  5;		/* 13..17, 0x0003E000 */
				FIELD  LSC_OFLN                              :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_CTL2;	/* CAM_LSC_CTL2, CAM_A_LSC_CTL2*/

typedef volatile union _CAM_REG_LSC_CTL3_
{
		volatile struct	/* 0x1A0047D8 */
		{
				FIELD  LSC_SDBLK_HEIGHT                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  LSC_SDBLK_YNUM                        :  5;		/* 13..17, 0x0003E000 */
				FIELD  LSC_SPARE                             : 14;		/* 18..31, 0xFFFC0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_CTL3;	/* CAM_LSC_CTL3, CAM_A_LSC_CTL3*/

typedef volatile union _CAM_REG_LSC_LBLOCK_
{
		volatile struct	/* 0x1A0047DC */
		{
				FIELD  LSC_SDBLK_lHEIGHT                     : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LSC_SDBLK_lWIDTH                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_LBLOCK;	/* CAM_LSC_LBLOCK, CAM_A_LSC_LBLOCK*/

typedef volatile union _CAM_REG_LSC_RATIO_0_
{
		volatile struct	/* 0x1A0047E0 */
		{
				FIELD  LSC_RA03                              :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  LSC_RA02                              :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LSC_RA01                              :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  LSC_RA00                              :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_RATIO_0;	/* CAM_LSC_RATIO_0, CAM_A_LSC_RATIO_0*/

typedef volatile union _CAM_REG_LSC_TPIPE_OFST_
{
		volatile struct	/* 0x1A0047E4 */
		{
				FIELD  LSC_TPIPE_OFST_Y                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LSC_TPIPE_OFST_X                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_TPIPE_OFST;	/* CAM_LSC_TPIPE_OFST, CAM_A_LSC_TPIPE_OFST*/

typedef volatile union _CAM_REG_LSC_TPIPE_SIZE_
{
		volatile struct	/* 0x1A0047E8 */
		{
				FIELD  LSC_TPIPE_SIZE_Y                      : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LSC_TPIPE_SIZE_X                      : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_TPIPE_SIZE;	/* CAM_LSC_TPIPE_SIZE, CAM_A_LSC_TPIPE_SIZE*/

typedef volatile union _CAM_REG_LSC_GAIN_TH_
{
		volatile struct	/* 0x1A0047EC */
		{
				FIELD  LSC_GAIN_TH2                          :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  1;		/*  9.. 9, 0x00000200 */
				FIELD  LSC_GAIN_TH1                          :  9;		/* 10..18, 0x0007FC00 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  LSC_GAIN_TH0                          :  9;		/* 20..28, 0x1FF00000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_GAIN_TH;	/* CAM_LSC_GAIN_TH, CAM_A_LSC_GAIN_TH*/

typedef volatile union _CAM_REG_LSC_RATIO_1_
{
		volatile struct	/* 0x1A0047F0 */
		{
				FIELD  LSC_RA13                              :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  LSC_RA12                              :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LSC_RA11                              :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  LSC_RA10                              :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LSC_RATIO_1;	/* CAM_LSC_RATIO_1, CAM_A_LSC_RATIO_1*/

typedef volatile union _CAM_REG_AF_CON_
{
		volatile struct	/* 0x1A004800 */
		{
				FIELD  AF_BLF_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  3;		/*  1.. 3, 0x0000000E */
				FIELD  AF_BLF_D_LVL                          :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AF_BLF_R_LVL                          :  4;		/*  8..11, 0x00000F00 */
				FIELD  AF_BLF_VFIR_MUX                       :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  AF_H_GONLY                            :  1;		/* 16..16, 0x00010000 */
				FIELD  AF_V_GONLY                            :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  AF_V_AVG_LVL                          :  2;		/* 20..21, 0x00300000 */
				FIELD  AF_EXT_STAT_EN                        :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  5;		/* 23..27, 0x0F800000 */
				FIELD  RESERVED                              :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_CON;	/* CAM_AF_CON, CAM_A_AF_CON*/

typedef volatile union _CAM_REG_AF_TH_0_
{
		volatile struct	/* 0x1A004804 */
		{
				FIELD  AF_H_TH_0                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_H_TH_1                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_TH_0;	/* CAM_AF_TH_0, CAM_A_AF_TH_0*/

typedef volatile union _CAM_REG_AF_TH_1_
{
		volatile struct	/* 0x1A004808 */
		{
				FIELD  AF_V_TH                               :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_R_SAT_TH                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_G_SAT_TH                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_B_SAT_TH                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_TH_1;	/* CAM_AF_TH_1, CAM_A_AF_TH_1*/

typedef volatile union _CAM_REG_AF_FLT_1_
{
		volatile struct	/* 0x1A00480C */
		{
				FIELD  AF_HFLT0_P1                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT0_P2                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT0_P3                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT0_P4                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_1;	/* CAM_AF_FLT_1, CAM_A_AF_FLT_1*/

typedef volatile union _CAM_REG_AF_FLT_2_
{
		volatile struct	/* 0x1A004810 */
		{
				FIELD  AF_HFLT0_P5                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT0_P6                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT0_P7                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT0_P8                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_2;	/* CAM_AF_FLT_2, CAM_A_AF_FLT_2*/

typedef volatile union _CAM_REG_AF_FLT_3_
{
		volatile struct	/* 0x1A004814 */
		{
				FIELD  AF_HFLT0_P9                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT0_P10                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT0_P11                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT0_P12                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_3;	/* CAM_AF_FLT_3, CAM_A_AF_FLT_3*/

typedef volatile union _CAM_REG_AF_FLT_4_
{
		volatile struct	/* 0x1A004818 */
		{
				FIELD  AF_HFLT1_P1                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT1_P2                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT1_P3                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT1_P4                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_4;	/* CAM_AF_FLT_4, CAM_A_AF_FLT_4*/

typedef volatile union _CAM_REG_AF_FLT_5_
{
		volatile struct	/* 0x1A00481C */
		{
				FIELD  AF_HFLT1_P5                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT1_P6                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT1_P7                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT1_P8                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_5;	/* CAM_AF_FLT_5, CAM_A_AF_FLT_5*/

typedef volatile union _CAM_REG_AF_FLT_6_
{
		volatile struct	/* 0x1A004820 */
		{
				FIELD  AF_HFLT1_P9                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT1_P10                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT1_P11                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT1_P12                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_6;	/* CAM_AF_FLT_6, CAM_A_AF_FLT_6*/

typedef volatile union _CAM_REG_AF_FLT_7_
{
		volatile struct	/* 0x1A004824 */
		{
				FIELD  AF_VFLT_X0                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AF_VFLT_X1                            : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_7;	/* CAM_AF_FLT_7, CAM_A_AF_FLT_7*/

typedef volatile union _CAM_REG_AF_FLT_8_
{
		volatile struct	/* 0x1A004828 */
		{
				FIELD  AF_VFLT_X2                            : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AF_VFLT_X3                            : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_FLT_8;	/* CAM_AF_FLT_8, CAM_A_AF_FLT_8*/

typedef volatile union _CAM_REG_AF_SIZE_
{
		volatile struct	/* 0x1A004830 */
		{
				FIELD  AF_IMAGE_WD                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_SIZE;	/* CAM_AF_SIZE, CAM_A_AF_SIZE*/

typedef volatile union _CAM_REG_AF_VLD_
{
		volatile struct	/* 0x1A004834 */
		{
				FIELD  AF_VLD_XSTART                         : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AF_VLD_YSTART                         : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_VLD;	/* CAM_AF_VLD, CAM_A_AF_VLD*/

typedef volatile union _CAM_REG_AF_BLK_0_
{
		volatile struct	/* 0x1A004838 */
		{
				FIELD  AF_BLK_XSIZE                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_BLK_YSIZE                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_BLK_0;	/* CAM_AF_BLK_0, CAM_A_AF_BLK_0*/

typedef volatile union _CAM_REG_AF_BLK_1_
{
		volatile struct	/* 0x1A00483C */
		{
				FIELD  AF_BLK_XNUM                           :  9;		/*  0.. 8, 0x000001FF */
				FIELD  rsv_9                                 :  7;		/*  9..15, 0x0000FE00 */
				FIELD  AF_BLK_YNUM                           :  9;		/* 16..24, 0x01FF0000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_BLK_1;	/* CAM_AF_BLK_1, CAM_A_AF_BLK_1*/

typedef volatile union _CAM_REG_AF_TH_2_
{
		volatile struct	/* 0x1A004840 */
		{
				FIELD  AF_HFLT2_SAT_TH0                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AF_HFLT2_SAT_TH1                      :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AF_HFLT2_SAT_TH2                      :  8;		/* 16..23, 0x00FF0000 */
				FIELD  AF_HFLT2_SAT_TH3                      :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AF_TH_2;	/* CAM_AF_TH_2, CAM_A_AF_TH_2*/

typedef volatile union _CAM_REG_LCS25_CON_
{
		volatile struct	/* 0x1A004880 */
		{
				FIELD  LCS25_LOG                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  7;		/*  1.. 7, 0x000000FE */
				FIELD  LCS25_OUT_WD                          :  9;		/*  8..16, 0x0001FF00 */
				FIELD  rsv_17                                :  3;		/* 17..19, 0x000E0000 */
				FIELD  LCS25_OUT_HT                          :  9;		/* 20..28, 0x1FF00000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_CON;	/* CAM_LCS25_CON, CAM_A_LCS25_CON*/

typedef volatile union _CAM_REG_LCS25_ST_
{
		volatile struct	/* 0x1A004884 */
		{
				FIELD  LCS25_START_J                         : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_START_I                         : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_ST;	/* CAM_LCS25_ST, CAM_A_LCS25_ST*/

typedef volatile union _CAM_REG_LCS25_AWS_
{
		volatile struct	/* 0x1A004888 */
		{
				FIELD  LCS25_IN_WD                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_IN_HT                           : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_AWS;	/* CAM_LCS25_AWS, CAM_A_LCS25_AWS*/

typedef volatile union _CAM_REG_LCS25_FLR_
{
		volatile struct	/* 0x1A00488C */
		{
				FIELD  LCS25_FLR_OFST                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  LCS25_FLR_GAIN                        : 12;		/*  8..19, 0x000FFF00 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_FLR;	/* CAM_LCS25_FLR, CAM_A_LCS25_FLR*/

typedef volatile union _CAM_REG_LCS25_LRZR_1_
{
		volatile struct	/* 0x1A004890 */
		{
				FIELD  LCS25_LRZR_X                          : 20;		/*  0..19, 0x000FFFFF */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_LRZR_1;	/* CAM_LCS25_LRZR_1, CAM_A_LCS25_LRZR_1*/

typedef volatile union _CAM_REG_LCS25_LRZR_2_
{
		volatile struct	/* 0x1A004894 */
		{
				FIELD  LCS25_LRZR_Y                          : 20;		/*  0..19, 0x000FFFFF */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_LRZR_2;	/* CAM_LCS25_LRZR_2, CAM_A_LCS25_LRZR_2*/

typedef volatile union _CAM_REG_LCS25_SATU_1_
{
		volatile struct	/* 0x1A004898 */
		{
				FIELD  LCS25_SATU_B                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  LCS25_SATU_GB                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_SATU_1;	/* CAM_LCS25_SATU_1, CAM_A_LCS25_SATU_1*/

typedef volatile union _CAM_REG_LCS25_SATU_2_
{
		volatile struct	/* 0x1A00489C */
		{
				FIELD  LCS25_SATU_GR                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  LCS25_SATU_R                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_SATU_2;	/* CAM_LCS25_SATU_2, CAM_A_LCS25_SATU_2*/

typedef volatile union _CAM_REG_LCS25_GAIN_1_
{
		volatile struct	/* 0x1A0048A0 */
		{
				FIELD  LCS25_GAIN_B                          : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_GAIN_GB                         : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_GAIN_1;	/* CAM_LCS25_GAIN_1, CAM_A_LCS25_GAIN_1*/

typedef volatile union _CAM_REG_LCS25_GAIN_2_
{
		volatile struct	/* 0x1A0048A4 */
		{
				FIELD  LCS25_GAIN_GR                         : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_GAIN_R                          : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_GAIN_2;	/* CAM_LCS25_GAIN_2, CAM_A_LCS25_GAIN_2*/

typedef volatile union _CAM_REG_LCS25_OFST_1_
{
		volatile struct	/* 0x1A0048A8 */
		{
				FIELD  LCS25_OFST_B                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  LCS25_OFST_GB                         : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_OFST_1;	/* CAM_LCS25_OFST_1, CAM_A_LCS25_OFST_1*/

typedef volatile union _CAM_REG_LCS25_OFST_2_
{
		volatile struct	/* 0x1A0048AC */
		{
				FIELD  LCS25_OFST_GR                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  LCS25_OFST_R                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_OFST_2;	/* CAM_LCS25_OFST_2, CAM_A_LCS25_OFST_2*/

typedef volatile union _CAM_REG_LCS25_G2G_CNV_1_
{
		volatile struct	/* 0x1A0048B0 */
		{
				FIELD  LCS25_G2G_CNV_00                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_G2G_CNV_01                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_G2G_CNV_1;	/* CAM_LCS25_G2G_CNV_1, CAM_A_LCS25_G2G_CNV_1*/

typedef volatile union _CAM_REG_LCS25_G2G_CNV_2_
{
		volatile struct	/* 0x1A0048B4 */
		{
				FIELD  LCS25_G2G_CNV_02                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_G2G_CNV_10                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_G2G_CNV_2;	/* CAM_LCS25_G2G_CNV_2, CAM_A_LCS25_G2G_CNV_2*/

typedef volatile union _CAM_REG_LCS25_G2G_CNV_3_
{
		volatile struct	/* 0x1A0048B8 */
		{
				FIELD  LCS25_G2G_CNV_11                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_G2G_CNV_12                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_G2G_CNV_3;	/* CAM_LCS25_G2G_CNV_3, CAM_A_LCS25_G2G_CNV_3*/

typedef volatile union _CAM_REG_LCS25_G2G_CNV_4_
{
		volatile struct	/* 0x1A0048BC */
		{
				FIELD  LCS25_G2G_CNV_20                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_G2G_CNV_21                      : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_G2G_CNV_4;	/* CAM_LCS25_G2G_CNV_4, CAM_A_LCS25_G2G_CNV_4*/

typedef volatile union _CAM_REG_LCS25_G2G_CNV_5_
{
		volatile struct	/* 0x1A0048C0 */
		{
				FIELD  LCS25_G2G_CNV_22                      : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  LCS25_G2G_ACC                         :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_G2G_CNV_5;	/* CAM_LCS25_G2G_CNV_5, CAM_A_LCS25_G2G_CNV_5*/

typedef volatile union _CAM_REG_LCS25_LPF_
{
		volatile struct	/* 0x1A0048C4 */
		{
				FIELD  LCS25_LPF_EN                          :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 15;		/*  1..15, 0x0000FFFE */
				FIELD  LCS25_LPF_TH                          : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCS25_LPF;	/* CAM_LCS25_LPF, CAM_A_LCS25_LPF*/

typedef volatile union _CAM_REG_RCP_CROP_CON1_
{
		volatile struct	/* 0x1A0048F0 */
		{
				FIELD  RCP_STR_X                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  RCP_END_X                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RCP_CROP_CON1;	/* CAM_RCP_CROP_CON1, CAM_A_RCP_CROP_CON1*/

typedef volatile union _CAM_REG_RCP_CROP_CON2_
{
		volatile struct	/* 0x1A0048F4 */
		{
				FIELD  RCP_STR_Y                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  RCP_END_Y                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RCP_CROP_CON2;	/* CAM_RCP_CROP_CON2, CAM_A_RCP_CROP_CON2*/

typedef volatile union _CAM_REG_SGG1_PGN_
{
		volatile struct	/* 0x1A004900 */
		{
				FIELD  SGG_GAIN                              : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                : 21;		/* 11..31, 0xFFFFF800 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SGG1_PGN;	/* CAM_SGG1_PGN, CAM_A_SGG1_PGN*/

typedef volatile union _CAM_REG_SGG1_GMRC_1_
{
		volatile struct	/* 0x1A004904 */
		{
				FIELD  SGG_GMR_1                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_2                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_3                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SGG_GMR_4                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SGG1_GMRC_1;	/* CAM_SGG1_GMRC_1, CAM_A_SGG1_GMRC_1*/

typedef volatile union _CAM_REG_SGG1_GMRC_2_
{
		volatile struct	/* 0x1A004908 */
		{
				FIELD  SGG_GMR_5                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SGG_GMR_6                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SGG_GMR_7                             :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SGG1_GMRC_2;	/* CAM_SGG1_GMRC_2, CAM_A_SGG1_GMRC_2*/

typedef volatile union _CAM_REG_QBN2_MODE_
{
		volatile struct	/* 0x1A004910 */
		{
				FIELD  QBN_ACC                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  QBN_ACC_MODE                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_QBN2_MODE;	/* CAM_QBN2_MODE, CAM_A_QBN2_MODE*/

typedef volatile union _CAM_REG_AWB_WIN_ORG_
{
		volatile struct	/* 0x1A004920 */
		{
				FIELD  AWB_W_HORG                            : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_W_VORG                            : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_WIN_ORG;	/* CAM_AWB_WIN_ORG, CAM_A_AWB_WIN_ORG*/

typedef volatile union _CAM_REG_AWB_WIN_SIZE_
{
		volatile struct	/* 0x1A004924 */
		{
				FIELD  AWB_W_HSIZE                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_W_VSIZE                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_WIN_SIZE;	/* CAM_AWB_WIN_SIZE, CAM_A_AWB_WIN_SIZE*/

typedef volatile union _CAM_REG_AWB_WIN_PIT_
{
		volatile struct	/* 0x1A004928 */
		{
				FIELD  AWB_W_HPIT                            : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_W_VPIT                            : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_WIN_PIT;	/* CAM_AWB_WIN_PIT, CAM_A_AWB_WIN_PIT*/

typedef volatile union _CAM_REG_AWB_WIN_NUM_
{
		volatile struct	/* 0x1A00492C */
		{
				FIELD  AWB_W_HNUM                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AWB_W_VNUM                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_WIN_NUM;	/* CAM_AWB_WIN_NUM, CAM_A_AWB_WIN_NUM*/

typedef volatile union _CAM_REG_AWB_GAIN1_0_
{
		volatile struct	/* 0x1A004930 */
		{
				FIELD  AWB_GAIN1_R                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  AWB_GAIN1_G                           : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_GAIN1_0;	/* CAM_AWB_GAIN1_0, CAM_A_AWB_GAIN1_0*/

typedef volatile union _CAM_REG_AWB_GAIN1_1_
{
		volatile struct	/* 0x1A004934 */
		{
				FIELD  AWB_GAIN1_B                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_GAIN1_1;	/* CAM_AWB_GAIN1_1, CAM_A_AWB_GAIN1_1*/

typedef volatile union _CAM_REG_AWB_LMT1_0_
{
		volatile struct	/* 0x1A004938 */
		{
				FIELD  AWB_LMT1_R                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_LMT1_G                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_LMT1_0;	/* CAM_AWB_LMT1_0, CAM_A_AWB_LMT1_0*/

typedef volatile union _CAM_REG_AWB_LMT1_1_
{
		volatile struct	/* 0x1A00493C */
		{
				FIELD  AWB_LMT1_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_LMT1_1;	/* CAM_AWB_LMT1_1, CAM_A_AWB_LMT1_1*/

typedef volatile union _CAM_REG_AWB_LOW_THR_
{
		volatile struct	/* 0x1A004940 */
		{
				FIELD  AWB_LOW_THR0                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AWB_LOW_THR1                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AWB_LOW_THR2                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_LOW_THR;	/* CAM_AWB_LOW_THR, CAM_A_AWB_LOW_THR*/

typedef volatile union _CAM_REG_AWB_HI_THR_
{
		volatile struct	/* 0x1A004944 */
		{
				FIELD  AWB_HI_THR0                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AWB_HI_THR1                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AWB_HI_THR2                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_HI_THR;	/* CAM_AWB_HI_THR, CAM_A_AWB_HI_THR*/

typedef volatile union _CAM_REG_AWB_PIXEL_CNT0_
{
		volatile struct	/* 0x1A004948 */
		{
				FIELD  AWB_PIXEL_CNT0                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_PIXEL_CNT0;	/* CAM_AWB_PIXEL_CNT0, CAM_A_AWB_PIXEL_CNT0*/

typedef volatile union _CAM_REG_AWB_PIXEL_CNT1_
{
		volatile struct	/* 0x1A00494C */
		{
				FIELD  AWB_PIXEL_CNT1                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_PIXEL_CNT1;	/* CAM_AWB_PIXEL_CNT1, CAM_A_AWB_PIXEL_CNT1*/

typedef volatile union _CAM_REG_AWB_PIXEL_CNT2_
{
		volatile struct	/* 0x1A004950 */
		{
				FIELD  AWB_PIXEL_CNT2                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_PIXEL_CNT2;	/* CAM_AWB_PIXEL_CNT2, CAM_A_AWB_PIXEL_CNT2*/

typedef volatile union _CAM_REG_AWB_ERR_THR_
{
		volatile struct	/* 0x1A004954 */
		{
				FIELD  AWB_ERR_THR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_ERR_SFT                           :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_ERR_THR;	/* CAM_AWB_ERR_THR, CAM_A_AWB_ERR_THR*/

typedef volatile union _CAM_REG_AWB_ROT_
{
		volatile struct	/* 0x1A004958 */
		{
				FIELD  AWB_C                                 : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  AWB_S                                 : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_ROT;	/* CAM_AWB_ROT, CAM_A_AWB_ROT*/

typedef volatile union _CAM_REG_AWB_L0_X_
{
		volatile struct	/* 0x1A00495C */
		{
				FIELD  AWB_L0_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L0_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L0_X;	/* CAM_AWB_L0_X, CAM_A_AWB_L0_X*/

typedef volatile union _CAM_REG_AWB_L0_Y_
{
		volatile struct	/* 0x1A004960 */
		{
				FIELD  AWB_L0_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L0_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L0_Y;	/* CAM_AWB_L0_Y, CAM_A_AWB_L0_Y*/

typedef volatile union _CAM_REG_AWB_L1_X_
{
		volatile struct	/* 0x1A004964 */
		{
				FIELD  AWB_L1_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L1_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L1_X;	/* CAM_AWB_L1_X, CAM_A_AWB_L1_X*/

typedef volatile union _CAM_REG_AWB_L1_Y_
{
		volatile struct	/* 0x1A004968 */
		{
				FIELD  AWB_L1_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L1_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L1_Y;	/* CAM_AWB_L1_Y, CAM_A_AWB_L1_Y*/

typedef volatile union _CAM_REG_AWB_L2_X_
{
		volatile struct	/* 0x1A00496C */
		{
				FIELD  AWB_L2_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L2_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L2_X;	/* CAM_AWB_L2_X, CAM_A_AWB_L2_X*/

typedef volatile union _CAM_REG_AWB_L2_Y_
{
		volatile struct	/* 0x1A004970 */
		{
				FIELD  AWB_L2_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L2_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L2_Y;	/* CAM_AWB_L2_Y, CAM_A_AWB_L2_Y*/

typedef volatile union _CAM_REG_AWB_L3_X_
{
		volatile struct	/* 0x1A004974 */
		{
				FIELD  AWB_L3_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L3_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L3_X;	/* CAM_AWB_L3_X, CAM_A_AWB_L3_X*/

typedef volatile union _CAM_REG_AWB_L3_Y_
{
		volatile struct	/* 0x1A004978 */
		{
				FIELD  AWB_L3_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L3_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L3_Y;	/* CAM_AWB_L3_Y, CAM_A_AWB_L3_Y*/

typedef volatile union _CAM_REG_AWB_L4_X_
{
		volatile struct	/* 0x1A00497C */
		{
				FIELD  AWB_L4_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L4_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L4_X;	/* CAM_AWB_L4_X, CAM_A_AWB_L4_X*/

typedef volatile union _CAM_REG_AWB_L4_Y_
{
		volatile struct	/* 0x1A004980 */
		{
				FIELD  AWB_L4_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L4_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L4_Y;	/* CAM_AWB_L4_Y, CAM_A_AWB_L4_Y*/

typedef volatile union _CAM_REG_AWB_L5_X_
{
		volatile struct	/* 0x1A004984 */
		{
				FIELD  AWB_L5_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L5_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L5_X;	/* CAM_AWB_L5_X, CAM_A_AWB_L5_X*/

typedef volatile union _CAM_REG_AWB_L5_Y_
{
		volatile struct	/* 0x1A004988 */
		{
				FIELD  AWB_L5_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L5_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L5_Y;	/* CAM_AWB_L5_Y, CAM_A_AWB_L5_Y*/

typedef volatile union _CAM_REG_AWB_L6_X_
{
		volatile struct	/* 0x1A00498C */
		{
				FIELD  AWB_L6_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L6_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L6_X;	/* CAM_AWB_L6_X, CAM_A_AWB_L6_X*/

typedef volatile union _CAM_REG_AWB_L6_Y_
{
		volatile struct	/* 0x1A004990 */
		{
				FIELD  AWB_L6_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L6_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L6_Y;	/* CAM_AWB_L6_Y, CAM_A_AWB_L6_Y*/

typedef volatile union _CAM_REG_AWB_L7_X_
{
		volatile struct	/* 0x1A004994 */
		{
				FIELD  AWB_L7_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L7_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L7_X;	/* CAM_AWB_L7_X, CAM_A_AWB_L7_X*/

typedef volatile union _CAM_REG_AWB_L7_Y_
{
		volatile struct	/* 0x1A004998 */
		{
				FIELD  AWB_L7_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L7_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L7_Y;	/* CAM_AWB_L7_Y, CAM_A_AWB_L7_Y*/

typedef volatile union _CAM_REG_AWB_L8_X_
{
		volatile struct	/* 0x1A00499C */
		{
				FIELD  AWB_L8_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L8_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L8_X;	/* CAM_AWB_L8_X, CAM_A_AWB_L8_X*/

typedef volatile union _CAM_REG_AWB_L8_Y_
{
		volatile struct	/* 0x1A0049A0 */
		{
				FIELD  AWB_L8_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L8_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L8_Y;	/* CAM_AWB_L8_Y, CAM_A_AWB_L8_Y*/

typedef volatile union _CAM_REG_AWB_L9_X_
{
		volatile struct	/* 0x1A0049A4 */
		{
				FIELD  AWB_L9_X_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L9_X_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L9_X;	/* CAM_AWB_L9_X, CAM_A_AWB_L9_X*/

typedef volatile union _CAM_REG_AWB_L9_Y_
{
		volatile struct	/* 0x1A0049A8 */
		{
				FIELD  AWB_L9_Y_LOW                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_L9_Y_UP                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_L9_Y;	/* CAM_AWB_L9_Y, CAM_A_AWB_L9_Y*/

typedef volatile union _CAM_REG_AWB_SPARE_
{
		volatile struct	/* 0x1A0049AC */
		{
				FIELD  AWB_SPARE                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_SPARE;	/* CAM_AWB_SPARE, CAM_A_AWB_SPARE*/

typedef volatile union _CAM_REG_AWB_MOTION_THR_
{
		volatile struct	/* 0x1A0049B0 */
		{
				FIELD  AWB_MOTION_THR                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                : 18;		/* 14..31, 0xFFFFC000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_MOTION_THR;	/* CAM_AWB_MOTION_THR, CAM_A_AWB_MOTION_THR*/

typedef volatile union _CAM_REG_AWB_RC_CNV_0_
{
		volatile struct	/* 0x1A0049B4 */
		{
				FIELD  AWB_RC_CNV00                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_RC_CNV01                          : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_RC_CNV_0;	/* CAM_AWB_RC_CNV_0, CAM_A_AWB_RC_CNV_0*/

typedef volatile union _CAM_REG_AWB_RC_CNV_1_
{
		volatile struct	/* 0x1A0049B8 */
		{
				FIELD  AWB_RC_CNV02                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_RC_CNV10                          : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_RC_CNV_1;	/* CAM_AWB_RC_CNV_1, CAM_A_AWB_RC_CNV_1*/

typedef volatile union _CAM_REG_AWB_RC_CNV_2_
{
		volatile struct	/* 0x1A0049BC */
		{
				FIELD  AWB_RC_CNV11                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_RC_CNV12                          : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_RC_CNV_2;	/* CAM_AWB_RC_CNV_2, CAM_A_AWB_RC_CNV_2*/

typedef volatile union _CAM_REG_AWB_RC_CNV_3_
{
		volatile struct	/* 0x1A0049C0 */
		{
				FIELD  AWB_RC_CNV20                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_RC_CNV21                          : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_RC_CNV_3;	/* CAM_AWB_RC_CNV_3, CAM_A_AWB_RC_CNV_3*/

typedef volatile union _CAM_REG_AWB_RC_CNV_4_
{
		volatile struct	/* 0x1A0049C4 */
		{
				FIELD  AWB_RC_CNV22                          : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AWB_RC_ACC                            :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AWB_RC_CNV_4;	/* CAM_AWB_RC_CNV_4, CAM_A_AWB_RC_CNV_4*/

typedef volatile union _CAM_REG_AE_HST_CTL_
{
		volatile struct	/* 0x1A0049E0 */
		{
				FIELD  AE_HST0_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  AE_HST1_EN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AE_HST2_EN                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AE_HST3_EN                            :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST_CTL;	/* CAM_AE_HST_CTL, CAM_A_AE_HST_CTL*/

typedef volatile union _CAM_REG_AE_GAIN2_0_
{
		volatile struct	/* 0x1A0049E4 */
		{
				FIELD  AE_GAIN2_R                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AE_GAIN2_G                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_GAIN2_0;	/* CAM_AE_GAIN2_0, CAM_A_AE_GAIN2_0*/

typedef volatile union _CAM_REG_AE_GAIN2_1_
{
		volatile struct	/* 0x1A0049E8 */
		{
				FIELD  AE_GAIN2_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_GAIN2_1;	/* CAM_AE_GAIN2_1, CAM_A_AE_GAIN2_1*/

typedef volatile union _CAM_REG_AE_LMT2_0_
{
		volatile struct	/* 0x1A0049EC */
		{
				FIELD  AE_LMT2_R                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AE_LMT2_G                             : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_LMT2_0;	/* CAM_AE_LMT2_0, CAM_A_AE_LMT2_0*/

typedef volatile union _CAM_REG_AE_LMT2_1_
{
		volatile struct	/* 0x1A0049F0 */
		{
				FIELD  AE_LMT2_B                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_LMT2_1;	/* CAM_AE_LMT2_1, CAM_A_AE_LMT2_1*/

typedef volatile union _CAM_REG_AE_RC_CNV_0_
{
		volatile struct	/* 0x1A0049F4 */
		{
				FIELD  AE_RC_CNV00                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AE_RC_CNV01                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_RC_CNV_0;	/* CAM_AE_RC_CNV_0, CAM_A_AE_RC_CNV_0*/

typedef volatile union _CAM_REG_AE_RC_CNV_1_
{
		volatile struct	/* 0x1A0049F8 */
		{
				FIELD  AE_RC_CNV02                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AE_RC_CNV10                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_RC_CNV_1;	/* CAM_AE_RC_CNV_1, CAM_A_AE_RC_CNV_1*/

typedef volatile union _CAM_REG_AE_RC_CNV_2_
{
		volatile struct	/* 0x1A0049FC */
		{
				FIELD  AE_RC_CNV11                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AE_RC_CNV12                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_RC_CNV_2;	/* CAM_AE_RC_CNV_2, CAM_A_AE_RC_CNV_2*/

typedef volatile union _CAM_REG_AE_RC_CNV_3_
{
		volatile struct	/* 0x1A004A00 */
		{
				FIELD  AE_RC_CNV20                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AE_RC_CNV21                           : 11;		/* 16..26, 0x07FF0000 */
				FIELD  rsv_27                                :  5;		/* 27..31, 0xF8000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_RC_CNV_3;	/* CAM_AE_RC_CNV_3, CAM_A_AE_RC_CNV_3*/

typedef volatile union _CAM_REG_AE_RC_CNV_4_
{
		volatile struct	/* 0x1A004A04 */
		{
				FIELD  AE_RC_CNV22                           : 11;		/*  0..10, 0x000007FF */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  AE_RC_ACC                             :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_RC_CNV_4;	/* CAM_AE_RC_CNV_4, CAM_A_AE_RC_CNV_4*/

typedef volatile union _CAM_REG_AE_YGAMMA_0_
{
		volatile struct	/* 0x1A004A08 */
		{
				FIELD  Y_GMR1                                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  Y_GMR2                                :  8;		/*  8..15, 0x0000FF00 */
				FIELD  Y_GMR3                                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  Y_GMR4                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_YGAMMA_0;	/* CAM_AE_YGAMMA_0, CAM_A_AE_YGAMMA_0*/

typedef volatile union _CAM_REG_AE_YGAMMA_1_
{
		volatile struct	/* 0x1A004A0C */
		{
				FIELD  Y_GMR5                                :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_YGAMMA_1;	/* CAM_AE_YGAMMA_1, CAM_A_AE_YGAMMA_1*/

typedef volatile union _CAM_REG_AE_HST_SET_
{
		volatile struct	/* 0x1A004A10 */
		{
				FIELD  AE_BIN_MODE_0                         :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  AE_BIN_MODE_1                         :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  AE_BIN_MODE_2                         :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  AE_BIN_MODE_3                         :  2;		/* 12..13, 0x00003000 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AE_COLOR_MODE_0                       :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  AE_COLOR_MODE_1                       :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  AE_COLOR_MODE_2                       :  3;		/* 24..26, 0x07000000 */
				FIELD  rsv_27                                :  1;		/* 27..27, 0x08000000 */
				FIELD  AE_COLOR_MODE_3                       :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST_SET;	/* CAM_AE_HST_SET, CAM_A_AE_HST_SET*/

typedef volatile union _CAM_REG_AE_HST0_RNG_
{
		volatile struct	/* 0x1A004A14 */
		{
				FIELD  AE_X_LOW_0                            :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AE_X_HI_0                             :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  AE_Y_LOW_0                            :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  AE_Y_HI_0                             :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST0_RNG;	/* CAM_AE_HST0_RNG, CAM_A_AE_HST0_RNG*/

typedef volatile union _CAM_REG_AE_HST1_RNG_
{
		volatile struct	/* 0x1A004A18 */
		{
				FIELD  AE_X_LOW_1                            :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AE_X_HI_1                             :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  AE_Y_LOW_1                            :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  AE_Y_HI_1                             :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST1_RNG;	/* CAM_AE_HST1_RNG, CAM_A_AE_HST1_RNG*/

typedef volatile union _CAM_REG_AE_HST2_RNG_
{
		volatile struct	/* 0x1A004A1C */
		{
				FIELD  AE_X_LOW_2                            :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AE_X_HI_2                             :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  AE_Y_LOW_2                            :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  AE_Y_HI_2                             :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST2_RNG;	/* CAM_AE_HST2_RNG, CAM_A_AE_HST2_RNG*/

typedef volatile union _CAM_REG_AE_HST3_RNG_
{
		volatile struct	/* 0x1A004A20 */
		{
				FIELD  AE_X_LOW_3                            :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  AE_X_HI_3                             :  7;		/*  8..14, 0x00007F00 */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  AE_Y_LOW_3                            :  7;		/* 16..22, 0x007F0000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  AE_Y_HI_3                             :  7;		/* 24..30, 0x7F000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST3_RNG;	/* CAM_AE_HST3_RNG, CAM_A_AE_HST3_RNG*/

typedef volatile union _CAM_REG_AE_SPARE_
{
		volatile struct	/* 0x1A004A24 */
		{
				FIELD  AE_SPARE                              : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_SPARE;	/* CAM_AE_SPARE, CAM_A_AE_SPARE*/

typedef volatile union _CAM_REG_AE_OVER_EXPO_CFG_
{
		volatile struct	/* 0x1A004A28 */
		{
				FIELD  AE_OVER_EXPO_THR                      :  8;		/*  0.. 7, 0x000000FF */
				FIELD  AE_OVER_EXPO_SFT                      :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 : 23;		/*  9..31, 0xFFFFFE00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_OVER_EXPO_CFG;	/* CAM_AE_OVER_EXPO_CFG, CAM_A_AE_OVER_EXPO_CFG*/

typedef volatile union _CAM_REG_AE_PIX_HST_CTL_
{
		volatile struct	/* 0x1A004A2C */
		{
				FIELD  AE_PIX_HST0_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  AE_PIX_HST1_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AE_PIX_HST2_EN                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AE_PIX_HST3_EN                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 : 28;		/*  4..31, 0xFFFFFFF0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST_CTL;	/* CAM_AE_PIX_HST_CTL, CAM_A_AE_PIX_HST_CTL*/

typedef volatile union _CAM_REG_AE_PIX_HST_SET_
{
		volatile struct	/* 0x1A004A30 */
		{
				FIELD  AE_PIX_BIN_MODE_0                     :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  AE_PIX_BIN_MODE_1                     :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  AE_PIX_BIN_MODE_2                     :  2;		/*  8.. 9, 0x00000300 */
				FIELD  rsv_10                                :  2;		/* 10..11, 0x00000C00 */
				FIELD  AE_PIX_BIN_MODE_3                     :  2;		/* 12..13, 0x00003000 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AE_PIX_COLOR_MODE_0                   :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  AE_PIX_COLOR_MODE_1                   :  3;		/* 20..22, 0x00700000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  AE_PIX_COLOR_MODE_2                   :  3;		/* 24..26, 0x07000000 */
				FIELD  rsv_27                                :  1;		/* 27..27, 0x08000000 */
				FIELD  AE_PIX_COLOR_MODE_3                   :  3;		/* 28..30, 0x70000000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST_SET;	/* CAM_AE_PIX_HST_SET, CAM_A_AE_PIX_HST_SET*/

typedef volatile union _CAM_REG_AE_PIX_HST0_YRNG_
{
		volatile struct	/* 0x1A004A34 */
		{
				FIELD  AE_PIX_Y_LOW_0                        : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AE_PIX_Y_HI_0                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST0_YRNG;	/* CAM_AE_PIX_HST0_YRNG, CAM_A_AE_PIX_HST0_YRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST0_XRNG_
{
		volatile struct	/* 0x1A004A38 */
		{
				FIELD  AE_PIX_X_LOW_0                        : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  AE_PIX_X_HI_0                         : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST0_XRNG;	/* CAM_AE_PIX_HST0_XRNG, CAM_A_AE_PIX_HST0_XRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST1_YRNG_
{
		volatile struct	/* 0x1A004A3C */
		{
				FIELD  AE_PIX_Y_LOW_1                        : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AE_PIX_Y_HI_1                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST1_YRNG;	/* CAM_AE_PIX_HST1_YRNG, CAM_A_AE_PIX_HST1_YRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST1_XRNG_
{
		volatile struct	/* 0x1A004A40 */
		{
				FIELD  AE_PIX_X_LOW_1                        : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  AE_PIX_X_HI_1                         : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST1_XRNG;	/* CAM_AE_PIX_HST1_XRNG, CAM_A_AE_PIX_HST1_XRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST2_YRNG_
{
		volatile struct	/* 0x1A004A44 */
		{
				FIELD  AE_PIX_Y_LOW_2                        : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AE_PIX_Y_HI_2                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST2_YRNG;	/* CAM_AE_PIX_HST2_YRNG, CAM_A_AE_PIX_HST2_YRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST2_XRNG_
{
		volatile struct	/* 0x1A004A48 */
		{
				FIELD  AE_PIX_X_LOW_2                        : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  AE_PIX_X_HI_2                         : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST2_XRNG;	/* CAM_AE_PIX_HST2_XRNG, CAM_A_AE_PIX_HST2_XRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST3_YRNG_
{
		volatile struct	/* 0x1A004A4C */
		{
				FIELD  AE_PIX_Y_LOW_3                        : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  AE_PIX_Y_HI_3                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST3_YRNG;	/* CAM_AE_PIX_HST3_YRNG, CAM_A_AE_PIX_HST3_YRNG*/

typedef volatile union _CAM_REG_AE_PIX_HST3_XRNG_
{
		volatile struct	/* 0x1A004A50 */
		{
				FIELD  AE_PIX_X_LOW_3                        : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  AE_PIX_X_HI_3                         : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_PIX_HST3_XRNG;	/* CAM_AE_PIX_HST3_XRNG, CAM_A_AE_PIX_HST3_XRNG*/

typedef volatile union _CAM_REG_AE_HST_SEL_
{
		volatile struct	/* 0x1A004A54 */
		{
				FIELD  AE_HST_SEL                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_HST_SEL;	/* CAM_AE_HST_SEL, CAM_A_AE_HST_SEL*/

typedef volatile union _CAM_REG_AE_STAT_EN_
{
		volatile struct	/* 0x1A004A58 */
		{
				FIELD  AE_TSF_STAT_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  AE_OVERCNT_EN                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AE_HDR_STAT_EN                        :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_STAT_EN;	/* CAM_AE_STAT_EN, CAM_A_AE_STAT_EN*/

typedef volatile union _CAM_REG_AE_YCOEF_
{
		volatile struct	/* 0x1A004A5C */
		{
				FIELD  AE_YCOEF_R                            :  4;		/*  0.. 3, 0x0000000F */
				FIELD  AE_YCOEF_G                            :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  AE_YCOEF_B                            :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AE_YCOEF;	/* CAM_AE_YCOEF, CAM_A_AE_YCOEF*/

typedef volatile union _CAM_REG_QBN1_MODE_
{
		volatile struct	/* 0x1A004AC0 */
		{
				FIELD  QBN_ACC                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  QBN_ACC_MODE                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_QBN1_MODE;	/* CAM_QBN1_MODE, CAM_A_QBN1_MODE*/

typedef volatile union _CAM_REG_CPG_SATU_1_
{
		volatile struct	/* 0x1A004AD0 */
		{
				FIELD  CPG_SATU_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CPG_SATU_GB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CPG_SATU_1;	/* CAM_CPG_SATU_1, CAM_A_CPG_SATU_1*/

typedef volatile union _CAM_REG_CPG_SATU_2_
{
		volatile struct	/* 0x1A004AD4 */
		{
				FIELD  CPG_SATU_GR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CPG_SATU_R                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CPG_SATU_2;	/* CAM_CPG_SATU_2, CAM_A_CPG_SATU_2*/

typedef volatile union _CAM_REG_CPG_GAIN_1_
{
		volatile struct	/* 0x1A004AD8 */
		{
				FIELD  CPG_GAIN_B                            : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  CPG_GAIN_GB                           : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CPG_GAIN_1;	/* CAM_CPG_GAIN_1, CAM_A_CPG_GAIN_1*/

typedef volatile union _CAM_REG_CPG_GAIN_2_
{
		volatile struct	/* 0x1A004ADC */
		{
				FIELD  CPG_GAIN_GR                           : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  CPG_GAIN_R                            : 13;		/* 16..28, 0x1FFF0000 */
				FIELD  rsv_29                                :  3;		/* 29..31, 0xE0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CPG_GAIN_2;	/* CAM_CPG_GAIN_2, CAM_A_CPG_GAIN_2*/

typedef volatile union _CAM_REG_CPG_OFST_1_
{
		volatile struct	/* 0x1A004AE0 */
		{
				FIELD  CPG_OFST_B                            : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CPG_OFST_GB                           : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CPG_OFST_1;	/* CAM_CPG_OFST_1, CAM_A_CPG_OFST_1*/

typedef volatile union _CAM_REG_CPG_OFST_2_
{
		volatile struct	/* 0x1A004AE4 */
		{
				FIELD  CPG_OFST_GR                           : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  CPG_OFST_R                            : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CPG_OFST_2;	/* CAM_CPG_OFST_2, CAM_A_CPG_OFST_2*/

typedef volatile union _CAM_REG_CAC_TILE_SIZE_
{
		volatile struct	/* 0x1A004AF0 */
		{
				FIELD  CAC_TILE_WIDTH                        : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CAC_TILE_HEIGHT                       : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CAC_TILE_SIZE;	/* CAM_CAC_TILE_SIZE, CAM_A_CAC_TILE_SIZE*/

typedef volatile union _CAM_REG_CAC_TILE_OFFSET_
{
		volatile struct	/* 0x1A004AF4 */
		{
				FIELD  CAC_OFFSET_X                          : 16;		/*  0..15, 0x0000FFFF */
				FIELD  CAC_OFFSET_Y                          : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_CAC_TILE_OFFSET;	/* CAM_CAC_TILE_OFFSET, CAM_A_CAC_TILE_OFFSET*/

typedef volatile union _CAM_REG_PMX_CTL_
{
		volatile struct	/* 0x1A004B00 */
		{
				FIELD  PMX_SRAM_SIZE                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  PMX_EDGE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  PMX_SINGLE_MODE_1                     :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  PMX_SINGLE_MODE_2                     :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  3;		/* 25..27, 0x0E000000 */
				FIELD  PMX_DUAL_PD_MODE                      :  1;		/* 28..28, 0x10000000 */
				FIELD  rsv_29                                :  2;		/* 29..30, 0x60000000 */
				FIELD  PMX_EDGE_SET                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PMX_CTL;	/* CAM_PMX_CTL, CAM_A_PMX_CTL*/

typedef volatile union _CAM_REG_PMX_CROP_
{
		volatile struct	/* 0x1A004B04 */
		{
				FIELD  PMX_STR_X                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  PMX_END_X                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PMX_CROP;	/* CAM_PMX_CROP, CAM_A_PMX_CROP*/

typedef volatile union _CAM_REG_PMX_VSIZE_
{
		volatile struct	/* 0x1A004B08 */
		{
				FIELD  PMX_HT                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PMX_VSIZE;	/* CAM_PMX_VSIZE, CAM_A_PMX_VSIZE*/

typedef volatile union _CAM_REG_VBN_GAIN_
{
		volatile struct	/* 0x1A004B40 */
		{
				FIELD  VBN_GAIN                              : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_VBN_GAIN;	/* CAM_VBN_GAIN, CAM_A_VBN_GAIN*/

typedef volatile union _CAM_REG_VBN_OFST_
{
		volatile struct	/* 0x1A004B44 */
		{
				FIELD  VBN_OFST                              : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_VBN_OFST;	/* CAM_VBN_OFST, CAM_A_VBN_OFST*/

typedef volatile union _CAM_REG_VBN_TYPE_
{
		volatile struct	/* 0x1A004B48 */
		{
				FIELD  VBN_TYPE                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  VBN_DIAG_SEL_EN                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CAM_REG_VBN_TYPE;	/* CAM_VBN_TYPE, CAM_A_VBN_TYPE*/

typedef volatile union _CAM_REG_VBN_SPARE_
{
		volatile struct	/* 0x1A004B4C */
		{
				FIELD  VBN_SPARE                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_VBN_SPARE;	/* CAM_VBN_SPARE, CAM_A_VBN_SPARE*/

typedef volatile union _CAM_REG_AMX_CTL_
{
		volatile struct	/* 0x1A004B60 */
		{
				FIELD  AMX_SRAM_SIZE                         : 16;		/*  0..15, 0x0000FFFF */
				FIELD  AMX_EDGE                              :  4;		/* 16..19, 0x000F0000 */
				FIELD  AMX_SINGLE_MODE_1                     :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  3;		/* 21..23, 0x00E00000 */
				FIELD  AMX_SINGLE_MODE_2                     :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  6;		/* 25..30, 0x7E000000 */
				FIELD  AMX_EDGE_SET                          :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AMX_CTL;	/* CAM_AMX_CTL, CAM_A_AMX_CTL*/

typedef volatile union _CAM_REG_AMX_CROP_
{
		volatile struct	/* 0x1A004B64 */
		{
				FIELD  AMX_STR_X                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  AMX_END_X                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AMX_CROP;	/* CAM_AMX_CROP, CAM_A_AMX_CROP*/

typedef volatile union _CAM_REG_AMX_VSIZE_
{
		volatile struct	/* 0x1A004B68 */
		{
				FIELD  AMX_HT                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_AMX_VSIZE;	/* CAM_AMX_VSIZE, CAM_A_AMX_VSIZE*/

typedef volatile union _CAM_REG_BIN_CTL_
{
		volatile struct	/* 0x1A004B80 */
		{
				FIELD  BIN_TYPE                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  BIN_MODE                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  BIN_DMD                               :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  BIN_OV_TH                             :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BIN_LE_INV_CTL                        :  4;		/* 16..19, 0x000F0000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BIN_CTL;	/* CAM_BIN_CTL, CAM_A_BIN_CTL*/

typedef volatile union _CAM_REG_BIN_FTH_
{
		volatile struct	/* 0x1A004B84 */
		{
				FIELD  BIN_FTH1                              :  8;		/*  0.. 7, 0x000000FF */
				FIELD  BIN_FTH2                              :  8;		/*  8..15, 0x0000FF00 */
				FIELD  BIN_FTH3                              :  8;		/* 16..23, 0x00FF0000 */
				FIELD  BIN_FTH4                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BIN_FTH;	/* CAM_BIN_FTH, CAM_A_BIN_FTH*/

typedef volatile union _CAM_REG_BIN_SPARE_
{
		volatile struct	/* 0x1A004B88 */
		{
				FIELD  BIN_SPARE                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_BIN_SPARE;	/* CAM_BIN_SPARE, CAM_A_BIN_SPARE*/

typedef volatile union _CAM_REG_DBN_GAIN_
{
		volatile struct	/* 0x1A004BA0 */
		{
				FIELD  DBN_GAIN                              : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBN_GAIN;	/* CAM_DBN_GAIN, CAM_A_DBN_GAIN*/

typedef volatile union _CAM_REG_DBN_OFST_
{
		volatile struct	/* 0x1A004BA4 */
		{
				FIELD  DBN_OFST                              : 13;		/*  0..12, 0x00001FFF */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBN_OFST;	/* CAM_DBN_OFST, CAM_A_DBN_OFST*/

typedef volatile union _CAM_REG_DBN_SPARE_
{
		volatile struct	/* 0x1A004BA8 */
		{
				FIELD  DBN_SPARE                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBN_SPARE;	/* CAM_DBN_SPARE, CAM_A_DBN_SPARE*/

typedef volatile union _CAM_REG_PBN_TYPE_
{
		volatile struct	/* 0x1A004BB0 */
		{
				FIELD  PBN_TYPE                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  PBN_SEP                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PBN_OBIT                              :  4;		/*  2.. 5, 0x0000003C */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PBN_TYPE;	/* CAM_PBN_TYPE, CAM_A_PBN_TYPE*/

typedef volatile union _CAM_REG_PBN_LST_
{
		volatile struct	/* 0x1A004BB4 */
		{
				FIELD  PBN_LST                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CAM_REG_PBN_LST;	/* CAM_PBN_LST, CAM_A_PBN_LST*/

typedef volatile union _CAM_REG_PBN_VSIZE_
{
		volatile struct	/* 0x1A004BB8 */
		{
				FIELD  PBN_VSIZE                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PBN_VSIZE;	/* CAM_PBN_VSIZE, CAM_A_PBN_VSIZE*/

typedef volatile union _CAM_REG_RCP3_CROP_CON1_
{
		volatile struct	/* 0x1A004BC0 */
		{
				FIELD  RCP_STR_X                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  RCP_END_X                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RCP3_CROP_CON1;	/* CAM_RCP3_CROP_CON1, CAM_A_RCP3_CROP_CON1*/

typedef volatile union _CAM_REG_RCP3_CROP_CON2_
{
		volatile struct	/* 0x1A004BC4 */
		{
				FIELD  RCP_STR_Y                             : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  RCP_END_Y                             : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_RCP3_CROP_CON2;	/* CAM_RCP3_CROP_CON2, CAM_A_RCP3_CROP_CON2*/

typedef volatile union _CAM_REG_DBS_SIGMA_
{
		volatile struct	/* 0x1A004C00 */
		{
				FIELD  DBS_OFST                              : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  DBS_SL                                :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_SIGMA;	/* CAM_DBS_SIGMA, CAM_A_DBS_SIGMA*/

typedef volatile union _CAM_REG_DBS_BSTBL_0_
{
		volatile struct	/* 0x1A004C04 */
		{
				FIELD  DBS_BIAS_Y0                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y1                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y2                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_BIAS_Y3                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_BSTBL_0;	/* CAM_DBS_BSTBL_0, CAM_A_DBS_BSTBL_0*/

typedef volatile union _CAM_REG_DBS_BSTBL_1_
{
		volatile struct	/* 0x1A004C08 */
		{
				FIELD  DBS_BIAS_Y4                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y5                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y6                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_BIAS_Y7                           :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_BSTBL_1;	/* CAM_DBS_BSTBL_1, CAM_A_DBS_BSTBL_1*/

typedef volatile union _CAM_REG_DBS_BSTBL_2_
{
		volatile struct	/* 0x1A004C0C */
		{
				FIELD  DBS_BIAS_Y8                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y9                           :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y10                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_BIAS_Y11                          :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_BSTBL_2;	/* CAM_DBS_BSTBL_2, CAM_A_DBS_BSTBL_2*/

typedef volatile union _CAM_REG_DBS_BSTBL_3_
{
		volatile struct	/* 0x1A004C10 */
		{
				FIELD  DBS_BIAS_Y12                          :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_BIAS_Y13                          :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_BIAS_Y14                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_BSTBL_3;	/* CAM_DBS_BSTBL_3, CAM_A_DBS_BSTBL_3*/

typedef volatile union _CAM_REG_DBS_CTL_
{
		volatile struct	/* 0x1A004C14 */
		{
				FIELD  DBS_HDR_GNP                           :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  DBS_SL_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  DBS_LE_INV_CTL                        :  4;		/*  8..11, 0x00000F00 */
				FIELD  DBS_EDGE                              :  4;		/* 12..15, 0x0000F000 */
				FIELD  DBS_HDR_GAIN                          :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_HDR_GAIN2                         :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_CTL;	/* CAM_DBS_CTL, CAM_A_DBS_CTL*/

typedef volatile union _CAM_REG_DBS_CTL_2_
{
		volatile struct	/* 0x1A004C18 */
		{
				FIELD  DBS_HDR_OSCTH                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_CTL_2;	/* CAM_DBS_CTL_2, CAM_A_DBS_CTL_2*/

typedef volatile union _CAM_REG_DBS_SIGMA_2_
{
		volatile struct	/* 0x1A004C1C */
		{
				FIELD  DBS_MUL_B                             :  8;		/*  0.. 7, 0x000000FF */
				FIELD  DBS_MUL_GB                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  DBS_MUL_GR                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  DBS_MUL_R                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_SIGMA_2;	/* CAM_DBS_SIGMA_2, CAM_A_DBS_SIGMA_2*/

typedef volatile union _CAM_REG_DBS_YGN_
{
		volatile struct	/* 0x1A004C20 */
		{
				FIELD  DBS_YGN_B                             :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  DBS_YGN_GB                            :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  DBS_YGN_GR                            :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DBS_YGN_R                             :  6;		/* 24..29, 0x3F000000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_YGN;	/* CAM_DBS_YGN, CAM_A_DBS_YGN*/

typedef volatile union _CAM_REG_DBS_SL_Y12_
{
		volatile struct	/* 0x1A004C24 */
		{
				FIELD  DBS_SL_Y1                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_Y2                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_SL_Y12;	/* CAM_DBS_SL_Y12, CAM_A_DBS_SL_Y12*/

typedef volatile union _CAM_REG_DBS_SL_Y34_
{
		volatile struct	/* 0x1A004C28 */
		{
				FIELD  DBS_SL_Y3                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_Y4                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_SL_Y34;	/* CAM_DBS_SL_Y34, CAM_A_DBS_SL_Y34*/

typedef volatile union _CAM_REG_DBS_SL_G12_
{
		volatile struct	/* 0x1A004C2C */
		{
				FIELD  DBS_SL_G1                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_G2                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_SL_G12;	/* CAM_DBS_SL_G12, CAM_A_DBS_SL_G12*/

typedef volatile union _CAM_REG_DBS_SL_G34_
{
		volatile struct	/* 0x1A004C30 */
		{
				FIELD  DBS_SL_G3                             : 10;		/*  0.. 9, 0x000003FF */
				FIELD  rsv_10                                :  6;		/* 10..15, 0x0000FC00 */
				FIELD  DBS_SL_G4                             : 10;		/* 16..25, 0x03FF0000 */
				FIELD  rsv_26                                :  6;		/* 26..31, 0xFC000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DBS_SL_G34;	/* CAM_DBS_SL_G34, CAM_A_DBS_SL_G34*/

typedef volatile union _CAM_REG_SL2F_CEN_
{
		volatile struct	/* 0x1A004C40 */
		{
				FIELD  SL2_CENTR_X                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_CENTR_Y                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_CEN;	/* CAM_SL2F_CEN, CAM_A_SL2F_CEN*/

typedef volatile union _CAM_REG_SL2F_RR_CON0_
{
		volatile struct	/* 0x1A004C44 */
		{
				FIELD  SL2_R_0                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_R_1                               : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_RR_CON0;	/* CAM_SL2F_RR_CON0, CAM_A_SL2F_RR_CON0*/

typedef volatile union _CAM_REG_SL2F_RR_CON1_
{
		volatile struct	/* 0x1A004C48 */
		{
				FIELD  SL2_R_2                               : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_GAIN_0                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_GAIN_1                            :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_RR_CON1;	/* CAM_SL2F_RR_CON1, CAM_A_SL2F_RR_CON1*/

typedef volatile union _CAM_REG_SL2F_GAIN_
{
		volatile struct	/* 0x1A004C4C */
		{
				FIELD  SL2_GAIN_2                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  SL2_GAIN_3                            :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SL2_GAIN_4                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  SL2_SET_ZERO                          :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_GAIN;	/* CAM_SL2F_GAIN, CAM_A_SL2F_GAIN*/

typedef volatile union _CAM_REG_SL2F_RZ_
{
		volatile struct	/* 0x1A004C50 */
		{
				FIELD  SL2_HRZ_COMP                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_VRZ_COMP                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_RZ;	/* CAM_SL2F_RZ, CAM_A_SL2F_RZ*/

typedef volatile union _CAM_REG_SL2F_XOFF_
{
		volatile struct	/* 0x1A004C54 */
		{
				FIELD  SL2_X_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_XOFF;	/* CAM_SL2F_XOFF, CAM_A_SL2F_XOFF*/

typedef volatile union _CAM_REG_SL2F_YOFF_
{
		volatile struct	/* 0x1A004C58 */
		{
				FIELD  SL2_Y_OFST                            : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_YOFF;	/* CAM_SL2F_YOFF, CAM_A_SL2F_YOFF*/

typedef volatile union _CAM_REG_SL2F_SLP_CON0_
{
		volatile struct	/* 0x1A004C5C */
		{
				FIELD  SL2_SLP_1                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_2                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_SLP_CON0;	/* CAM_SL2F_SLP_CON0, CAM_A_SL2F_SLP_CON0*/

typedef volatile union _CAM_REG_SL2F_SLP_CON1_
{
		volatile struct	/* 0x1A004C60 */
		{
				FIELD  SL2_SLP_3                             : 16;		/*  0..15, 0x0000FFFF */
				FIELD  SL2_SLP_4                             : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_SLP_CON1;	/* CAM_SL2F_SLP_CON1, CAM_A_SL2F_SLP_CON1*/

typedef volatile union _CAM_REG_SL2F_SIZE_
{
		volatile struct	/* 0x1A004C64 */
		{
				FIELD  SL2_TPIPE_WD                          : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SL2_TPIPE_HT                          : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_SL2F_SIZE;	/* CAM_SL2F_SIZE, CAM_A_SL2F_SIZE*/

typedef volatile union _CAM_REG_QBN4_MODE_
{
		volatile struct	/* 0x1A004D00 */
		{
				FIELD  QBN_ACC                               :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  QBN_ACC_MODE                          :  1;		/*  4.. 4, 0x00000010 */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAM_REG_QBN4_MODE;	/* CAM_QBN4_MODE, CAM_A_QBN4_MODE*/

typedef volatile union _CAM_REG_PS_AWB_WIN_ORG_
{
		volatile struct	/* 0x1A004D10 */
		{
				FIELD  AWB_W_HORG                            : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_W_VORG                            : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_WIN_ORG;	/* CAM_PS_AWB_WIN_ORG, CAM_A_PS_AWB_WIN_ORG*/

typedef volatile union _CAM_REG_PS_AWB_WIN_SIZE_
{
		volatile struct	/* 0x1A004D14 */
		{
				FIELD  AWB_W_HSIZE                           : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_W_VSIZE                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_WIN_SIZE;	/* CAM_PS_AWB_WIN_SIZE, CAM_A_PS_AWB_WIN_SIZE*/

typedef volatile union _CAM_REG_PS_AWB_WIN_PIT_
{
		volatile struct	/* 0x1A004D18 */
		{
				FIELD  AWB_W_HPIT                            : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  AWB_W_VPIT                            : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_WIN_PIT;	/* CAM_PS_AWB_WIN_PIT, CAM_A_PS_AWB_WIN_PIT*/

typedef volatile union _CAM_REG_PS_AWB_WIN_NUM_
{
		volatile struct	/* 0x1A004D1C */
		{
				FIELD  AWB_W_HNUM                            :  8;		/*  0.. 7, 0x000000FF */
				FIELD  rsv_8                                 :  8;		/*  8..15, 0x0000FF00 */
				FIELD  AWB_W_VNUM                            :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_WIN_NUM;	/* CAM_PS_AWB_WIN_NUM, CAM_A_PS_AWB_WIN_NUM*/

typedef volatile union _CAM_REG_PS_AWB_PIXEL_CNT0_
{
		volatile struct	/* 0x1A004D20 */
		{
				FIELD  AWB_PIXEL_CNT0                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_PIXEL_CNT0;	/* CAM_PS_AWB_PIXEL_CNT0, CAM_A_PS_AWB_PIXEL_CNT0*/

typedef volatile union _CAM_REG_PS_AWB_PIXEL_CNT1_
{
		volatile struct	/* 0x1A004D24 */
		{
				FIELD  AWB_PIXEL_CNT1                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_PIXEL_CNT1;	/* CAM_PS_AWB_PIXEL_CNT1, CAM_A_PS_AWB_PIXEL_CNT1*/

typedef volatile union _CAM_REG_PS_AWB_PIXEL_CNT2_
{
		volatile struct	/* 0x1A004D28 */
		{
				FIELD  AWB_PIXEL_CNT2                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_PIXEL_CNT2;	/* CAM_PS_AWB_PIXEL_CNT2, CAM_A_PS_AWB_PIXEL_CNT2*/

typedef volatile union _CAM_REG_PS_AWB_PIXEL_CNT3_
{
		volatile struct	/* 0x1A004D2C */
		{
				FIELD  AWB_PIXEL_CNT3                        : 24;		/*  0..23, 0x00FFFFFF */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AWB_PIXEL_CNT3;	/* CAM_PS_AWB_PIXEL_CNT3, CAM_A_PS_AWB_PIXEL_CNT3*/

typedef volatile union _CAM_REG_PS_AE_YCOEF0_
{
		volatile struct	/* 0x1A004D30 */
		{
				FIELD  AE_YCOEF_R                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  AE_YCOEF_GR                           : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AE_YCOEF0;	/* CAM_PS_AE_YCOEF0, CAM_A_PS_AE_YCOEF0*/

typedef volatile union _CAM_REG_PS_AE_YCOEF1_
{
		volatile struct	/* 0x1A004D34 */
		{
				FIELD  AE_YCOEF_GB                           : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  AE_YCOEF_B                            : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PS_AE_YCOEF1;	/* CAM_PS_AE_YCOEF1, CAM_A_PS_AE_YCOEF1*/

typedef volatile union _CAM_REG_PSO_BASE_ADDR_
{
		volatile struct	/* 0x1A004D80 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_BASE_ADDR;	/* CAM_PSO_BASE_ADDR, CAM_A_PSO_BASE_ADDR*/

typedef volatile union _CAM_REG_PSO_OFST_ADDR_
{
		volatile struct	/* 0x1A004D88 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_OFST_ADDR;	/* CAM_PSO_OFST_ADDR, CAM_A_PSO_OFST_ADDR*/

typedef volatile union _CAM_REG_PSO_XSIZE_
{
		volatile struct	/* 0x1A004D90 */
		{
				FIELD  XSIZE                                 : 17;		/*  0..16, 0x0001FFFF */
				FIELD  rsv_17                                : 15;		/* 17..31, 0xFFFE0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_XSIZE;	/* CAM_PSO_XSIZE, CAM_A_PSO_XSIZE*/

typedef volatile union _CAM_REG_PSO_YSIZE_
{
		volatile struct	/* 0x1A004D94 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_YSIZE;	/* CAM_PSO_YSIZE, CAM_A_PSO_YSIZE*/

typedef volatile union _CAM_REG_PSO_STRIDE_
{
		volatile struct	/* 0x1A004D98 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  2;		/* 16..17, 0x00030000 */
				FIELD  rsv_18                                :  6;		/* 18..23, 0x00FC0000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_STRIDE;	/* CAM_PSO_STRIDE, CAM_A_PSO_STRIDE*/

typedef volatile union _CAM_REG_PSO_CON_
{
		volatile struct	/* 0x1A004D9C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_CON;	/* CAM_PSO_CON, CAM_A_PSO_CON*/

typedef volatile union _CAM_REG_PSO_CON2_
{
		volatile struct	/* 0x1A004DA0 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_CON2;	/* CAM_PSO_CON2, CAM_A_PSO_CON2*/

typedef volatile union _CAM_REG_PSO_CON3_
{
		volatile struct	/* 0x1A004DA4 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_CON3;	/* CAM_PSO_CON3, CAM_A_PSO_CON3*/

typedef volatile union _CAM_REG_PSO_ERR_STAT_
{
		volatile struct	/* 0x1A004DA8 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_ERR_STAT;	/* CAM_PSO_ERR_STAT, CAM_A_PSO_ERR_STAT*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004DB0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_2;	/* CAM_PSO_FH_SPARE_2, CAM_A_PSO_FH_SPARE_2*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004DB4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_3;	/* CAM_PSO_FH_SPARE_3, CAM_A_PSO_FH_SPARE_3*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004DB8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_4;	/* CAM_PSO_FH_SPARE_4, CAM_A_PSO_FH_SPARE_4*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004DBC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_5;	/* CAM_PSO_FH_SPARE_5, CAM_A_PSO_FH_SPARE_5*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004DC0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_6;	/* CAM_PSO_FH_SPARE_6, CAM_A_PSO_FH_SPARE_6*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004DC4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_7;	/* CAM_PSO_FH_SPARE_7, CAM_A_PSO_FH_SPARE_7*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004DC8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_8;	/* CAM_PSO_FH_SPARE_8, CAM_A_PSO_FH_SPARE_8*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004DCC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_9;	/* CAM_PSO_FH_SPARE_9, CAM_A_PSO_FH_SPARE_9*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004DD0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_10;	/* CAM_PSO_FH_SPARE_10, CAM_A_PSO_FH_SPARE_10*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004DD4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_11;	/* CAM_PSO_FH_SPARE_11, CAM_A_PSO_FH_SPARE_11*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004DD8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_12;	/* CAM_PSO_FH_SPARE_12, CAM_A_PSO_FH_SPARE_12*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004DDC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_13;	/* CAM_PSO_FH_SPARE_13, CAM_A_PSO_FH_SPARE_13*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004DE0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_14;	/* CAM_PSO_FH_SPARE_14, CAM_A_PSO_FH_SPARE_14*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004DE4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_15;	/* CAM_PSO_FH_SPARE_15, CAM_A_PSO_FH_SPARE_15*/

typedef volatile union _CAM_REG_PSO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004DE8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_SPARE_16;	/* CAM_PSO_FH_SPARE_16, CAM_A_PSO_FH_SPARE_16*/

typedef volatile union _CAM_REG_DMA_FRAME_HEADER_EN_
{
		volatile struct	/* 0x1A004E00 */
		{
				FIELD  FRAME_HEADER_EN_IMGO                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FRAME_HEADER_EN_RRZO                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  FRAME_HEADER_EN_AAO                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FRAME_HEADER_EN_AFO                   :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FRAME_HEADER_EN_LCSO                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FRAME_HEADER_EN_UFEO                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  FRAME_HEADER_EN_PDO                   :  1;		/*  6.. 6, 0x00000040 */
				FIELD  FRAME_HEADER_EN_PSO                   :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 : 24;		/*  8..31, 0xFFFFFF00 */
		} Bits;
		UINT32 Raw;
}CAM_REG_DMA_FRAME_HEADER_EN;	/* CAM_DMA_FRAME_HEADER_EN, CAM_A_DMA_FRAME_HEADER_EN*/

typedef volatile union _CAM_REG_IMGO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E04 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_BASE_ADDR;	/* CAM_IMGO_FH_BASE_ADDR, CAM_A_IMGO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_RRZO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E08 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_BASE_ADDR;	/* CAM_RRZO_FH_BASE_ADDR, CAM_A_RRZO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_AAO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E0C */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_BASE_ADDR;	/* CAM_AAO_FH_BASE_ADDR, CAM_A_AAO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_AFO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E10 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_BASE_ADDR;	/* CAM_AFO_FH_BASE_ADDR, CAM_A_AFO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_LCSO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E14 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_BASE_ADDR;	/* CAM_LCSO_FH_BASE_ADDR, CAM_A_LCSO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_UFEO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E18 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_BASE_ADDR;	/* CAM_UFEO_FH_BASE_ADDR, CAM_A_UFEO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_PDO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E1C */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_BASE_ADDR;	/* CAM_PDO_FH_BASE_ADDR, CAM_A_PDO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_PSO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A004E20 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PSO_FH_BASE_ADDR;	/* CAM_PSO_FH_BASE_ADDR, CAM_A_PSO_FH_BASE_ADDR*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004E30 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_2;	/* CAM_IMGO_FH_SPARE_2, CAM_A_IMGO_FH_SPARE_2*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004E34 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_3;	/* CAM_IMGO_FH_SPARE_3, CAM_A_IMGO_FH_SPARE_3*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004E38 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_4;	/* CAM_IMGO_FH_SPARE_4, CAM_A_IMGO_FH_SPARE_4*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004E3C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_5;	/* CAM_IMGO_FH_SPARE_5, CAM_A_IMGO_FH_SPARE_5*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004E40 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_6;	/* CAM_IMGO_FH_SPARE_6, CAM_A_IMGO_FH_SPARE_6*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004E44 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_7;	/* CAM_IMGO_FH_SPARE_7, CAM_A_IMGO_FH_SPARE_7*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004E48 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_8;	/* CAM_IMGO_FH_SPARE_8, CAM_A_IMGO_FH_SPARE_8*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004E4C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_9;	/* CAM_IMGO_FH_SPARE_9, CAM_A_IMGO_FH_SPARE_9*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004E50 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_10;	/* CAM_IMGO_FH_SPARE_10, CAM_A_IMGO_FH_SPARE_10*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004E54 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_11;	/* CAM_IMGO_FH_SPARE_11, CAM_A_IMGO_FH_SPARE_11*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004E58 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_12;	/* CAM_IMGO_FH_SPARE_12, CAM_A_IMGO_FH_SPARE_12*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004E5C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_13;	/* CAM_IMGO_FH_SPARE_13, CAM_A_IMGO_FH_SPARE_13*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004E60 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_14;	/* CAM_IMGO_FH_SPARE_14, CAM_A_IMGO_FH_SPARE_14*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004E64 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_15;	/* CAM_IMGO_FH_SPARE_15, CAM_A_IMGO_FH_SPARE_15*/

typedef volatile union _CAM_REG_IMGO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004E68 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_IMGO_FH_SPARE_16;	/* CAM_IMGO_FH_SPARE_16, CAM_A_IMGO_FH_SPARE_16*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004E70 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_2;	/* CAM_RRZO_FH_SPARE_2, CAM_A_RRZO_FH_SPARE_2*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004E74 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_3;	/* CAM_RRZO_FH_SPARE_3, CAM_A_RRZO_FH_SPARE_3*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004E78 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_4;	/* CAM_RRZO_FH_SPARE_4, CAM_A_RRZO_FH_SPARE_4*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004E7C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_5;	/* CAM_RRZO_FH_SPARE_5, CAM_A_RRZO_FH_SPARE_5*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004E80 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_6;	/* CAM_RRZO_FH_SPARE_6, CAM_A_RRZO_FH_SPARE_6*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004E84 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_7;	/* CAM_RRZO_FH_SPARE_7, CAM_A_RRZO_FH_SPARE_7*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004E88 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_8;	/* CAM_RRZO_FH_SPARE_8, CAM_A_RRZO_FH_SPARE_8*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004E8C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_9;	/* CAM_RRZO_FH_SPARE_9, CAM_A_RRZO_FH_SPARE_9*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004E90 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_10;	/* CAM_RRZO_FH_SPARE_10, CAM_A_RRZO_FH_SPARE_10*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004E94 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_11;	/* CAM_RRZO_FH_SPARE_11, CAM_A_RRZO_FH_SPARE_11*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004E98 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_12;	/* CAM_RRZO_FH_SPARE_12, CAM_A_RRZO_FH_SPARE_12*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004E9C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_13;	/* CAM_RRZO_FH_SPARE_13, CAM_A_RRZO_FH_SPARE_13*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004EA0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_14;	/* CAM_RRZO_FH_SPARE_14, CAM_A_RRZO_FH_SPARE_14*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004EA4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_15;	/* CAM_RRZO_FH_SPARE_15, CAM_A_RRZO_FH_SPARE_15*/

typedef volatile union _CAM_REG_RRZO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004EA8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_RRZO_FH_SPARE_16;	/* CAM_RRZO_FH_SPARE_16, CAM_A_RRZO_FH_SPARE_16*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004EB0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_2;	/* CAM_AAO_FH_SPARE_2, CAM_A_AAO_FH_SPARE_2*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004EB4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_3;	/* CAM_AAO_FH_SPARE_3, CAM_A_AAO_FH_SPARE_3*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004EB8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_4;	/* CAM_AAO_FH_SPARE_4, CAM_A_AAO_FH_SPARE_4*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004EBC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_5;	/* CAM_AAO_FH_SPARE_5, CAM_A_AAO_FH_SPARE_5*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004EC0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_6;	/* CAM_AAO_FH_SPARE_6, CAM_A_AAO_FH_SPARE_6*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004EC4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_7;	/* CAM_AAO_FH_SPARE_7, CAM_A_AAO_FH_SPARE_7*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004EC8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_8;	/* CAM_AAO_FH_SPARE_8, CAM_A_AAO_FH_SPARE_8*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004ECC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_9;	/* CAM_AAO_FH_SPARE_9, CAM_A_AAO_FH_SPARE_9*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004ED0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_10;	/* CAM_AAO_FH_SPARE_10, CAM_A_AAO_FH_SPARE_10*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004ED4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_11;	/* CAM_AAO_FH_SPARE_11, CAM_A_AAO_FH_SPARE_11*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004ED8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_12;	/* CAM_AAO_FH_SPARE_12, CAM_A_AAO_FH_SPARE_12*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004EDC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_13;	/* CAM_AAO_FH_SPARE_13, CAM_A_AAO_FH_SPARE_13*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004EE0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_14;	/* CAM_AAO_FH_SPARE_14, CAM_A_AAO_FH_SPARE_14*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004EE4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_15;	/* CAM_AAO_FH_SPARE_15, CAM_A_AAO_FH_SPARE_15*/

typedef volatile union _CAM_REG_AAO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004EE8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AAO_FH_SPARE_16;	/* CAM_AAO_FH_SPARE_16, CAM_A_AAO_FH_SPARE_16*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004EF0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_2;	/* CAM_AFO_FH_SPARE_2, CAM_A_AFO_FH_SPARE_2*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004EF4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_3;	/* CAM_AFO_FH_SPARE_3, CAM_A_AFO_FH_SPARE_3*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004EF8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_4;	/* CAM_AFO_FH_SPARE_4, CAM_A_AFO_FH_SPARE_4*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004EFC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_5;	/* CAM_AFO_FH_SPARE_5, CAM_A_AFO_FH_SPARE_5*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004F00 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_6;	/* CAM_AFO_FH_SPARE_6, CAM_A_AFO_FH_SPARE_6*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004F04 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_7;	/* CAM_AFO_FH_SPARE_7, CAM_A_AFO_FH_SPARE_7*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004F08 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_8;	/* CAM_AFO_FH_SPARE_8, CAM_A_AFO_FH_SPARE_8*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004F0C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_9;	/* CAM_AFO_FH_SPARE_9, CAM_A_AFO_FH_SPARE_9*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004F10 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_10;	/* CAM_AFO_FH_SPARE_10, CAM_A_AFO_FH_SPARE_10*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004F14 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_11;	/* CAM_AFO_FH_SPARE_11, CAM_A_AFO_FH_SPARE_11*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004F18 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_12;	/* CAM_AFO_FH_SPARE_12, CAM_A_AFO_FH_SPARE_12*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004F1C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_13;	/* CAM_AFO_FH_SPARE_13, CAM_A_AFO_FH_SPARE_13*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004F20 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_14;	/* CAM_AFO_FH_SPARE_14, CAM_A_AFO_FH_SPARE_14*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004F24 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_15;	/* CAM_AFO_FH_SPARE_15, CAM_A_AFO_FH_SPARE_15*/

typedef volatile union _CAM_REG_AFO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004F28 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_AFO_FH_SPARE_16;	/* CAM_AFO_FH_SPARE_16, CAM_A_AFO_FH_SPARE_16*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004F30 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_2;	/* CAM_LCSO_FH_SPARE_2, CAM_A_LCSO_FH_SPARE_2*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004F34 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_3;	/* CAM_LCSO_FH_SPARE_3, CAM_A_LCSO_FH_SPARE_3*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004F38 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_4;	/* CAM_LCSO_FH_SPARE_4, CAM_A_LCSO_FH_SPARE_4*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004F3C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_5;	/* CAM_LCSO_FH_SPARE_5, CAM_A_LCSO_FH_SPARE_5*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004F40 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_6;	/* CAM_LCSO_FH_SPARE_6, CAM_A_LCSO_FH_SPARE_6*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004F44 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_7;	/* CAM_LCSO_FH_SPARE_7, CAM_A_LCSO_FH_SPARE_7*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004F48 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_8;	/* CAM_LCSO_FH_SPARE_8, CAM_A_LCSO_FH_SPARE_8*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004F4C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_9;	/* CAM_LCSO_FH_SPARE_9, CAM_A_LCSO_FH_SPARE_9*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004F50 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_10;	/* CAM_LCSO_FH_SPARE_10, CAM_A_LCSO_FH_SPARE_10*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004F54 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_11;	/* CAM_LCSO_FH_SPARE_11, CAM_A_LCSO_FH_SPARE_11*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004F58 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_12;	/* CAM_LCSO_FH_SPARE_12, CAM_A_LCSO_FH_SPARE_12*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004F5C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_13;	/* CAM_LCSO_FH_SPARE_13, CAM_A_LCSO_FH_SPARE_13*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004F60 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_14;	/* CAM_LCSO_FH_SPARE_14, CAM_A_LCSO_FH_SPARE_14*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004F64 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_15;	/* CAM_LCSO_FH_SPARE_15, CAM_A_LCSO_FH_SPARE_15*/

typedef volatile union _CAM_REG_LCSO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004F68 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_LCSO_FH_SPARE_16;	/* CAM_LCSO_FH_SPARE_16, CAM_A_LCSO_FH_SPARE_16*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004F70 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_2;	/* CAM_UFEO_FH_SPARE_2, CAM_A_UFEO_FH_SPARE_2*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004F74 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_3;	/* CAM_UFEO_FH_SPARE_3, CAM_A_UFEO_FH_SPARE_3*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004F78 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_4;	/* CAM_UFEO_FH_SPARE_4, CAM_A_UFEO_FH_SPARE_4*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004F7C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_5;	/* CAM_UFEO_FH_SPARE_5, CAM_A_UFEO_FH_SPARE_5*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004F80 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_6;	/* CAM_UFEO_FH_SPARE_6, CAM_A_UFEO_FH_SPARE_6*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004F84 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_7;	/* CAM_UFEO_FH_SPARE_7, CAM_A_UFEO_FH_SPARE_7*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004F88 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_8;	/* CAM_UFEO_FH_SPARE_8, CAM_A_UFEO_FH_SPARE_8*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004F8C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_9;	/* CAM_UFEO_FH_SPARE_9, CAM_A_UFEO_FH_SPARE_9*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004F90 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_10;	/* CAM_UFEO_FH_SPARE_10, CAM_A_UFEO_FH_SPARE_10*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004F94 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_11;	/* CAM_UFEO_FH_SPARE_11, CAM_A_UFEO_FH_SPARE_11*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004F98 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_12;	/* CAM_UFEO_FH_SPARE_12, CAM_A_UFEO_FH_SPARE_12*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004F9C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_13;	/* CAM_UFEO_FH_SPARE_13, CAM_A_UFEO_FH_SPARE_13*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004FA0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_14;	/* CAM_UFEO_FH_SPARE_14, CAM_A_UFEO_FH_SPARE_14*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004FA4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_15;	/* CAM_UFEO_FH_SPARE_15, CAM_A_UFEO_FH_SPARE_15*/

typedef volatile union _CAM_REG_UFEO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004FA8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_UFEO_FH_SPARE_16;	/* CAM_UFEO_FH_SPARE_16, CAM_A_UFEO_FH_SPARE_16*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_2_
{
		volatile struct	/* 0x1A004FB0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_2;	/* CAM_PDO_FH_SPARE_2, CAM_A_PDO_FH_SPARE_2*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_3_
{
		volatile struct	/* 0x1A004FB4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_3;	/* CAM_PDO_FH_SPARE_3, CAM_A_PDO_FH_SPARE_3*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_4_
{
		volatile struct	/* 0x1A004FB8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_4;	/* CAM_PDO_FH_SPARE_4, CAM_A_PDO_FH_SPARE_4*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_5_
{
		volatile struct	/* 0x1A004FBC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_5;	/* CAM_PDO_FH_SPARE_5, CAM_A_PDO_FH_SPARE_5*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_6_
{
		volatile struct	/* 0x1A004FC0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_6;	/* CAM_PDO_FH_SPARE_6, CAM_A_PDO_FH_SPARE_6*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_7_
{
		volatile struct	/* 0x1A004FC4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_7;	/* CAM_PDO_FH_SPARE_7, CAM_A_PDO_FH_SPARE_7*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_8_
{
		volatile struct	/* 0x1A004FC8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_8;	/* CAM_PDO_FH_SPARE_8, CAM_A_PDO_FH_SPARE_8*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_9_
{
		volatile struct	/* 0x1A004FCC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_9;	/* CAM_PDO_FH_SPARE_9, CAM_A_PDO_FH_SPARE_9*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_10_
{
		volatile struct	/* 0x1A004FD0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_10;	/* CAM_PDO_FH_SPARE_10, CAM_A_PDO_FH_SPARE_10*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_11_
{
		volatile struct	/* 0x1A004FD4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_11;	/* CAM_PDO_FH_SPARE_11, CAM_A_PDO_FH_SPARE_11*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_12_
{
		volatile struct	/* 0x1A004FD8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_12;	/* CAM_PDO_FH_SPARE_12, CAM_A_PDO_FH_SPARE_12*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_13_
{
		volatile struct	/* 0x1A004FDC */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_13;	/* CAM_PDO_FH_SPARE_13, CAM_A_PDO_FH_SPARE_13*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_14_
{
		volatile struct	/* 0x1A004FE0 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_14;	/* CAM_PDO_FH_SPARE_14, CAM_A_PDO_FH_SPARE_14*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_15_
{
		volatile struct	/* 0x1A004FE4 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_15;	/* CAM_PDO_FH_SPARE_15, CAM_A_PDO_FH_SPARE_15*/

typedef volatile union _CAM_REG_PDO_FH_SPARE_16_
{
		volatile struct	/* 0x1A004FE8 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAM_REG_PDO_FH_SPARE_16;	/* CAM_PDO_FH_SPARE_16, CAM_A_PDO_FH_SPARE_16*/

typedef volatile union _CAMSV_REG_TOP_DEBUG_
{
		volatile struct /* 0x1A050000 */
		{
				FIELD  DEBUG                                 : 32;      /*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TOP_DEBUG;   /* CAMSV_TOP_DEBUG, CAMSV_0_TOP_DEBUG*/

typedef volatile union _CAMSV_REG_MODULE_EN_
{
		volatile struct	/* 0x1A050010 */
		{
				FIELD  TG_EN                                 :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PAK_EN                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  PAK_SEL                               :  1;		/*  3.. 3, 0x00000008 */
				FIELD  IMGO_EN                               :  1;		/*  4.. 4, 0x00000010 */
				FIELD  DOWN_SAMPLE_EN                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  DOWN_SAMPLE_PERIOD                    :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  SW_PASS1_DONE_FRAME_CNT               :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  8;		/* 22..29, 0x3FC00000 */
				FIELD  DB_EN                                 :  1;		/* 30..30, 0x40000000 */
				FIELD  DB_LOCK                               :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_MODULE_EN;	/* CAMSV_MODULE_EN, CAMSV_0_MODULE_EN*/

typedef volatile union _CAMSV_REG_FMT_SEL_
{
		volatile struct	/* 0x1A050014 */
		{
				FIELD  TG1_FMT                               :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG1_SW                                :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_FMT_SEL;	/* CAMSV_FMT_SEL, CAMSV_0_FMT_SEL*/

typedef volatile union _CAMSV_REG_INT_EN_
{
		volatile struct	/* 0x1A050018 */
		{
				FIELD  VS1_INT_EN                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_INT1_EN                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_INT2_EN                            :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON1_INT_EN                        :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_INT_EN                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_INT_EN                       :  1;		/*  5.. 5, 0x00000020 */
				FIELD  TG_DROP_INT_EN                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  TG_SOF_INT_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  2;		/*  8.. 9, 0x00000300 */
				FIELD  PASS1_DON_INT_EN                      :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  IMGO_ERR_INT_EN                       :  1;		/* 16..16, 0x00010000 */
				FIELD  IMGO_OVERR_INT_EN                     :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  1;		/* 18..18, 0x00040000 */
				FIELD  IMGO_DROP_INT_EN                      :  1;		/* 19..19, 0x00080000 */
				FIELD  SW_PASS1_DON_INT_EN                   :  1;		/* 20..20, 0x00100000 */
				FIELD  TG_SOF_WAIT_INT_EN                    :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                :  9;		/* 22..30, 0x7FC00000 */
				FIELD  INT_WCLR_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_INT_EN;	/* CAMSV_INT_EN, CAMSV_0_INT_EN*/

typedef volatile union _CAMSV_REG_INT_STATUS_
{
		volatile struct	/* 0x1A05001C */
		{
				FIELD  VS1_ST                                :  1;		/*  0.. 0, 0x00000001 */
				FIELD  TG_ST1                                :  1;		/*  1.. 1, 0x00000002 */
				FIELD  TG_ST2                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  EXPDON1_ST                            :  1;		/*  3.. 3, 0x00000008 */
				FIELD  TG_ERR_ST                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  TG_GBERR_ST                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  TG_DROP_INT_ST                        :  1;		/*  6.. 6, 0x00000040 */
				FIELD  TG_SOF1_INT_ST                        :  1;		/*  7.. 7, 0x00000080 */
				FIELD  rsv_8                                 :  2;		/*  8.. 9, 0x00000300 */
				FIELD  PASS1_DON_ST                          :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  5;		/* 11..15, 0x0000F800 */
				FIELD  IMGO_ERR_ST                           :  1;		/* 16..16, 0x00010000 */
				FIELD  IMGO_OVERR_ST                         :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  1;		/* 18..18, 0x00040000 */
				FIELD  IMGO_DROP_ST                          :  1;		/* 19..19, 0x00080000 */
				FIELD  SW_PASS1_DON_ST                       :  1;		/* 20..20, 0x00100000 */
				FIELD  TG_SOF_WAIT_ST                        :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_INT_STATUS;	/* CAMSV_INT_STATUS, CAMSV_0_INT_STATUS*/

typedef volatile union _CAMSV_REG_SW_CTL_
{
		volatile struct	/* 0x1A050020 */
		{
				FIELD  IMGO_RST_TRIG                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGO_RST_ST                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SW_RST                                :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 29;		/*  3..31, 0xFFFFFFF8 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_SW_CTL;	/* CAMSV_SW_CTL, CAMSV_0_SW_CTL*/

typedef volatile union _CAMSV_REG_SPARE0_
{
		volatile struct	/* 0x1A050024 */
		{
				FIELD  SPARE0                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_SPARE0;	/* CAMSV_SPARE0, CAMSV_0_SPARE0*/

typedef volatile union _CAMSV_REG_SPARE1_
{
		volatile struct	/* 0x1A050028 */
		{
				FIELD  CTL_SPARE1                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_SPARE1;	/* CAMSV_SPARE1, CAMSV_0_SPARE1*/

typedef volatile union _CAMSV_REG_IMGO_FBC_
{
		volatile struct	/* 0x1A05002C */
		{
				FIELD  RCNT_INC                              :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FBC;	/* CAMSV_IMGO_FBC, CAMSV_0_IMGO_FBC*/

typedef volatile union _CAMSV_REG_CLK_EN_
{
		volatile struct	/* 0x1A050030 */
		{
				FIELD  TG_DP_CK_EN                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 :  1;		/*  1.. 1, 0x00000002 */
				FIELD  PAK_DP_CK_EN                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 : 12;		/*  3..14, 0x00007FF8 */
				FIELD  DMA_DP_CK_EN                          :  1;		/* 15..15, 0x00008000 */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_CLK_EN;	/* CAMSV_CLK_EN, CAMSV_0_CLK_EN*/

typedef volatile union _CAMSV_REG_DBG_SET_
{
		volatile struct	/* 0x1A050034 */
		{
				FIELD  DEBUG_MOD_SEL                         :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  DEBUG_SEL                             : 12;		/*  8..19, 0x000FFF00 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DBG_SET;	/* CAMSV_DBG_SET, CAMSV_0_DBG_SET*/

typedef volatile union _CAMSV_REG_DBG_PORT_
{
		volatile struct	/* 0x1A050038 */
		{
				FIELD  CTL_DBG_PORT                          : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DBG_PORT;	/* CAMSV_DBG_PORT, CAMSV_0_DBG_PORT*/

typedef volatile union _CAMSV_REG_DATE_CODE_
{
		volatile struct	/* 0x1A05003C */
		{
				FIELD  CTL_DATE_CODE                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DATE_CODE;	/* CAMSV_DATE_CODE, CAMSV_0_DATE_CODE*/

typedef volatile union _CAMSV_REG_PROJ_CODE_
{
		volatile struct	/* 0x1A050040 */
		{
				FIELD  CTL_PROJ_CODE                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_PROJ_CODE;	/* CAMSV_PROJ_CODE, CAMSV_0_PROJ_CODE*/

typedef volatile union _CAMSV_REG_DCM_DIS_
{
		volatile struct	/* 0x1A050044 */
		{
				FIELD  PAK_DCM_DIS                           :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGO_DCM_DIS                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DCM_DIS;	/* CAMSV_DCM_DIS, CAMSV_0_DCM_DIS*/

typedef volatile union _CAMSV_REG_DCM_STATUS_
{
		volatile struct	/* 0x1A050048 */
		{
				FIELD  PAK_DCM_ST                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  IMGO_DCM_ST                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 : 30;		/*  2..31, 0xFFFFFFFC */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DCM_STATUS;	/* CAMSV_DCM_STATUS, CAMSV_0_DCM_STATUS*/

typedef volatile union _CAMSV_REG_PAK_
{
		volatile struct	/* 0x1A05004C */
		{
				FIELD  PAK_MODE                              :  3;		/*  0.. 2, 0x00000007 */
				FIELD  rsv_3                                 :  1;		/*  3.. 3, 0x00000008 */
				FIELD  PAK_DBL_MODE                          :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 : 26;		/*  6..31, 0xFFFFFFC0 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_PAK;	/* CAMSV_PAK, CAMSV_0_PAK*/

typedef volatile union _CAMSV_REG_FBC_IMGO_CTL1_
{
		volatile struct	/* 0x1A050110 */
		{
				FIELD  FBC_NUM                               :  6;		/*  0.. 5, 0x0000003F */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FBC_RESET                             :  1;		/*  8.. 8, 0x00000100 */
				FIELD  rsv_9                                 :  6;		/*  9..14, 0x00007E00 */
				FIELD  FBC_EN                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FBC_MODE                              :  1;		/* 16..16, 0x00010000 */
				FIELD  LOCK_EN                               :  1;		/* 17..17, 0x00020000 */
				FIELD  rsv_18                                :  2;		/* 18..19, 0x000C0000 */
				FIELD  DROP_TIMING                           :  1;		/* 20..20, 0x00100000 */
				FIELD  rsv_21                                :  1;		/* 21..21, 0x00200000 */
				FIELD  DMA_RING_EN                           :  1;		/* 22..22, 0x00400000 */
				FIELD  rsv_23                                :  1;		/* 23..23, 0x00800000 */
				FIELD  SUB_RATIO                             :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_FBC_IMGO_CTL1;	/* CAMSV_FBC_IMGO_CTL1, CAMSV_0_FBC_IMGO_CTL1*/

typedef volatile union _CAMSV_REG_FBC_IMGO_CTL2_
{
		volatile struct	/* 0x1A050114 */
		{
				FIELD  FBC_CNT                               :  7;		/*  0.. 6, 0x0000007F */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  RCNT                                  :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  WCNT                                  :  6;		/* 16..21, 0x003F0000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  DROP_CNT                              :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_FBC_IMGO_CTL2;	/* CAMSV_FBC_IMGO_CTL2, CAMSV_0_FBC_IMGO_CTL2*/

typedef volatile union _CAMSV_REG_FBC_IMGO_ENQ_ADDR_
{
		volatile struct	/* 0x1A050118 */
		{
				FIELD  IMGO_ENQ_ADDR                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_FBC_IMGO_ENQ_ADDR;	/* CAMSV_FBC_IMGO_ENQ_ADDR, CAMSV_0_FBC_IMGO_ENQ_ADDR*/

typedef volatile union _CAMSV_REG_FBC_IMGO_CUR_ADDR_
{
		volatile struct	/* 0x1A05011C */
		{
				FIELD  IMGO_CUR_ADDR                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_FBC_IMGO_CUR_ADDR;	/* CAMSV_FBC_IMGO_CUR_ADDR, CAMSV_0_FBC_IMGO_CUR_ADDR*/

typedef volatile union _CAMSV_REG_DMA_SOFT_RSTSTAT_
{
		volatile struct	/* 0x1A050200 */
		{
				FIELD  IMGO_SOFT_RST_STAT                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_SOFT_RST_STAT                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_SOFT_RST_STAT                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_SOFT_RST_STAT                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_SOFT_RST_STAT                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_SOFT_RST_STAT                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_SOFT_RST_STAT                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  BPCI_SOFT_RST_STAT                    :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_SOFT_RST_STAT                    :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_SOFT_RST_STAT                    :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_SOFT_RSTSTAT;	/* CAMSV_DMA_SOFT_RSTSTAT, CAMSV_0_DMA_SOFT_RSTSTAT*/

typedef volatile union _CAMSV_REG_CQ0I_BASE_ADDR_
{
		volatile struct	/* 0x1A050204 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_CQ0I_BASE_ADDR;	/* CAMSV_CQ0I_BASE_ADDR, CAMSV_0_CQ0I_BASE_ADDR*/

typedef volatile union _CAMSV_REG_CQ0I_XSIZE_
{
		volatile struct	/* 0x1A050208 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_CQ0I_XSIZE;	/* CAMSV_CQ0I_XSIZE, CAMSV_0_CQ0I_XSIZE*/

typedef volatile union _CAMSV_REG_VERTICAL_FLIP_EN_
{
		volatile struct	/* 0x1A05020C */
		{
				FIELD  IMGO_V_FLIP_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_V_FLIP_EN                        :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_V_FLIP_EN                         :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_V_FLIP_EN                         :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_V_FLIP_EN                        :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_V_FLIP_EN                        :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_V_FLIP_EN                         :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  BPCI_V_FLIP_EN                        :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_V_FLIP_EN                        :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_V_FLIP_EN                        :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_VERTICAL_FLIP_EN;	/* CAMSV_VERTICAL_FLIP_EN, CAMSV_0_VERTICAL_FLIP_EN*/

typedef volatile union _CAMSV_REG_DMA_SOFT_RESET_
{
		volatile struct	/* 0x1A050210 */
		{
				FIELD  IMGO_SOFT_RST                         :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_SOFT_RST                         :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_SOFT_RST                          :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_SOFT_RST                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_SOFT_RST                         :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_SOFT_RST                         :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_SOFT_RST                          :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  BPCI_SOFT_RST                         :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_SOFT_RST                         :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_SOFT_RST                         :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 12;		/* 19..30, 0x7FF80000 */
				FIELD  SEPARATE_SOFT_RST_EN                  :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_SOFT_RESET;	/* CAMSV_DMA_SOFT_RESET, CAMSV_0_DMA_SOFT_RESET*/

typedef volatile union _CAMSV_REG_LAST_ULTRA_EN_
{
		volatile struct	/* 0x1A050214 */
		{
				FIELD  IMGO_LAST_ULTRA_EN                    :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_LAST_ULTRA_EN                    :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_LAST_ULTRA_EN                     :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_LAST_ULTRA_EN                     :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_LAST_ULTRA_EN                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_LAST_ULTRA_EN                    :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_LAST_ULTRA_EN                     :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  BPCI_LAST_ULTRA_EN                    :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_LAST_ULTRA_EN                    :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_LAST_ULTRA_EN                    :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 13;		/* 19..31, 0xFFF80000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_LAST_ULTRA_EN;	/* CAMSV_LAST_ULTRA_EN, CAMSV_0_LAST_ULTRA_EN*/

typedef volatile union _CAMSV_REG_SPECIAL_FUN_EN_
{
		volatile struct	/* 0x1A050218 */
		{
				FIELD  rsv_0                                 : 20;		/*  0..19, 0x000FFFFF */
				FIELD  CONTINUOUS_COM_CON                    :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  2;		/* 22..23, 0x00C00000 */
				FIELD  MULTI_PLANE_ID_EN                     :  1;		/* 24..24, 0x01000000 */
				FIELD  CONTINUOUS_COM_EN                     :  1;		/* 25..25, 0x02000000 */
				FIELD  FIFO_CHANGE_EN                        :  1;		/* 26..26, 0x04000000 */
				FIELD  rsv_27                                :  2;		/* 27..28, 0x18000000 */
				FIELD  CQ_ULTRA_BPCI_EN                      :  1;		/* 29..29, 0x20000000 */
				FIELD  CQ_ULTRA_LSCI_EN                      :  1;		/* 30..30, 0x40000000 */
				FIELD  UFO_IMGO_EN                           :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_SPECIAL_FUN_EN;	/* CAMSV_SPECIAL_FUN_EN, CAMSV_0_SPECIAL_FUN_EN*/

typedef volatile union _CAMSV_REG_IMGO_BASE_ADDR_
{
		volatile struct	/* 0x1A050220 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_BASE_ADDR;	/* CAMSV_IMGO_BASE_ADDR, CAMSV_0_IMGO_BASE_ADDR*/

typedef volatile union _CAMSV_REG_IMGO_OFST_ADDR_
{
		volatile struct	/* 0x1A050228 */
		{
				FIELD  OFFSET_ADDR                           : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_OFST_ADDR;	/* CAMSV_IMGO_OFST_ADDR, CAMSV_0_IMGO_OFST_ADDR*/

typedef volatile union _CAMSV_REG_IMGO_XSIZE_
{
		volatile struct	/* 0x1A050230 */
		{
				FIELD  XSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_XSIZE;	/* CAMSV_IMGO_XSIZE, CAMSV_0_IMGO_XSIZE*/

typedef volatile union _CAMSV_REG_IMGO_YSIZE_
{
		volatile struct	/* 0x1A050234 */
		{
				FIELD  YSIZE                                 : 16;		/*  0..15, 0x0000FFFF */
				FIELD  rsv_16                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_YSIZE;	/* CAMSV_IMGO_YSIZE, CAMSV_0_IMGO_YSIZE*/

typedef volatile union _CAMSV_REG_IMGO_STRIDE_
{
		volatile struct	/* 0x1A050238 */
		{
				FIELD  STRIDE                                : 16;		/*  0..15, 0x0000FFFF */
				FIELD  BUS_SIZE                              :  3;		/* 16..18, 0x00070000 */
				FIELD  rsv_19                                :  1;		/* 19..19, 0x00080000 */
				FIELD  FORMAT                                :  2;		/* 20..21, 0x00300000 */
				FIELD  rsv_22                                :  1;		/* 22..22, 0x00400000 */
				FIELD  FORMAT_EN                             :  1;		/* 23..23, 0x00800000 */
				FIELD  BUS_SIZE_EN                           :  1;		/* 24..24, 0x01000000 */
				FIELD  rsv_25                                :  7;		/* 25..31, 0xFE000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_STRIDE;	/* CAMSV_IMGO_STRIDE, CAMSV_0_IMGO_STRIDE*/

typedef volatile union _CAMSV_REG_IMGO_CON_
{
		volatile struct	/* 0x1A05023C */
		{
				FIELD  FIFO_SIZE                             : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                : 16;		/* 12..27, 0x0FFFF000 */
				FIELD  MAX_BURST_LEN                         :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_CON;	/* CAMSV_IMGO_CON, CAMSV_0_IMGO_CON*/

typedef volatile union _CAMSV_REG_IMGO_CON2_
{
		volatile struct	/* 0x1A050240 */
		{
				FIELD  FIFO_PRI_THRL                         : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRI_THRH                         : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_CON2;	/* CAMSV_IMGO_CON2, CAMSV_0_IMGO_CON2*/

typedef volatile union _CAMSV_REG_IMGO_CON3_
{
		volatile struct	/* 0x1A050244 */
		{
				FIELD  FIFO_PRE_PRI_THRL                     : 12;		/*  0..11, 0x00000FFF */
				FIELD  rsv_12                                :  4;		/* 12..15, 0x0000F000 */
				FIELD  FIFO_PRE_PRI_THRH                     : 12;		/* 16..27, 0x0FFF0000 */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_CON3;	/* CAMSV_IMGO_CON3, CAMSV_0_IMGO_CON3*/

typedef volatile union _CAMSV_REG_IMGO_CROP_
{
		volatile struct	/* 0x1A050248 */
		{
				FIELD  XOFFSET                               : 16;		/*  0..15, 0x0000FFFF */
				FIELD  YOFFSET                               : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_CROP;	/* CAMSV_IMGO_CROP, CAMSV_0_IMGO_CROP*/

typedef volatile union _CAMSV_REG_DMA_ERR_CTRL_
{
		volatile struct	/* 0x1A050440 */
		{
				FIELD  IMGO_A_ERR                            :  1;		/*  0.. 0, 0x00000001 */
				FIELD  RRZO_A_ERR                            :  1;		/*  1.. 1, 0x00000002 */
				FIELD  AAO_A_ERR                             :  1;		/*  2.. 2, 0x00000004 */
				FIELD  AFO_A_ERR                             :  1;		/*  3.. 3, 0x00000008 */
				FIELD  LCSO_A_ERR                            :  1;		/*  4.. 4, 0x00000010 */
				FIELD  UFEO_A_ERR                            :  1;		/*  5.. 5, 0x00000020 */
				FIELD  PDO_A_ERR                             :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 :  9;		/*  7..15, 0x0000FF80 */
				FIELD  BPCI_A_ERR                            :  1;		/* 16..16, 0x00010000 */
				FIELD  CACI_A_ERR                            :  1;		/* 17..17, 0x00020000 */
				FIELD  LSCI_A_ERR                            :  1;		/* 18..18, 0x00040000 */
				FIELD  rsv_19                                : 12;		/* 19..30, 0x7FF80000 */
				FIELD  ERR_CLR_MD                            :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_ERR_CTRL;	/* CAMSV_DMA_ERR_CTRL, CAMSV_0_DMA_ERR_CTRL*/

typedef volatile union _CAMSV_REG_IMGO_ERR_STAT_
{
		volatile struct	/* 0x1A050444 */
		{
				FIELD  ERR_STAT                              : 16;		/*  0..15, 0x0000FFFF */
				FIELD  ERR_EN                                : 16;		/* 16..31, 0xFFFF0000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_ERR_STAT;	/* CAMSV_IMGO_ERR_STAT, CAMSV_0_IMGO_ERR_STAT*/

typedef volatile union _CAMSV_REG_DMA_DEBUG_ADDR_
{
		volatile struct	/* 0x1A050470 */
		{
				FIELD  DEBUG_ADDR                            : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_DEBUG_ADDR;	/* CAMSV_DMA_DEBUG_ADDR, CAMSV_0_DMA_DEBUG_ADDR*/

typedef volatile union _CAMSV_REG_DMA_RSV1_
{
		volatile struct	/* 0x1A050474 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_RSV1;	/* CAMSV_DMA_RSV1, CAMSV_0_DMA_RSV1*/

typedef volatile union _CAMSV_REG_DMA_RSV2_
{
		volatile struct	/* 0x1A050478 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_RSV2;	/* CAMSV_DMA_RSV2, CAMSV_0_DMA_RSV2*/

typedef volatile union _CAMSV_REG_DMA_RSV3_
{
		volatile struct	/* 0x1A05047C */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_RSV3;	/* CAMSV_DMA_RSV3, CAMSV_0_DMA_RSV3*/

typedef volatile union _CAMSV_REG_DMA_RSV4_
{
		volatile struct	/* 0x1A050480 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_RSV4;	/* CAMSV_DMA_RSV4, CAMSV_0_DMA_RSV4*/

typedef volatile union _CAMSV_REG_DMA_RSV5_
{
		volatile struct	/* 0x1A050484 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_RSV5;	/* CAMSV_DMA_RSV5, CAMSV_0_DMA_RSV5*/

typedef volatile union _CAMSV_REG_DMA_RSV6_
{
		volatile struct	/* 0x1A050488 */
		{
				FIELD  RSV                                   : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_RSV6;	/* CAMSV_DMA_RSV6, CAMSV_0_DMA_RSV6*/

typedef volatile union _CAMSV_REG_DMA_DEBUG_SEL_
{
		volatile struct	/* 0x1A05048C */
		{
				FIELD  DMA_TOP_SEL                           :  8;		/*  0.. 7, 0x000000FF */
				FIELD  R_W_DMA_TOP_SEL                       :  8;		/*  8..15, 0x0000FF00 */
				FIELD  SUB_MODULE_SEL                        :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  4;		/* 24..27, 0x0F000000 */
				FIELD  PDO_FIFO_FULL_XSIZE                   :  1;		/* 28..28, 0x10000000 */
				FIELD  IMGO_UFE_FIFO_FULL_XSIZE              :  1;		/* 29..29, 0x20000000 */
				FIELD  ARBITER_BVALID_FULL                   :  1;		/* 30..30, 0x40000000 */
				FIELD  ARBITER_COM_FULL                      :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_DEBUG_SEL;	/* CAMSV_DMA_DEBUG_SEL, CAMSV_0_DMA_DEBUG_SEL*/

typedef volatile union _CAMSV_REG_DMA_BW_SELF_TEST_
{
		volatile struct	/* 0x1A050490 */
		{
				FIELD  BW_SELF_TEST_EN_IMGO                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  BW_SELF_TEST_EN_RRZO                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  BW_SELF_TEST_EN_AAO                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  BW_SELF_TEST_EN_AFO                   :  1;		/*  3.. 3, 0x00000008 */
				FIELD  BW_SELF_TEST_EN_LCSO                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  BW_SELF_TEST_EN_UFEO                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  BW_SELF_TEST_EN_PDO                   :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_BW_SELF_TEST;	/* CAMSV_DMA_BW_SELF_TEST, CAMSV_0_DMA_BW_SELF_TEST*/

typedef volatile union _CAMSV_REG_TG_SEN_MODE_
{
		volatile struct	/* 0x1A050500 */
		{
				FIELD  CMOS_EN                               :  1;		/*  0.. 0, 0x00000001 */
				FIELD  DBL_DATA_BUS                          :  1;		/*  1.. 1, 0x00000002 */
				FIELD  SOT_MODE                              :  1;		/*  2.. 2, 0x00000004 */
				FIELD  SOT_CLR_MODE                          :  1;		/*  3.. 3, 0x00000008 */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  SOF_SRC                               :  2;		/*  8.. 9, 0x00000300 */
				FIELD  EOF_SRC                               :  2;		/* 10..11, 0x00000C00 */
				FIELD  PXL_CNT_RST_SRC                       :  1;		/* 12..12, 0x00001000 */
				FIELD  DBL_DATA_BUS1                         :  1;		/* 13..13, 0x00002000 */
				FIELD  SOF_WAIT_CQ                           :  1;		/* 14..14, 0x00004000 */
				FIELD  FIFO_FULL_CTL_EN                      :  1;		/* 15..15, 0x00008000 */
				FIELD  TIME_STP_EN                           :  1;		/* 16..16, 0x00010000 */
				FIELD  VS_SUB_EN                             :  1;		/* 17..17, 0x00020000 */
				FIELD  SOF_SUB_EN                            :  1;		/* 18..18, 0x00040000 */
				FIELD  I2C_CQ_EN                             :  1;		/* 19..19, 0x00080000 */
				FIELD  EOF_ALS_RDY_EN                        :  1;		/* 20..20, 0x00100000 */
				FIELD  CQ_SEL                                :  1;		/* 21..21, 0x00200000 */
				FIELD  rsv_22                                : 10;		/* 22..31, 0xFFC00000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_SEN_MODE;	/* CAMSV_TG_SEN_MODE, CAMSV_0_TG_SEN_MODE*/

typedef volatile union _CAMSV_REG_TG_VF_CON_
{
		volatile struct	/* 0x1A050504 */
		{
				FIELD  VFDATA_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  SINGLE_MODE                           :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  FR_CON                                :  3;		/*  4.. 6, 0x00000070 */
				FIELD  rsv_7                                 :  1;		/*  7.. 7, 0x00000080 */
				FIELD  SP_DELAY                              :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  SPDELAY_MODE                          :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_VF_CON;	/* CAMSV_TG_VF_CON, CAMSV_0_TG_VF_CON*/

typedef volatile union _CAMSV_REG_TG_SEN_GRAB_PXL_
{
		volatile struct	/* 0x1A050508 */
		{
				FIELD  PXL_S                                 : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  PXL_E                                 : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_SEN_GRAB_PXL;	/* CAMSV_TG_SEN_GRAB_PXL, CAMSV_0_TG_SEN_GRAB_PXL*/

typedef volatile union _CAMSV_REG_TG_SEN_GRAB_LIN_
{
		volatile struct	/* 0x1A05050C */
		{
				FIELD  LIN_S                                 : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  LIN_E                                 : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_SEN_GRAB_LIN;	/* CAMSV_TG_SEN_GRAB_LIN, CAMSV_0_TG_SEN_GRAB_LIN*/

typedef volatile union _CAMSV_REG_TG_PATH_CFG_
{
		volatile struct	/* 0x1A050510 */
		{
				FIELD  SEN_IN_LSB                            :  2;		/*  0.. 1, 0x00000003 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  JPGINF_EN                             :  1;		/*  4.. 4, 0x00000010 */
				FIELD  MEMIN_EN                              :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  1;		/*  6.. 6, 0x00000040 */
				FIELD  JPG_LINEND_EN                         :  1;		/*  7.. 7, 0x00000080 */
				FIELD  DB_LOAD_DIS                           :  1;		/*  8.. 8, 0x00000100 */
				FIELD  DB_LOAD_SRC                           :  1;		/*  9.. 9, 0x00000200 */
				FIELD  DB_LOAD_VSPOL                         :  1;		/* 10..10, 0x00000400 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  YUV_U2S_DIS                           :  1;		/* 12..12, 0x00001000 */
				FIELD  YUV_BIN_EN                            :  1;		/* 13..13, 0x00002000 */
				FIELD  TG_ERR_SEL                            :  1;		/* 14..14, 0x00004000 */
				FIELD  TG_FULL_SEL                           :  1;		/* 15..15, 0x00008000 */
				FIELD  TG_FULL_SEL2                          :  1;		/* 16..16, 0x00010000 */
				FIELD  FLUSH_DISABLE                         :  1;		/* 17..17, 0x00020000 */
				FIELD  INT_BANK_DISABLE                      :  1;		/* 18..18, 0x00040000 */
				FIELD  EXP_ESC                               :  1;		/* 19..19, 0x00080000 */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_PATH_CFG;	/* CAMSV_TG_PATH_CFG, CAMSV_0_TG_PATH_CFG*/

typedef volatile union _CAMSV_REG_TG_MEMIN_CTL_
{
		volatile struct	/* 0x1A050514 */
		{
				FIELD  MEMIN_DUMMYPXL                        :  8;		/*  0.. 7, 0x000000FF */
				FIELD  MEMIN_DUMMYLIN                        :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_MEMIN_CTL;	/* CAMSV_TG_MEMIN_CTL, CAMSV_0_TG_MEMIN_CTL*/

typedef volatile union _CAMSV_REG_TG_INT1_
{
		volatile struct	/* 0x1A050518 */
		{
				FIELD  TG_INT1_LINENO                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  TG_INT1_PXLNO                         : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  VSYNC_INT_POL                         :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_INT1;	/* CAMSV_TG_INT1, CAMSV_0_TG_INT1*/

typedef volatile union _CAMSV_REG_TG_INT2_
{
		volatile struct	/* 0x1A05051C */
		{
				FIELD  TG_INT2_LINENO                        : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  TG_INT2_PXLNO                         : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_INT2;	/* CAMSV_TG_INT2, CAMSV_0_TG_INT2*/

typedef volatile union _CAMSV_REG_TG_SOF_CNT_
{
		volatile struct	/* 0x1A050520 */
		{
				FIELD  SOF_CNT                               : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_SOF_CNT;	/* CAMSV_TG_SOF_CNT, CAMSV_0_TG_SOF_CNT*/

typedef volatile union _CAMSV_REG_TG_SOT_CNT_
{
		volatile struct	/* 0x1A050524 */
		{
				FIELD  SOT_CNT                               : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_SOT_CNT;	/* CAMSV_TG_SOT_CNT, CAMSV_0_TG_SOT_CNT*/

typedef volatile union _CAMSV_REG_TG_EOT_CNT_
{
		volatile struct	/* 0x1A050528 */
		{
				FIELD  EOT_CNT                               : 28;		/*  0..27, 0x0FFFFFFF */
				FIELD  rsv_28                                :  4;		/* 28..31, 0xF0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_EOT_CNT;	/* CAMSV_TG_EOT_CNT, CAMSV_0_TG_EOT_CNT*/

typedef volatile union _CAMSV_REG_TG_ERR_CTL_
{
		volatile struct	/* 0x1A05052C */
		{
				FIELD  GRAB_ERR_FLIMIT_NO                    :  4;		/*  0.. 3, 0x0000000F */
				FIELD  GRAB_ERR_FLIMIT_EN                    :  1;		/*  4.. 4, 0x00000010 */
				FIELD  GRAB_ERR_EN                           :  1;		/*  5.. 5, 0x00000020 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  REZ_OVRUN_FLIMIT_NO                   :  4;		/*  8..11, 0x00000F00 */
				FIELD  REZ_OVRUN_FLIMIT_EN                   :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                :  3;		/* 13..15, 0x0000E000 */
				FIELD  DBG_SRC_SEL                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_ERR_CTL;	/* CAMSV_TG_ERR_CTL, CAMSV_0_TG_ERR_CTL*/

typedef volatile union _CAMSV_REG_TG_DAT_NO_
{
		volatile struct	/* 0x1A050530 */
		{
				FIELD  DAT_NO                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_DAT_NO;	/* CAMSV_TG_DAT_NO, CAMSV_0_TG_DAT_NO*/

typedef volatile union _CAMSV_REG_TG_FRM_CNT_ST_
{
		volatile struct	/* 0x1A050534 */
		{
				FIELD  REZ_OVRUN_FCNT                        :  4;		/*  0.. 3, 0x0000000F */
				FIELD  rsv_4                                 :  4;		/*  4.. 7, 0x000000F0 */
				FIELD  GRAB_ERR_FCNT                         :  4;		/*  8..11, 0x00000F00 */
				FIELD  rsv_12                                : 20;		/* 12..31, 0xFFFFF000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FRM_CNT_ST;	/* CAMSV_TG_FRM_CNT_ST, CAMSV_0_TG_FRM_CNT_ST*/

typedef volatile union _CAMSV_REG_TG_FRMSIZE_ST_
{
		volatile struct	/* 0x1A050538 */
		{
				FIELD  LINE_CNT                              : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  PXL_CNT                               : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FRMSIZE_ST;	/* CAMSV_TG_FRMSIZE_ST, CAMSV_0_TG_FRMSIZE_ST*/

typedef volatile union _CAMSV_REG_TG_INTER_ST_
{
		volatile struct	/* 0x1A05053C */
		{
				FIELD  SYN_VF_DATA_EN                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  OUT_RDY                               :  1;		/*  1.. 1, 0x00000002 */
				FIELD  OUT_REQ                               :  1;		/*  2.. 2, 0x00000004 */
				FIELD  rsv_3                                 :  5;		/*  3.. 7, 0x000000F8 */
				FIELD  TG_CAM_CS                             :  6;		/*  8..13, 0x00003F00 */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  CAM_FRM_CNT                           :  8;		/* 16..23, 0x00FF0000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_INTER_ST;	/* CAMSV_TG_INTER_ST, CAMSV_0_TG_INTER_ST*/

typedef volatile union _CAMSV_REG_TG_FLASHA_CTL_
{
		volatile struct	/* 0x1A050540 */
		{
				FIELD  FLASHA_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLASH_EN                              :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  FLASHA_STARTPNT                       :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FLASHA_END_FRM                        :  3;		/*  8..10, 0x00000700 */
				FIELD  rsv_11                                :  1;		/* 11..11, 0x00000800 */
				FIELD  FLASH_POL                             :  1;		/* 12..12, 0x00001000 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHA_CTL;	/* CAMSV_TG_FLASHA_CTL, CAMSV_0_TG_FLASHA_CTL*/

typedef volatile union _CAMSV_REG_TG_FLASHA_LINE_CNT_
{
		volatile struct	/* 0x1A050544 */
		{
				FIELD  FLASHA_LUNIT_NO                       : 20;		/*  0..19, 0x000FFFFF */
				FIELD  FLASHA_LUNIT                          :  4;		/* 20..23, 0x00F00000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHA_LINE_CNT;	/* CAMSV_TG_FLASHA_LINE_CNT, CAMSV_0_TG_FLASHA_LINE_CNT*/

typedef volatile union _CAMSV_REG_TG_FLASHA_POS_
{
		volatile struct	/* 0x1A050548 */
		{
				FIELD  FLASHA_PXL                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FLASHA_LINE                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHA_POS;	/* CAMSV_TG_FLASHA_POS, CAMSV_0_TG_FLASHA_POS*/

typedef volatile union _CAMSV_REG_TG_FLASHB_CTL_
{
		volatile struct	/* 0x1A05054C */
		{
				FIELD  FLASHB_EN                             :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FLASHB_TRIG_SRC                       :  1;		/*  1.. 1, 0x00000002 */
				FIELD  rsv_2                                 :  2;		/*  2.. 3, 0x0000000C */
				FIELD  FLASHB_STARTPNT                       :  2;		/*  4.. 5, 0x00000030 */
				FIELD  rsv_6                                 :  2;		/*  6.. 7, 0x000000C0 */
				FIELD  FLASHB_START_FRM                      :  4;		/*  8..11, 0x00000F00 */
				FIELD  FLASHB_CONT_FRM                       :  3;		/* 12..14, 0x00007000 */
				FIELD  rsv_15                                : 17;		/* 15..31, 0xFFFF8000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHB_CTL;	/* CAMSV_TG_FLASHB_CTL, CAMSV_0_TG_FLASHB_CTL*/

typedef volatile union _CAMSV_REG_TG_FLASHB_LINE_CNT_
{
		volatile struct	/* 0x1A050550 */
		{
				FIELD  FLASHB_LUNIT_NO                       : 20;		/*  0..19, 0x000FFFFF */
				FIELD  FLASHB_LUNIT                          :  4;		/* 20..23, 0x00F00000 */
				FIELD  rsv_24                                :  8;		/* 24..31, 0xFF000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHB_LINE_CNT;	/* CAMSV_TG_FLASHB_LINE_CNT, CAMSV_0_TG_FLASHB_LINE_CNT*/

typedef volatile union _CAMSV_REG_TG_FLASHB_POS_
{
		volatile struct	/* 0x1A050554 */
		{
				FIELD  FLASHB_PXL                            : 15;		/*  0..14, 0x00007FFF */
				FIELD  rsv_15                                :  1;		/* 15..15, 0x00008000 */
				FIELD  FLASHB_LINE                           : 14;		/* 16..29, 0x3FFF0000 */
				FIELD  rsv_30                                :  2;		/* 30..31, 0xC0000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHB_POS;	/* CAMSV_TG_FLASHB_POS, CAMSV_0_TG_FLASHB_POS*/

typedef volatile union _CAMSV_REG_TG_FLASHB_POS1_
{
		volatile struct	/* 0x1A050558 */
		{
				FIELD  FLASHB_CYC_CNT                        : 20;		/*  0..19, 0x000FFFFF */
				FIELD  rsv_20                                : 12;		/* 20..31, 0xFFF00000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FLASHB_POS1;	/* CAMSV_TG_FLASHB_POS1, CAMSV_0_TG_FLASHB_POS1*/

typedef volatile union _CAMSV_REG_TG_I2C_CQ_TRIG_
{
		volatile struct	/* 0x1A050560 */
		{
				FIELD  TG_I2C_CQ_TRIG                        :  1;		/*  0.. 0, 0x00000001 */
				FIELD  rsv_1                                 : 31;		/*  1..31, 0xFFFFFFFE */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_I2C_CQ_TRIG;	/* CAMSV_TG_I2C_CQ_TRIG, CAMSV_0_TG_I2C_CQ_TRIG*/

typedef volatile union _CAMSV_REG_TG_CQ_TIMING_
{
		volatile struct	/* 0x1A050564 */
		{
				FIELD  TG_I2C_CQ_TIM                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_CQ_TIMING;	/* CAMSV_TG_CQ_TIMING, CAMSV_0_TG_CQ_TIMING*/

typedef volatile union _CAMSV_REG_TG_CQ_NUM_
{
		volatile struct	/* 0x1A050568 */
		{
				FIELD  TG_CQ_NUM                             :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 : 27;		/*  5..31, 0xFFFFFFE0 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_CQ_NUM;	/* CAMSV_TG_CQ_NUM, CAMSV_0_TG_CQ_NUM*/

typedef volatile union _CAMSV_REG_TG_TIME_STAMP_
{
		volatile struct	/* 0x1A050570 */
		{
				FIELD  TG_TIME_STAMP                         : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_TIME_STAMP;	/* CAMSV_TG_TIME_STAMP, CAMSV_0_TG_TIME_STAMP*/

typedef volatile union _CAMSV_REG_TG_SUB_PERIOD_
{
		volatile struct	/* 0x1A050574 */
		{
				FIELD  VS_PERIOD                             :  5;		/*  0.. 4, 0x0000001F */
				FIELD  rsv_5                                 :  3;		/*  5.. 7, 0x000000E0 */
				FIELD  SOF_PERIOD                            :  5;		/*  8..12, 0x00001F00 */
				FIELD  rsv_13                                : 19;		/* 13..31, 0xFFFFE000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_SUB_PERIOD;	/* CAMSV_TG_SUB_PERIOD, CAMSV_0_TG_SUB_PERIOD*/

typedef volatile union _CAMSV_REG_TG_DAT_NO_R_
{
		volatile struct	/* 0x1A050578 */
		{
				FIELD  DAT_NO                                : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_DAT_NO_R;	/* CAMSV_TG_DAT_NO_R, CAMSV_0_TG_DAT_NO_R*/

typedef volatile union _CAMSV_REG_TG_FRMSIZE_ST_R_
{
		volatile struct	/* 0x1A05057C */
		{
				FIELD  LINE_CNT                              : 14;		/*  0..13, 0x00003FFF */
				FIELD  rsv_14                                :  2;		/* 14..15, 0x0000C000 */
				FIELD  PXL_CNT                               : 15;		/* 16..30, 0x7FFF0000 */
				FIELD  rsv_31                                :  1;		/* 31..31, 0x80000000 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_TG_FRMSIZE_ST_R;	/* CAMSV_TG_FRMSIZE_ST_R, CAMSV_0_TG_FRMSIZE_ST_R*/

typedef volatile union _CAMSV_REG_DMA_FRAME_HEADER_EN_
{
		volatile struct	/* 0x1A050E00 */
		{
				FIELD  FRAME_HEADER_EN_IMGO                  :  1;		/*  0.. 0, 0x00000001 */
				FIELD  FRAME_HEADER_EN_RRZO                  :  1;		/*  1.. 1, 0x00000002 */
				FIELD  FRAME_HEADER_EN_AAO                   :  1;		/*  2.. 2, 0x00000004 */
				FIELD  FRAME_HEADER_EN_AFO                   :  1;		/*  3.. 3, 0x00000008 */
				FIELD  FRAME_HEADER_EN_LCSO                  :  1;		/*  4.. 4, 0x00000010 */
				FIELD  FRAME_HEADER_EN_UFEO                  :  1;		/*  5.. 5, 0x00000020 */
				FIELD  FRAME_HEADER_EN_PDO                   :  1;		/*  6.. 6, 0x00000040 */
				FIELD  rsv_7                                 : 25;		/*  7..31, 0xFFFFFF80 */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_DMA_FRAME_HEADER_EN;	/* CAMSV_DMA_FRAME_HEADER_EN, CAMSV_0_DMA_FRAME_HEADER_EN*/

typedef volatile union _CAMSV_REG_IMGO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E04 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_BASE_ADDR;	/* CAMSV_IMGO_FH_BASE_ADDR, CAMSV_0_IMGO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_RRZO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E08 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_RRZO_FH_BASE_ADDR;	/* CAMSV_RRZO_FH_BASE_ADDR, CAMSV_0_RRZO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_AAO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E0C */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_AAO_FH_BASE_ADDR;	/* CAMSV_AAO_FH_BASE_ADDR, CAMSV_0_AAO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_AFO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E10 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_AFO_FH_BASE_ADDR;	/* CAMSV_AFO_FH_BASE_ADDR, CAMSV_0_AFO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_LCSO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E14 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_LCSO_FH_BASE_ADDR;	/* CAMSV_LCSO_FH_BASE_ADDR, CAMSV_0_LCSO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_UFEO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E18 */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_UFEO_FH_BASE_ADDR;	/* CAMSV_UFEO_FH_BASE_ADDR, CAMSV_0_UFEO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_PDO_FH_BASE_ADDR_
{
		volatile struct	/* 0x1A050E1C */
		{
				FIELD  BASE_ADDR                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_PDO_FH_BASE_ADDR;	/* CAMSV_PDO_FH_BASE_ADDR, CAMSV_0_PDO_FH_BASE_ADDR*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_2_
{
		volatile struct	/* 0x1A050E30 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_2;	/* CAMSV_IMGO_FH_SPARE_2, CAMSV_0_IMGO_FH_SPARE_2*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_3_
{
		volatile struct	/* 0x1A050E34 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_3;	/* CAMSV_IMGO_FH_SPARE_3, CAMSV_0_IMGO_FH_SPARE_3*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_4_
{
		volatile struct	/* 0x1A050E38 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_4;	/* CAMSV_IMGO_FH_SPARE_4, CAMSV_0_IMGO_FH_SPARE_4*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_5_
{
		volatile struct	/* 0x1A050E3C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_5;	/* CAMSV_IMGO_FH_SPARE_5, CAMSV_0_IMGO_FH_SPARE_5*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_6_
{
		volatile struct	/* 0x1A050E40 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_6;	/* CAMSV_IMGO_FH_SPARE_6, CAMSV_0_IMGO_FH_SPARE_6*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_7_
{
		volatile struct	/* 0x1A050E44 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_7;	/* CAMSV_IMGO_FH_SPARE_7, CAMSV_0_IMGO_FH_SPARE_7*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_8_
{
		volatile struct	/* 0x1A050E48 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_8;	/* CAMSV_IMGO_FH_SPARE_8, CAMSV_0_IMGO_FH_SPARE_8*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_9_
{
		volatile struct	/* 0x1A050E4C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_9;	/* CAMSV_IMGO_FH_SPARE_9, CAMSV_0_IMGO_FH_SPARE_9*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_10_
{
		volatile struct	/* 0x1A050E50 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_10;	/* CAMSV_IMGO_FH_SPARE_10, CAMSV_0_IMGO_FH_SPARE_10*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_11_
{
		volatile struct	/* 0x1A050E54 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_11;	/* CAMSV_IMGO_FH_SPARE_11, CAMSV_0_IMGO_FH_SPARE_11*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_12_
{
		volatile struct	/* 0x1A050E58 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_12;	/* CAMSV_IMGO_FH_SPARE_12, CAMSV_0_IMGO_FH_SPARE_12*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_13_
{
		volatile struct	/* 0x1A050E5C */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_13;	/* CAMSV_IMGO_FH_SPARE_13, CAMSV_0_IMGO_FH_SPARE_13*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_14_
{
		volatile struct	/* 0x1A050E60 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_14;	/* CAMSV_IMGO_FH_SPARE_14, CAMSV_0_IMGO_FH_SPARE_14*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_15_
{
		volatile struct	/* 0x1A050E64 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_15;	/* CAMSV_IMGO_FH_SPARE_15, CAMSV_0_IMGO_FH_SPARE_15*/

typedef volatile union _CAMSV_REG_IMGO_FH_SPARE_16_
{
		volatile struct	/* 0x1A050E68 */
		{
				FIELD  SPARE_REG                             : 32;		/*  0..31, 0xFFFFFFFF */
		} Bits;
		UINT32 Raw;
}CAMSV_REG_IMGO_FH_SPARE_16;	/* CAMSV_IMGO_FH_SPARE_16, CAMSV_0_IMGO_FH_SPARE_16*/
#if 0
typedef volatile struct _mipi_ana_reg_t_	/* 0x10217000..0x1021814F */
{
	MIPI_REG_RX_ANA00_CSI0                          MIPI_RX_ANA00_CSI0;                              /* 0000, 0x10217000 */
	MIPI_REG_RX_ANA04_CSI0                          MIPI_RX_ANA04_CSI0;                              /* 0004, 0x10217004 */
	MIPI_REG_RX_ANA08_CSI0                          MIPI_RX_ANA08_CSI0;                              /* 0008, 0x10217008 */
	MIPI_REG_RX_ANA0C_CSI0                          MIPI_RX_ANA0C_CSI0;                              /* 000C, 0x1021700C */
	MIPI_REG_RX_ANA10_CSI0                          MIPI_RX_ANA10_CSI0;                              /* 0010, 0x10217010 */
	UINT32                                          rsv_0014[3];                                     /* 0014..001F, 0x10217014..1021701F */
	MIPI_REG_RX_ANA20_CSI0                          MIPI_RX_ANA20_CSI0;                              /* 0020, 0x10217020 */
	MIPI_REG_RX_ANA24_CSI0                          MIPI_RX_ANA24_CSI0;                              /* 0024, 0x10217024 */
	MIPI_REG_RX_ANA28_CSI0                          MIPI_RX_ANA28_CSI0;                              /* 0028, 0x10217028 */
	UINT32                                          rsv_002C;                                        /* 002C, 0x1021702C */
	MIPI_REG_RX_ANA30_CSI0                          MIPI_RX_ANA30_CSI0;                              /* 0030, 0x10217030 */
	UINT32                                          rsv_0034[4];                                     /* 0034..0043, 0x10217034..10217043 */
	MIPI_REG_RX_ANA44_CSI0                          MIPI_RX_ANA44_CSI0;                              /* 0044, 0x10217044 */
	UINT32                                          rsv_0048;                                        /* 0048, 0x10217048 */
	MIPI_REG_RX_ANA4C_CSI0                          MIPI_RX_ANA4C_CSI0;                              /* 004C, 0x1021704C */
	MIPI_REG_RX_ANA50_CSI0                          MIPI_RX_ANA50_CSI0;                              /* 0050, 0x10217050 */
	MIPI_REG_RX_ANA54_CSI0                          MIPI_RX_ANA54_CSI0;                              /* 0054, 0x10217054 */
	MIPI_REG_RX_ANA58_CSI0                          MIPI_RX_ANA58_CSI0;                              /* 0058, 0x10217058 */
	UINT32                                          rsv_005C[7];                                     /* 005C..0077, 0x1021705C..10217077 */
	MIPI_REG_RX_ANA78_CSI0                          MIPI_RX_ANA78_CSI0;                              /* 0078, 0x10217078 */
	MIPI_REG_RX_ANA7C_CSI0                          MIPI_RX_ANA7C_CSI0;                              /* 007C, 0x1021707C */
	MIPI_REG_RX_ANA80_CSI0                          MIPI_RX_ANA80_CSI0;                              /* 0080, 0x10217080 */
	MIPI_REG_RX_ANA84_CSI0                          MIPI_RX_ANA84_CSI0;                              /* 0084, 0x10217084 */
	MIPI_REG_RX_ANA88_CSI0                          MIPI_RX_ANA88_CSI0;                              /* 0088, 0x10217088 */
	MIPI_REG_RX_ANA8C_CSI0                          MIPI_RX_ANA8C_CSI0;                              /* 008C, 0x1021708C */
	MIPI_REG_RX_ANA90_CSI0                          MIPI_RX_ANA90_CSI0;                              /* 0090, 0x10217090 */
	MIPI_REG_RX_ANA94_CSI0                          MIPI_RX_ANA94_CSI0;                              /* 0094, 0x10217094 */
	MIPI_REG_RX_ANA98_CSI0                          MIPI_RX_ANA98_CSI0;                              /* 0098, 0x10217098 */
	UINT32                                          rsv_009C;                                        /* 009C, 0x1021709C */
	MIPI_REG_RX_ANAA0_CSI0                          MIPI_RX_ANAA0_CSI0;                              /* 00A0, 0x102170A0 */
	UINT32                                          rsv_00A4[3];                                     /* 00A4..00AF, 0x102170A4..102170AF */
	MIPI_REG_RX_ANAB0_CSI0                          MIPI_RX_ANAB0_CSI0;                              /* 00B0, 0x102170B0 */
	MIPI_REG_RX_ANAB4_CSI0                          MIPI_RX_ANAB4_CSI0;                              /* 00B4, 0x102170B4 */
	MIPI_REG_RX_ANAB8_CSI0                          MIPI_RX_ANAB8_CSI0;                              /* 00B8, 0x102170B8 */
	MIPI_REG_RX_ANABC_CSI0                          MIPI_RX_ANABC_CSI0;                              /* 00BC, 0x102170BC */
	MIPI_REG_RX_ANAC0_CSI0                          MIPI_RX_ANAC0_CSI0;                              /* 00C0, 0x102170C0 */
	MIPI_REG_RX_ANAC4_CSI0                          MIPI_RX_ANAC4_CSI0;                              /* 00C4, 0x102170C4 */
	MIPI_REG_RX_ANAC8_CSI0                          MIPI_RX_ANAC8_CSI0;                              /* 00C8, 0x102170C8 */
	MIPI_REG_RX_ANACC_CSI0                          MIPI_RX_ANACC_CSI0;                              /* 00CC, 0x102170CC */
	MIPI_REG_RX_ANAD0_CSI0                          MIPI_RX_ANAD0_CSI0;                              /* 00D0, 0x102170D0 */
	UINT32                                          rsv_00D4[971];                                   /* 00D4..0FFF, 0x102170D4..10217FFF */
	MIPI_REG_RX_ANA00_CSI1                          MIPI_RX_ANA00_CSI1;                              /* 1000, 0x10218000 */
	MIPI_REG_RX_ANA04_CSI1                          MIPI_RX_ANA04_CSI1;                              /* 1004, 0x10218004 */
	MIPI_REG_RX_ANA08_CSI1                          MIPI_RX_ANA08_CSI1;                              /* 1008, 0x10218008 */
	MIPI_REG_RX_ANA0C_CSI1                          MIPI_RX_ANA0C_CSI1;                              /* 100C, 0x1021800C */
	MIPI_REG_RX_ANA10_CSI1                          MIPI_RX_ANA10_CSI1;                              /* 1010, 0x10218010 */
	UINT32                                          rsv_1014[3];                                     /* 1014..101F, 0x10218014..1021801F */
	MIPI_REG_RX_ANA20_CSI1                          MIPI_RX_ANA20_CSI1;                              /* 1020, 0x10218020 */
	MIPI_REG_RX_ANA24_CSI1                          MIPI_RX_ANA24_CSI1;                              /* 1024, 0x10218024 */
	MIPI_REG_RX_ANA28_CSI1                          MIPI_RX_ANA28_CSI1;                              /* 1028, 0x10218028 */
	UINT32                                          rsv_102C;                                        /* 102C, 0x1021802C */
	MIPI_REG_RX_ANA30_CSI1                          MIPI_RX_ANA30_CSI1;                              /* 1030, 0x10218030 */
	UINT32                                          rsv_1034[4];                                     /* 1034..1043, 0x10218034..10218043 */
	MIPI_REG_RX_ANA44_CSI1                          MIPI_RX_ANA44_CSI1;                              /* 1044, 0x10218044 */
	UINT32                                          rsv_1048;                                        /* 1048, 0x10218048 */
	MIPI_REG_RX_ANA4C_CSI1                          MIPI_RX_ANA4C_CSI1;                              /* 104C, 0x1021804C */
	MIPI_REG_RX_ANA50_CSI1                          MIPI_RX_ANA50_CSI1;                              /* 1050, 0x10218050 */
	MIPI_REG_RX_ANA54_CSI1                          MIPI_RX_ANA54_CSI1;                              /* 1054, 0x10218054 */
	MIPI_REG_RX_ANA58_CSI1                          MIPI_RX_ANA58_CSI1;                              /* 1058, 0x10218058 */
	UINT32                                          rsv_105C[7];                                     /* 105C..1077, 0x1021805C..10218077 */
	MIPI_REG_RX_ANA78_CSI1                          MIPI_RX_ANA78_CSI1;                              /* 1078, 0x10218078 */
	MIPI_REG_RX_ANA7C_CSI1                          MIPI_RX_ANA7C_CSI1;                              /* 107C, 0x1021807C */
	MIPI_REG_RX_ANA80_CSI1                          MIPI_RX_ANA80_CSI1;                              /* 1080, 0x10218080 */
	MIPI_REG_RX_ANA84_CSI1                          MIPI_RX_ANA84_CSI1;                              /* 1084, 0x10218084 */
	MIPI_REG_RX_ANA88_CSI1                          MIPI_RX_ANA88_CSI1;                              /* 1088, 0x10218088 */
	MIPI_REG_RX_ANA8C_CSI1                          MIPI_RX_ANA8C_CSI1;                              /* 108C, 0x1021808C */
	MIPI_REG_RX_ANA90_CSI1                          MIPI_RX_ANA90_CSI1;                              /* 1090, 0x10218090 */
	MIPI_REG_RX_ANA94_CSI1                          MIPI_RX_ANA94_CSI1;                              /* 1094, 0x10218094 */
	MIPI_REG_RX_ANA98_CSI1                          MIPI_RX_ANA98_CSI1;                              /* 1098, 0x10218098 */
	UINT32                                          rsv_109C;                                        /* 109C, 0x1021809C */
	MIPI_REG_RX_ANAA0_CSI1                          MIPI_RX_ANAA0_CSI1;                              /* 10A0, 0x102180A0 */
	UINT32                                          rsv_10A4[3];                                     /* 10A4..10AF, 0x102180A4..102180AF */
	MIPI_REG_RX_ANAB0_CSI1                          MIPI_RX_ANAB0_CSI1;                              /* 10B0, 0x102180B0 */
	MIPI_REG_RX_ANAB4_CSI1                          MIPI_RX_ANAB4_CSI1;                              /* 10B4, 0x102180B4 */
	MIPI_REG_RX_ANAB8_CSI1                          MIPI_RX_ANAB8_CSI1;                              /* 10B8, 0x102180B8 */
	MIPI_REG_RX_ANABC_CSI1                          MIPI_RX_ANABC_CSI1;                              /* 10BC, 0x102180BC */
	MIPI_REG_RX_ANAC0_CSI1                          MIPI_RX_ANAC0_CSI1;                              /* 10C0, 0x102180C0 */
	MIPI_REG_RX_ANAC4_CSI1                          MIPI_RX_ANAC4_CSI1;                              /* 10C4, 0x102180C4 */
	MIPI_REG_RX_ANAC8_CSI1                          MIPI_RX_ANAC8_CSI1;                              /* 10C8, 0x102180C8 */
	MIPI_REG_RX_ANACC_CSI1                          MIPI_RX_ANACC_CSI1;                              /* 10CC, 0x102180CC */
	MIPI_REG_RX_ANAD0_CSI1                          MIPI_RX_ANAD0_CSI1;                              /* 10D0, 0x102180D0 */
	UINT32                                          rsv_10D4[31];                                    /* 10D4..114F, 102180D4..1021814F */
}mipi_ana_reg_t;
#endif
typedef volatile struct _isp_img_reg_t_	/* 0x15020000..0x15020117 */
{
	IMG_REG_CG_CON                                  IMG_CG_CON;                                      /* 0000, 0x15020000 */
	IMG_REG_CG_SET                                  IMG_CG_SET;                                      /* 0004, 0x15020004 */
	IMG_REG_CG_CLR                                  IMG_CG_CLR;                                      /* 0008, 0x15020008 */
	IMG_REG_SW_RST                                  IMG_SW_RST;                                      /* 000C, 0x1502000C */
	IMG_REG_SPARE0                                  IMG_SPARE0;                                      /* 0010, 0x15020010 */
	IMG_REG_SPARE1                                  IMG_SPARE1;                                      /* 0014, 0x15020014 */
	IMG_REG_SPARE2                                  IMG_SPARE2;                                      /* 0018, 0x15020018 */
	IMG_REG_SPARE3                                  IMG_SPARE3;                                      /* 001C, 0x1502001C */
	IMG_REG_SPARE4                                  IMG_SPARE4;                                      /* 0020, 0x15020020 */
	IMG_REG_SPARE5                                  IMG_SPARE5;                                      /* 0024, 0x15020024 */
	IMG_REG_SPARE6                                  IMG_SPARE6;                                      /* 0028, 0x15020028 */
	IMG_REG_SPARE7                                  IMG_SPARE7;                                      /* 002C, 0x1502002C */
	IMG_REG_DBG_SEL                                 IMG_DBG_SEL;                                     /* 0030, 0x15020030 */
	IMG_REG_MBIST_MODE0                             IMG_MBIST_MODE0;                                 /* 0034, 0x15020034 */
	IMG_REG_MBIST_MODE1                             IMG_MBIST_MODE1;                                 /* 0038, 0x15020038 */
	IMG_REG_MBIST_CTL                               IMG_MBIST_CTL;                                   /* 003C, 0x1502003C */
	IMG_REG_MBIST_FAIL0                             IMG_MBIST_FAIL0;                                 /* 0040, 0x15020040 */
	IMG_REG_MBIST_FAIL1                             IMG_MBIST_FAIL1;                                 /* 0044, 0x15020044 */
	IMG_REG_MBIST_FAIL2                             IMG_MBIST_FAIL2;                                 /* 0048, 0x15020048 */
	IMG_REG_MBIST_FAIL3                             IMG_MBIST_FAIL3;                                 /* 004C, 0x1502004C */
	IMG_REG_MBIST_FAIL4                             IMG_MBIST_FAIL4;                                 /* 0050, 0x15020050 */
	IMG_REG_MBIST_FAIL5                             IMG_MBIST_FAIL5;                                 /* 0054, 0x15020054 */
	IMG_REG_MBIST_FAIL6                             IMG_MBIST_FAIL6;                                 /* 0058, 0x15020058 */
	IMG_REG_MBIST_FAIL7                             IMG_MBIST_FAIL7;                                 /* 005C, 0x1502005C */
	IMG_REG_SRAM_DELSEL0                            IMG_SRAM_DELSEL0;                                /* 0060, 0x15020060 */
	IMG_REG_SRAM_DELSEL1                            IMG_SRAM_DELSEL1;                                /* 0064, 0x15020064 */
	IMG_REG_SRAM_DELSEL2                            IMG_SRAM_DELSEL2;                                /* 0068, 0x15020068 */
	IMG_REG_SRAM_DELSEL3                            IMG_SRAM_DELSEL3;                                /* 006C, 0x1502006C */
	IMG_REG_SRAM_DELSEL4                            IMG_SRAM_DELSEL4;                                /* 0070, 0x15020070 */
	IMG_REG_SRAM_DELSEL5                            IMG_SRAM_DELSEL5;                                /* 0074, 0x15020074 */
	IMG_REG_SRAM_DELSEL6                            IMG_SRAM_DELSEL6;                                /* 0078, 0x15020078 */
	IMG_REG_SRAM_DELSEL7                            IMG_SRAM_DELSEL7;                                /* 007C, 0x1502007C */
	IMG_REG_SRAM_DELSEL8                            IMG_SRAM_DELSEL8;                                /* 0080, 0x15020080 */
	IMG_REG_SRAM_DELSEL9                            IMG_SRAM_DELSEL9;                                /* 0084, 0x15020084 */
	IMG_REG_SRAM_DELSEL10                           IMG_SRAM_DELSEL10;                               /* 0088, 0x15020088 */
	IMG_REG_SRAM_DELSEL11                           IMG_SRAM_DELSEL11;                               /* 008C, 0x1502008C */
	IMG_REG_SRAM_DELSEL12                           IMG_SRAM_DELSEL12;                               /* 0090, 0x15020090 */
	IMG_REG_SRAM_DELSEL13                           IMG_SRAM_DELSEL13;                               /* 0094, 0x15020094 */
	IMG_REG_SRAM_DELSEL14                           IMG_SRAM_DELSEL14;                               /* 0098, 0x15020098 */
	IMG_REG_SRAM_DELSEL15                           IMG_SRAM_DELSEL15;                               /* 009C, 0x1502009C */
	IMG_REG_SRAM_DELSEL16                           IMG_SRAM_DELSEL16;                               /* 00A0, 0x150200A0 */
	IMG_REG_SRAM_DELSEL17                           IMG_SRAM_DELSEL17;                               /* 00A4, 0x150200A4 */
	IMG_REG_SRAM_DELSEL18                           IMG_SRAM_DELSEL18;                               /* 00A8, 0x150200A8 */
	IMG_REG_SRAM_DELSEL19                           IMG_SRAM_DELSEL19;                               /* 00AC, 0x150200AC */
	IMG_REG_SRAM_DELSEL20                           IMG_SRAM_DELSEL20;                               /* 00B0, 0x150200B0 */
	IMG_REG_SRAM_DELSEL21                           IMG_SRAM_DELSEL21;                               /* 00B4, 0x150200B4 */
	IMG_REG_SRAM_DELSEL22                           IMG_SRAM_DELSEL22;                               /* 00B8, 0x150200B8 */
	IMG_REG_SRAM_DELSEL23                           IMG_SRAM_DELSEL23;                               /* 00BC, 0x150200BC */
	IMG_REG_SRAM_DELSEL24                           IMG_SRAM_DELSEL24;                               /* 00C0, 0x150200C0 */
	IMG_REG_SRAM_DELSEL25                           IMG_SRAM_DELSEL25;                               /* 00C4, 0x150200C4 */
	UINT32                                          rsv_00C8[20];                                    /* 00C8..0117, 150200C8..15020117 */
}isp_img_reg_t;

typedef volatile struct _dip_x_reg_t_	/* 0x15022000..0x1502495B */
{
	DIP_X_REG_CTL_START                             DIP_X_CTL_START;                                 /* 0000, 0x15022000, DIP_A_CTL_START */
	DIP_X_REG_CTL_YUV_EN                            DIP_X_CTL_YUV_EN;                                /* 0004, 0x15022004, DIP_A_CTL_YUV_EN */
	DIP_X_REG_CTL_YUV2_EN                           DIP_X_CTL_YUV2_EN;                               /* 0008, 0x15022008, DIP_A_CTL_YUV2_EN */
	DIP_X_REG_CTL_RGB_EN                            DIP_X_CTL_RGB_EN;                                /* 000C, 0x1502200C, DIP_A_CTL_RGB_EN */
	DIP_X_REG_CTL_DMA_EN                            DIP_X_CTL_DMA_EN;                                /* 0010, 0x15022010, DIP_A_CTL_DMA_EN */
	DIP_X_REG_CTL_FMT_SEL                           DIP_X_CTL_FMT_SEL;                               /* 0014, 0x15022014, DIP_A_CTL_FMT_SEL */
	DIP_X_REG_CTL_PATH_SEL                          DIP_X_CTL_PATH_SEL;                              /* 0018, 0x15022018, DIP_A_CTL_PATH_SEL */
	DIP_X_REG_CTL_MISC_SEL                          DIP_X_CTL_MISC_SEL;                              /* 001C, 0x1502201C, DIP_A_CTL_MISC_SEL */
	DIP_X_REG_CTL_INT_EN                            DIP_X_CTL_INT_EN;                                /* 0020, 0x15022020, DIP_A_CTL_INT_EN */
	DIP_X_REG_CTL_CQ_INT_EN                         DIP_X_CTL_CQ_INT_EN;                             /* 0024, 0x15022024, DIP_A_CTL_CQ_INT_EN */
	DIP_X_REG_CTL_CQ_INT2_EN                        DIP_X_CTL_CQ_INT2_EN;                            /* 0028, 0x15022028, DIP_A_CTL_CQ_INT2_EN */
	DIP_X_REG_CTL_CQ_INT3_EN                        DIP_X_CTL_CQ_INT3_EN;                            /* 002C, 0x1502202C, DIP_A_CTL_CQ_INT3_EN */
	DIP_X_REG_CTL_INT_STATUS                        DIP_X_CTL_INT_STATUS;                            /* 0030, 0x15022030, DIP_A_CTL_INT_STATUS */
	DIP_X_REG_CTL_CQ_INT_STATUS                     DIP_X_CTL_CQ_INT_STATUS;                         /* 0034, 0x15022034, DIP_A_CTL_CQ_INT_STATUS */
	DIP_X_REG_CTL_CQ_INT2_STATUS                    DIP_X_CTL_CQ_INT2_STATUS;                        /* 0038, 0x15022038, DIP_A_CTL_CQ_INT2_STATUS */
	DIP_X_REG_CTL_CQ_INT3_STATUS                    DIP_X_CTL_CQ_INT3_STATUS;                        /* 003C, 0x1502203C, DIP_A_CTL_CQ_INT3_STATUS */
	DIP_X_REG_CTL_INT_STATUSX                       DIP_X_CTL_INT_STATUSX;                           /* 0040, 0x15022040, DIP_A_CTL_INT_STATUSX */
	DIP_X_REG_CTL_CQ_INT_STATUSX                    DIP_X_CTL_CQ_INT_STATUSX;                        /* 0044, 0x15022044, DIP_A_CTL_CQ_INT_STATUSX */
	DIP_X_REG_CTL_CQ_INT2_STATUSX                   DIP_X_CTL_CQ_INT2_STATUSX;                       /* 0048, 0x15022048, DIP_A_CTL_CQ_INT2_STATUSX */
	DIP_X_REG_CTL_CQ_INT3_STATUSX                   DIP_X_CTL_CQ_INT3_STATUSX;                       /* 004C, 0x1502204C, DIP_A_CTL_CQ_INT3_STATUSX */
	DIP_X_REG_CTL_TDR_CTL                           DIP_X_CTL_TDR_CTL;                               /* 0050, 0x15022050, DIP_A_CTL_TDR_CTL */
	DIP_X_REG_CTL_TDR_TILE                          DIP_X_CTL_TDR_TILE;                              /* 0054, 0x15022054, DIP_A_CTL_TDR_TILE */
	DIP_X_REG_CTL_TDR_TCM_EN                        DIP_X_CTL_TDR_TCM_EN;                            /* 0058, 0x15022058, DIP_A_CTL_TDR_TCM_EN */
	DIP_X_REG_CTL_TDR_TCM2_EN                       DIP_X_CTL_TDR_TCM2_EN;                           /* 005C, 0x1502205C, DIP_A_CTL_TDR_TCM2_EN */
	DIP_X_REG_CTL_TDR_EN_STATUS1                    DIP_X_CTL_TDR_EN_STATUS1;                        /* 0060, 0x15022060, DIP_A_CTL_TDR_EN_STATUS1 */
	DIP_X_REG_CTL_TDR_EN_STATUS2                    DIP_X_CTL_TDR_EN_STATUS2;                        /* 0064, 0x15022064, DIP_A_CTL_TDR_EN_STATUS2 */
	DIP_X_REG_CTL_TDR_DBG_STATUS                    DIP_X_CTL_TDR_DBG_STATUS;                        /* 0068, 0x15022068, DIP_A_CTL_TDR_DBG_STATUS */
	DIP_X_REG_CTL_SW_CTL                            DIP_X_CTL_SW_CTL;                                /* 006C, 0x1502206C, DIP_A_CTL_SW_CTL */
	DIP_X_REG_CTL_SPARE0                            DIP_X_CTL_SPARE0;                                /* 0070, 0x15022070, DIP_A_CTL_SPARE0 */
	DIP_X_REG_CTL_SPARE1                            DIP_X_CTL_SPARE1;                                /* 0074, 0x15022074, DIP_A_CTL_SPARE1 */
	DIP_X_REG_CTL_SPARE2                            DIP_X_CTL_SPARE2;                                /* 0078, 0x15022078, DIP_A_CTL_SPARE2 */
	DIP_X_REG_CTL_DONE_SEL                          DIP_X_CTL_DONE_SEL;                              /* 007C, 0x1502207C, DIP_A_CTL_DONE_SEL */
	DIP_X_REG_CTL_DBG_SET                           DIP_X_CTL_DBG_SET;                               /* 0080, 0x15022080, DIP_A_CTL_DBG_SET */
	DIP_X_REG_CTL_DBG_PORT                          DIP_X_CTL_DBG_PORT;                              /* 0084, 0x15022084, DIP_A_CTL_DBG_PORT */
	DIP_X_REG_CTL_DATE_CODE                         DIP_X_CTL_DATE_CODE;                             /* 0088, 0x15022088, DIP_A_CTL_DATE_CODE */
	DIP_X_REG_CTL_PROJ_CODE                         DIP_X_CTL_PROJ_CODE;                             /* 008C, 0x1502208C, DIP_A_CTL_PROJ_CODE */
	DIP_X_REG_CTL_YUV_DCM_DIS                       DIP_X_CTL_YUV_DCM_DIS;                           /* 0090, 0x15022090, DIP_A_CTL_YUV_DCM_DIS */
	DIP_X_REG_CTL_YUV2_DCM_DIS                      DIP_X_CTL_YUV2_DCM_DIS;                          /* 0094, 0x15022094, DIP_A_CTL_YUV2_DCM_DIS */
	DIP_X_REG_CTL_RGB_DCM_DIS                       DIP_X_CTL_RGB_DCM_DIS;                           /* 0098, 0x15022098, DIP_A_CTL_RGB_DCM_DIS */
	DIP_X_REG_CTL_DMA_DCM_DIS                       DIP_X_CTL_DMA_DCM_DIS;                           /* 009C, 0x1502209C, DIP_A_CTL_DMA_DCM_DIS */
	DIP_X_REG_CTL_TOP_DCM_DIS                       DIP_X_CTL_TOP_DCM_DIS;                           /* 00A0, 0x150220A0, DIP_A_CTL_TOP_DCM_DIS */
	DIP_X_REG_CTL_YUV_DCM_STATUS                    DIP_X_CTL_YUV_DCM_STATUS;                        /* 00A4, 0x150220A4, DIP_A_CTL_YUV_DCM_STATUS */
	DIP_X_REG_CTL_YUV2_DCM_STATUS                   DIP_X_CTL_YUV2_DCM_STATUS;                       /* 00A8, 0x150220A8, DIP_A_CTL_YUV2_DCM_STATUS */
	DIP_X_REG_CTL_RGB_DCM_STATUS                    DIP_X_CTL_RGB_DCM_STATUS;                        /* 00AC, 0x150220AC, DIP_A_CTL_RGB_DCM_STATUS */
	DIP_X_REG_CTL_DMA_DCM_STATUS                    DIP_X_CTL_DMA_DCM_STATUS;                        /* 00B0, 0x150220B0, DIP_A_CTL_DMA_DCM_STATUS */
	DIP_X_REG_CTL_TOP_DCM_STATUS                    DIP_X_CTL_TOP_DCM_STATUS;                        /* 00B4, 0x150220B4, DIP_A_CTL_TOP_DCM_STATUS */
	DIP_X_REG_CTL_YUV_REQ_STATUS                    DIP_X_CTL_YUV_REQ_STATUS;                        /* 00B8, 0x150220B8, DIP_A_CTL_YUV_REQ_STATUS */
	DIP_X_REG_CTL_YUV2_REQ_STATUS                   DIP_X_CTL_YUV2_REQ_STATUS;                       /* 00BC, 0x150220BC, DIP_A_CTL_YUV2_REQ_STATUS */
	DIP_X_REG_CTL_RGB_REQ_STATUS                    DIP_X_CTL_RGB_REQ_STATUS;                        /* 00C0, 0x150220C0, DIP_A_CTL_RGB_REQ_STATUS */
	DIP_X_REG_CTL_DMA_REQ_STATUS                    DIP_X_CTL_DMA_REQ_STATUS;                        /* 00C4, 0x150220C4, DIP_A_CTL_DMA_REQ_STATUS */
	DIP_X_REG_CTL_YUV_RDY_STATUS                    DIP_X_CTL_YUV_RDY_STATUS;                        /* 00C8, 0x150220C8, DIP_A_CTL_YUV_RDY_STATUS */
	DIP_X_REG_CTL_YUV2_RDY_STATUS                   DIP_X_CTL_YUV2_RDY_STATUS;                       /* 00CC, 0x150220CC, DIP_A_CTL_YUV2_RDY_STATUS */
	DIP_X_REG_CTL_RGB_RDY_STATUS                    DIP_X_CTL_RGB_RDY_STATUS;                        /* 00D0, 0x150220D0, DIP_A_CTL_RGB_RDY_STATUS */
	DIP_X_REG_CTL_DMA_RDY_STATUS                    DIP_X_CTL_DMA_RDY_STATUS;                        /* 00D4, 0x150220D4, DIP_A_CTL_DMA_RDY_STATUS */
	UINT32                                          rsv_00D8[10];                                    /* 00D8..00FF, 0x150220D8..150220FF */
	DIP_X_REG_CQ_EN                                 DIP_X_CQ_EN;                                     /* 0100, 0x15022100, DIP_A_CQ_EN */
	DIP_X_REG_CQ_THR0_CTL                           DIP_X_CQ_THR0_CTL;                               /* 0104, 0x15022104, DIP_A_CQ_THR0_CTL */
	DIP_X_REG_CQ_THR0_BASEADDR                      DIP_X_CQ_THR0_BASEADDR;                          /* 0108, 0x15022108, DIP_A_CQ_THR0_BASEADDR */
	DIP_X_REG_CQ_THR0_DESC_SIZE                     DIP_X_CQ_THR0_DESC_SIZE;                         /* 010C, 0x1502210C, DIP_A_CQ_THR0_DESC_SIZE */
	DIP_X_REG_CQ_THR1_CTL                           DIP_X_CQ_THR1_CTL;                               /* 0110, 0x15022110, DIP_A_CQ_THR1_CTL */
	DIP_X_REG_CQ_THR1_BASEADDR                      DIP_X_CQ_THR1_BASEADDR;                          /* 0114, 0x15022114, DIP_A_CQ_THR1_BASEADDR */
	DIP_X_REG_CQ_THR1_DESC_SIZE                     DIP_X_CQ_THR1_DESC_SIZE;                         /* 0118, 0x15022118, DIP_A_CQ_THR1_DESC_SIZE */
	DIP_X_REG_CQ_THR2_CTL                           DIP_X_CQ_THR2_CTL;                               /* 011C, 0x1502211C, DIP_A_CQ_THR2_CTL */
	DIP_X_REG_CQ_THR2_BASEADDR                      DIP_X_CQ_THR2_BASEADDR;                          /* 0120, 0x15022120, DIP_A_CQ_THR2_BASEADDR */
	DIP_X_REG_CQ_THR2_DESC_SIZE                     DIP_X_CQ_THR2_DESC_SIZE;                         /* 0124, 0x15022124, DIP_A_CQ_THR2_DESC_SIZE */
	DIP_X_REG_CQ_THR3_CTL                           DIP_X_CQ_THR3_CTL;                               /* 0128, 0x15022128, DIP_A_CQ_THR3_CTL */
	DIP_X_REG_CQ_THR3_BASEADDR                      DIP_X_CQ_THR3_BASEADDR;                          /* 012C, 0x1502212C, DIP_A_CQ_THR3_BASEADDR */
	DIP_X_REG_CQ_THR3_DESC_SIZE                     DIP_X_CQ_THR3_DESC_SIZE;                         /* 0130, 0x15022130, DIP_A_CQ_THR3_DESC_SIZE */
	DIP_X_REG_CQ_THR4_CTL                           DIP_X_CQ_THR4_CTL;                               /* 0134, 0x15022134, DIP_A_CQ_THR4_CTL */
	DIP_X_REG_CQ_THR4_BASEADDR                      DIP_X_CQ_THR4_BASEADDR;                          /* 0138, 0x15022138, DIP_A_CQ_THR4_BASEADDR */
	DIP_X_REG_CQ_THR4_DESC_SIZE                     DIP_X_CQ_THR4_DESC_SIZE;                         /* 013C, 0x1502213C, DIP_A_CQ_THR4_DESC_SIZE */
	DIP_X_REG_CQ_THR5_CTL                           DIP_X_CQ_THR5_CTL;                               /* 0140, 0x15022140, DIP_A_CQ_THR5_CTL */
	DIP_X_REG_CQ_THR5_BASEADDR                      DIP_X_CQ_THR5_BASEADDR;                          /* 0144, 0x15022144, DIP_A_CQ_THR5_BASEADDR */
	DIP_X_REG_CQ_THR5_DESC_SIZE                     DIP_X_CQ_THR5_DESC_SIZE;                         /* 0148, 0x15022148, DIP_A_CQ_THR5_DESC_SIZE */
	DIP_X_REG_CQ_THR6_CTL                           DIP_X_CQ_THR6_CTL;                               /* 014C, 0x1502214C, DIP_A_CQ_THR6_CTL */
	DIP_X_REG_CQ_THR6_BASEADDR                      DIP_X_CQ_THR6_BASEADDR;                          /* 0150, 0x15022150, DIP_A_CQ_THR6_BASEADDR */
	DIP_X_REG_CQ_THR6_DESC_SIZE                     DIP_X_CQ_THR6_DESC_SIZE;                         /* 0154, 0x15022154, DIP_A_CQ_THR6_DESC_SIZE */
	DIP_X_REG_CQ_THR7_CTL                           DIP_X_CQ_THR7_CTL;                               /* 0158, 0x15022158, DIP_A_CQ_THR7_CTL */
	DIP_X_REG_CQ_THR7_BASEADDR                      DIP_X_CQ_THR7_BASEADDR;                          /* 015C, 0x1502215C, DIP_A_CQ_THR7_BASEADDR */
	DIP_X_REG_CQ_THR7_DESC_SIZE                     DIP_X_CQ_THR7_DESC_SIZE;                         /* 0160, 0x15022160, DIP_A_CQ_THR7_DESC_SIZE */
	DIP_X_REG_CQ_THR8_CTL                           DIP_X_CQ_THR8_CTL;                               /* 0164, 0x15022164, DIP_A_CQ_THR8_CTL */
	DIP_X_REG_CQ_THR8_BASEADDR                      DIP_X_CQ_THR8_BASEADDR;                          /* 0168, 0x15022168, DIP_A_CQ_THR8_BASEADDR */
	DIP_X_REG_CQ_THR8_DESC_SIZE                     DIP_X_CQ_THR8_DESC_SIZE;                         /* 016C, 0x1502216C, DIP_A_CQ_THR8_DESC_SIZE */
	DIP_X_REG_CQ_THR9_CTL                           DIP_X_CQ_THR9_CTL;                               /* 0170, 0x15022170, DIP_A_CQ_THR9_CTL */
	DIP_X_REG_CQ_THR9_BASEADDR                      DIP_X_CQ_THR9_BASEADDR;                          /* 0174, 0x15022174, DIP_A_CQ_THR9_BASEADDR */
	DIP_X_REG_CQ_THR9_DESC_SIZE                     DIP_X_CQ_THR9_DESC_SIZE;                         /* 0178, 0x15022178, DIP_A_CQ_THR9_DESC_SIZE */
	DIP_X_REG_CQ_THR10_CTL                          DIP_X_CQ_THR10_CTL;                              /* 017C, 0x1502217C, DIP_A_CQ_THR10_CTL */
	DIP_X_REG_CQ_THR10_BASEADDR                     DIP_X_CQ_THR10_BASEADDR;                         /* 0180, 0x15022180, DIP_A_CQ_THR10_BASEADDR */
	DIP_X_REG_CQ_THR10_DESC_SIZE                    DIP_X_CQ_THR10_DESC_SIZE;                        /* 0184, 0x15022184, DIP_A_CQ_THR10_DESC_SIZE */
	DIP_X_REG_CQ_THR11_CTL                          DIP_X_CQ_THR11_CTL;                              /* 0188, 0x15022188, DIP_A_CQ_THR11_CTL */
	DIP_X_REG_CQ_THR11_BASEADDR                     DIP_X_CQ_THR11_BASEADDR;                         /* 018C, 0x1502218C, DIP_A_CQ_THR11_BASEADDR */
	DIP_X_REG_CQ_THR11_DESC_SIZE                    DIP_X_CQ_THR11_DESC_SIZE;                        /* 0190, 0x15022190, DIP_A_CQ_THR11_DESC_SIZE */
	DIP_X_REG_CQ_THR12_CTL                          DIP_X_CQ_THR12_CTL;                              /* 0194, 0x15022194, DIP_A_CQ_THR12_CTL */
	DIP_X_REG_CQ_THR12_BASEADDR                     DIP_X_CQ_THR12_BASEADDR;                         /* 0198, 0x15022198, DIP_A_CQ_THR12_BASEADDR */
	DIP_X_REG_CQ_THR12_DESC_SIZE                    DIP_X_CQ_THR12_DESC_SIZE;                        /* 019C, 0x1502219C, DIP_A_CQ_THR12_DESC_SIZE */
	DIP_X_REG_CQ_THR13_CTL                          DIP_X_CQ_THR13_CTL;                              /* 01A0, 0x150221A0, DIP_A_CQ_THR13_CTL */
	DIP_X_REG_CQ_THR13_BASEADDR                     DIP_X_CQ_THR13_BASEADDR;                         /* 01A4, 0x150221A4, DIP_A_CQ_THR13_BASEADDR */
	DIP_X_REG_CQ_THR13_DESC_SIZE                    DIP_X_CQ_THR13_DESC_SIZE;                        /* 01A8, 0x150221A8, DIP_A_CQ_THR13_DESC_SIZE */
	DIP_X_REG_CQ_THR14_CTL                          DIP_X_CQ_THR14_CTL;                              /* 01AC, 0x150221AC, DIP_A_CQ_THR14_CTL */
	DIP_X_REG_CQ_THR14_BASEADDR                     DIP_X_CQ_THR14_BASEADDR;                         /* 01B0, 0x150221B0, DIP_A_CQ_THR14_BASEADDR */
	DIP_X_REG_CQ_THR14_DESC_SIZE                    DIP_X_CQ_THR14_DESC_SIZE;                        /* 01B4, 0x150221B4, DIP_A_CQ_THR14_DESC_SIZE */
	DIP_X_REG_CQ_THR15_CTL                          DIP_X_CQ_THR15_CTL;                              /* 01B8, 0x150221B8, DIP_A_CQ_THR15_CTL */
	DIP_X_REG_CQ_THR15_BASEADDR                     DIP_X_CQ_THR15_BASEADDR;                         /* 01BC, 0x150221BC, DIP_A_CQ_THR15_BASEADDR */
	DIP_X_REG_CQ_THR15_DESC_SIZE                    DIP_X_CQ_THR15_DESC_SIZE;                        /* 01C0, 0x150221C0, DIP_A_CQ_THR15_DESC_SIZE */
	DIP_X_REG_CQ_THR16_CTL                          DIP_X_CQ_THR16_CTL;                              /* 01C4, 0x150221C4, DIP_A_CQ_THR16_CTL */
	DIP_X_REG_CQ_THR16_BASEADDR                     DIP_X_CQ_THR16_BASEADDR;                         /* 01C8, 0x150221C8, DIP_A_CQ_THR16_BASEADDR */
	DIP_X_REG_CQ_THR16_DESC_SIZE                    DIP_X_CQ_THR16_DESC_SIZE;                        /* 01CC, 0x150221CC, DIP_A_CQ_THR16_DESC_SIZE */
	DIP_X_REG_CQ_THR17_CTL                          DIP_X_CQ_THR17_CTL;                              /* 01D0, 0x150221D0, DIP_A_CQ_THR17_CTL */
	DIP_X_REG_CQ_THR17_BASEADDR                     DIP_X_CQ_THR17_BASEADDR;                         /* 01D4, 0x150221D4, DIP_A_CQ_THR17_BASEADDR */
	DIP_X_REG_CQ_THR17_DESC_SIZE                    DIP_X_CQ_THR17_DESC_SIZE;                        /* 01D8, 0x150221D8, DIP_A_CQ_THR17_DESC_SIZE */
	DIP_X_REG_CQ_THR18_CTL                          DIP_X_CQ_THR18_CTL;                              /* 01DC, 0x150221DC, DIP_A_CQ_THR18_CTL */
	DIP_X_REG_CQ_THR18_BASEADDR                     DIP_X_CQ_THR18_BASEADDR;                         /* 01E0, 0x150221E0, DIP_A_CQ_THR18_BASEADDR */
	DIP_X_REG_CQ_THR18_DESC_SIZE                    DIP_X_CQ_THR18_DESC_SIZE;                        /* 01E4, 0x150221E4, DIP_A_CQ_THR18_DESC_SIZE */
	UINT32                                          rsv_01E8[6];                                     /* 01E8..01FF, 0x150221E8..150221FF */
	DIP_X_REG_DMA_SOFT_RSTSTAT                      DIP_X_DMA_SOFT_RSTSTAT;                          /* 0200, 0x15022200, DIP_A_DMA_SOFT_RSTSTAT */
	DIP_X_REG_TDRI_BASE_ADDR                        DIP_X_TDRI_BASE_ADDR;                            /* 0204, 0x15022204, DIP_A_TDRI_BASE_ADDR */
	DIP_X_REG_TDRI_OFST_ADDR                        DIP_X_TDRI_OFST_ADDR;                            /* 0208, 0x15022208, DIP_A_TDRI_OFST_ADDR */
	DIP_X_REG_TDRI_XSIZE                            DIP_X_TDRI_XSIZE;                                /* 020C, 0x1502220C, DIP_A_TDRI_XSIZE */
	DIP_X_REG_VERTICAL_FLIP_EN                      DIP_X_VERTICAL_FLIP_EN;                          /* 0210, 0x15022210, DIP_A_VERTICAL_FLIP_EN */
	DIP_X_REG_DMA_SOFT_RESET                        DIP_X_DMA_SOFT_RESET;                            /* 0214, 0x15022214, DIP_A_DMA_SOFT_RESET */
	DIP_X_REG_LAST_ULTRA_EN                         DIP_X_LAST_ULTRA_EN;                             /* 0218, 0x15022218, DIP_A_LAST_ULTRA_EN */
	DIP_X_REG_SPECIAL_FUN_EN                        DIP_X_SPECIAL_FUN_EN;                            /* 021C, 0x1502221C, DIP_A_SPECIAL_FUN_EN */
	UINT32                                          rsv_0220[4];                                     /* 0220..022F, 0x15022220..1502222F */
	DIP_X_REG_IMG2O_BASE_ADDR                       DIP_X_IMG2O_BASE_ADDR;                           /* 0230, 0x15022230, DIP_A_IMG2O_BASE_ADDR */
	UINT32                                          rsv_0234;                                        /* 0234, 0x15022234 */
	DIP_X_REG_IMG2O_OFST_ADDR                       DIP_X_IMG2O_OFST_ADDR;                           /* 0238, 0x15022238, DIP_A_IMG2O_OFST_ADDR */
	UINT32                                          rsv_023C;                                        /* 023C, 0x1502223C */
	DIP_X_REG_IMG2O_XSIZE                           DIP_X_IMG2O_XSIZE;                               /* 0240, 0x15022240, DIP_A_IMG2O_XSIZE */
	DIP_X_REG_IMG2O_YSIZE                           DIP_X_IMG2O_YSIZE;                               /* 0244, 0x15022244, DIP_A_IMG2O_YSIZE */
	DIP_X_REG_IMG2O_STRIDE                          DIP_X_IMG2O_STRIDE;                              /* 0248, 0x15022248, DIP_A_IMG2O_STRIDE */
	DIP_X_REG_IMG2O_CON                             DIP_X_IMG2O_CON;                                 /* 024C, 0x1502224C, DIP_A_IMG2O_CON */
	DIP_X_REG_IMG2O_CON2                            DIP_X_IMG2O_CON2;                                /* 0250, 0x15022250, DIP_A_IMG2O_CON2 */
	DIP_X_REG_IMG2O_CON3                            DIP_X_IMG2O_CON3;                                /* 0254, 0x15022254, DIP_A_IMG2O_CON3 */
	DIP_X_REG_IMG2O_CROP                            DIP_X_IMG2O_CROP;                                /* 0258, 0x15022258, DIP_A_IMG2O_CROP */
	UINT32                                          rsv_025C;                                        /* 025C, 0x1502225C */
	DIP_X_REG_IMG2BO_BASE_ADDR                      DIP_X_IMG2BO_BASE_ADDR;                          /* 0260, 0x15022260, DIP_A_IMG2BO_BASE_ADDR */
	UINT32                                          rsv_0264;                                        /* 0264, 0x15022264 */
	DIP_X_REG_IMG2BO_OFST_ADDR                      DIP_X_IMG2BO_OFST_ADDR;                          /* 0268, 0x15022268, DIP_A_IMG2BO_OFST_ADDR */
	UINT32                                          rsv_026C;                                        /* 026C, 0x1502226C */
	DIP_X_REG_IMG2BO_XSIZE                          DIP_X_IMG2BO_XSIZE;                              /* 0270, 0x15022270, DIP_A_IMG2BO_XSIZE */
	DIP_X_REG_IMG2BO_YSIZE                          DIP_X_IMG2BO_YSIZE;                              /* 0274, 0x15022274, DIP_A_IMG2BO_YSIZE */
	DIP_X_REG_IMG2BO_STRIDE                         DIP_X_IMG2BO_STRIDE;                             /* 0278, 0x15022278, DIP_A_IMG2BO_STRIDE */
	DIP_X_REG_IMG2BO_CON                            DIP_X_IMG2BO_CON;                                /* 027C, 0x1502227C, DIP_A_IMG2BO_CON */
	DIP_X_REG_IMG2BO_CON2                           DIP_X_IMG2BO_CON2;                               /* 0280, 0x15022280, DIP_A_IMG2BO_CON2 */
	DIP_X_REG_IMG2BO_CON3                           DIP_X_IMG2BO_CON3;                               /* 0284, 0x15022284, DIP_A_IMG2BO_CON3 */
	DIP_X_REG_IMG2BO_CROP                           DIP_X_IMG2BO_CROP;                               /* 0288, 0x15022288, DIP_A_IMG2BO_CROP */
	UINT32                                          rsv_028C;                                        /* 028C, 0x1502228C */
	DIP_X_REG_IMG3O_BASE_ADDR                       DIP_X_IMG3O_BASE_ADDR;                           /* 0290, 0x15022290, DIP_A_IMG3O_BASE_ADDR */
	UINT32                                          rsv_0294;                                        /* 0294, 0x15022294 */
	DIP_X_REG_IMG3O_OFST_ADDR                       DIP_X_IMG3O_OFST_ADDR;                           /* 0298, 0x15022298, DIP_A_IMG3O_OFST_ADDR */
	UINT32                                          rsv_029C;                                        /* 029C, 0x1502229C */
	DIP_X_REG_IMG3O_XSIZE                           DIP_X_IMG3O_XSIZE;                               /* 02A0, 0x150222A0, DIP_A_IMG3O_XSIZE */
	DIP_X_REG_IMG3O_YSIZE                           DIP_X_IMG3O_YSIZE;                               /* 02A4, 0x150222A4, DIP_A_IMG3O_YSIZE */
	DIP_X_REG_IMG3O_STRIDE                          DIP_X_IMG3O_STRIDE;                              /* 02A8, 0x150222A8, DIP_A_IMG3O_STRIDE */
	DIP_X_REG_IMG3O_CON                             DIP_X_IMG3O_CON;                                 /* 02AC, 0x150222AC, DIP_A_IMG3O_CON */
	DIP_X_REG_IMG3O_CON2                            DIP_X_IMG3O_CON2;                                /* 02B0, 0x150222B0, DIP_A_IMG3O_CON2 */
	DIP_X_REG_IMG3O_CON3                            DIP_X_IMG3O_CON3;                                /* 02B4, 0x150222B4, DIP_A_IMG3O_CON3 */
	DIP_X_REG_IMG3O_CROP                            DIP_X_IMG3O_CROP;                                /* 02B8, 0x150222B8, DIP_A_IMG3O_CROP */
	UINT32                                          rsv_02BC;                                        /* 02BC, 0x150222BC */
	DIP_X_REG_IMG3BO_BASE_ADDR                      DIP_X_IMG3BO_BASE_ADDR;                          /* 02C0, 0x150222C0, DIP_A_IMG3BO_BASE_ADDR */
	UINT32                                          rsv_02C4;                                        /* 02C4, 0x150222C4 */
	DIP_X_REG_IMG3BO_OFST_ADDR                      DIP_X_IMG3BO_OFST_ADDR;                          /* 02C8, 0x150222C8, DIP_A_IMG3BO_OFST_ADDR */
	UINT32                                          rsv_02CC;                                        /* 02CC, 0x150222CC */
	DIP_X_REG_IMG3BO_XSIZE                          DIP_X_IMG3BO_XSIZE;                              /* 02D0, 0x150222D0, DIP_A_IMG3BO_XSIZE */
	DIP_X_REG_IMG3BO_YSIZE                          DIP_X_IMG3BO_YSIZE;                              /* 02D4, 0x150222D4, DIP_A_IMG3BO_YSIZE */
	DIP_X_REG_IMG3BO_STRIDE                         DIP_X_IMG3BO_STRIDE;                             /* 02D8, 0x150222D8, DIP_A_IMG3BO_STRIDE */
	DIP_X_REG_IMG3BO_CON                            DIP_X_IMG3BO_CON;                                /* 02DC, 0x150222DC, DIP_A_IMG3BO_CON */
	DIP_X_REG_IMG3BO_CON2                           DIP_X_IMG3BO_CON2;                               /* 02E0, 0x150222E0, DIP_A_IMG3BO_CON2 */
	DIP_X_REG_IMG3BO_CON3                           DIP_X_IMG3BO_CON3;                               /* 02E4, 0x150222E4, DIP_A_IMG3BO_CON3 */
	DIP_X_REG_IMG3BO_CROP                           DIP_X_IMG3BO_CROP;                               /* 02E8, 0x150222E8, DIP_A_IMG3BO_CROP */
	UINT32                                          rsv_02EC;                                        /* 02EC, 0x150222EC */
	DIP_X_REG_IMG3CO_BASE_ADDR                      DIP_X_IMG3CO_BASE_ADDR;                          /* 02F0, 0x150222F0, DIP_A_IMG3CO_BASE_ADDR */
	UINT32                                          rsv_02F4;                                        /* 02F4, 0x150222F4 */
	DIP_X_REG_IMG3CO_OFST_ADDR                      DIP_X_IMG3CO_OFST_ADDR;                          /* 02F8, 0x150222F8, DIP_A_IMG3CO_OFST_ADDR */
	UINT32                                          rsv_02FC;                                        /* 02FC, 0x150222FC */
	DIP_X_REG_IMG3CO_XSIZE                          DIP_X_IMG3CO_XSIZE;                              /* 0300, 0x15022300, DIP_A_IMG3CO_XSIZE */
	DIP_X_REG_IMG3CO_YSIZE                          DIP_X_IMG3CO_YSIZE;                              /* 0304, 0x15022304, DIP_A_IMG3CO_YSIZE */
	DIP_X_REG_IMG3CO_STRIDE                         DIP_X_IMG3CO_STRIDE;                             /* 0308, 0x15022308, DIP_A_IMG3CO_STRIDE */
	DIP_X_REG_IMG3CO_CON                            DIP_X_IMG3CO_CON;                                /* 030C, 0x1502230C, DIP_A_IMG3CO_CON */
	DIP_X_REG_IMG3CO_CON2                           DIP_X_IMG3CO_CON2;                               /* 0310, 0x15022310, DIP_A_IMG3CO_CON2 */
	DIP_X_REG_IMG3CO_CON3                           DIP_X_IMG3CO_CON3;                               /* 0314, 0x15022314, DIP_A_IMG3CO_CON3 */
	DIP_X_REG_IMG3CO_CROP                           DIP_X_IMG3CO_CROP;                               /* 0318, 0x15022318, DIP_A_IMG3CO_CROP */
	UINT32                                          rsv_031C;                                        /* 031C, 0x1502231C */
	DIP_X_REG_FEO_BASE_ADDR                         DIP_X_FEO_BASE_ADDR;                             /* 0320, 0x15022320, DIP_A_FEO_BASE_ADDR */
	UINT32                                          rsv_0324;                                        /* 0324, 0x15022324 */
	DIP_X_REG_FEO_OFST_ADDR                         DIP_X_FEO_OFST_ADDR;                             /* 0328, 0x15022328, DIP_A_FEO_OFST_ADDR */
	UINT32                                          rsv_032C;                                        /* 032C, 0x1502232C */
	DIP_X_REG_FEO_XSIZE                             DIP_X_FEO_XSIZE;                                 /* 0330, 0x15022330, DIP_A_FEO_XSIZE */
	DIP_X_REG_FEO_YSIZE                             DIP_X_FEO_YSIZE;                                 /* 0334, 0x15022334, DIP_A_FEO_YSIZE */
	DIP_X_REG_FEO_STRIDE                            DIP_X_FEO_STRIDE;                                /* 0338, 0x15022338, DIP_A_FEO_STRIDE */
	DIP_X_REG_FEO_CON                               DIP_X_FEO_CON;                                   /* 033C, 0x1502233C, DIP_A_FEO_CON */
	DIP_X_REG_FEO_CON2                              DIP_X_FEO_CON2;                                  /* 0340, 0x15022340, DIP_A_FEO_CON2 */
	DIP_X_REG_FEO_CON3                              DIP_X_FEO_CON3;                                  /* 0344, 0x15022344, DIP_A_FEO_CON3 */
	UINT32                                          rsv_0348[2];                                     /* 0348..034F, 0x15022348..1502234F */
	DIP_X_REG_MFBO_BASE_ADDR                        DIP_X_MFBO_BASE_ADDR;                            /* 0350, 0x15022350, DIP_A_MFBO_BASE_ADDR */
	UINT32                                          rsv_0354;                                        /* 0354, 0x15022354 */
	DIP_X_REG_MFBO_OFST_ADDR                        DIP_X_MFBO_OFST_ADDR;                            /* 0358, 0x15022358, DIP_A_MFBO_OFST_ADDR */
	UINT32                                          rsv_035C;                                        /* 035C, 0x1502235C */
	DIP_X_REG_MFBO_XSIZE                            DIP_X_MFBO_XSIZE;                                /* 0360, 0x15022360, DIP_A_MFBO_XSIZE */
	DIP_X_REG_MFBO_YSIZE                            DIP_X_MFBO_YSIZE;                                /* 0364, 0x15022364, DIP_A_MFBO_YSIZE */
	DIP_X_REG_MFBO_STRIDE                           DIP_X_MFBO_STRIDE;                               /* 0368, 0x15022368, DIP_A_MFBO_STRIDE */
	DIP_X_REG_MFBO_CON                              DIP_X_MFBO_CON;                                  /* 036C, 0x1502236C, DIP_A_MFBO_CON */
	DIP_X_REG_MFBO_CON2                             DIP_X_MFBO_CON2;                                 /* 0370, 0x15022370, DIP_A_MFBO_CON2 */
	DIP_X_REG_MFBO_CON3                             DIP_X_MFBO_CON3;                                 /* 0374, 0x15022374, DIP_A_MFBO_CON3 */
	DIP_X_REG_MFBO_CROP                             DIP_X_MFBO_CROP;                                 /* 0378, 0x15022378, DIP_A_MFBO_CROP */
	UINT32                                          rsv_037C[33];                                    /* 037C..03FF, 0x1502237C..150223FF */
	DIP_X_REG_IMGI_BASE_ADDR                        DIP_X_IMGI_BASE_ADDR;                            /* 0400, 0x15022400, DIP_A_IMGI_BASE_ADDR */
	UINT32                                          rsv_0404;                                        /* 0404, 0x15022404 */
	DIP_X_REG_IMGI_OFST_ADDR                        DIP_X_IMGI_OFST_ADDR;                            /* 0408, 0x15022408, DIP_A_IMGI_OFST_ADDR */
	UINT32                                          rsv_040C;                                        /* 040C, 0x1502240C */
	DIP_X_REG_IMGI_XSIZE                            DIP_X_IMGI_XSIZE;                                /* 0410, 0x15022410, DIP_A_IMGI_XSIZE */
	DIP_X_REG_IMGI_YSIZE                            DIP_X_IMGI_YSIZE;                                /* 0414, 0x15022414, DIP_A_IMGI_YSIZE */
	DIP_X_REG_IMGI_STRIDE                           DIP_X_IMGI_STRIDE;                               /* 0418, 0x15022418, DIP_A_IMGI_STRIDE */
	DIP_X_REG_IMGI_CON                              DIP_X_IMGI_CON;                                  /* 041C, 0x1502241C, DIP_A_IMGI_CON */
	DIP_X_REG_IMGI_CON2                             DIP_X_IMGI_CON2;                                 /* 0420, 0x15022420, DIP_A_IMGI_CON2 */
	DIP_X_REG_IMGI_CON3                             DIP_X_IMGI_CON3;                                 /* 0424, 0x15022424, DIP_A_IMGI_CON3 */
	UINT32                                          rsv_0428[2];                                     /* 0428..042F, 0x15022428..1502242F */
	DIP_X_REG_IMGBI_BASE_ADDR                       DIP_X_IMGBI_BASE_ADDR;                           /* 0430, 0x15022430, DIP_A_IMGBI_BASE_ADDR */
	UINT32                                          rsv_0434;                                        /* 0434, 0x15022434 */
	DIP_X_REG_IMGBI_OFST_ADDR                       DIP_X_IMGBI_OFST_ADDR;                           /* 0438, 0x15022438, DIP_A_IMGBI_OFST_ADDR */
	UINT32                                          rsv_043C;                                        /* 043C, 0x1502243C */
	DIP_X_REG_IMGBI_XSIZE                           DIP_X_IMGBI_XSIZE;                               /* 0440, 0x15022440, DIP_A_IMGBI_XSIZE */
	DIP_X_REG_IMGBI_YSIZE                           DIP_X_IMGBI_YSIZE;                               /* 0444, 0x15022444, DIP_A_IMGBI_YSIZE */
	DIP_X_REG_IMGBI_STRIDE                          DIP_X_IMGBI_STRIDE;                              /* 0448, 0x15022448, DIP_A_IMGBI_STRIDE */
	DIP_X_REG_IMGBI_CON                             DIP_X_IMGBI_CON;                                 /* 044C, 0x1502244C, DIP_A_IMGBI_CON */
	DIP_X_REG_IMGBI_CON2                            DIP_X_IMGBI_CON2;                                /* 0450, 0x15022450, DIP_A_IMGBI_CON2 */
	DIP_X_REG_IMGBI_CON3                            DIP_X_IMGBI_CON3;                                /* 0454, 0x15022454, DIP_A_IMGBI_CON3 */
	UINT32                                          rsv_0458[2];                                     /* 0458..045F, 0x15022458..1502245F */
	DIP_X_REG_IMGCI_BASE_ADDR                       DIP_X_IMGCI_BASE_ADDR;                           /* 0460, 0x15022460, DIP_A_IMGCI_BASE_ADDR */
	UINT32                                          rsv_0464;                                        /* 0464, 0x15022464 */
	DIP_X_REG_IMGCI_OFST_ADDR                       DIP_X_IMGCI_OFST_ADDR;                           /* 0468, 0x15022468, DIP_A_IMGCI_OFST_ADDR */
	UINT32                                          rsv_046C;                                        /* 046C, 0x1502246C */
	DIP_X_REG_IMGCI_XSIZE                           DIP_X_IMGCI_XSIZE;                               /* 0470, 0x15022470, DIP_A_IMGCI_XSIZE */
	DIP_X_REG_IMGCI_YSIZE                           DIP_X_IMGCI_YSIZE;                               /* 0474, 0x15022474, DIP_A_IMGCI_YSIZE */
	DIP_X_REG_IMGCI_STRIDE                          DIP_X_IMGCI_STRIDE;                              /* 0478, 0x15022478, DIP_A_IMGCI_STRIDE */
	DIP_X_REG_IMGCI_CON                             DIP_X_IMGCI_CON;                                 /* 047C, 0x1502247C, DIP_A_IMGCI_CON */
	DIP_X_REG_IMGCI_CON2                            DIP_X_IMGCI_CON2;                                /* 0480, 0x15022480, DIP_A_IMGCI_CON2 */
	DIP_X_REG_IMGCI_CON3                            DIP_X_IMGCI_CON3;                                /* 0484, 0x15022484, DIP_A_IMGCI_CON3 */
	UINT32                                          rsv_0488[2];                                     /* 0488..048F, 0x15022488..1502248F */
	DIP_X_REG_VIPI_BASE_ADDR                        DIP_X_VIPI_BASE_ADDR;                            /* 0490, 0x15022490, DIP_A_VIPI_BASE_ADDR */
	UINT32                                          rsv_0494;                                        /* 0494, 0x15022494 */
	DIP_X_REG_VIPI_OFST_ADDR                        DIP_X_VIPI_OFST_ADDR;                            /* 0498, 0x15022498, DIP_A_VIPI_OFST_ADDR */
	UINT32                                          rsv_049C;                                        /* 049C, 0x1502249C */
	DIP_X_REG_VIPI_XSIZE                            DIP_X_VIPI_XSIZE;                                /* 04A0, 0x150224A0, DIP_A_VIPI_XSIZE */
	DIP_X_REG_VIPI_YSIZE                            DIP_X_VIPI_YSIZE;                                /* 04A4, 0x150224A4, DIP_A_VIPI_YSIZE */
	DIP_X_REG_VIPI_STRIDE                           DIP_X_VIPI_STRIDE;                               /* 04A8, 0x150224A8, DIP_A_VIPI_STRIDE */
	DIP_X_REG_VIPI_CON                              DIP_X_VIPI_CON;                                  /* 04AC, 0x150224AC, DIP_A_VIPI_CON */
	DIP_X_REG_VIPI_CON2                             DIP_X_VIPI_CON2;                                 /* 04B0, 0x150224B0, DIP_A_VIPI_CON2 */
	DIP_X_REG_VIPI_CON3                             DIP_X_VIPI_CON3;                                 /* 04B4, 0x150224B4, DIP_A_VIPI_CON3 */
	UINT32                                          rsv_04B8[2];                                     /* 04B8..04BF, 0x150224B8..150224BF */
	DIP_X_REG_VIP2I_BASE_ADDR                       DIP_X_VIP2I_BASE_ADDR;                           /* 04C0, 0x150224C0, DIP_A_VIP2I_BASE_ADDR */
	UINT32                                          rsv_04C4;                                        /* 04C4, 0x150224C4 */
	DIP_X_REG_VIP2I_OFST_ADDR                       DIP_X_VIP2I_OFST_ADDR;                           /* 04C8, 0x150224C8, DIP_A_VIP2I_OFST_ADDR */
	UINT32                                          rsv_04CC;                                        /* 04CC, 0x150224CC */
	DIP_X_REG_VIP2I_XSIZE                           DIP_X_VIP2I_XSIZE;                               /* 04D0, 0x150224D0, DIP_A_VIP2I_XSIZE */
	DIP_X_REG_VIP2I_YSIZE                           DIP_X_VIP2I_YSIZE;                               /* 04D4, 0x150224D4, DIP_A_VIP2I_YSIZE */
	DIP_X_REG_VIP2I_STRIDE                          DIP_X_VIP2I_STRIDE;                              /* 04D8, 0x150224D8, DIP_A_VIP2I_STRIDE */
	DIP_X_REG_VIP2I_CON                             DIP_X_VIP2I_CON;                                 /* 04DC, 0x150224DC, DIP_A_VIP2I_CON */
	DIP_X_REG_VIP2I_CON2                            DIP_X_VIP2I_CON2;                                /* 04E0, 0x150224E0, DIP_A_VIP2I_CON2 */
	DIP_X_REG_VIP2I_CON3                            DIP_X_VIP2I_CON3;                                /* 04E4, 0x150224E4, DIP_A_VIP2I_CON3 */
	UINT32                                          rsv_04E8[2];                                     /* 04E8..04EF, 0x150224E8..150224EF */
	DIP_X_REG_VIP3I_BASE_ADDR                       DIP_X_VIP3I_BASE_ADDR;                           /* 04F0, 0x150224F0, DIP_A_VIP3I_BASE_ADDR */
	UINT32                                          rsv_04F4;                                        /* 04F4, 0x150224F4 */
	DIP_X_REG_VIP3I_OFST_ADDR                       DIP_X_VIP3I_OFST_ADDR;                           /* 04F8, 0x150224F8, DIP_A_VIP3I_OFST_ADDR */
	UINT32                                          rsv_04FC;                                        /* 04FC, 0x150224FC */
	DIP_X_REG_VIP3I_XSIZE                           DIP_X_VIP3I_XSIZE;                               /* 0500, 0x15022500, DIP_A_VIP3I_XSIZE */
	DIP_X_REG_VIP3I_YSIZE                           DIP_X_VIP3I_YSIZE;                               /* 0504, 0x15022504, DIP_A_VIP3I_YSIZE */
	DIP_X_REG_VIP3I_STRIDE                          DIP_X_VIP3I_STRIDE;                              /* 0508, 0x15022508, DIP_A_VIP3I_STRIDE */
	DIP_X_REG_VIP3I_CON                             DIP_X_VIP3I_CON;                                 /* 050C, 0x1502250C, DIP_A_VIP3I_CON */
	DIP_X_REG_VIP3I_CON2                            DIP_X_VIP3I_CON2;                                /* 0510, 0x15022510, DIP_A_VIP3I_CON2 */
	DIP_X_REG_VIP3I_CON3                            DIP_X_VIP3I_CON3;                                /* 0514, 0x15022514, DIP_A_VIP3I_CON3 */
	UINT32                                          rsv_0518[2];                                     /* 0518..051F, 0x15022518..1502251F */
	DIP_X_REG_DMGI_BASE_ADDR                        DIP_X_DMGI_BASE_ADDR;                            /* 0520, 0x15022520, DIP_A_DMGI_BASE_ADDR */
	UINT32                                          rsv_0524;                                        /* 0524, 0x15022524 */
	DIP_X_REG_DMGI_OFST_ADDR                        DIP_X_DMGI_OFST_ADDR;                            /* 0528, 0x15022528, DIP_A_DMGI_OFST_ADDR */
	UINT32                                          rsv_052C;                                        /* 052C, 0x1502252C */
	DIP_X_REG_DMGI_XSIZE                            DIP_X_DMGI_XSIZE;                                /* 0530, 0x15022530, DIP_A_DMGI_XSIZE */
	DIP_X_REG_DMGI_YSIZE                            DIP_X_DMGI_YSIZE;                                /* 0534, 0x15022534, DIP_A_DMGI_YSIZE */
	DIP_X_REG_DMGI_STRIDE                           DIP_X_DMGI_STRIDE;                               /* 0538, 0x15022538, DIP_A_DMGI_STRIDE */
	DIP_X_REG_DMGI_CON                              DIP_X_DMGI_CON;                                  /* 053C, 0x1502253C, DIP_A_DMGI_CON */
	DIP_X_REG_DMGI_CON2                             DIP_X_DMGI_CON2;                                 /* 0540, 0x15022540, DIP_A_DMGI_CON2 */
	DIP_X_REG_DMGI_CON3                             DIP_X_DMGI_CON3;                                 /* 0544, 0x15022544, DIP_A_DMGI_CON3 */
	UINT32                                          rsv_0548[2];                                     /* 0548..054F, 0x15022548..1502254F */
	DIP_X_REG_DEPI_BASE_ADDR                        DIP_X_DEPI_BASE_ADDR;                            /* 0550, 0x15022550, DIP_A_DEPI_BASE_ADDR */
	UINT32                                          rsv_0554;                                        /* 0554, 0x15022554 */
	DIP_X_REG_DEPI_OFST_ADDR                        DIP_X_DEPI_OFST_ADDR;                            /* 0558, 0x15022558, DIP_A_DEPI_OFST_ADDR */
	UINT32                                          rsv_055C;                                        /* 055C, 0x1502255C */
	DIP_X_REG_DEPI_XSIZE                            DIP_X_DEPI_XSIZE;                                /* 0560, 0x15022560, DIP_A_DEPI_XSIZE */
	DIP_X_REG_DEPI_YSIZE                            DIP_X_DEPI_YSIZE;                                /* 0564, 0x15022564, DIP_A_DEPI_YSIZE */
	DIP_X_REG_DEPI_STRIDE                           DIP_X_DEPI_STRIDE;                               /* 0568, 0x15022568, DIP_A_DEPI_STRIDE */
	DIP_X_REG_DEPI_CON                              DIP_X_DEPI_CON;                                  /* 056C, 0x1502256C, DIP_A_DEPI_CON */
	DIP_X_REG_DEPI_CON2                             DIP_X_DEPI_CON2;                                 /* 0570, 0x15022570, DIP_A_DEPI_CON2 */
	DIP_X_REG_DEPI_CON3                             DIP_X_DEPI_CON3;                                 /* 0574, 0x15022574, DIP_A_DEPI_CON3 */
	UINT32                                          rsv_0578[2];                                     /* 0578..057F, 0x15022578..1502257F */
	DIP_X_REG_LCEI_BASE_ADDR                        DIP_X_LCEI_BASE_ADDR;                            /* 0580, 0x15022580, DIP_A_LCEI_BASE_ADDR */
	UINT32                                          rsv_0584;                                        /* 0584, 0x15022584 */
	DIP_X_REG_LCEI_OFST_ADDR                        DIP_X_LCEI_OFST_ADDR;                            /* 0588, 0x15022588, DIP_A_LCEI_OFST_ADDR */
	UINT32                                          rsv_058C;                                        /* 058C, 0x1502258C */
	DIP_X_REG_LCEI_XSIZE                            DIP_X_LCEI_XSIZE;                                /* 0590, 0x15022590, DIP_A_LCEI_XSIZE */
	DIP_X_REG_LCEI_YSIZE                            DIP_X_LCEI_YSIZE;                                /* 0594, 0x15022594, DIP_A_LCEI_YSIZE */
	DIP_X_REG_LCEI_STRIDE                           DIP_X_LCEI_STRIDE;                               /* 0598, 0x15022598, DIP_A_LCEI_STRIDE */
	DIP_X_REG_LCEI_CON                              DIP_X_LCEI_CON;                                  /* 059C, 0x1502259C, DIP_A_LCEI_CON */
	DIP_X_REG_LCEI_CON2                             DIP_X_LCEI_CON2;                                 /* 05A0, 0x150225A0, DIP_A_LCEI_CON2 */
	DIP_X_REG_LCEI_CON3                             DIP_X_LCEI_CON3;                                 /* 05A4, 0x150225A4, DIP_A_LCEI_CON3 */
	UINT32                                          rsv_05A8[2];                                     /* 05A8..05AF, 0x150225A8..150225AF */
	DIP_X_REG_UFDI_BASE_ADDR                        DIP_X_UFDI_BASE_ADDR;                            /* 05B0, 0x150225B0, DIP_A_UFDI_BASE_ADDR */
	UINT32                                          rsv_05B4;                                        /* 05B4, 0x150225B4 */
	DIP_X_REG_UFDI_OFST_ADDR                        DIP_X_UFDI_OFST_ADDR;                            /* 05B8, 0x150225B8, DIP_A_UFDI_OFST_ADDR */
	UINT32                                          rsv_05BC;                                        /* 05BC, 0x150225BC */
	DIP_X_REG_UFDI_XSIZE                            DIP_X_UFDI_XSIZE;                                /* 05C0, 0x150225C0, DIP_A_UFDI_XSIZE */
	DIP_X_REG_UFDI_YSIZE                            DIP_X_UFDI_YSIZE;                                /* 05C4, 0x150225C4, DIP_A_UFDI_YSIZE */
	DIP_X_REG_UFDI_STRIDE                           DIP_X_UFDI_STRIDE;                               /* 05C8, 0x150225C8, DIP_A_UFDI_STRIDE */
	DIP_X_REG_UFDI_CON                              DIP_X_UFDI_CON;                                  /* 05CC, 0x150225CC, DIP_A_UFDI_CON */
	DIP_X_REG_UFDI_CON2                             DIP_X_UFDI_CON2;                                 /* 05D0, 0x150225D0, DIP_A_UFDI_CON2 */
	DIP_X_REG_UFDI_CON3                             DIP_X_UFDI_CON3;                                 /* 05D4, 0x150225D4, DIP_A_UFDI_CON3 */
	UINT32                                          rsv_05D8[26];                                    /* 05D8..063F, 0x150225D8..1502263F */
	DIP_X_REG_DMA_ERR_CTRL                          DIP_X_DMA_ERR_CTRL;                              /* 0640, 0x15022640, DIP_A_DMA_ERR_CTRL */
	DIP_X_REG_IMG2O_ERR_STAT                        DIP_X_IMG2O_ERR_STAT;                            /* 0644, 0x15022644, DIP_A_IMG2O_ERR_STAT */
	DIP_X_REG_IMG2BO_ERR_STAT                       DIP_X_IMG2BO_ERR_STAT;                           /* 0648, 0x15022648, DIP_A_IMG2BO_ERR_STAT */
	DIP_X_REG_IMG3O_ERR_STAT                        DIP_X_IMG3O_ERR_STAT;                            /* 064C, 0x1502264C, DIP_A_IMG3O_ERR_STAT */
	DIP_X_REG_IMG3BO_ERR_STAT                       DIP_X_IMG3BO_ERR_STAT;                           /* 0650, 0x15022650, DIP_A_IMG3BO_ERR_STAT */
	DIP_X_REG_IMG3CO_ERR_STAT                       DIP_X_IMG3CO_ERR_STAT;                           /* 0654, 0x15022654, DIP_A_IMG3CO_ERR_STAT */
	DIP_X_REG_FEO_ERR_STAT                          DIP_X_FEO_ERR_STAT;                              /* 0658, 0x15022658, DIP_A_FEO_ERR_STAT */
	DIP_X_REG_MFBO_ERR_STAT                         DIP_X_MFBO_ERR_STAT;                             /* 065C, 0x1502265C, DIP_A_MFBO_ERR_STAT */
	DIP_X_REG_IMGI_ERR_STAT                         DIP_X_IMGI_ERR_STAT;                             /* 0660, 0x15022660, DIP_A_IMGI_ERR_STAT */
	DIP_X_REG_IMGBI_ERR_STAT                        DIP_X_IMGBI_ERR_STAT;                            /* 0664, 0x15022664, DIP_A_IMGBI_ERR_STAT */
	DIP_X_REG_IMGCI_ERR_STAT                        DIP_X_IMGCI_ERR_STAT;                            /* 0668, 0x15022668, DIP_A_IMGCI_ERR_STAT */
	DIP_X_REG_VIPI_ERR_STAT                         DIP_X_VIPI_ERR_STAT;                             /* 066C, 0x1502266C, DIP_A_VIPI_ERR_STAT */
	DIP_X_REG_VIP2I_ERR_STAT                        DIP_X_VIP2I_ERR_STAT;                            /* 0670, 0x15022670, DIP_A_VIP2I_ERR_STAT */
	DIP_X_REG_VIP3I_ERR_STAT                        DIP_X_VIP3I_ERR_STAT;                            /* 0674, 0x15022674, DIP_A_VIP3I_ERR_STAT */
	DIP_X_REG_DMGI_ERR_STAT                         DIP_X_DMGI_ERR_STAT;                             /* 0678, 0x15022678, DIP_A_DMGI_ERR_STAT */
	DIP_X_REG_DEPI_ERR_STAT                         DIP_X_DEPI_ERR_STAT;                             /* 067C, 0x1502267C, DIP_A_DEPI_ERR_STAT */
	DIP_X_REG_LCEI_ERR_STAT                         DIP_X_LCEI_ERR_STAT;                             /* 0680, 0x15022680, DIP_A_LCEI_ERR_STAT */
	DIP_X_REG_UFDI_ERR_STAT                         DIP_X_UFDI_ERR_STAT;                             /* 0684, 0x15022684, DIP_A_UFDI_ERR_STAT */
	UINT32                                          rsv_0688[6];                                     /* 0688..069F, 0x15022688..1502269F */
	DIP_X_REG_DMA_DEBUG_ADDR                        DIP_X_DMA_DEBUG_ADDR;                            /* 06A0, 0x150226A0, DIP_A_DMA_DEBUG_ADDR */
	DIP_X_REG_DMA_RSV1                              DIP_X_DMA_RSV1;                                  /* 06A4, 0x150226A4, DIP_A_DMA_RSV1 */
	DIP_X_REG_DMA_RSV2                              DIP_X_DMA_RSV2;                                  /* 06A8, 0x150226A8, DIP_A_DMA_RSV2 */
	DIP_X_REG_DMA_RSV3                              DIP_X_DMA_RSV3;                                  /* 06AC, 0x150226AC, DIP_A_DMA_RSV3 */
	DIP_X_REG_DMA_RSV4                              DIP_X_DMA_RSV4;                                  /* 06B0, 0x150226B0, DIP_A_DMA_RSV4 */
	DIP_X_REG_DMA_RSV5                              DIP_X_DMA_RSV5;                                  /* 06B4, 0x150226B4, DIP_A_DMA_RSV5 */
	DIP_X_REG_DMA_RSV6                              DIP_X_DMA_RSV6;                                  /* 06B8, 0x150226B8, DIP_A_DMA_RSV6 */
	DIP_X_REG_DMA_DEBUG_SEL                         DIP_X_DMA_DEBUG_SEL;                             /* 06BC, 0x150226BC, DIP_A_DMA_DEBUG_SEL */
	DIP_X_REG_DMA_BW_SELF_TEST                      DIP_X_DMA_BW_SELF_TEST;                          /* 06C0, 0x150226C0, DIP_A_DMA_BW_SELF_TEST */
	UINT32                                          rsv_06C4[15];                                    /* 06C4..06FF, 0x150226C4..150226FF */
	DIP_X_REG_UFD_CON                               DIP_X_UFD_CON;                                   /* 0700, 0x15022700, DIP_A_UFD_CON */
	DIP_X_REG_UFD_SIZE_CON                          DIP_X_UFD_SIZE_CON;                              /* 0704, 0x15022704, DIP_A_UFD_SIZE_CON */
	DIP_X_REG_UFD_AU_CON                            DIP_X_UFD_AU_CON;                                /* 0708, 0x15022708, DIP_A_UFD_AU_CON */
	DIP_X_REG_UFD_CROP_CON1                         DIP_X_UFD_CROP_CON1;                             /* 070C, 0x1502270C, DIP_A_UFD_CROP_CON1 */
	DIP_X_REG_UFD_CROP_CON2                         DIP_X_UFD_CROP_CON2;                             /* 0710, 0x15022710, DIP_A_UFD_CROP_CON2 */
	UINT32                                          rsv_0714[3];                                     /* 0714..071F, 0x15022714..1502271F */
	DIP_X_REG_PGN_SATU_1                            DIP_X_PGN_SATU_1;                                /* 0720, 0x15022720, DIP_A_PGN_SATU_1 */
	DIP_X_REG_PGN_SATU_2                            DIP_X_PGN_SATU_2;                                /* 0724, 0x15022724, DIP_A_PGN_SATU_2 */
	DIP_X_REG_PGN_GAIN_1                            DIP_X_PGN_GAIN_1;                                /* 0728, 0x15022728, DIP_A_PGN_GAIN_1 */
	DIP_X_REG_PGN_GAIN_2                            DIP_X_PGN_GAIN_2;                                /* 072C, 0x1502272C, DIP_A_PGN_GAIN_2 */
	DIP_X_REG_PGN_OFST_1                            DIP_X_PGN_OFST_1;                                /* 0730, 0x15022730, DIP_A_PGN_OFST_1 */
	DIP_X_REG_PGN_OFST_2                            DIP_X_PGN_OFST_2;                                /* 0734, 0x15022734, DIP_A_PGN_OFST_2 */
	UINT32                                          rsv_0738[2];                                     /* 0738..073F, 0x15022738..1502273F */
	DIP_X_REG_SL2_CEN                               DIP_X_SL2_CEN;                                   /* 0740, 0x15022740, DIP_A_SL2_CEN */
	DIP_X_REG_SL2_RR_CON0                           DIP_X_SL2_RR_CON0;                               /* 0744, 0x15022744, DIP_A_SL2_RR_CON0 */
	DIP_X_REG_SL2_RR_CON1                           DIP_X_SL2_RR_CON1;                               /* 0748, 0x15022748, DIP_A_SL2_RR_CON1 */
	DIP_X_REG_SL2_GAIN                              DIP_X_SL2_GAIN;                                  /* 074C, 0x1502274C, DIP_A_SL2_GAIN */
	DIP_X_REG_SL2_RZ                                DIP_X_SL2_RZ;                                    /* 0750, 0x15022750, DIP_A_SL2_RZ */
	DIP_X_REG_SL2_XOFF                              DIP_X_SL2_XOFF;                                  /* 0754, 0x15022754, DIP_A_SL2_XOFF */
	DIP_X_REG_SL2_YOFF                              DIP_X_SL2_YOFF;                                  /* 0758, 0x15022758, DIP_A_SL2_YOFF */
	DIP_X_REG_SL2_SLP_CON0                          DIP_X_SL2_SLP_CON0;                              /* 075C, 0x1502275C, DIP_A_SL2_SLP_CON0 */
	DIP_X_REG_SL2_SLP_CON1                          DIP_X_SL2_SLP_CON1;                              /* 0760, 0x15022760, DIP_A_SL2_SLP_CON1 */
	DIP_X_REG_SL2_SIZE                              DIP_X_SL2_SIZE;                                  /* 0764, 0x15022764, DIP_A_SL2_SIZE */
	UINT32                                          rsv_0768[6];                                     /* 0768..077F, 0x15022768..1502277F */
	DIP_X_REG_UDM_INTP_CRS                          DIP_X_UDM_INTP_CRS;                              /* 0780, 0x15022780, DIP_A_UDM_INTP_CRS */
	DIP_X_REG_UDM_INTP_NAT                          DIP_X_UDM_INTP_NAT;                              /* 0784, 0x15022784, DIP_A_UDM_INTP_NAT */
	DIP_X_REG_UDM_INTP_AUG                          DIP_X_UDM_INTP_AUG;                              /* 0788, 0x15022788, DIP_A_UDM_INTP_AUG */
	DIP_X_REG_UDM_LUMA_LUT1                         DIP_X_UDM_LUMA_LUT1;                             /* 078C, 0x1502278C, DIP_A_UDM_LUMA_LUT1 */
	DIP_X_REG_UDM_LUMA_LUT2                         DIP_X_UDM_LUMA_LUT2;                             /* 0790, 0x15022790, DIP_A_UDM_LUMA_LUT2 */
	DIP_X_REG_UDM_SL_CTL                            DIP_X_UDM_SL_CTL;                                /* 0794, 0x15022794, DIP_A_UDM_SL_CTL */
	DIP_X_REG_UDM_HFTD_CTL                          DIP_X_UDM_HFTD_CTL;                              /* 0798, 0x15022798, DIP_A_UDM_HFTD_CTL */
	DIP_X_REG_UDM_NR_STR                            DIP_X_UDM_NR_STR;                                /* 079C, 0x1502279C, DIP_A_UDM_NR_STR */
	DIP_X_REG_UDM_NR_ACT                            DIP_X_UDM_NR_ACT;                                /* 07A0, 0x150227A0, DIP_A_UDM_NR_ACT */
	DIP_X_REG_UDM_HF_STR                            DIP_X_UDM_HF_STR;                                /* 07A4, 0x150227A4, DIP_A_UDM_HF_STR */
	DIP_X_REG_UDM_HF_ACT1                           DIP_X_UDM_HF_ACT1;                               /* 07A8, 0x150227A8, DIP_A_UDM_HF_ACT1 */
	DIP_X_REG_UDM_HF_ACT2                           DIP_X_UDM_HF_ACT2;                               /* 07AC, 0x150227AC, DIP_A_UDM_HF_ACT2 */
	DIP_X_REG_UDM_CLIP                              DIP_X_UDM_CLIP;                                  /* 07B0, 0x150227B0, DIP_A_UDM_CLIP */
	DIP_X_REG_UDM_DSB                               DIP_X_UDM_DSB;                                   /* 07B4, 0x150227B4, DIP_A_UDM_DSB */
	DIP_X_REG_UDM_TILE_EDGE                         DIP_X_UDM_TILE_EDGE;                             /* 07B8, 0x150227B8, DIP_A_UDM_TILE_EDGE */
	DIP_X_REG_UDM_DSL                               DIP_X_UDM_DSL;                                   /* 07BC, 0x150227BC, DIP_A_UDM_DSL */
	DIP_X_REG_UDM_LR_RAT                            DIP_X_UDM_LR_RAT;                                /* 07C0, 0x150227C0, DIP_A_UDM_LR_RAT */
	DIP_X_REG_UDM_SPARE_2                           DIP_X_UDM_SPARE_2;                               /* 07C4, 0x150227C4, DIP_A_UDM_SPARE_2 */
	DIP_X_REG_UDM_SPARE_3                           DIP_X_UDM_SPARE_3;                               /* 07C8, 0x150227C8, DIP_A_UDM_SPARE_3 */
	UINT32                                          rsv_07CC[9];                                     /* 07CC..07EF, 0x150227CC..150227EF */
	DIP_X_REG_G2G_CNV_1                             DIP_X_G2G_CNV_1;                                 /* 07F0, 0x150227F0, DIP_A_G2G_CNV_1 */
	DIP_X_REG_G2G_CNV_2                             DIP_X_G2G_CNV_2;                                 /* 07F4, 0x150227F4, DIP_A_G2G_CNV_2 */
	DIP_X_REG_G2G_CNV_3                             DIP_X_G2G_CNV_3;                                 /* 07F8, 0x150227F8, DIP_A_G2G_CNV_3 */
	DIP_X_REG_G2G_CNV_4                             DIP_X_G2G_CNV_4;                                 /* 07FC, 0x150227FC, DIP_A_G2G_CNV_4 */
	DIP_X_REG_G2G_CNV_5                             DIP_X_G2G_CNV_5;                                 /* 0800, 0x15022800, DIP_A_G2G_CNV_5 */
	DIP_X_REG_G2G_CNV_6                             DIP_X_G2G_CNV_6;                                 /* 0804, 0x15022804, DIP_A_G2G_CNV_6 */
	DIP_X_REG_G2G_CTRL                              DIP_X_G2G_CTRL;                                  /* 0808, 0x15022808, DIP_A_G2G_CTRL */
	DIP_X_REG_G2G_CFC                               DIP_X_G2G_CFC;                                   /* 080C, 0x1502280C, DIP_A_G2G_CFC */
	DIP_X_REG_MFB_CON                               DIP_X_MFB_CON;                                   /* 0810, 0x15022810, DIP_A_MFB_CON */
	DIP_X_REG_MFB_LL_CON1                           DIP_X_MFB_LL_CON1;                               /* 0814, 0x15022814, DIP_A_MFB_LL_CON1 */
	DIP_X_REG_MFB_LL_CON2                           DIP_X_MFB_LL_CON2;                               /* 0818, 0x15022818, DIP_A_MFB_LL_CON2 */
	DIP_X_REG_MFB_LL_CON3                           DIP_X_MFB_LL_CON3;                               /* 081C, 0x1502281C, DIP_A_MFB_LL_CON3 */
	DIP_X_REG_MFB_LL_CON4                           DIP_X_MFB_LL_CON4;                               /* 0820, 0x15022820, DIP_A_MFB_LL_CON4 */
	DIP_X_REG_MFB_EDGE                              DIP_X_MFB_EDGE;                                  /* 0824, 0x15022824, DIP_A_MFB_EDGE */
	UINT32                                          rsv_0828[6];                                     /* 0828..083F, 0x15022828..1502283F */
	DIP_X_REG_G2C_CONV_0A                           DIP_X_G2C_CONV_0A;                               /* 0840, 0x15022840, DIP_A_G2C_CONV_0A */
	DIP_X_REG_G2C_CONV_0B                           DIP_X_G2C_CONV_0B;                               /* 0844, 0x15022844, DIP_A_G2C_CONV_0B */
	DIP_X_REG_G2C_CONV_1A                           DIP_X_G2C_CONV_1A;                               /* 0848, 0x15022848, DIP_A_G2C_CONV_1A */
	DIP_X_REG_G2C_CONV_1B                           DIP_X_G2C_CONV_1B;                               /* 084C, 0x1502284C, DIP_A_G2C_CONV_1B */
	DIP_X_REG_G2C_CONV_2A                           DIP_X_G2C_CONV_2A;                               /* 0850, 0x15022850, DIP_A_G2C_CONV_2A */
	DIP_X_REG_G2C_CONV_2B                           DIP_X_G2C_CONV_2B;                               /* 0854, 0x15022854, DIP_A_G2C_CONV_2B */
	DIP_X_REG_G2C_SHADE_CON_1                       DIP_X_G2C_SHADE_CON_1;                           /* 0858, 0x15022858, DIP_A_G2C_SHADE_CON_1 */
	DIP_X_REG_G2C_SHADE_CON_2                       DIP_X_G2C_SHADE_CON_2;                           /* 085C, 0x1502285C, DIP_A_G2C_SHADE_CON_2 */
	DIP_X_REG_G2C_SHADE_CON_3                       DIP_X_G2C_SHADE_CON_3;                           /* 0860, 0x15022860, DIP_A_G2C_SHADE_CON_3 */
	DIP_X_REG_G2C_SHADE_TAR                         DIP_X_G2C_SHADE_TAR;                             /* 0864, 0x15022864, DIP_A_G2C_SHADE_TAR */
	DIP_X_REG_G2C_SHADE_SP                          DIP_X_G2C_SHADE_SP;                              /* 0868, 0x15022868, DIP_A_G2C_SHADE_SP */
	DIP_X_REG_G2C_CFC_CON_1                         DIP_X_G2C_CFC_CON_1;                             /* 086C, 0x1502286C, DIP_A_G2C_CFC_CON_1 */
	DIP_X_REG_G2C_CFC_CON_2                         DIP_X_G2C_CFC_CON_2;                             /* 0870, 0x15022870, DIP_A_G2C_CFC_CON_2 */
	UINT32                                          rsv_0874[3];                                     /* 0874..087F, 0x15022874..1502287F */
	DIP_X_REG_C42_CON                               DIP_X_C42_CON;                                   /* 0880, 0x15022880, DIP_A_C42_CON */
	UINT32                                          rsv_0884[3];                                     /* 0884..088F, 0x15022884..1502288F */
	DIP_X_REG_SRZ3_CONTROL                          DIP_X_SRZ3_CONTROL;                              /* 0890, 0x15022890, DIP_A_SRZ3_CONTROL */
	DIP_X_REG_SRZ3_IN_IMG                           DIP_X_SRZ3_IN_IMG;                               /* 0894, 0x15022894, DIP_A_SRZ3_IN_IMG */
	DIP_X_REG_SRZ3_OUT_IMG                          DIP_X_SRZ3_OUT_IMG;                              /* 0898, 0x15022898, DIP_A_SRZ3_OUT_IMG */
	DIP_X_REG_SRZ3_HORI_STEP                        DIP_X_SRZ3_HORI_STEP;                            /* 089C, 0x1502289C, DIP_A_SRZ3_HORI_STEP */
	DIP_X_REG_SRZ3_VERT_STEP                        DIP_X_SRZ3_VERT_STEP;                            /* 08A0, 0x150228A0, DIP_A_SRZ3_VERT_STEP */
	DIP_X_REG_SRZ3_HORI_INT_OFST                    DIP_X_SRZ3_HORI_INT_OFST;                        /* 08A4, 0x150228A4, DIP_A_SRZ3_HORI_INT_OFST */
	DIP_X_REG_SRZ3_HORI_SUB_OFST                    DIP_X_SRZ3_HORI_SUB_OFST;                        /* 08A8, 0x150228A8, DIP_A_SRZ3_HORI_SUB_OFST */
	DIP_X_REG_SRZ3_VERT_INT_OFST                    DIP_X_SRZ3_VERT_INT_OFST;                        /* 08AC, 0x150228AC, DIP_A_SRZ3_VERT_INT_OFST */
	DIP_X_REG_SRZ3_VERT_SUB_OFST                    DIP_X_SRZ3_VERT_SUB_OFST;                        /* 08B0, 0x150228B0, DIP_A_SRZ3_VERT_SUB_OFST */
	UINT32                                          rsv_08B4[3];                                     /* 08B4..08BF, 0x150228B4..150228BF */
	DIP_X_REG_SRZ4_CONTROL                          DIP_X_SRZ4_CONTROL;                              /* 08C0, 0x150228C0, DIP_A_SRZ4_CONTROL */
	DIP_X_REG_SRZ4_IN_IMG                           DIP_X_SRZ4_IN_IMG;                               /* 08C4, 0x150228C4, DIP_A_SRZ4_IN_IMG */
	DIP_X_REG_SRZ4_OUT_IMG                          DIP_X_SRZ4_OUT_IMG;                              /* 08C8, 0x150228C8, DIP_A_SRZ4_OUT_IMG */
	DIP_X_REG_SRZ4_HORI_STEP                        DIP_X_SRZ4_HORI_STEP;                            /* 08CC, 0x150228CC, DIP_A_SRZ4_HORI_STEP */
	DIP_X_REG_SRZ4_VERT_STEP                        DIP_X_SRZ4_VERT_STEP;                            /* 08D0, 0x150228D0, DIP_A_SRZ4_VERT_STEP */
	DIP_X_REG_SRZ4_HORI_INT_OFST                    DIP_X_SRZ4_HORI_INT_OFST;                        /* 08D4, 0x150228D4, DIP_A_SRZ4_HORI_INT_OFST */
	DIP_X_REG_SRZ4_HORI_SUB_OFST                    DIP_X_SRZ4_HORI_SUB_OFST;                        /* 08D8, 0x150228D8, DIP_A_SRZ4_HORI_SUB_OFST */
	DIP_X_REG_SRZ4_VERT_INT_OFST                    DIP_X_SRZ4_VERT_INT_OFST;                        /* 08DC, 0x150228DC, DIP_A_SRZ4_VERT_INT_OFST */
	DIP_X_REG_SRZ4_VERT_SUB_OFST                    DIP_X_SRZ4_VERT_SUB_OFST;                        /* 08E0, 0x150228E0, DIP_A_SRZ4_VERT_SUB_OFST */
	UINT32                                          rsv_08E4[3];                                     /* 08E4..08EF, 0x150228E4..150228EF */
	DIP_X_REG_SRZ5_CONTROL                          DIP_X_SRZ5_CONTROL;                              /* 08F0, 0x150228F0, DIP_A_SRZ5_CONTROL */
	DIP_X_REG_SRZ5_IN_IMG                           DIP_X_SRZ5_IN_IMG;                               /* 08F4, 0x150228F4, DIP_A_SRZ5_IN_IMG */
	DIP_X_REG_SRZ5_OUT_IMG                          DIP_X_SRZ5_OUT_IMG;                              /* 08F8, 0x150228F8, DIP_A_SRZ5_OUT_IMG */
	DIP_X_REG_SRZ5_HORI_STEP                        DIP_X_SRZ5_HORI_STEP;                            /* 08FC, 0x150228FC, DIP_A_SRZ5_HORI_STEP */
	DIP_X_REG_SRZ5_VERT_STEP                        DIP_X_SRZ5_VERT_STEP;                            /* 0900, 0x15022900, DIP_A_SRZ5_VERT_STEP */
	DIP_X_REG_SRZ5_HORI_INT_OFST                    DIP_X_SRZ5_HORI_INT_OFST;                        /* 0904, 0x15022904, DIP_A_SRZ5_HORI_INT_OFST */
	DIP_X_REG_SRZ5_HORI_SUB_OFST                    DIP_X_SRZ5_HORI_SUB_OFST;                        /* 0908, 0x15022908, DIP_A_SRZ5_HORI_SUB_OFST */
	DIP_X_REG_SRZ5_VERT_INT_OFST                    DIP_X_SRZ5_VERT_INT_OFST;                        /* 090C, 0x1502290C, DIP_A_SRZ5_VERT_INT_OFST */
	DIP_X_REG_SRZ5_VERT_SUB_OFST                    DIP_X_SRZ5_VERT_SUB_OFST;                        /* 0910, 0x15022910, DIP_A_SRZ5_VERT_SUB_OFST */
	UINT32                                          rsv_0914[31];                                    /* 0914..098F, 0x15022914..1502298F */
	DIP_X_REG_SEEE_CTRL                             DIP_X_SEEE_CTRL;                                 /* 0990, 0x15022990, DIP_A_SEEE_CTRL */
	DIP_X_REG_SEEE_CLIP_CTRL_1                      DIP_X_SEEE_CLIP_CTRL_1;                          /* 0994, 0x15022994, DIP_A_SEEE_CLIP_CTRL_1 */
	DIP_X_REG_SEEE_CLIP_CTRL_2                      DIP_X_SEEE_CLIP_CTRL_2;                          /* 0998, 0x15022998, DIP_A_SEEE_CLIP_CTRL_2 */
	DIP_X_REG_SEEE_CLIP_CTRL_3                      DIP_X_SEEE_CLIP_CTRL_3;                          /* 099C, 0x1502299C, DIP_A_SEEE_CLIP_CTRL_3 */
	DIP_X_REG_SEEE_BLND_CTRL_1                      DIP_X_SEEE_BLND_CTRL_1;                          /* 09A0, 0x150229A0, DIP_A_SEEE_BLND_CTRL_1 */
	DIP_X_REG_SEEE_BLND_CTRL_2                      DIP_X_SEEE_BLND_CTRL_2;                          /* 09A4, 0x150229A4, DIP_A_SEEE_BLND_CTRL_2 */
	DIP_X_REG_SEEE_GN_CTRL                          DIP_X_SEEE_GN_CTRL;                              /* 09A8, 0x150229A8, DIP_A_SEEE_GN_CTRL */
	DIP_X_REG_SEEE_LUMA_CTRL_1                      DIP_X_SEEE_LUMA_CTRL_1;                          /* 09AC, 0x150229AC, DIP_A_SEEE_LUMA_CTRL_1 */
	DIP_X_REG_SEEE_LUMA_CTRL_2                      DIP_X_SEEE_LUMA_CTRL_2;                          /* 09B0, 0x150229B0, DIP_A_SEEE_LUMA_CTRL_2 */
	DIP_X_REG_SEEE_LUMA_CTRL_3                      DIP_X_SEEE_LUMA_CTRL_3;                          /* 09B4, 0x150229B4, DIP_A_SEEE_LUMA_CTRL_3 */
	DIP_X_REG_SEEE_LUMA_CTRL_4                      DIP_X_SEEE_LUMA_CTRL_4;                          /* 09B8, 0x150229B8, DIP_A_SEEE_LUMA_CTRL_4 */
	DIP_X_REG_SEEE_SLNK_CTRL_1                      DIP_X_SEEE_SLNK_CTRL_1;                          /* 09BC, 0x150229BC, DIP_A_SEEE_SLNK_CTRL_1 */
	DIP_X_REG_SEEE_SLNK_CTRL_2                      DIP_X_SEEE_SLNK_CTRL_2;                          /* 09C0, 0x150229C0, DIP_A_SEEE_SLNK_CTRL_2 */
	DIP_X_REG_SEEE_GLUT_CTRL_1                      DIP_X_SEEE_GLUT_CTRL_1;                          /* 09C4, 0x150229C4, DIP_A_SEEE_GLUT_CTRL_1 */
	DIP_X_REG_SEEE_GLUT_CTRL_2                      DIP_X_SEEE_GLUT_CTRL_2;                          /* 09C8, 0x150229C8, DIP_A_SEEE_GLUT_CTRL_2 */
	DIP_X_REG_SEEE_GLUT_CTRL_3                      DIP_X_SEEE_GLUT_CTRL_3;                          /* 09CC, 0x150229CC, DIP_A_SEEE_GLUT_CTRL_3 */
	DIP_X_REG_SEEE_GLUT_CTRL_4                      DIP_X_SEEE_GLUT_CTRL_4;                          /* 09D0, 0x150229D0, DIP_A_SEEE_GLUT_CTRL_4 */
	DIP_X_REG_SEEE_GLUT_CTRL_5                      DIP_X_SEEE_GLUT_CTRL_5;                          /* 09D4, 0x150229D4, DIP_A_SEEE_GLUT_CTRL_5 */
	DIP_X_REG_SEEE_GLUT_CTRL_6                      DIP_X_SEEE_GLUT_CTRL_6;                          /* 09D8, 0x150229D8, DIP_A_SEEE_GLUT_CTRL_6 */
	DIP_X_REG_SEEE_OUT_EDGE_CTRL                    DIP_X_SEEE_OUT_EDGE_CTRL;                        /* 09DC, 0x150229DC, DIP_A_SEEE_OUT_EDGE_CTRL */
	DIP_X_REG_SEEE_SE_Y_CTRL                        DIP_X_SEEE_SE_Y_CTRL;                            /* 09E0, 0x150229E0, DIP_A_SEEE_SE_Y_CTRL */
	DIP_X_REG_SEEE_SE_EDGE_CTRL_1                   DIP_X_SEEE_SE_EDGE_CTRL_1;                       /* 09E4, 0x150229E4, DIP_A_SEEE_SE_EDGE_CTRL_1 */
	DIP_X_REG_SEEE_SE_EDGE_CTRL_2                   DIP_X_SEEE_SE_EDGE_CTRL_2;                       /* 09E8, 0x150229E8, DIP_A_SEEE_SE_EDGE_CTRL_2 */
	DIP_X_REG_SEEE_SE_EDGE_CTRL_3                   DIP_X_SEEE_SE_EDGE_CTRL_3;                       /* 09EC, 0x150229EC, DIP_A_SEEE_SE_EDGE_CTRL_3 */
	DIP_X_REG_SEEE_SE_SPECL_CTRL                    DIP_X_SEEE_SE_SPECL_CTRL;                        /* 09F0, 0x150229F0, DIP_A_SEEE_SE_SPECL_CTRL */
	DIP_X_REG_SEEE_SE_CORE_CTRL_1                   DIP_X_SEEE_SE_CORE_CTRL_1;                       /* 09F4, 0x150229F4, DIP_A_SEEE_SE_CORE_CTRL_1 */
	DIP_X_REG_SEEE_SE_CORE_CTRL_2                   DIP_X_SEEE_SE_CORE_CTRL_2;                       /* 09F8, 0x150229F8, DIP_A_SEEE_SE_CORE_CTRL_2 */
	UINT32                                          rsv_09FC[13];                                    /* 09FC..0A2F, 0x150229FC..15022A2F */
	DIP_X_REG_CAM_TNR_ENG_CON                       DIP_X_CAM_TNR_ENG_CON;                           /* 0A30, 0x15022A30, DIP_A_CAM_TNR_ENG_CON */
	DIP_X_REG_CAM_TNR_SIZ                           DIP_X_CAM_TNR_SIZ;                               /* 0A34, 0x15022A34, DIP_A_CAM_TNR_SIZ */
	DIP_X_REG_CAM_TNR_TILE_XY                       DIP_X_CAM_TNR_TILE_XY;                           /* 0A38, 0x15022A38, DIP_A_CAM_TNR_TILE_XY */
	DIP_X_REG_NR3D_ON_CON                           DIP_X_NR3D_ON_CON;                               /* 0A3C, 0x15022A3C, DIP_A_NR3D_ON_CON */
	DIP_X_REG_NR3D_ON_OFF                           DIP_X_NR3D_ON_OFF;                               /* 0A40, 0x15022A40, DIP_A_NR3D_ON_OFF */
	DIP_X_REG_NR3D_ON_SIZ                           DIP_X_NR3D_ON_SIZ;                               /* 0A44, 0x15022A44, DIP_A_NR3D_ON_SIZ */
	DIP_X_REG_MDP_TNR_TNR_ENABLE                    DIP_X_MDP_TNR_TNR_ENABLE;                        /* 0A48, 0x15022A48, DIP_A_MDP_TNR_TNR_ENABLE */
	DIP_X_REG_MDP_TNR_FLT_CONFIG                    DIP_X_MDP_TNR_FLT_CONFIG;                        /* 0A4C, 0x15022A4C, DIP_A_MDP_TNR_FLT_CONFIG */
	DIP_X_REG_MDP_TNR_FB_INFO1                      DIP_X_MDP_TNR_FB_INFO1;                          /* 0A50, 0x15022A50, DIP_A_MDP_TNR_FB_INFO1 */
	DIP_X_REG_MDP_TNR_THR_1                         DIP_X_MDP_TNR_THR_1;                             /* 0A54, 0x15022A54, DIP_A_MDP_TNR_THR_1 */
	DIP_X_REG_MDP_TNR_CURVE_1                       DIP_X_MDP_TNR_CURVE_1;                           /* 0A58, 0x15022A58, DIP_A_MDP_TNR_CURVE_1 */
	DIP_X_REG_MDP_TNR_CURVE_2                       DIP_X_MDP_TNR_CURVE_2;                           /* 0A5C, 0x15022A5C, DIP_A_MDP_TNR_CURVE_2 */
	DIP_X_REG_MDP_TNR_CURVE_3                       DIP_X_MDP_TNR_CURVE_3;                           /* 0A60, 0x15022A60, DIP_A_MDP_TNR_CURVE_3 */
	DIP_X_REG_MDP_TNR_CURVE_4                       DIP_X_MDP_TNR_CURVE_4;                           /* 0A64, 0x15022A64, DIP_A_MDP_TNR_CURVE_4 */
	DIP_X_REG_MDP_TNR_CURVE_5                       DIP_X_MDP_TNR_CURVE_5;                           /* 0A68, 0x15022A68, DIP_A_MDP_TNR_CURVE_5 */
	DIP_X_REG_MDP_TNR_CURVE_6                       DIP_X_MDP_TNR_CURVE_6;                           /* 0A6C, 0x15022A6C, DIP_A_MDP_TNR_CURVE_6 */
	DIP_X_REG_MDP_TNR_CURVE_7                       DIP_X_MDP_TNR_CURVE_7;                           /* 0A70, 0x15022A70, DIP_A_MDP_TNR_CURVE_7 */
	DIP_X_REG_MDP_TNR_CURVE_8                       DIP_X_MDP_TNR_CURVE_8;                           /* 0A74, 0x15022A74, DIP_A_MDP_TNR_CURVE_8 */
	DIP_X_REG_MDP_TNR_CURVE_9                       DIP_X_MDP_TNR_CURVE_9;                           /* 0A78, 0x15022A78, DIP_A_MDP_TNR_CURVE_9 */
	DIP_X_REG_MDP_TNR_CURVE_10                      DIP_X_MDP_TNR_CURVE_10;                          /* 0A7C, 0x15022A7C, DIP_A_MDP_TNR_CURVE_10 */
	DIP_X_REG_MDP_TNR_CURVE_11                      DIP_X_MDP_TNR_CURVE_11;                          /* 0A80, 0x15022A80, DIP_A_MDP_TNR_CURVE_11 */
	DIP_X_REG_MDP_TNR_CURVE_12                      DIP_X_MDP_TNR_CURVE_12;                          /* 0A84, 0x15022A84, DIP_A_MDP_TNR_CURVE_12 */
	DIP_X_REG_MDP_TNR_CURVE_13                      DIP_X_MDP_TNR_CURVE_13;                          /* 0A88, 0x15022A88, DIP_A_MDP_TNR_CURVE_13 */
	DIP_X_REG_MDP_TNR_CURVE_14                      DIP_X_MDP_TNR_CURVE_14;                          /* 0A8C, 0x15022A8C, DIP_A_MDP_TNR_CURVE_14 */
	DIP_X_REG_MDP_TNR_CURVE_15                      DIP_X_MDP_TNR_CURVE_15;                          /* 0A90, 0x15022A90, DIP_A_MDP_TNR_CURVE_15 */
	DIP_X_REG_MDP_TNR_R2C_1                         DIP_X_MDP_TNR_R2C_1;                             /* 0A94, 0x15022A94, DIP_A_MDP_TNR_R2C_1 */
	DIP_X_REG_MDP_TNR_R2C_2                         DIP_X_MDP_TNR_R2C_2;                             /* 0A98, 0x15022A98, DIP_A_MDP_TNR_R2C_2 */
	DIP_X_REG_MDP_TNR_R2C_3                         DIP_X_MDP_TNR_R2C_3;                             /* 0A9C, 0x15022A9C, DIP_A_MDP_TNR_R2C_3 */
	DIP_X_REG_MDP_TNR_DBG_6                         DIP_X_MDP_TNR_DBG_6;                             /* 0AA0, 0x15022AA0, DIP_A_MDP_TNR_DBG_6 */
	DIP_X_REG_MDP_TNR_DBG_15                        DIP_X_MDP_TNR_DBG_15;                            /* 0AA4, 0x15022AA4, DIP_A_MDP_TNR_DBG_15 */
	DIP_X_REG_MDP_TNR_DBG_16                        DIP_X_MDP_TNR_DBG_16;                            /* 0AA8, 0x15022AA8, DIP_A_MDP_TNR_DBG_16 */
	DIP_X_REG_MDP_TNR_DEMO_1                        DIP_X_MDP_TNR_DEMO_1;                            /* 0AAC, 0x15022AAC, DIP_A_MDP_TNR_DEMO_1 */
	DIP_X_REG_MDP_TNR_DEMO_2                        DIP_X_MDP_TNR_DEMO_2;                            /* 0AB0, 0x15022AB0, DIP_A_MDP_TNR_DEMO_2 */
	DIP_X_REG_MDP_TNR_ATPG                          DIP_X_MDP_TNR_ATPG;                              /* 0AB4, 0x15022AB4, DIP_A_MDP_TNR_ATPG */
	DIP_X_REG_MDP_TNR_DMY_0                         DIP_X_MDP_TNR_DMY_0;                             /* 0AB8, 0x15022AB8, DIP_A_MDP_TNR_DMY_0 */
	DIP_X_REG_MDP_TNR_DBG_17                        DIP_X_MDP_TNR_DBG_17;                            /* 0ABC, 0x15022ABC, DIP_A_MDP_TNR_DBG_17 */
	DIP_X_REG_MDP_TNR_DBG_18                        DIP_X_MDP_TNR_DBG_18;                            /* 0AC0, 0x15022AC0, DIP_A_MDP_TNR_DBG_18 */
	DIP_X_REG_MDP_TNR_DBG_1                         DIP_X_MDP_TNR_DBG_1;                             /* 0AC4, 0x15022AC4, DIP_A_MDP_TNR_DBG_1 */
	DIP_X_REG_MDP_TNR_DBG_2                         DIP_X_MDP_TNR_DBG_2;                             /* 0AC8, 0x15022AC8, DIP_A_MDP_TNR_DBG_2 */
	UINT32                                          rsv_0ACC[25];                                    /* 0ACC..0B2F, 0x15022ACC..15022B2F */
	DIP_X_REG_SL2B_CEN                              DIP_X_SL2B_CEN;                                  /* 0B30, 0x15022B30, DIP_A_SL2B_CEN */
	DIP_X_REG_SL2B_RR_CON0                          DIP_X_SL2B_RR_CON0;                              /* 0B34, 0x15022B34, DIP_A_SL2B_RR_CON0 */
	DIP_X_REG_SL2B_RR_CON1                          DIP_X_SL2B_RR_CON1;                              /* 0B38, 0x15022B38, DIP_A_SL2B_RR_CON1 */
	DIP_X_REG_SL2B_GAIN                             DIP_X_SL2B_GAIN;                                 /* 0B3C, 0x15022B3C, DIP_A_SL2B_GAIN */
	DIP_X_REG_SL2B_RZ                               DIP_X_SL2B_RZ;                                   /* 0B40, 0x15022B40, DIP_A_SL2B_RZ */
	DIP_X_REG_SL2B_XOFF                             DIP_X_SL2B_XOFF;                                 /* 0B44, 0x15022B44, DIP_A_SL2B_XOFF */
	DIP_X_REG_SL2B_YOFF                             DIP_X_SL2B_YOFF;                                 /* 0B48, 0x15022B48, DIP_A_SL2B_YOFF */
	DIP_X_REG_SL2B_SLP_CON0                         DIP_X_SL2B_SLP_CON0;                             /* 0B4C, 0x15022B4C, DIP_A_SL2B_SLP_CON0 */
	DIP_X_REG_SL2B_SLP_CON1                         DIP_X_SL2B_SLP_CON1;                             /* 0B50, 0x15022B50, DIP_A_SL2B_SLP_CON1 */
	DIP_X_REG_SL2B_SIZE                             DIP_X_SL2B_SIZE;                                 /* 0B54, 0x15022B54, DIP_A_SL2B_SIZE */
	UINT32                                          rsv_0B58[6];                                     /* 0B58..0B6F, 0x15022B58..15022B6F */
	DIP_X_REG_SL2C_CEN                              DIP_X_SL2C_CEN;                                  /* 0B70, 0x15022B70, DIP_A_SL2C_CEN */
	DIP_X_REG_SL2C_RR_CON0                          DIP_X_SL2C_RR_CON0;                              /* 0B74, 0x15022B74, DIP_A_SL2C_RR_CON0 */
	DIP_X_REG_SL2C_RR_CON1                          DIP_X_SL2C_RR_CON1;                              /* 0B78, 0x15022B78, DIP_A_SL2C_RR_CON1 */
	DIP_X_REG_SL2C_GAIN                             DIP_X_SL2C_GAIN;                                 /* 0B7C, 0x15022B7C, DIP_A_SL2C_GAIN */
	DIP_X_REG_SL2C_RZ                               DIP_X_SL2C_RZ;                                   /* 0B80, 0x15022B80, DIP_A_SL2C_RZ */
	DIP_X_REG_SL2C_XOFF                             DIP_X_SL2C_XOFF;                                 /* 0B84, 0x15022B84, DIP_A_SL2C_XOFF */
	DIP_X_REG_SL2C_YOFF                             DIP_X_SL2C_YOFF;                                 /* 0B88, 0x15022B88, DIP_A_SL2C_YOFF */
	DIP_X_REG_SL2C_SLP_CON0                         DIP_X_SL2C_SLP_CON0;                             /* 0B8C, 0x15022B8C, DIP_A_SL2C_SLP_CON0 */
	DIP_X_REG_SL2C_SLP_CON1                         DIP_X_SL2C_SLP_CON1;                             /* 0B90, 0x15022B90, DIP_A_SL2C_SLP_CON1 */
	DIP_X_REG_SL2C_SIZE                             DIP_X_SL2C_SIZE;                                 /* 0B94, 0x15022B94, DIP_A_SL2C_SIZE */
	UINT32                                          rsv_0B98[6];                                     /* 0B98..0BAF, 0x15022B98..15022BAF */
	DIP_X_REG_SRZ1_CONTROL                          DIP_X_SRZ1_CONTROL;                              /* 0BB0, 0x15022BB0, DIP_A_SRZ1_CONTROL */
	DIP_X_REG_SRZ1_IN_IMG                           DIP_X_SRZ1_IN_IMG;                               /* 0BB4, 0x15022BB4, DIP_A_SRZ1_IN_IMG */
	DIP_X_REG_SRZ1_OUT_IMG                          DIP_X_SRZ1_OUT_IMG;                              /* 0BB8, 0x15022BB8, DIP_A_SRZ1_OUT_IMG */
	DIP_X_REG_SRZ1_HORI_STEP                        DIP_X_SRZ1_HORI_STEP;                            /* 0BBC, 0x15022BBC, DIP_A_SRZ1_HORI_STEP */
	DIP_X_REG_SRZ1_VERT_STEP                        DIP_X_SRZ1_VERT_STEP;                            /* 0BC0, 0x15022BC0, DIP_A_SRZ1_VERT_STEP */
	DIP_X_REG_SRZ1_HORI_INT_OFST                    DIP_X_SRZ1_HORI_INT_OFST;                        /* 0BC4, 0x15022BC4, DIP_A_SRZ1_HORI_INT_OFST */
	DIP_X_REG_SRZ1_HORI_SUB_OFST                    DIP_X_SRZ1_HORI_SUB_OFST;                        /* 0BC8, 0x15022BC8, DIP_A_SRZ1_HORI_SUB_OFST */
	DIP_X_REG_SRZ1_VERT_INT_OFST                    DIP_X_SRZ1_VERT_INT_OFST;                        /* 0BCC, 0x15022BCC, DIP_A_SRZ1_VERT_INT_OFST */
	DIP_X_REG_SRZ1_VERT_SUB_OFST                    DIP_X_SRZ1_VERT_SUB_OFST;                        /* 0BD0, 0x15022BD0, DIP_A_SRZ1_VERT_SUB_OFST */
	UINT32                                          rsv_0BD4[3];                                     /* 0BD4..0BDF, 0x15022BD4..15022BDF */
	DIP_X_REG_SRZ2_CONTROL                          DIP_X_SRZ2_CONTROL;                              /* 0BE0, 0x15022BE0, DIP_A_SRZ2_CONTROL */
	DIP_X_REG_SRZ2_IN_IMG                           DIP_X_SRZ2_IN_IMG;                               /* 0BE4, 0x15022BE4, DIP_A_SRZ2_IN_IMG */
	DIP_X_REG_SRZ2_OUT_IMG                          DIP_X_SRZ2_OUT_IMG;                              /* 0BE8, 0x15022BE8, DIP_A_SRZ2_OUT_IMG */
	DIP_X_REG_SRZ2_HORI_STEP                        DIP_X_SRZ2_HORI_STEP;                            /* 0BEC, 0x15022BEC, DIP_A_SRZ2_HORI_STEP */
	DIP_X_REG_SRZ2_VERT_STEP                        DIP_X_SRZ2_VERT_STEP;                            /* 0BF0, 0x15022BF0, DIP_A_SRZ2_VERT_STEP */
	DIP_X_REG_SRZ2_HORI_INT_OFST                    DIP_X_SRZ2_HORI_INT_OFST;                        /* 0BF4, 0x15022BF4, DIP_A_SRZ2_HORI_INT_OFST */
	DIP_X_REG_SRZ2_HORI_SUB_OFST                    DIP_X_SRZ2_HORI_SUB_OFST;                        /* 0BF8, 0x15022BF8, DIP_A_SRZ2_HORI_SUB_OFST */
	DIP_X_REG_SRZ2_VERT_INT_OFST                    DIP_X_SRZ2_VERT_INT_OFST;                        /* 0BFC, 0x15022BFC, DIP_A_SRZ2_VERT_INT_OFST */
	DIP_X_REG_SRZ2_VERT_SUB_OFST                    DIP_X_SRZ2_VERT_SUB_OFST;                        /* 0C00, 0x15022C00, DIP_A_SRZ2_VERT_SUB_OFST */
	UINT32                                          rsv_0C04[3];                                     /* 0C04..0C0F, 0x15022C04..15022C0F */
	DIP_X_REG_CRZ_CONTROL                           DIP_X_CRZ_CONTROL;                               /* 0C10, 0x15022C10, DIP_A_CRZ_CONTROL */
	DIP_X_REG_CRZ_IN_IMG                            DIP_X_CRZ_IN_IMG;                                /* 0C14, 0x15022C14, DIP_A_CRZ_IN_IMG */
	DIP_X_REG_CRZ_OUT_IMG                           DIP_X_CRZ_OUT_IMG;                               /* 0C18, 0x15022C18, DIP_A_CRZ_OUT_IMG */
	DIP_X_REG_CRZ_HORI_STEP                         DIP_X_CRZ_HORI_STEP;                             /* 0C1C, 0x15022C1C, DIP_A_CRZ_HORI_STEP */
	DIP_X_REG_CRZ_VERT_STEP                         DIP_X_CRZ_VERT_STEP;                             /* 0C20, 0x15022C20, DIP_A_CRZ_VERT_STEP */
	DIP_X_REG_CRZ_LUMA_HORI_INT_OFST                DIP_X_CRZ_LUMA_HORI_INT_OFST;                    /* 0C24, 0x15022C24, DIP_A_CRZ_LUMA_HORI_INT_OFST */
	DIP_X_REG_CRZ_LUMA_HORI_SUB_OFST                DIP_X_CRZ_LUMA_HORI_SUB_OFST;                    /* 0C28, 0x15022C28, DIP_A_CRZ_LUMA_HORI_SUB_OFST */
	DIP_X_REG_CRZ_LUMA_VERT_INT_OFST                DIP_X_CRZ_LUMA_VERT_INT_OFST;                    /* 0C2C, 0x15022C2C, DIP_A_CRZ_LUMA_VERT_INT_OFST */
	DIP_X_REG_CRZ_LUMA_VERT_SUB_OFST                DIP_X_CRZ_LUMA_VERT_SUB_OFST;                    /* 0C30, 0x15022C30, DIP_A_CRZ_LUMA_VERT_SUB_OFST */
	DIP_X_REG_CRZ_CHRO_HORI_INT_OFST                DIP_X_CRZ_CHRO_HORI_INT_OFST;                    /* 0C34, 0x15022C34, DIP_A_CRZ_CHRO_HORI_INT_OFST */
	DIP_X_REG_CRZ_CHRO_HORI_SUB_OFST                DIP_X_CRZ_CHRO_HORI_SUB_OFST;                    /* 0C38, 0x15022C38, DIP_A_CRZ_CHRO_HORI_SUB_OFST */
	DIP_X_REG_CRZ_CHRO_VERT_INT_OFST                DIP_X_CRZ_CHRO_VERT_INT_OFST;                    /* 0C3C, 0x15022C3C, DIP_A_CRZ_CHRO_VERT_INT_OFST */
	DIP_X_REG_CRZ_CHRO_VERT_SUB_OFST                DIP_X_CRZ_CHRO_VERT_SUB_OFST;                    /* 0C40, 0x15022C40, DIP_A_CRZ_CHRO_VERT_SUB_OFST */
	DIP_X_REG_CRZ_SPARE_1                           DIP_X_CRZ_SPARE_1;                               /* 0C44, 0x15022C44, DIP_A_CRZ_SPARE_1 */
	UINT32                                          rsv_0C48[10];                                    /* 0C48..0C6F, 0x15022C48..15022C6F */
	DIP_X_REG_MIX1_CTRL_0                           DIP_X_MIX1_CTRL_0;                               /* 0C70, 0x15022C70, DIP_A_MIX1_CTRL_0 */
	DIP_X_REG_MIX1_CTRL_1                           DIP_X_MIX1_CTRL_1;                               /* 0C74, 0x15022C74, DIP_A_MIX1_CTRL_1 */
	DIP_X_REG_MIX1_SPARE                            DIP_X_MIX1_SPARE;                                /* 0C78, 0x15022C78, DIP_A_MIX1_SPARE */
	UINT32                                          rsv_0C7C;                                        /* 0C7C, 0x15022C7C */
	DIP_X_REG_MIX2_CTRL_0                           DIP_X_MIX2_CTRL_0;                               /* 0C80, 0x15022C80, DIP_A_MIX2_CTRL_0 */
	DIP_X_REG_MIX2_CTRL_1                           DIP_X_MIX2_CTRL_1;                               /* 0C84, 0x15022C84, DIP_A_MIX2_CTRL_1 */
	DIP_X_REG_MIX2_SPARE                            DIP_X_MIX2_SPARE;                                /* 0C88, 0x15022C88, DIP_A_MIX2_SPARE */
	UINT32                                          rsv_0C8C;                                        /* 0C8C, 0x15022C8C */
	DIP_X_REG_MIX3_CTRL_0                           DIP_X_MIX3_CTRL_0;                               /* 0C90, 0x15022C90, DIP_A_MIX3_CTRL_0 */
	DIP_X_REG_MIX3_CTRL_1                           DIP_X_MIX3_CTRL_1;                               /* 0C94, 0x15022C94, DIP_A_MIX3_CTRL_1 */
	DIP_X_REG_MIX3_SPARE                            DIP_X_MIX3_SPARE;                                /* 0C98, 0x15022C98, DIP_A_MIX3_SPARE */
	UINT32                                          rsv_0C9C;                                        /* 0C9C, 0x15022C9C */
	DIP_X_REG_SL2D_CEN                              DIP_X_SL2D_CEN;                                  /* 0CA0, 0x15022CA0, DIP_A_SL2D_CEN */
	DIP_X_REG_SL2D_RR_CON0                          DIP_X_SL2D_RR_CON0;                              /* 0CA4, 0x15022CA4, DIP_A_SL2D_RR_CON0 */
	DIP_X_REG_SL2D_RR_CON1                          DIP_X_SL2D_RR_CON1;                              /* 0CA8, 0x15022CA8, DIP_A_SL2D_RR_CON1 */
	DIP_X_REG_SL2D_GAIN                             DIP_X_SL2D_GAIN;                                 /* 0CAC, 0x15022CAC, DIP_A_SL2D_GAIN */
	DIP_X_REG_SL2D_RZ                               DIP_X_SL2D_RZ;                                   /* 0CB0, 0x15022CB0, DIP_A_SL2D_RZ */
	DIP_X_REG_SL2D_XOFF                             DIP_X_SL2D_XOFF;                                 /* 0CB4, 0x15022CB4, DIP_A_SL2D_XOFF */
	DIP_X_REG_SL2D_YOFF                             DIP_X_SL2D_YOFF;                                 /* 0CB8, 0x15022CB8, DIP_A_SL2D_YOFF */
	DIP_X_REG_SL2D_SLP_CON0                         DIP_X_SL2D_SLP_CON0;                             /* 0CBC, 0x15022CBC, DIP_A_SL2D_SLP_CON0 */
	DIP_X_REG_SL2D_SLP_CON1                         DIP_X_SL2D_SLP_CON1;                             /* 0CC0, 0x15022CC0, DIP_A_SL2D_SLP_CON1 */
	DIP_X_REG_SL2D_SIZE                             DIP_X_SL2D_SIZE;                                 /* 0CC4, 0x15022CC4, DIP_A_SL2D_SIZE */
	UINT32                                          rsv_0CC8[6];                                     /* 0CC8..0CDF, 0x15022CC8..15022CDF */
	DIP_X_REG_SL2E_CEN                              DIP_X_SL2E_CEN;                                  /* 0CE0, 0x15022CE0, DIP_A_SL2E_CEN */
	DIP_X_REG_SL2E_RR_CON0                          DIP_X_SL2E_RR_CON0;                              /* 0CE4, 0x15022CE4, DIP_A_SL2E_RR_CON0 */
	DIP_X_REG_SL2E_RR_CON1                          DIP_X_SL2E_RR_CON1;                              /* 0CE8, 0x15022CE8, DIP_A_SL2E_RR_CON1 */
	DIP_X_REG_SL2E_GAIN                             DIP_X_SL2E_GAIN;                                 /* 0CEC, 0x15022CEC, DIP_A_SL2E_GAIN */
	DIP_X_REG_SL2E_RZ                               DIP_X_SL2E_RZ;                                   /* 0CF0, 0x15022CF0, DIP_A_SL2E_RZ */
	DIP_X_REG_SL2E_XOFF                             DIP_X_SL2E_XOFF;                                 /* 0CF4, 0x15022CF4, DIP_A_SL2E_XOFF */
	DIP_X_REG_SL2E_YOFF                             DIP_X_SL2E_YOFF;                                 /* 0CF8, 0x15022CF8, DIP_A_SL2E_YOFF */
	DIP_X_REG_SL2E_SLP_CON0                         DIP_X_SL2E_SLP_CON0;                             /* 0CFC, 0x15022CFC, DIP_A_SL2E_SLP_CON0 */
	DIP_X_REG_SL2E_SLP_CON1                         DIP_X_SL2E_SLP_CON1;                             /* 0D00, 0x15022D00, DIP_A_SL2E_SLP_CON1 */
	DIP_X_REG_SL2E_SIZE                             DIP_X_SL2E_SIZE;                                 /* 0D04, 0x15022D04, DIP_A_SL2E_SIZE */
	UINT32                                          rsv_0D08[6];                                     /* 0D08..0D1F, 0x15022D08..15022D1F */
	DIP_X_REG_MDP_CROP_X                            DIP_X_MDP_CROP_X;                                /* 0D20, 0x15022D20, DIP_A_MDP_CROP_X */
	DIP_X_REG_MDP_CROP_Y                            DIP_X_MDP_CROP_Y;                                /* 0D24, 0x15022D24, DIP_A_MDP_CROP_Y */
	UINT32                                          rsv_0D28[2];                                     /* 0D28..0D2F, 0x15022D28..15022D2F */
	DIP_X_REG_ANR2_CON1                             DIP_X_ANR2_CON1;                                 /* 0D30, 0x15022D30, DIP_A_ANR2_CON1 */
	DIP_X_REG_ANR2_CON2                             DIP_X_ANR2_CON2;                                 /* 0D34, 0x15022D34, DIP_A_ANR2_CON2 */
	DIP_X_REG_ANR2_YAD1                             DIP_X_ANR2_YAD1;                                 /* 0D38, 0x15022D38, DIP_A_ANR2_YAD1 */
	UINT32                                          rsv_0D3C;                                        /* 0D3C, 0x15022D3C */
	DIP_X_REG_ANR2_Y4LUT1                           DIP_X_ANR2_Y4LUT1;                               /* 0D40, 0x15022D40, DIP_A_ANR2_Y4LUT1 */
	DIP_X_REG_ANR2_Y4LUT2                           DIP_X_ANR2_Y4LUT2;                               /* 0D44, 0x15022D44, DIP_A_ANR2_Y4LUT2 */
	DIP_X_REG_ANR2_Y4LUT3                           DIP_X_ANR2_Y4LUT3;                               /* 0D48, 0x15022D48, DIP_A_ANR2_Y4LUT3 */
	UINT32                                          rsv_0D4C[5];                                     /* 0D4C..0D5F, 0x15022D4C..15022D5F */
	DIP_X_REG_ANR2_L4LUT1                           DIP_X_ANR2_L4LUT1;                               /* 0D60, 0x15022D60, DIP_A_ANR2_L4LUT1 */
	DIP_X_REG_ANR2_L4LUT2                           DIP_X_ANR2_L4LUT2;                               /* 0D64, 0x15022D64, DIP_A_ANR2_L4LUT2 */
	DIP_X_REG_ANR2_L4LUT3                           DIP_X_ANR2_L4LUT3;                               /* 0D68, 0x15022D68, DIP_A_ANR2_L4LUT3 */
	UINT32                                          rsv_0D6C;                                        /* 0D6C, 0x15022D6C */
	DIP_X_REG_ANR2_CAD                              DIP_X_ANR2_CAD;                                  /* 0D70, 0x15022D70, DIP_A_ANR2_CAD */
	DIP_X_REG_ANR2_PTC                              DIP_X_ANR2_PTC;                                  /* 0D74, 0x15022D74, DIP_A_ANR2_PTC */
	DIP_X_REG_ANR2_LCE                              DIP_X_ANR2_LCE;                                  /* 0D78, 0x15022D78, DIP_A_ANR2_LCE */
	DIP_X_REG_ANR2_MED1                             DIP_X_ANR2_MED1;                                 /* 0D7C, 0x15022D7C, DIP_A_ANR2_MED1 */
	DIP_X_REG_ANR2_MED2                             DIP_X_ANR2_MED2;                                 /* 0D80, 0x15022D80, DIP_A_ANR2_MED2 */
	DIP_X_REG_ANR2_MED3                             DIP_X_ANR2_MED3;                                 /* 0D84, 0x15022D84, DIP_A_ANR2_MED3 */
	DIP_X_REG_ANR2_MED4                             DIP_X_ANR2_MED4;                                 /* 0D88, 0x15022D88, DIP_A_ANR2_MED4 */
	DIP_X_REG_ANR2_MED5                             DIP_X_ANR2_MED5;                                 /* 0D8C, 0x15022D8C, DIP_A_ANR2_MED5 */
	DIP_X_REG_CCR_RSV1                              DIP_X_CCR_RSV1;                                  /* 0D90, 0x15022D90, DIP_A_CCR_RSV1 */
	UINT32                                          rsv_0D94[3];                                     /* 0D94..0D9F, 0x15022D94..15022D9F */
	DIP_X_REG_ANR2_ACTY                             DIP_X_ANR2_ACTY;                                 /* 0DA0, 0x15022DA0, DIP_A_ANR2_ACTY */
	DIP_X_REG_ANR2_ACTC                             DIP_X_ANR2_ACTC;                                 /* 0DA4, 0x15022DA4, DIP_A_ANR2_ACTC */
	DIP_X_REG_ANR2_RSV1                             DIP_X_ANR2_RSV1;                                 /* 0DA8, 0x15022DA8, DIP_A_ANR2_RSV1 */
	DIP_X_REG_ANR2_RSV2                             DIP_X_ANR2_RSV2;                                 /* 0DAC, 0x15022DAC, DIP_A_ANR2_RSV2 */
	DIP_X_REG_CCR_CON                               DIP_X_CCR_CON;                                   /* 0DB0, 0x15022DB0, DIP_A_CCR_CON */
	DIP_X_REG_CCR_YLUT                              DIP_X_CCR_YLUT;                                  /* 0DB4, 0x15022DB4, DIP_A_CCR_YLUT */
	DIP_X_REG_CCR_UVLUT                             DIP_X_CCR_UVLUT;                                 /* 0DB8, 0x15022DB8, DIP_A_CCR_UVLUT */
	DIP_X_REG_CCR_YLUT2                             DIP_X_CCR_YLUT2;                                 /* 0DBC, 0x15022DBC, DIP_A_CCR_YLUT2 */
	DIP_X_REG_CCR_SAT_CTRL                          DIP_X_CCR_SAT_CTRL;                              /* 0DC0, 0x15022DC0, DIP_A_CCR_SAT_CTRL */
	DIP_X_REG_CCR_UVLUT_SP                          DIP_X_CCR_UVLUT_SP;                              /* 0DC4, 0x15022DC4, DIP_A_CCR_UVLUT_SP */
	DIP_X_REG_CCR_HUE1                              DIP_X_CCR_HUE1;                                  /* 0DC8, 0x15022DC8, DIP_A_CCR_HUE1 */
	DIP_X_REG_CCR_HUE2                              DIP_X_CCR_HUE2;                                  /* 0DCC, 0x15022DCC, DIP_A_CCR_HUE2 */
	DIP_X_REG_CCR_HUE3                              DIP_X_CCR_HUE3;                                  /* 0DD0, 0x15022DD0, DIP_A_CCR_HUE3 */
	DIP_X_REG_CCR_L4LUT1                            DIP_X_CCR_L4LUT1;                                /* 0DD4, 0x15022DD4, DIP_A_CCR_L4LUT1 */
	DIP_X_REG_CCR_L4LUT2                            DIP_X_CCR_L4LUT2;                                /* 0DD8, 0x15022DD8, DIP_A_CCR_L4LUT2 */
	DIP_X_REG_CCR_L4LUT3                            DIP_X_CCR_L4LUT3;                                /* 0DDC, 0x15022DDC, DIP_A_CCR_L4LUT3 */
	DIP_X_REG_BOK_CON                               DIP_X_BOK_CON;                                   /* 0DE0, 0x15022DE0, DIP_A_BOK_CON */
	DIP_X_REG_BOK_TUN                               DIP_X_BOK_TUN;                                   /* 0DE4, 0x15022DE4, DIP_A_BOK_TUN */
	DIP_X_REG_BOK_OFF                               DIP_X_BOK_OFF;                                   /* 0DE8, 0x15022DE8, DIP_A_BOK_OFF */
	DIP_X_REG_BOK_RSV1                              DIP_X_BOK_RSV1;                                  /* 0DEC, 0x15022DEC, DIP_A_BOK_RSV1 */
	DIP_X_REG_ABF_CON1                              DIP_X_ABF_CON1;                                  /* 0DF0, 0x15022DF0, DIP_A_ABF_CON1 */
	DIP_X_REG_ABF_CON2                              DIP_X_ABF_CON2;                                  /* 0DF4, 0x15022DF4, DIP_A_ABF_CON2 */
	DIP_X_REG_ABF_RCON                              DIP_X_ABF_RCON;                                  /* 0DF8, 0x15022DF8, DIP_A_ABF_RCON */
	DIP_X_REG_ABF_YLUT                              DIP_X_ABF_YLUT;                                  /* 0DFC, 0x15022DFC, DIP_A_ABF_YLUT */
	DIP_X_REG_ABF_CXLUT                             DIP_X_ABF_CXLUT;                                 /* 0E00, 0x15022E00, DIP_A_ABF_CXLUT */
	DIP_X_REG_ABF_CYLUT                             DIP_X_ABF_CYLUT;                                 /* 0E04, 0x15022E04, DIP_A_ABF_CYLUT */
	DIP_X_REG_ABF_YSP                               DIP_X_ABF_YSP;                                   /* 0E08, 0x15022E08, DIP_A_ABF_YSP */
	DIP_X_REG_ABF_CXSP                              DIP_X_ABF_CXSP;                                  /* 0E0C, 0x15022E0C, DIP_A_ABF_CXSP */
	DIP_X_REG_ABF_CYSP                              DIP_X_ABF_CYSP;                                  /* 0E10, 0x15022E10, DIP_A_ABF_CYSP */
	DIP_X_REG_ABF_CLP                               DIP_X_ABF_CLP;                                   /* 0E14, 0x15022E14, DIP_A_ABF_CLP */
	DIP_X_REG_ABF_DIFF                              DIP_X_ABF_DIFF;                                  /* 0E18, 0x15022E18, DIP_A_ABF_DIFF */
	DIP_X_REG_ABF_RSV1                              DIP_X_ABF_RSV1;                                  /* 0E1C, 0x15022E1C, DIP_A_ABF_RSV1 */
	UINT32                                          rsv_0E20[4];                                     /* 0E20..0E2F, 0x15022E20..15022E2F */
	DIP_X_REG_UNP_OFST                              DIP_X_UNP_OFST;                                  /* 0E30, 0x15022E30, DIP_A_UNP_OFST */
	UINT32                                          rsv_0E34[3];                                     /* 0E34..0E3F, 0x15022E34..15022E3F */
	DIP_X_REG_C02_CON                               DIP_X_C02_CON;                                   /* 0E40, 0x15022E40, DIP_A_C02_CON */
	DIP_X_REG_C02_CROP_CON1                         DIP_X_C02_CROP_CON1;                             /* 0E44, 0x15022E44, DIP_A_C02_CROP_CON1 */
	DIP_X_REG_C02_CROP_CON2                         DIP_X_C02_CROP_CON2;                             /* 0E48, 0x15022E48, DIP_A_C02_CROP_CON2 */
	UINT32                                          rsv_0E4C;                                        /* 0E4C, 0x15022E4C */
	DIP_X_REG_FE_CTRL1                              DIP_X_FE_CTRL1;                                  /* 0E50, 0x15022E50, DIP_A_FE_CTRL1 */
	DIP_X_REG_FE_IDX_CTRL                           DIP_X_FE_IDX_CTRL;                               /* 0E54, 0x15022E54, DIP_A_FE_IDX_CTRL */
	DIP_X_REG_FE_CROP_CTRL1                         DIP_X_FE_CROP_CTRL1;                             /* 0E58, 0x15022E58, DIP_A_FE_CROP_CTRL1 */
	DIP_X_REG_FE_CROP_CTRL2                         DIP_X_FE_CROP_CTRL2;                             /* 0E5C, 0x15022E5C, DIP_A_FE_CROP_CTRL2 */
	DIP_X_REG_FE_CTRL2                              DIP_X_FE_CTRL2;                                  /* 0E60, 0x15022E60, DIP_A_FE_CTRL2 */
	UINT32                                          rsv_0E64[3];                                     /* 0E64..0E6F, 0x15022E64..15022E6F */
	DIP_X_REG_CRSP_CTRL                             DIP_X_CRSP_CTRL;                                 /* 0E70, 0x15022E70, DIP_A_CRSP_CTRL */
	UINT32                                          rsv_0E74;                                        /* 0E74, 0x15022E74 */
	DIP_X_REG_CRSP_OUT_IMG                          DIP_X_CRSP_OUT_IMG;                              /* 0E78, 0x15022E78, DIP_A_CRSP_OUT_IMG */
	DIP_X_REG_CRSP_STEP_OFST                        DIP_X_CRSP_STEP_OFST;                            /* 0E7C, 0x15022E7C, DIP_A_CRSP_STEP_OFST */
	DIP_X_REG_CRSP_CROP_X                           DIP_X_CRSP_CROP_X;                               /* 0E80, 0x15022E80, DIP_A_CRSP_CROP_X */
	DIP_X_REG_CRSP_CROP_Y                           DIP_X_CRSP_CROP_Y;                               /* 0E84, 0x15022E84, DIP_A_CRSP_CROP_Y */
	UINT32                                          rsv_0E88[2];                                     /* 0E88..0E8F, 0x15022E88..15022E8F */
	DIP_X_REG_C02B_CON                              DIP_X_C02B_CON;                                  /* 0E90, 0x15022E90, DIP_A_C02B_CON */
	DIP_X_REG_C02B_CROP_CON1                        DIP_X_C02B_CROP_CON1;                            /* 0E94, 0x15022E94, DIP_A_C02B_CROP_CON1 */
	DIP_X_REG_C02B_CROP_CON2                        DIP_X_C02B_CROP_CON2;                            /* 0E98, 0x15022E98, DIP_A_C02B_CROP_CON2 */
	UINT32                                          rsv_0E9C;                                        /* 0E9C, 0x15022E9C */
	DIP_X_REG_C24_TILE_EDGE                         DIP_X_C24_TILE_EDGE;                             /* 0EA0, 0x15022EA0, DIP_A_C24_TILE_EDGE */
	UINT32                                          rsv_0EA4[3];                                     /* 0EA4..0EAF, 0x15022EA4..15022EAF */
	DIP_X_REG_C24B_TILE_EDGE                        DIP_X_C24B_TILE_EDGE;                            /* 0EB0, 0x15022EB0, DIP_A_C24B_TILE_EDGE */
	UINT32                                          rsv_0EB4[3];                                     /* 0EB4..0EBF, 0x15022EB4..15022EBF */
	DIP_X_REG_LCE25_CON                             DIP_X_LCE25_CON;                                 /* 0EC0, 0x15022EC0, DIP_A_LCE25_CON */
	DIP_X_REG_LCE25_ZR                              DIP_X_LCE25_ZR;                                  /* 0EC4, 0x15022EC4, DIP_A_LCE25_ZR */
	DIP_X_REG_LCE25_SLM_SIZE                        DIP_X_LCE25_SLM_SIZE;                            /* 0EC8, 0x15022EC8, DIP_A_LCE25_SLM_SIZE */
	DIP_X_REG_LCE25_OFST                            DIP_X_LCE25_OFST;                                /* 0ECC, 0x15022ECC, DIP_A_LCE25_OFST */
	DIP_X_REG_LCE25_BIAS                            DIP_X_LCE25_BIAS;                                /* 0ED0, 0x15022ED0, DIP_A_LCE25_BIAS */
	DIP_X_REG_LCE25_IMAGE_SIZE                      DIP_X_LCE25_IMAGE_SIZE;                          /* 0ED4, 0x15022ED4, DIP_A_LCE25_IMAGE_SIZE */
	DIP_X_REG_LCE25_BIL_TH0                         DIP_X_LCE25_BIL_TH0;                             /* 0ED8, 0x15022ED8, DIP_A_LCE25_BIL_TH0 */
	DIP_X_REG_LCE25_BIL_TH1                         DIP_X_LCE25_BIL_TH1;                             /* 0EDC, 0x15022EDC, DIP_A_LCE25_BIL_TH1 */
	DIP_X_REG_LCE25_TM_PARA0                        DIP_X_LCE25_TM_PARA0;                            /* 0EE0, 0x15022EE0, DIP_A_LCE25_TM_PARA0 */
	DIP_X_REG_LCE25_TM_PARA1                        DIP_X_LCE25_TM_PARA1;                            /* 0EE4, 0x15022EE4, DIP_A_LCE25_TM_PARA1 */
	DIP_X_REG_LCE25_TM_PARA2                        DIP_X_LCE25_TM_PARA2;                            /* 0EE8, 0x15022EE8, DIP_A_LCE25_TM_PARA2 */
	DIP_X_REG_LCE25_TM_PARA3                        DIP_X_LCE25_TM_PARA3;                            /* 0EEC, 0x15022EEC, DIP_A_LCE25_TM_PARA3 */
	DIP_X_REG_LCE25_TM_PARA4                        DIP_X_LCE25_TM_PARA4;                            /* 0EF0, 0x15022EF0, DIP_A_LCE25_TM_PARA4 */
	DIP_X_REG_LCE25_TM_PARA5                        DIP_X_LCE25_TM_PARA5;                            /* 0EF4, 0x15022EF4, DIP_A_LCE25_TM_PARA5 */
	DIP_X_REG_LCE25_TM_PARA6                        DIP_X_LCE25_TM_PARA6;                            /* 0EF8, 0x15022EF8, DIP_A_LCE25_TM_PARA6 */
	UINT32                                          rsv_0EFC[17];                                    /* 0EFC..0F3F, 0x15022EFC..15022F3F */
	DIP_X_REG_FM_SIZE                               DIP_X_FM_SIZE;                                   /* 0F40, 0x15022F40, DIP_A_FM_SIZE */
	DIP_X_REG_FM_TH_CON0                            DIP_X_FM_TH_CON0;                                /* 0F44, 0x15022F44, DIP_A_FM_TH_CON0 */
	DIP_X_REG_FM_ACC_RES                            DIP_X_FM_ACC_RES;                                /* 0F48, 0x15022F48, DIP_A_FM_ACC_RES */
	UINT32                                          rsv_0F4C[11];                                    /* 0F4C..0F77, 0x15022F4C..15022F77 */
	DIP_X_REG_MFB_LL_CON5                           DIP_X_MFB_LL_CON5;                               /* 0F78, 0x15022F78, DIP_A_MFB_LL_CON5 */
	DIP_X_REG_MFB_LL_CON6                           DIP_X_MFB_LL_CON6;                               /* 0F7C, 0x15022F7C, DIP_A_MFB_LL_CON6 */
	DIP_X_REG_MFB_LL_CON7                           DIP_X_MFB_LL_CON7;                               /* 0F80, 0x15022F80, DIP_A_MFB_LL_CON7 */
	DIP_X_REG_MFB_LL_CON8                           DIP_X_MFB_LL_CON8;                               /* 0F84, 0x15022F84, DIP_A_MFB_LL_CON8 */
	DIP_X_REG_MFB_LL_CON9                           DIP_X_MFB_LL_CON9;                               /* 0F88, 0x15022F88, DIP_A_MFB_LL_CON9 */
	DIP_X_REG_MFB_LL_CON10                          DIP_X_MFB_LL_CON10;                              /* 0F8C, 0x15022F8C, DIP_A_MFB_LL_CON10 */
	DIP_X_REG_MFB_MBD_CON0                          DIP_X_MFB_MBD_CON0;                              /* 0F90, 0x15022F90, DIP_A_MFB_MBD_CON0 */
	DIP_X_REG_MFB_MBD_CON1                          DIP_X_MFB_MBD_CON1;                              /* 0F94, 0x15022F94, DIP_A_MFB_MBD_CON1 */
	DIP_X_REG_MFB_MBD_CON2                          DIP_X_MFB_MBD_CON2;                              /* 0F98, 0x15022F98, DIP_A_MFB_MBD_CON2 */
	DIP_X_REG_MFB_MBD_CON3                          DIP_X_MFB_MBD_CON3;                              /* 0F9C, 0x15022F9C, DIP_A_MFB_MBD_CON3 */
	DIP_X_REG_MFB_MBD_CON4                          DIP_X_MFB_MBD_CON4;                              /* 0FA0, 0x15022FA0, DIP_A_MFB_MBD_CON4 */
	DIP_X_REG_MFB_MBD_CON5                          DIP_X_MFB_MBD_CON5;                              /* 0FA4, 0x15022FA4, DIP_A_MFB_MBD_CON5 */
	DIP_X_REG_MFB_MBD_CON6                          DIP_X_MFB_MBD_CON6;                              /* 0FA8, 0x15022FA8, DIP_A_MFB_MBD_CON6 */
	DIP_X_REG_MFB_MBD_CON7                          DIP_X_MFB_MBD_CON7;                              /* 0FAC, 0x15022FAC, DIP_A_MFB_MBD_CON7 */
	DIP_X_REG_MFB_MBD_CON8                          DIP_X_MFB_MBD_CON8;                              /* 0FB0, 0x15022FB0, DIP_A_MFB_MBD_CON8 */
	DIP_X_REG_MFB_MBD_CON9                          DIP_X_MFB_MBD_CON9;                              /* 0FB4, 0x15022FB4, DIP_A_MFB_MBD_CON9 */
	DIP_X_REG_MFB_MBD_CON10                         DIP_X_MFB_MBD_CON10;                             /* 0FB8, 0x15022FB8, DIP_A_MFB_MBD_CON10 */
	UINT32                                          rsv_0FBC;                                        /* 0FBC, 0x15022FBC */
	DIP_X_REG_FLC_OFFST0                            DIP_X_FLC_OFFST0;                                /* 0FC0, 0x15022FC0, DIP_A_FLC_OFFST0 */
	DIP_X_REG_FLC_OFFST1                            DIP_X_FLC_OFFST1;                                /* 0FC4, 0x15022FC4, DIP_A_FLC_OFFST1 */
	DIP_X_REG_FLC_OFFST2                            DIP_X_FLC_OFFST2;                                /* 0FC8, 0x15022FC8, DIP_A_FLC_OFFST2 */
	UINT32                                          rsv_0FCC;                                        /* 0FCC, 0x15022FCC */
	DIP_X_REG_FLC_GAIN0                             DIP_X_FLC_GAIN0;                                 /* 0FD0, 0x15022FD0, DIP_A_FLC_GAIN0 */
	DIP_X_REG_FLC_GAIN1                             DIP_X_FLC_GAIN1;                                 /* 0FD4, 0x15022FD4, DIP_A_FLC_GAIN1 */
	DIP_X_REG_FLC_GAIN2                             DIP_X_FLC_GAIN2;                                 /* 0FD8, 0x15022FD8, DIP_A_FLC_GAIN2 */
	UINT32                                          rsv_0FDC;                                        /* 0FDC, 0x15022FDC */
	DIP_X_REG_FLC2_OFFST0                           DIP_X_FLC2_OFFST0;                               /* 0FE0, 0x15022FE0, DIP_A_FLC2_OFFST0 */
	DIP_X_REG_FLC2_OFFST1                           DIP_X_FLC2_OFFST1;                               /* 0FE4, 0x15022FE4, DIP_A_FLC2_OFFST1 */
	DIP_X_REG_FLC2_OFFST2                           DIP_X_FLC2_OFFST2;                               /* 0FE8, 0x15022FE8, DIP_A_FLC2_OFFST2 */
	UINT32                                          rsv_0FEC;                                        /* 0FEC, 0x15022FEC */
	DIP_X_REG_FLC2_GAIN0                            DIP_X_FLC2_GAIN0;                                /* 0FF0, 0x15022FF0, DIP_A_FLC2_GAIN0 */
	DIP_X_REG_FLC2_GAIN1                            DIP_X_FLC2_GAIN1;                                /* 0FF4, 0x15022FF4, DIP_A_FLC2_GAIN1 */
	DIP_X_REG_FLC2_GAIN2                            DIP_X_FLC2_GAIN2;                                /* 0FF8, 0x15022FF8, DIP_A_FLC2_GAIN2 */
	UINT32                                          rsv_0FFC;                                        /* 0FFC, 0x15022FFC */
	DIP_X_REG_GGM_LUT_RB                            DIP_X_GGM_LUT_RB[144];                           /* 1000..123F, 0x15023000..1502323F, DIP_A_GGM_LUT_RB */
	DIP_X_REG_GGM_LUT_G                             DIP_X_GGM_LUT_G[144];                            /* 1240..147F, 0x15023240..1502347F, DIP_A_GGM_LUT_G */
	DIP_X_REG_GGM_CTRL                              DIP_X_GGM_CTRL;                                  /* 1480, 0x15023480, DIP_A_GGM_CTRL */
	UINT32                                          rsv_1484[223];                                   /* 1484..17FF, 0x15023484..150237FF */
	DIP_X_REG_PCA_TBL                               DIP_X_PCA_TBL[360];                              /* 1800..1D9F, 0x15023800..15023D9F, DIP_A_PCA_TBL */
	UINT32                                          rsv_1DA0[24];                                    /* 1DA0..1DFF, 0x15023DA0..15023DFF */
	DIP_X_REG_PCA_CON1                              DIP_X_PCA_CON1;                                  /* 1E00, 0x15023E00, DIP_A_PCA_CON1 */
	DIP_X_REG_PCA_CON2                              DIP_X_PCA_CON2;                                  /* 1E04, 0x15023E04, DIP_A_PCA_CON2 */
	DIP_X_REG_PCA_CON3                              DIP_X_PCA_CON3;                                  /* 1E08, 0x15023E08, DIP_A_PCA_CON3 */
	DIP_X_REG_PCA_CON4                              DIP_X_PCA_CON4;                                  /* 1E0C, 0x15023E0C, DIP_A_PCA_CON4 */
	DIP_X_REG_PCA_CON5                              DIP_X_PCA_CON5;                                  /* 1E10, 0x15023E10, DIP_A_PCA_CON5 */
	DIP_X_REG_PCA_CON6                              DIP_X_PCA_CON6;                                  /* 1E14, 0x15023E14, DIP_A_PCA_CON6 */
	DIP_X_REG_PCA_CON7                              DIP_X_PCA_CON7;                                  /* 1E18, 0x15023E18, DIP_A_PCA_CON7 */
	UINT32                                          rsv_1E1C[9];                                     /* 1E1C..1E3F, 0x15023E1C..15023E3F */
	DIP_X_REG_OBC2_OFFST0                           DIP_X_OBC2_OFFST0;                               /* 1E40, 0x15023E40, DIP_A_OBC2_OFFST0 */
	DIP_X_REG_OBC2_OFFST1                           DIP_X_OBC2_OFFST1;                               /* 1E44, 0x15023E44, DIP_A_OBC2_OFFST1 */
	DIP_X_REG_OBC2_OFFST2                           DIP_X_OBC2_OFFST2;                               /* 1E48, 0x15023E48, DIP_A_OBC2_OFFST2 */
	DIP_X_REG_OBC2_OFFST3                           DIP_X_OBC2_OFFST3;                               /* 1E4C, 0x15023E4C, DIP_A_OBC2_OFFST3 */
	DIP_X_REG_OBC2_GAIN0                            DIP_X_OBC2_GAIN0;                                /* 1E50, 0x15023E50, DIP_A_OBC2_GAIN0 */
	DIP_X_REG_OBC2_GAIN1                            DIP_X_OBC2_GAIN1;                                /* 1E54, 0x15023E54, DIP_A_OBC2_GAIN1 */
	DIP_X_REG_OBC2_GAIN2                            DIP_X_OBC2_GAIN2;                                /* 1E58, 0x15023E58, DIP_A_OBC2_GAIN2 */
	DIP_X_REG_OBC2_GAIN3                            DIP_X_OBC2_GAIN3;                                /* 1E5C, 0x15023E5C, DIP_A_OBC2_GAIN3 */
	UINT32                                          rsv_1E60[4];                                     /* 1E60..1E6F, 0x15023E60..15023E6F */
	DIP_X_REG_BNR2_BPC_CON                          DIP_X_BNR2_BPC_CON;                              /* 1E70, 0x15023E70, DIP_A_BNR2_BPC_CON */
	DIP_X_REG_BNR2_BPC_TH1                          DIP_X_BNR2_BPC_TH1;                              /* 1E74, 0x15023E74, DIP_A_BNR2_BPC_TH1 */
	DIP_X_REG_BNR2_BPC_TH2                          DIP_X_BNR2_BPC_TH2;                              /* 1E78, 0x15023E78, DIP_A_BNR2_BPC_TH2 */
	DIP_X_REG_BNR2_BPC_TH3                          DIP_X_BNR2_BPC_TH3;                              /* 1E7C, 0x15023E7C, DIP_A_BNR2_BPC_TH3 */
	DIP_X_REG_BNR2_BPC_TH4                          DIP_X_BNR2_BPC_TH4;                              /* 1E80, 0x15023E80, DIP_A_BNR2_BPC_TH4 */
	DIP_X_REG_BNR2_BPC_DTC                          DIP_X_BNR2_BPC_DTC;                              /* 1E84, 0x15023E84, DIP_A_BNR2_BPC_DTC */
	DIP_X_REG_BNR2_BPC_COR                          DIP_X_BNR2_BPC_COR;                              /* 1E88, 0x15023E88, DIP_A_BNR2_BPC_COR */
	DIP_X_REG_BNR2_BPC_TBLI1                        DIP_X_BNR2_BPC_TBLI1;                            /* 1E8C, 0x15023E8C, DIP_A_BNR2_BPC_TBLI1 */
	DIP_X_REG_BNR2_BPC_TBLI2                        DIP_X_BNR2_BPC_TBLI2;                            /* 1E90, 0x15023E90, DIP_A_BNR2_BPC_TBLI2 */
	DIP_X_REG_BNR2_BPC_TH1_C                        DIP_X_BNR2_BPC_TH1_C;                            /* 1E94, 0x15023E94, DIP_A_BNR2_BPC_TH1_C */
	DIP_X_REG_BNR2_BPC_TH2_C                        DIP_X_BNR2_BPC_TH2_C;                            /* 1E98, 0x15023E98, DIP_A_BNR2_BPC_TH2_C */
	DIP_X_REG_BNR2_BPC_TH3_C                        DIP_X_BNR2_BPC_TH3_C;                            /* 1E9C, 0x15023E9C, DIP_A_BNR2_BPC_TH3_C */
	DIP_X_REG_BNR2_NR1_CON                          DIP_X_BNR2_NR1_CON;                              /* 1EA0, 0x15023EA0, DIP_A_BNR2_NR1_CON */
	DIP_X_REG_BNR2_NR1_CT_CON                       DIP_X_BNR2_NR1_CT_CON;                           /* 1EA4, 0x15023EA4, DIP_A_BNR2_NR1_CT_CON */
	DIP_X_REG_BNR2_RSV1                             DIP_X_BNR2_RSV1;                                 /* 1EA8, 0x15023EA8, DIP_A_BNR2_RSV1 */
	DIP_X_REG_BNR2_RSV2                             DIP_X_BNR2_RSV2;                                 /* 1EAC, 0x15023EAC, DIP_A_BNR2_RSV2 */
	DIP_X_REG_BNR2_PDC_CON                          DIP_X_BNR2_PDC_CON;                              /* 1EB0, 0x15023EB0, DIP_A_BNR2_PDC_CON */
	DIP_X_REG_BNR2_PDC_GAIN_L0                      DIP_X_BNR2_PDC_GAIN_L0;                          /* 1EB4, 0x15023EB4, DIP_A_BNR2_PDC_GAIN_L0 */
	DIP_X_REG_BNR2_PDC_GAIN_L1                      DIP_X_BNR2_PDC_GAIN_L1;                          /* 1EB8, 0x15023EB8, DIP_A_BNR2_PDC_GAIN_L1 */
	DIP_X_REG_BNR2_PDC_GAIN_L2                      DIP_X_BNR2_PDC_GAIN_L2;                          /* 1EBC, 0x15023EBC, DIP_A_BNR2_PDC_GAIN_L2 */
	DIP_X_REG_BNR2_PDC_GAIN_L3                      DIP_X_BNR2_PDC_GAIN_L3;                          /* 1EC0, 0x15023EC0, DIP_A_BNR2_PDC_GAIN_L3 */
	DIP_X_REG_BNR2_PDC_GAIN_L4                      DIP_X_BNR2_PDC_GAIN_L4;                          /* 1EC4, 0x15023EC4, DIP_A_BNR2_PDC_GAIN_L4 */
	DIP_X_REG_BNR2_PDC_GAIN_R0                      DIP_X_BNR2_PDC_GAIN_R0;                          /* 1EC8, 0x15023EC8, DIP_A_BNR2_PDC_GAIN_R0 */
	DIP_X_REG_BNR2_PDC_GAIN_R1                      DIP_X_BNR2_PDC_GAIN_R1;                          /* 1ECC, 0x15023ECC, DIP_A_BNR2_PDC_GAIN_R1 */
	DIP_X_REG_BNR2_PDC_GAIN_R2                      DIP_X_BNR2_PDC_GAIN_R2;                          /* 1ED0, 0x15023ED0, DIP_A_BNR2_PDC_GAIN_R2 */
	DIP_X_REG_BNR2_PDC_GAIN_R3                      DIP_X_BNR2_PDC_GAIN_R3;                          /* 1ED4, 0x15023ED4, DIP_A_BNR2_PDC_GAIN_R3 */
	DIP_X_REG_BNR2_PDC_GAIN_R4                      DIP_X_BNR2_PDC_GAIN_R4;                          /* 1ED8, 0x15023ED8, DIP_A_BNR2_PDC_GAIN_R4 */
	DIP_X_REG_BNR2_PDC_TH_GB                        DIP_X_BNR2_PDC_TH_GB;                            /* 1EDC, 0x15023EDC, DIP_A_BNR2_PDC_TH_GB */
	DIP_X_REG_BNR2_PDC_TH_IA                        DIP_X_BNR2_PDC_TH_IA;                            /* 1EE0, 0x15023EE0, DIP_A_BNR2_PDC_TH_IA */
	DIP_X_REG_BNR2_PDC_TH_HD                        DIP_X_BNR2_PDC_TH_HD;                            /* 1EE4, 0x15023EE4, DIP_A_BNR2_PDC_TH_HD */
	DIP_X_REG_BNR2_PDC_SL                           DIP_X_BNR2_PDC_SL;                               /* 1EE8, 0x15023EE8, DIP_A_BNR2_PDC_SL */
	DIP_X_REG_BNR2_PDC_POS                          DIP_X_BNR2_PDC_POS;                              /* 1EEC, 0x15023EEC, DIP_A_BNR2_PDC_POS */
	DIP_X_REG_RMG2_HDR_CFG                          DIP_X_RMG2_HDR_CFG;                              /* 1EF0, 0x15023EF0, DIP_A_RMG2_HDR_CFG */
	DIP_X_REG_RMG2_HDR_GAIN                         DIP_X_RMG2_HDR_GAIN;                             /* 1EF4, 0x15023EF4, DIP_A_RMG2_HDR_GAIN */
	DIP_X_REG_RMG2_HDR_CFG2                         DIP_X_RMG2_HDR_CFG2;                             /* 1EF8, 0x15023EF8, DIP_A_RMG2_HDR_CFG2 */
	UINT32                                          rsv_1EFC[5];                                     /* 1EFC..1F0F, 0x15023EFC..15023F0F */
	DIP_X_REG_RMM2_OSC                              DIP_X_RMM2_OSC;                                  /* 1F10, 0x15023F10, DIP_A_RMM2_OSC */
	DIP_X_REG_RMM2_MC                               DIP_X_RMM2_MC;                                   /* 1F14, 0x15023F14, DIP_A_RMM2_MC */
	DIP_X_REG_RMM2_REVG_1                           DIP_X_RMM2_REVG_1;                               /* 1F18, 0x15023F18, DIP_A_RMM2_REVG_1 */
	DIP_X_REG_RMM2_REVG_2                           DIP_X_RMM2_REVG_2;                               /* 1F1C, 0x15023F1C, DIP_A_RMM2_REVG_2 */
	DIP_X_REG_RMM2_LEOS                             DIP_X_RMM2_LEOS;                                 /* 1F20, 0x15023F20, DIP_A_RMM2_LEOS */
	DIP_X_REG_RMM2_MC2                              DIP_X_RMM2_MC2;                                  /* 1F24, 0x15023F24, DIP_A_RMM2_MC2 */
	DIP_X_REG_RMM2_DIFF_LB                          DIP_X_RMM2_DIFF_LB;                              /* 1F28, 0x15023F28, DIP_A_RMM2_DIFF_LB */
	DIP_X_REG_RMM2_MA                               DIP_X_RMM2_MA;                                   /* 1F2C, 0x15023F2C, DIP_A_RMM2_MA */
	DIP_X_REG_RMM2_TUNE                             DIP_X_RMM2_TUNE;                                 /* 1F30, 0x15023F30, DIP_A_RMM2_TUNE */
	UINT32                                          rsv_1F34[11];                                    /* 1F34..1F5F, 0x15023F34..15023F5F */
	DIP_X_REG_RCP2_CROP_CON1                        DIP_X_RCP2_CROP_CON1;                            /* 1F60, 0x15023F60, DIP_A_RCP2_CROP_CON1 */
	DIP_X_REG_RCP2_CROP_CON2                        DIP_X_RCP2_CROP_CON2;                            /* 1F64, 0x15023F64, DIP_A_RCP2_CROP_CON2 */
	UINT32                                          rsv_1F68[2];                                     /* 1F68..1F6F, 0x15023F68..15023F6F */
	DIP_X_REG_LSC2_CTL1                             DIP_X_LSC2_CTL1;                                 /* 1F70, 0x15023F70, DIP_A_LSC2_CTL1 */
	DIP_X_REG_LSC2_CTL2                             DIP_X_LSC2_CTL2;                                 /* 1F74, 0x15023F74, DIP_A_LSC2_CTL2 */
	DIP_X_REG_LSC2_CTL3                             DIP_X_LSC2_CTL3;                                 /* 1F78, 0x15023F78, DIP_A_LSC2_CTL3 */
	DIP_X_REG_LSC2_LBLOCK                           DIP_X_LSC2_LBLOCK;                               /* 1F7C, 0x15023F7C, DIP_A_LSC2_LBLOCK */
	DIP_X_REG_LSC2_RATIO_0                          DIP_X_LSC2_RATIO_0;                              /* 1F80, 0x15023F80, DIP_A_LSC2_RATIO_0 */
	DIP_X_REG_LSC2_TPIPE_OFST                       DIP_X_LSC2_TPIPE_OFST;                           /* 1F84, 0x15023F84, DIP_A_LSC2_TPIPE_OFST */
	DIP_X_REG_LSC2_TPIPE_SIZE                       DIP_X_LSC2_TPIPE_SIZE;                           /* 1F88, 0x15023F88, DIP_A_LSC2_TPIPE_SIZE */
	DIP_X_REG_LSC2_GAIN_TH                          DIP_X_LSC2_GAIN_TH;                              /* 1F8C, 0x15023F8C, DIP_A_LSC2_GAIN_TH */
	DIP_X_REG_LSC2_RATIO_1                          DIP_X_LSC2_RATIO_1;                              /* 1F90, 0x15023F90, DIP_A_LSC2_RATIO_1 */
	UINT32                                          rsv_1F94[3];                                     /* 1F94..1F9F, 0x15023F94..15023F9F */
	DIP_X_REG_DBS2_SIGMA                            DIP_X_DBS2_SIGMA;                                /* 1FA0, 0x15023FA0, DIP_A_DBS2_SIGMA */
	DIP_X_REG_DBS2_BSTBL_0                          DIP_X_DBS2_BSTBL_0;                              /* 1FA4, 0x15023FA4, DIP_A_DBS2_BSTBL_0 */
	DIP_X_REG_DBS2_BSTBL_1                          DIP_X_DBS2_BSTBL_1;                              /* 1FA8, 0x15023FA8, DIP_A_DBS2_BSTBL_1 */
	DIP_X_REG_DBS2_BSTBL_2                          DIP_X_DBS2_BSTBL_2;                              /* 1FAC, 0x15023FAC, DIP_A_DBS2_BSTBL_2 */
	DIP_X_REG_DBS2_BSTBL_3                          DIP_X_DBS2_BSTBL_3;                              /* 1FB0, 0x15023FB0, DIP_A_DBS2_BSTBL_3 */
	DIP_X_REG_DBS2_CTL                              DIP_X_DBS2_CTL;                                  /* 1FB4, 0x15023FB4, DIP_A_DBS2_CTL */
	DIP_X_REG_DBS2_CTL_2                            DIP_X_DBS2_CTL_2;                                /* 1FB8, 0x15023FB8, DIP_A_DBS2_CTL_2 */
	DIP_X_REG_DBS2_SIGMA_2                          DIP_X_DBS2_SIGMA_2;                              /* 1FBC, 0x15023FBC, DIP_A_DBS2_SIGMA_2 */
	DIP_X_REG_DBS2_YGN                              DIP_X_DBS2_YGN;                                  /* 1FC0, 0x15023FC0, DIP_A_DBS2_YGN */
	DIP_X_REG_DBS2_SL_Y12                           DIP_X_DBS2_SL_Y12;                               /* 1FC4, 0x15023FC4, DIP_A_DBS2_SL_Y12 */
	DIP_X_REG_DBS2_SL_Y34                           DIP_X_DBS2_SL_Y34;                               /* 1FC8, 0x15023FC8, DIP_A_DBS2_SL_Y34 */
	DIP_X_REG_DBS2_SL_G12                           DIP_X_DBS2_SL_G12;                               /* 1FCC, 0x15023FCC, DIP_A_DBS2_SL_G12 */
	DIP_X_REG_DBS2_SL_G34                           DIP_X_DBS2_SL_G34;                               /* 1FD0, 0x15023FD0, DIP_A_DBS2_SL_G34 */
	UINT32                                          rsv_1FD4[11];                                    /* 1FD4..1FFF, 0x15023FD4..15023FFF */
	DIP_X_REG_ANR_TBL                               DIP_X_ANR_TBL[256];                              /* 2000..23FF, 0x15024000..150243FF, DIP_A_ANR_TBL */
	DIP_X_REG_ANR_CON1                              DIP_X_ANR_CON1;                                  /* 2400, 0x15024400, DIP_A_ANR_CON1 */
	DIP_X_REG_ANR_CON2                              DIP_X_ANR_CON2;                                  /* 2404, 0x15024404, DIP_A_ANR_CON2 */
	DIP_X_REG_ANR_YAD1                              DIP_X_ANR_YAD1;                                  /* 2408, 0x15024408, DIP_A_ANR_YAD1 */
	DIP_X_REG_ANR_YAD2                              DIP_X_ANR_YAD2;                                  /* 240C, 0x1502440C, DIP_A_ANR_YAD2 */
	DIP_X_REG_ANR_Y4LUT1                            DIP_X_ANR_Y4LUT1;                                /* 2410, 0x15024410, DIP_A_ANR_Y4LUT1 */
	DIP_X_REG_ANR_Y4LUT2                            DIP_X_ANR_Y4LUT2;                                /* 2414, 0x15024414, DIP_A_ANR_Y4LUT2 */
	DIP_X_REG_ANR_Y4LUT3                            DIP_X_ANR_Y4LUT3;                                /* 2418, 0x15024418, DIP_A_ANR_Y4LUT3 */
	DIP_X_REG_ANR_C4LUT1                            DIP_X_ANR_C4LUT1;                                /* 241C, 0x1502441C, DIP_A_ANR_C4LUT1 */
	DIP_X_REG_ANR_C4LUT2                            DIP_X_ANR_C4LUT2;                                /* 2420, 0x15024420, DIP_A_ANR_C4LUT2 */
	DIP_X_REG_ANR_C4LUT3                            DIP_X_ANR_C4LUT3;                                /* 2424, 0x15024424, DIP_A_ANR_C4LUT3 */
	DIP_X_REG_ANR_A4LUT2                            DIP_X_ANR_A4LUT2;                                /* 2428, 0x15024428, DIP_A_ANR_A4LUT2 */
	DIP_X_REG_ANR_A4LUT3                            DIP_X_ANR_A4LUT3;                                /* 242C, 0x1502442C, DIP_A_ANR_A4LUT3 */
	DIP_X_REG_ANR_L4LUT1                            DIP_X_ANR_L4LUT1;                                /* 2430, 0x15024430, DIP_A_ANR_L4LUT1 */
	DIP_X_REG_ANR_L4LUT2                            DIP_X_ANR_L4LUT2;                                /* 2434, 0x15024434, DIP_A_ANR_L4LUT2 */
	DIP_X_REG_ANR_L4LUT3                            DIP_X_ANR_L4LUT3;                                /* 2438, 0x15024438, DIP_A_ANR_L4LUT3 */
	DIP_X_REG_ANR_PTY                               DIP_X_ANR_PTY;                                   /* 243C, 0x1502443C, DIP_A_ANR_PTY */
	DIP_X_REG_ANR_CAD                               DIP_X_ANR_CAD;                                   /* 2440, 0x15024440, DIP_A_ANR_CAD */
	DIP_X_REG_ANR_PTC                               DIP_X_ANR_PTC;                                   /* 2444, 0x15024444, DIP_A_ANR_PTC */
	DIP_X_REG_ANR_LCE                               DIP_X_ANR_LCE;                                   /* 2448, 0x15024448, DIP_A_ANR_LCE */
	DIP_X_REG_ANR_MED1                              DIP_X_ANR_MED1;                                  /* 244C, 0x1502444C, DIP_A_ANR_MED1 */
	DIP_X_REG_ANR_MED2                              DIP_X_ANR_MED2;                                  /* 2450, 0x15024450, DIP_A_ANR_MED2 */
	DIP_X_REG_ANR_MED3                              DIP_X_ANR_MED3;                                  /* 2454, 0x15024454, DIP_A_ANR_MED3 */
	DIP_X_REG_ANR_MED4                              DIP_X_ANR_MED4;                                  /* 2458, 0x15024458, DIP_A_ANR_MED4 */
	DIP_X_REG_ANR_MED5                              DIP_X_ANR_MED5;                                  /* 245C, 0x1502445C, DIP_A_ANR_MED5 */
	DIP_X_REG_ANR_HP1                               DIP_X_ANR_HP1;                                   /* 2460, 0x15024460, DIP_A_ANR_HP1 */
	DIP_X_REG_ANR_HP2                               DIP_X_ANR_HP2;                                   /* 2464, 0x15024464, DIP_A_ANR_HP2 */
	DIP_X_REG_ANR_HP3                               DIP_X_ANR_HP3;                                   /* 2468, 0x15024468, DIP_A_ANR_HP3 */
	DIP_X_REG_ANR_ACT1                              DIP_X_ANR_ACT1;                                  /* 246C, 0x1502446C, DIP_A_ANR_ACT1 */
	DIP_X_REG_ANR_ACT2                              DIP_X_ANR_ACT2;                                  /* 2470, 0x15024470, DIP_A_ANR_ACT2 */
	DIP_X_REG_ANR_ACT3                              DIP_X_ANR_ACT3;                                  /* 2474, 0x15024474, DIP_A_ANR_ACT3 */
	DIP_X_REG_ANR_ACT4                              DIP_X_ANR_ACT4;                                  /* 2478, 0x15024478, DIP_A_ANR_ACT4 */
	DIP_X_REG_ANR_ACTYHL                            DIP_X_ANR_ACTYHL;                                /* 247C, 0x1502447C, DIP_A_ANR_ACTYHL */
	DIP_X_REG_ANR_ACTYHH                            DIP_X_ANR_ACTYHH;                                /* 2480, 0x15024480, DIP_A_ANR_ACTYHH */
	DIP_X_REG_ANR_ACTYL                             DIP_X_ANR_ACTYL;                                 /* 2484, 0x15024484, DIP_A_ANR_ACTYL */
	DIP_X_REG_ANR_ACTYHL2                           DIP_X_ANR_ACTYHL2;                               /* 2488, 0x15024488, DIP_A_ANR_ACTYHL2 */
	DIP_X_REG_ANR_ACTYHH2                           DIP_X_ANR_ACTYHH2;                               /* 248C, 0x1502448C, DIP_A_ANR_ACTYHH2 */
	DIP_X_REG_ANR_ACTYL2                            DIP_X_ANR_ACTYL2;                                /* 2490, 0x15024490, DIP_A_ANR_ACTYL2 */
	DIP_X_REG_ANR_ACTC                              DIP_X_ANR_ACTC;                                  /* 2494, 0x15024494, DIP_A_ANR_ACTC */
	DIP_X_REG_ANR_YLAD                              DIP_X_ANR_YLAD;                                  /* 2498, 0x15024498, DIP_A_ANR_YLAD */
	DIP_X_REG_ANR_YLAD2                             DIP_X_ANR_YLAD2;                                 /* 249C, 0x1502449C, DIP_A_ANR_YLAD2 */
	DIP_X_REG_ANR_YLAD3                             DIP_X_ANR_YLAD3;                                 /* 24A0, 0x150244A0, DIP_A_ANR_YLAD3 */
	DIP_X_REG_ANR_PTYL                              DIP_X_ANR_PTYL;                                  /* 24A4, 0x150244A4, DIP_A_ANR_PTYL */
	DIP_X_REG_ANR_LCOEF                             DIP_X_ANR_LCOEF;                                 /* 24A8, 0x150244A8, DIP_A_ANR_LCOEF */
	DIP_X_REG_ANR_YDIR                              DIP_X_ANR_YDIR;                                  /* 24AC, 0x150244AC, DIP_A_ANR_YDIR */
	DIP_X_REG_ANR_RSV1                              DIP_X_ANR_RSV1;                                  /* 24B0, 0x150244B0, DIP_A_ANR_RSV1 */
	UINT32                                          rsv_24B4[19];                                    /* 24B4..24FF, 0x150244B4..150244FF */
	DIP_X_REG_SL2G_CEN                              DIP_X_SL2G_CEN;                                  /* 2500, 0x15024500, DIP_A_SL2G_CEN */
	DIP_X_REG_SL2G_RR_CON0                          DIP_X_SL2G_RR_CON0;                              /* 2504, 0x15024504, DIP_A_SL2G_RR_CON0 */
	DIP_X_REG_SL2G_RR_CON1                          DIP_X_SL2G_RR_CON1;                              /* 2508, 0x15024508, DIP_A_SL2G_RR_CON1 */
	DIP_X_REG_SL2G_GAIN                             DIP_X_SL2G_GAIN;                                 /* 250C, 0x1502450C, DIP_A_SL2G_GAIN */
	DIP_X_REG_SL2G_RZ                               DIP_X_SL2G_RZ;                                   /* 2510, 0x15024510, DIP_A_SL2G_RZ */
	DIP_X_REG_SL2G_XOFF                             DIP_X_SL2G_XOFF;                                 /* 2514, 0x15024514, DIP_A_SL2G_XOFF */
	DIP_X_REG_SL2G_YOFF                             DIP_X_SL2G_YOFF;                                 /* 2518, 0x15024518, DIP_A_SL2G_YOFF */
	DIP_X_REG_SL2G_SLP_CON0                         DIP_X_SL2G_SLP_CON0;                             /* 251C, 0x1502451C, DIP_A_SL2G_SLP_CON0 */
	DIP_X_REG_SL2G_SLP_CON1                         DIP_X_SL2G_SLP_CON1;                             /* 2520, 0x15024520, DIP_A_SL2G_SLP_CON1 */
	DIP_X_REG_SL2G_SIZE                             DIP_X_SL2G_SIZE;                                 /* 2524, 0x15024524, DIP_A_SL2G_SIZE */
	UINT32                                          rsv_2528[6];                                     /* 2528..253F, 0x15024528..1502453F */
	DIP_X_REG_SL2H_CEN                              DIP_X_SL2H_CEN;                                  /* 2540, 0x15024540, DIP_A_SL2H_CEN */
	DIP_X_REG_SL2H_RR_CON0                          DIP_X_SL2H_RR_CON0;                              /* 2544, 0x15024544, DIP_A_SL2H_RR_CON0 */
	DIP_X_REG_SL2H_RR_CON1                          DIP_X_SL2H_RR_CON1;                              /* 2548, 0x15024548, DIP_A_SL2H_RR_CON1 */
	DIP_X_REG_SL2H_GAIN                             DIP_X_SL2H_GAIN;                                 /* 254C, 0x1502454C, DIP_A_SL2H_GAIN */
	DIP_X_REG_SL2H_RZ                               DIP_X_SL2H_RZ;                                   /* 2550, 0x15024550, DIP_A_SL2H_RZ */
	DIP_X_REG_SL2H_XOFF                             DIP_X_SL2H_XOFF;                                 /* 2554, 0x15024554, DIP_A_SL2H_XOFF */
	DIP_X_REG_SL2H_YOFF                             DIP_X_SL2H_YOFF;                                 /* 2558, 0x15024558, DIP_A_SL2H_YOFF */
	DIP_X_REG_SL2H_SLP_CON0                         DIP_X_SL2H_SLP_CON0;                             /* 255C, 0x1502455C, DIP_A_SL2H_SLP_CON0 */
	DIP_X_REG_SL2H_SLP_CON1                         DIP_X_SL2H_SLP_CON1;                             /* 2560, 0x15024560, DIP_A_SL2H_SLP_CON1 */
	DIP_X_REG_SL2H_SIZE                             DIP_X_SL2H_SIZE;                                 /* 2564, 0x15024564, DIP_A_SL2H_SIZE */
	UINT32                                          rsv_2568[18];                                    /* 2568..25AF, 0x15024568..150245AF */
	DIP_X_REG_RNR_CON1                              DIP_X_RNR_CON1;                                  /* 25B0, 0x150245B0, DIP_A_RNR_CON1 */
	DIP_X_REG_RNR_VC0                               DIP_X_RNR_VC0;                                   /* 25B4, 0x150245B4, DIP_A_RNR_VC0 */
	DIP_X_REG_RNR_VC1                               DIP_X_RNR_VC1;                                   /* 25B8, 0x150245B8, DIP_A_RNR_VC1 */
	DIP_X_REG_RNR_GO_B                              DIP_X_RNR_GO_B;                                  /* 25BC, 0x150245BC, DIP_A_RNR_GO_B */
	DIP_X_REG_RNR_GO_G                              DIP_X_RNR_GO_G;                                  /* 25C0, 0x150245C0, DIP_A_RNR_GO_G */
	DIP_X_REG_RNR_GO_R                              DIP_X_RNR_GO_R;                                  /* 25C4, 0x150245C4, DIP_A_RNR_GO_R */
	DIP_X_REG_RNR_GAIN_ISO                          DIP_X_RNR_GAIN_ISO;                              /* 25C8, 0x150245C8, DIP_A_RNR_GAIN_ISO */
	DIP_X_REG_RNR_L                                 DIP_X_RNR_L;                                     /* 25CC, 0x150245CC, DIP_A_RNR_L */
	DIP_X_REG_RNR_C1                                DIP_X_RNR_C1;                                    /* 25D0, 0x150245D0, DIP_A_RNR_C1 */
	DIP_X_REG_RNR_C2                                DIP_X_RNR_C2;                                    /* 25D4, 0x150245D4, DIP_A_RNR_C2 */
	DIP_X_REG_RNR_RNG                               DIP_X_RNR_RNG;                                   /* 25D8, 0x150245D8, DIP_A_RNR_RNG */
	DIP_X_REG_RNR_CON2                              DIP_X_RNR_CON2;                                  /* 25DC, 0x150245DC, DIP_A_RNR_CON2 */
	DIP_X_REG_RNR_CON3                              DIP_X_RNR_CON3;                                  /* 25E0, 0x150245E0, DIP_A_RNR_CON3 */
	DIP_X_REG_RNR_SL                                DIP_X_RNR_SL;                                    /* 25E4, 0x150245E4, DIP_A_RNR_SL */
	DIP_X_REG_RNR_SSL_STH                           DIP_X_RNR_SSL_STH;                               /* 25E8, 0x150245E8, DIP_A_RNR_SSL_STH */
	DIP_X_REG_RNR_TILE_EDGE                         DIP_X_RNR_TILE_EDGE;                             /* 25EC, 0x150245EC, DIP_A_RNR_TILE_EDGE */
	UINT32                                          rsv_25F0[16];                                    /* 25F0..262F, 0x150245F0..1502462F */
	DIP_X_REG_HFG_CON_0                             DIP_X_HFG_CON_0;                                 /* 2630, 0x15024630, DIP_A_HFG_CON_0 */
	DIP_X_REG_HFG_LUMA_0                            DIP_X_HFG_LUMA_0;                                /* 2634, 0x15024634, DIP_A_HFG_LUMA_0 */
	DIP_X_REG_HFG_LUMA_1                            DIP_X_HFG_LUMA_1;                                /* 2638, 0x15024638, DIP_A_HFG_LUMA_1 */
	DIP_X_REG_HFG_LUMA_2                            DIP_X_HFG_LUMA_2;                                /* 263C, 0x1502463C, DIP_A_HFG_LUMA_2 */
	DIP_X_REG_HFG_LCE_0                             DIP_X_HFG_LCE_0;                                 /* 2640, 0x15024640, DIP_A_HFG_LCE_0 */
	DIP_X_REG_HFG_LCE_1                             DIP_X_HFG_LCE_1;                                 /* 2644, 0x15024644, DIP_A_HFG_LCE_1 */
	DIP_X_REG_HFG_LCE_2                             DIP_X_HFG_LCE_2;                                 /* 2648, 0x15024648, DIP_A_HFG_LCE_2 */
	DIP_X_REG_HFG_RAN_0                             DIP_X_HFG_RAN_0;                                 /* 264C, 0x1502464C, DIP_A_HFG_RAN_0 */
	DIP_X_REG_HFG_RAN_1                             DIP_X_HFG_RAN_1;                                 /* 2650, 0x15024650, DIP_A_HFG_RAN_1 */
	DIP_X_REG_HFG_RAN_2                             DIP_X_HFG_RAN_2;                                 /* 2654, 0x15024654, DIP_A_HFG_RAN_2 */
	DIP_X_REG_HFG_RAN_3                             DIP_X_HFG_RAN_3;                                 /* 2658, 0x15024658, DIP_A_HFG_RAN_3 */
	DIP_X_REG_HFG_RAN_4                             DIP_X_HFG_RAN_4;                                 /* 265C, 0x1502465C, DIP_A_HFG_RAN_4 */
	DIP_X_REG_HFG_CROP_X                            DIP_X_HFG_CROP_X;                                /* 2660, 0x15024660, DIP_A_HFG_CROP_X */
	DIP_X_REG_HFG_CROP_Y                            DIP_X_HFG_CROP_Y;                                /* 2664, 0x15024664, DIP_A_HFG_CROP_Y */
	UINT32                                          rsv_2668[2];                                     /* 2668..266F, 0x15024668..1502466F */
	DIP_X_REG_SL2I_CEN                              DIP_X_SL2I_CEN;                                  /* 2670, 0x15024670, DIP_A_SL2I_CEN */
	DIP_X_REG_SL2I_RR_CON0                          DIP_X_SL2I_RR_CON0;                              /* 2674, 0x15024674, DIP_A_SL2I_RR_CON0 */
	DIP_X_REG_SL2I_RR_CON1                          DIP_X_SL2I_RR_CON1;                              /* 2678, 0x15024678, DIP_A_SL2I_RR_CON1 */
	DIP_X_REG_SL2I_GAIN                             DIP_X_SL2I_GAIN;                                 /* 267C, 0x1502467C, DIP_A_SL2I_GAIN */
	DIP_X_REG_SL2I_RZ                               DIP_X_SL2I_RZ;                                   /* 2680, 0x15024680, DIP_A_SL2I_RZ */
	DIP_X_REG_SL2I_XOFF                             DIP_X_SL2I_XOFF;                                 /* 2684, 0x15024684, DIP_A_SL2I_XOFF */
	DIP_X_REG_SL2I_YOFF                             DIP_X_SL2I_YOFF;                                 /* 2688, 0x15024688, DIP_A_SL2I_YOFF */
	DIP_X_REG_SL2I_SLP_CON0                         DIP_X_SL2I_SLP_CON0;                             /* 268C, 0x1502468C, DIP_A_SL2I_SLP_CON0 */
	DIP_X_REG_SL2I_SLP_CON1                         DIP_X_SL2I_SLP_CON1;                             /* 2690, 0x15024690, DIP_A_SL2I_SLP_CON1 */
	DIP_X_REG_SL2I_SIZE                             DIP_X_SL2I_SIZE;                                 /* 2694, 0x15024694, DIP_A_SL2I_SIZE */
	DIP_X_REG_ISO_ADAP                              DIP_X_ISO_ADAP;                                  /* 2698, 0x15024698 */	// for ISO adaptive
	DIP_X_REG_LCE25_TPIPE_SLM                         DIP_X_LCE25_SLM;                                   /*   */	// for tile(lce_full_slm_wd & lce_full_slm_ht)
	DIP_X_REG_LCE25_TPIPE_OFFSET                      DIP_X_LCE25_OFFSET;                                /*   */	// for tile(lce_full_xoff & lce_full_yoff )
	DIP_X_REG_LCE25_TPIPE_OUT                         DIP_X_LCE25_OUT;                                   /*   */	// for tile(lce_full_out_ht)
	DIP_X_REG_NR3D_VIPI_SIZE                        DIP_X_NR3D_VIPI_SIZE;                            /*   */ // for NR3D vipi size
	DIP_X_REG_NR3D_VIPI_OFFSET                      DIP_X_NR3D_VIPI_OFFSET;                          /*   */ // for NR3D vipi offset

	UINT32                                          rsv_26AC[16];                                    /* 26AC..26EF, 0x150246AC..150246EF */
	DIP_X_REG_CAM_COLOR_CFG_MAIN                    DIP_X_CAM_COLOR_CFG_MAIN;                        /* 26F0, 0x150246F0, DIP_A_CAM_COLOR_CFG_MAIN */
	DIP_X_REG_CAM_COLOR_PXL_CNT_MAIN                DIP_X_CAM_COLOR_PXL_CNT_MAIN;                    /* 26F4, 0x150246F4, DIP_A_CAM_COLOR_PXL_CNT_MAIN */
	DIP_X_REG_CAM_COLOR_LINE_CNT_MAIN               DIP_X_CAM_COLOR_LINE_CNT_MAIN;                   /* 26F8, 0x150246F8, DIP_A_CAM_COLOR_LINE_CNT_MAIN */
	DIP_X_REG_CAM_COLOR_WIN_X_MAIN                  DIP_X_CAM_COLOR_WIN_X_MAIN;                      /* 26FC, 0x150246FC, DIP_A_CAM_COLOR_WIN_X_MAIN */
	DIP_X_REG_CAM_COLOR_WIN_Y_MAIN                  DIP_X_CAM_COLOR_WIN_Y_MAIN;                      /* 2700, 0x15024700, DIP_A_CAM_COLOR_WIN_Y_MAIN */
	DIP_X_REG_CAM_COLOR_TIMING_DETECTION_0          DIP_X_CAM_COLOR_TIMING_DETECTION_0;              /* 2704, 0x15024704, DIP_A_CAM_COLOR_TIMING_DETECTION_0 */
	DIP_X_REG_CAM_COLOR_TIMING_DETECTION_1          DIP_X_CAM_COLOR_TIMING_DETECTION_1;              /* 2708, 0x15024708, DIP_A_CAM_COLOR_TIMING_DETECTION_1 */
	DIP_X_REG_CAM_COLOR_DBG_CFG_MAIN                DIP_X_CAM_COLOR_DBG_CFG_MAIN;                    /* 270C, 0x1502470C, DIP_A_CAM_COLOR_DBG_CFG_MAIN */
	DIP_X_REG_CAM_COLOR_C_BOOST_MAIN                DIP_X_CAM_COLOR_C_BOOST_MAIN;                    /* 2710, 0x15024710, DIP_A_CAM_COLOR_C_BOOST_MAIN */
	DIP_X_REG_CAM_COLOR_C_BOOST_MAIN_2              DIP_X_CAM_COLOR_C_BOOST_MAIN_2;                  /* 2714, 0x15024714, DIP_A_CAM_COLOR_C_BOOST_MAIN_2 */
	DIP_X_REG_CAM_COLOR_LUMA_ADJ                    DIP_X_CAM_COLOR_LUMA_ADJ;                        /* 2718, 0x15024718, DIP_A_CAM_COLOR_LUMA_ADJ */
	DIP_X_REG_CAM_COLOR_G_PIC_ADJ_MAIN_1            DIP_X_CAM_COLOR_G_PIC_ADJ_MAIN_1;                /* 271C, 0x1502471C, DIP_A_CAM_COLOR_G_PIC_ADJ_MAIN_1 */
	DIP_X_REG_CAM_COLOR_G_PIC_ADJ_MAIN_2            DIP_X_CAM_COLOR_G_PIC_ADJ_MAIN_2;                /* 2720, 0x15024720, DIP_A_CAM_COLOR_G_PIC_ADJ_MAIN_2 */
	DIP_X_REG_CAM_COLOR_POS_MAIN                    DIP_X_CAM_COLOR_POS_MAIN;                        /* 2724, 0x15024724, DIP_A_CAM_COLOR_POS_MAIN */
	DIP_X_REG_CAM_COLOR_INK_DATA_MAIN               DIP_X_CAM_COLOR_INK_DATA_MAIN;                   /* 2728, 0x15024728, DIP_A_CAM_COLOR_INK_DATA_MAIN */
	DIP_X_REG_CAM_COLOR_INK_DATA_MAIN_CR            DIP_X_CAM_COLOR_INK_DATA_MAIN_CR;                /* 272C, 0x1502472C, DIP_A_CAM_COLOR_INK_DATA_MAIN_CR */
	DIP_X_REG_CAM_COLOR_CAP_IN_DATA_MAIN            DIP_X_CAM_COLOR_CAP_IN_DATA_MAIN;                /* 2730, 0x15024730, DIP_A_CAM_COLOR_CAP_IN_DATA_MAIN */
	DIP_X_REG_CAM_COLOR_CAP_IN_DATA_MAIN_CR         DIP_X_CAM_COLOR_CAP_IN_DATA_MAIN_CR;             /* 2734, 0x15024734, DIP_A_CAM_COLOR_CAP_IN_DATA_MAIN_CR */
	DIP_X_REG_CAM_COLOR_CAP_OUT_DATA_MAIN           DIP_X_CAM_COLOR_CAP_OUT_DATA_MAIN;               /* 2738, 0x15024738, DIP_A_CAM_COLOR_CAP_OUT_DATA_MAIN */
	DIP_X_REG_CAM_COLOR_CAP_OUT_DATA_MAIN_CR        DIP_X_CAM_COLOR_CAP_OUT_DATA_MAIN_CR;            /* 273C, 0x1502473C, DIP_A_CAM_COLOR_CAP_OUT_DATA_MAIN_CR */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_1_0_MAIN            DIP_X_CAM_COLOR_Y_SLOPE_1_0_MAIN;                /* 2740, 0x15024740, DIP_A_CAM_COLOR_Y_SLOPE_1_0_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_3_2_MAIN            DIP_X_CAM_COLOR_Y_SLOPE_3_2_MAIN;                /* 2744, 0x15024744, DIP_A_CAM_COLOR_Y_SLOPE_3_2_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_5_4_MAIN            DIP_X_CAM_COLOR_Y_SLOPE_5_4_MAIN;                /* 2748, 0x15024748, DIP_A_CAM_COLOR_Y_SLOPE_5_4_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_7_6_MAIN            DIP_X_CAM_COLOR_Y_SLOPE_7_6_MAIN;                /* 274C, 0x1502474C, DIP_A_CAM_COLOR_Y_SLOPE_7_6_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_9_8_MAIN            DIP_X_CAM_COLOR_Y_SLOPE_9_8_MAIN;                /* 2750, 0x15024750, DIP_A_CAM_COLOR_Y_SLOPE_9_8_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_11_10_MAIN          DIP_X_CAM_COLOR_Y_SLOPE_11_10_MAIN;              /* 2754, 0x15024754, DIP_A_CAM_COLOR_Y_SLOPE_11_10_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_13_12_MAIN          DIP_X_CAM_COLOR_Y_SLOPE_13_12_MAIN;              /* 2758, 0x15024758, DIP_A_CAM_COLOR_Y_SLOPE_13_12_MAIN */
	DIP_X_REG_CAM_COLOR_Y_SLOPE_15_14_MAIN          DIP_X_CAM_COLOR_Y_SLOPE_15_14_MAIN;              /* 275C, 0x1502475C, DIP_A_CAM_COLOR_Y_SLOPE_15_14_MAIN */
	DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_0              DIP_X_CAM_COLOR_LOCAL_HUE_CD_0;                  /* 2760, 0x15024760, DIP_A_CAM_COLOR_LOCAL_HUE_CD_0 */
	DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_1              DIP_X_CAM_COLOR_LOCAL_HUE_CD_1;                  /* 2764, 0x15024764, DIP_A_CAM_COLOR_LOCAL_HUE_CD_1 */
	DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_2              DIP_X_CAM_COLOR_LOCAL_HUE_CD_2;                  /* 2768, 0x15024768, DIP_A_CAM_COLOR_LOCAL_HUE_CD_2 */
	DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_3              DIP_X_CAM_COLOR_LOCAL_HUE_CD_3;                  /* 276C, 0x1502476C, DIP_A_CAM_COLOR_LOCAL_HUE_CD_3 */
	DIP_X_REG_CAM_COLOR_LOCAL_HUE_CD_4              DIP_X_CAM_COLOR_LOCAL_HUE_CD_4;                  /* 2770, 0x15024770, DIP_A_CAM_COLOR_LOCAL_HUE_CD_4 */
	DIP_X_REG_CAM_COLOR_TWO_D_WINDOW_1              DIP_X_CAM_COLOR_TWO_D_WINDOW_1;                  /* 2774, 0x15024774, DIP_A_CAM_COLOR_TWO_D_WINDOW_1 */
	DIP_X_REG_CAM_COLOR_TWO_D_W1_RESULT             DIP_X_CAM_COLOR_TWO_D_W1_RESULT;                 /* 2778, 0x15024778, DIP_A_CAM_COLOR_TWO_D_W1_RESULT */
	DIP_X_REG_CAM_COLOR_SAT_HIST_X_CFG_MAIN         DIP_X_CAM_COLOR_SAT_HIST_X_CFG_MAIN;             /* 277C, 0x1502477C, DIP_A_CAM_COLOR_SAT_HIST_X_CFG_MAIN */
	DIP_X_REG_CAM_COLOR_SAT_HIST_Y_CFG_MAIN         DIP_X_CAM_COLOR_SAT_HIST_Y_CFG_MAIN;             /* 2780, 0x15024780, DIP_A_CAM_COLOR_SAT_HIST_Y_CFG_MAIN */
	DIP_X_REG_CAM_COLOR_BWS_2                       DIP_X_CAM_COLOR_BWS_2;                           /* 2784, 0x15024784, DIP_A_CAM_COLOR_BWS_2 */
	DIP_X_REG_CAM_COLOR_CRC_0                       DIP_X_CAM_COLOR_CRC_0;                           /* 2788, 0x15024788, DIP_A_CAM_COLOR_CRC_0 */
	DIP_X_REG_CAM_COLOR_CRC_1                       DIP_X_CAM_COLOR_CRC_1;                           /* 278C, 0x1502478C, DIP_A_CAM_COLOR_CRC_1 */
	DIP_X_REG_CAM_COLOR_CRC_2                       DIP_X_CAM_COLOR_CRC_2;                           /* 2790, 0x15024790, DIP_A_CAM_COLOR_CRC_2 */
	DIP_X_REG_CAM_COLOR_CRC_3                       DIP_X_CAM_COLOR_CRC_3;                           /* 2794, 0x15024794, DIP_A_CAM_COLOR_CRC_3 */
	DIP_X_REG_CAM_COLOR_CRC_4                       DIP_X_CAM_COLOR_CRC_4;                           /* 2798, 0x15024798, DIP_A_CAM_COLOR_CRC_4 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_0         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_0;             /* 279C, 0x1502479C, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_0 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_1         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_1;             /* 27A0, 0x150247A0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_1 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_2         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_2;             /* 27A4, 0x150247A4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_2 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_3         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_3;             /* 27A8, 0x150247A8, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_3 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN1_4         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN1_4;             /* 27AC, 0x150247AC, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN1_4 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_0         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_0;             /* 27B0, 0x150247B0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_0 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_1         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_1;             /* 27B4, 0x150247B4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_1 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_2         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_2;             /* 27B8, 0x150247B8, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_2 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_3         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_3;             /* 27BC, 0x150247BC, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_3 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN2_4         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN2_4;             /* 27C0, 0x150247C0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN2_4 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_0         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_0;             /* 27C4, 0x150247C4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_0 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_1         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_1;             /* 27C8, 0x150247C8, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_1 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_2         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_2;             /* 27CC, 0x150247CC, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_2 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_3         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_3;             /* 27D0, 0x150247D0, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_3 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_GAIN3_4         DIP_X_CAM_COLOR_PARTIAL_SAT_GAIN3_4;             /* 27D4, 0x150247D4, DIP_A_CAM_COLOR_PARTIAL_SAT_GAIN3_4 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_0        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_0;            /* 27D8, 0x150247D8, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_0 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_1        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_1;            /* 27DC, 0x150247DC, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_1 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_2        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_2;            /* 27E0, 0x150247E0, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_2 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_3        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_3;            /* 27E4, 0x150247E4, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_3 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT1_4        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT1_4;            /* 27E8, 0x150247E8, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT1_4 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_0        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_0;            /* 27EC, 0x150247EC, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_0 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_1        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_1;            /* 27F0, 0x150247F0, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_1 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_2        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_2;            /* 27F4, 0x150247F4, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_2 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_3        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_3;            /* 27F8, 0x150247F8, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_3 */
	DIP_X_REG_CAM_COLOR_PARTIAL_SAT_POINT2_4        DIP_X_CAM_COLOR_PARTIAL_SAT_POINT2_4;            /* 27FC, 0x150247FC, DIP_A_CAM_COLOR_PARTIAL_SAT_POINT2_4 */
	DIP_X_REG_CAM_COLOR_START                       DIP_X_CAM_COLOR_START;                           /* 2800, 0x15024800, DIP_A_CAM_COLOR_START */
	DIP_X_REG_CAM_COLOR_INTEN                       DIP_X_CAM_COLOR_INTEN;                           /* 2804, 0x15024804, DIP_A_CAM_COLOR_INTEN */
	DIP_X_REG_CAM_COLOR_INTSTA                      DIP_X_CAM_COLOR_INTSTA;                          /* 2808, 0x15024808, DIP_A_CAM_COLOR_INTSTA */
	DIP_X_REG_CAM_COLOR_OUT_SEL                     DIP_X_CAM_COLOR_OUT_SEL;                         /* 280C, 0x1502480C, DIP_A_CAM_COLOR_OUT_SEL */
	DIP_X_REG_CAM_COLOR_FRAME_DONE_DEL              DIP_X_CAM_COLOR_FRAME_DONE_DEL;                  /* 2810, 0x15024810, DIP_A_CAM_COLOR_FRAME_DONE_DEL */
	DIP_X_REG_CAM_COLOR_CRC                         DIP_X_CAM_COLOR_CRC;                             /* 2814, 0x15024814, DIP_A_CAM_COLOR_CRC */
	DIP_X_REG_CAM_COLOR_SW_SCRATCH                  DIP_X_CAM_COLOR_SW_SCRATCH;                      /* 2818, 0x15024818, DIP_A_CAM_COLOR_SW_SCRATCH */
	DIP_X_REG_CAM_COLOR_CK_ON                       DIP_X_CAM_COLOR_CK_ON;                           /* 281C, 0x1502481C, DIP_A_CAM_COLOR_CK_ON */
	DIP_X_REG_CAM_COLOR_INTERNAL_IP_WIDTH           DIP_X_CAM_COLOR_INTERNAL_IP_WIDTH;               /* 2820, 0x15024820, DIP_A_CAM_COLOR_INTERNAL_IP_WIDTH */
	DIP_X_REG_CAM_COLOR_INTERNAL_IP_HEIGHT          DIP_X_CAM_COLOR_INTERNAL_IP_HEIGHT;              /* 2824, 0x15024824, DIP_A_CAM_COLOR_INTERNAL_IP_HEIGHT */
	DIP_X_REG_CAM_COLOR_CM1_EN                      DIP_X_CAM_COLOR_CM1_EN;                          /* 2828, 0x15024828, DIP_A_CAM_COLOR_CM1_EN */
	DIP_X_REG_CAM_COLOR_CM2_EN                      DIP_X_CAM_COLOR_CM2_EN;                          /* 282C, 0x1502482C, DIP_A_CAM_COLOR_CM2_EN */
	DIP_X_REG_CAM_COLOR_SHADOW_CTRL                 DIP_X_CAM_COLOR_SHADOW_CTRL;                     /* 2830, 0x15024830, DIP_A_CAM_COLOR_SHADOW_CTRL */
	DIP_X_REG_CAM_COLOR_R0_CRC                      DIP_X_CAM_COLOR_R0_CRC;                          /* 2834, 0x15024834, DIP_A_CAM_COLOR_R0_CRC */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_0              DIP_X_CAM_COLOR_S_GAIN_BY_Y0_0;                  /* 2838, 0x15024838, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_0 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_1              DIP_X_CAM_COLOR_S_GAIN_BY_Y0_1;                  /* 283C, 0x1502483C, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_1 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_2              DIP_X_CAM_COLOR_S_GAIN_BY_Y0_2;                  /* 2840, 0x15024840, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_2 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_3              DIP_X_CAM_COLOR_S_GAIN_BY_Y0_3;                  /* 2844, 0x15024844, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_3 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y0_4              DIP_X_CAM_COLOR_S_GAIN_BY_Y0_4;                  /* 2848, 0x15024848, DIP_A_CAM_COLOR_S_GAIN_BY_Y0_4 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_0             DIP_X_CAM_COLOR_S_GAIN_BY_Y64_0;                 /* 284C, 0x1502484C, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_0 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_1             DIP_X_CAM_COLOR_S_GAIN_BY_Y64_1;                 /* 2850, 0x15024850, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_1 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_2             DIP_X_CAM_COLOR_S_GAIN_BY_Y64_2;                 /* 2854, 0x15024854, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_2 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_3             DIP_X_CAM_COLOR_S_GAIN_BY_Y64_3;                 /* 2858, 0x15024858, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_3 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y64_4             DIP_X_CAM_COLOR_S_GAIN_BY_Y64_4;                 /* 285C, 0x1502485C, DIP_A_CAM_COLOR_S_GAIN_BY_Y64_4 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_0            DIP_X_CAM_COLOR_S_GAIN_BY_Y128_0;                /* 2860, 0x15024860, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_0 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_1            DIP_X_CAM_COLOR_S_GAIN_BY_Y128_1;                /* 2864, 0x15024864, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_1 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_2            DIP_X_CAM_COLOR_S_GAIN_BY_Y128_2;                /* 2868, 0x15024868, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_2 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_3            DIP_X_CAM_COLOR_S_GAIN_BY_Y128_3;                /* 286C, 0x1502486C, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_3 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y128_4            DIP_X_CAM_COLOR_S_GAIN_BY_Y128_4;                /* 2870, 0x15024870, DIP_A_CAM_COLOR_S_GAIN_BY_Y128_4 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_0            DIP_X_CAM_COLOR_S_GAIN_BY_Y192_0;                /* 2874, 0x15024874, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_0 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_1            DIP_X_CAM_COLOR_S_GAIN_BY_Y192_1;                /* 2878, 0x15024878, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_1 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_2            DIP_X_CAM_COLOR_S_GAIN_BY_Y192_2;                /* 287C, 0x1502487C, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_2 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_3            DIP_X_CAM_COLOR_S_GAIN_BY_Y192_3;                /* 2880, 0x15024880, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_3 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y192_4            DIP_X_CAM_COLOR_S_GAIN_BY_Y192_4;                /* 2884, 0x15024884, DIP_A_CAM_COLOR_S_GAIN_BY_Y192_4 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_0            DIP_X_CAM_COLOR_S_GAIN_BY_Y256_0;                /* 2888, 0x15024888, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_0 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_1            DIP_X_CAM_COLOR_S_GAIN_BY_Y256_1;                /* 288C, 0x1502488C, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_1 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_2            DIP_X_CAM_COLOR_S_GAIN_BY_Y256_2;                /* 2890, 0x15024890, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_2 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_3            DIP_X_CAM_COLOR_S_GAIN_BY_Y256_3;                /* 2894, 0x15024894, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_3 */
	DIP_X_REG_CAM_COLOR_S_GAIN_BY_Y256_4            DIP_X_CAM_COLOR_S_GAIN_BY_Y256_4;                /* 2898, 0x15024898, DIP_A_CAM_COLOR_S_GAIN_BY_Y256_4 */
	DIP_X_REG_CAM_COLOR_LSP_1                       DIP_X_CAM_COLOR_LSP_1;                           /* 289C, 0x1502489C, DIP_A_CAM_COLOR_LSP_1 */
	DIP_X_REG_CAM_COLOR_LSP_2                       DIP_X_CAM_COLOR_LSP_2;                           /* 28A0, 0x150248A0, DIP_A_CAM_COLOR_LSP_2 */
	DIP_X_REG_CAM_COLOR_CM_CONTROL                  DIP_X_CAM_COLOR_CM_CONTROL;                      /* 28A4, 0x150248A4, DIP_A_CAM_COLOR_CM_CONTROL */
	DIP_X_REG_CAM_COLOR_CM_W1_HUE_0                 DIP_X_CAM_COLOR_CM_W1_HUE_0;                     /* 28A8, 0x150248A8, DIP_A_CAM_COLOR_CM_W1_HUE_0 */
	DIP_X_REG_CAM_COLOR_CM_W1_HUE_1                 DIP_X_CAM_COLOR_CM_W1_HUE_1;                     /* 28AC, 0x150248AC, DIP_A_CAM_COLOR_CM_W1_HUE_1 */
	DIP_X_REG_CAM_COLOR_CM_W1_HUE_2                 DIP_X_CAM_COLOR_CM_W1_HUE_2;                     /* 28B0, 0x150248B0, DIP_A_CAM_COLOR_CM_W1_HUE_2 */
	DIP_X_REG_CAM_COLOR_CM_W1_HUE_3                 DIP_X_CAM_COLOR_CM_W1_HUE_3;                     /* 28B4, 0x150248B4, DIP_A_CAM_COLOR_CM_W1_HUE_3 */
	DIP_X_REG_CAM_COLOR_CM_W1_HUE_4                 DIP_X_CAM_COLOR_CM_W1_HUE_4;                     /* 28B8, 0x150248B8, DIP_A_CAM_COLOR_CM_W1_HUE_4 */
	DIP_X_REG_CAM_COLOR_CM_W1_LUMA_0                DIP_X_CAM_COLOR_CM_W1_LUMA_0;                    /* 28BC, 0x150248BC, DIP_A_CAM_COLOR_CM_W1_LUMA_0 */
	DIP_X_REG_CAM_COLOR_CM_W1_LUMA_1                DIP_X_CAM_COLOR_CM_W1_LUMA_1;                    /* 28C0, 0x150248C0, DIP_A_CAM_COLOR_CM_W1_LUMA_1 */
	DIP_X_REG_CAM_COLOR_CM_W1_LUMA_2                DIP_X_CAM_COLOR_CM_W1_LUMA_2;                    /* 28C4, 0x150248C4, DIP_A_CAM_COLOR_CM_W1_LUMA_2 */
	DIP_X_REG_CAM_COLOR_CM_W1_LUMA_3                DIP_X_CAM_COLOR_CM_W1_LUMA_3;                    /* 28C8, 0x150248C8, DIP_A_CAM_COLOR_CM_W1_LUMA_3 */
	DIP_X_REG_CAM_COLOR_CM_W1_LUMA_4                DIP_X_CAM_COLOR_CM_W1_LUMA_4;                    /* 28CC, 0x150248CC, DIP_A_CAM_COLOR_CM_W1_LUMA_4 */
	DIP_X_REG_CAM_COLOR_CM_W1_SAT_0                 DIP_X_CAM_COLOR_CM_W1_SAT_0;                     /* 28D0, 0x150248D0, DIP_A_CAM_COLOR_CM_W1_SAT_0 */
	DIP_X_REG_CAM_COLOR_CM_W1_SAT_1                 DIP_X_CAM_COLOR_CM_W1_SAT_1;                     /* 28D4, 0x150248D4, DIP_A_CAM_COLOR_CM_W1_SAT_1 */
	DIP_X_REG_CAM_COLOR_CM_W1_SAT_2                 DIP_X_CAM_COLOR_CM_W1_SAT_2;                     /* 28D8, 0x150248D8, DIP_A_CAM_COLOR_CM_W1_SAT_2 */
	DIP_X_REG_CAM_COLOR_CM_W1_SAT_3                 DIP_X_CAM_COLOR_CM_W1_SAT_3;                     /* 28DC, 0x150248DC, DIP_A_CAM_COLOR_CM_W1_SAT_3 */
	DIP_X_REG_CAM_COLOR_CM_W1_SAT_4                 DIP_X_CAM_COLOR_CM_W1_SAT_4;                     /* 28E0, 0x150248E0, DIP_A_CAM_COLOR_CM_W1_SAT_4 */
	DIP_X_REG_CAM_COLOR_CM_W2_HUE_0                 DIP_X_CAM_COLOR_CM_W2_HUE_0;                     /* 28E4, 0x150248E4, DIP_A_CAM_COLOR_CM_W2_HUE_0 */
	DIP_X_REG_CAM_COLOR_CM_W2_HUE_1                 DIP_X_CAM_COLOR_CM_W2_HUE_1;                     /* 28E8, 0x150248E8, DIP_A_CAM_COLOR_CM_W2_HUE_1 */
	DIP_X_REG_CAM_COLOR_CM_W2_HUE_2                 DIP_X_CAM_COLOR_CM_W2_HUE_2;                     /* 28EC, 0x150248EC, DIP_A_CAM_COLOR_CM_W2_HUE_2 */
	DIP_X_REG_CAM_COLOR_CM_W2_HUE_3                 DIP_X_CAM_COLOR_CM_W2_HUE_3;                     /* 28F0, 0x150248F0, DIP_A_CAM_COLOR_CM_W2_HUE_3 */
	DIP_X_REG_CAM_COLOR_CM_W2_HUE_4                 DIP_X_CAM_COLOR_CM_W2_HUE_4;                     /* 28F4, 0x150248F4, DIP_A_CAM_COLOR_CM_W2_HUE_4 */
	DIP_X_REG_CAM_COLOR_CM_W2_LUMA_0                DIP_X_CAM_COLOR_CM_W2_LUMA_0;                    /* 28F8, 0x150248F8, DIP_A_CAM_COLOR_CM_W2_LUMA_0 */
	DIP_X_REG_CAM_COLOR_CM_W2_LUMA_1                DIP_X_CAM_COLOR_CM_W2_LUMA_1;                    /* 28FC, 0x150248FC, DIP_A_CAM_COLOR_CM_W2_LUMA_1 */
	DIP_X_REG_CAM_COLOR_CM_W2_LUMA_2                DIP_X_CAM_COLOR_CM_W2_LUMA_2;                    /* 2900, 0x15024900, DIP_A_CAM_COLOR_CM_W2_LUMA_2 */
	DIP_X_REG_CAM_COLOR_CM_W2_LUMA_3                DIP_X_CAM_COLOR_CM_W2_LUMA_3;                    /* 2904, 0x15024904, DIP_A_CAM_COLOR_CM_W2_LUMA_3 */
	DIP_X_REG_CAM_COLOR_CM_W2_LUMA_4                DIP_X_CAM_COLOR_CM_W2_LUMA_4;                    /* 2908, 0x15024908, DIP_A_CAM_COLOR_CM_W2_LUMA_4 */
	DIP_X_REG_CAM_COLOR_CM_W2_SAT_0                 DIP_X_CAM_COLOR_CM_W2_SAT_0;                     /* 290C, 0x1502490C, DIP_A_CAM_COLOR_CM_W2_SAT_0 */
	DIP_X_REG_CAM_COLOR_CM_W2_SAT_1                 DIP_X_CAM_COLOR_CM_W2_SAT_1;                     /* 2910, 0x15024910, DIP_A_CAM_COLOR_CM_W2_SAT_1 */
	DIP_X_REG_CAM_COLOR_CM_W2_SAT_2                 DIP_X_CAM_COLOR_CM_W2_SAT_2;                     /* 2914, 0x15024914, DIP_A_CAM_COLOR_CM_W2_SAT_2 */
	DIP_X_REG_CAM_COLOR_CM_W2_SAT_3                 DIP_X_CAM_COLOR_CM_W2_SAT_3;                     /* 2918, 0x15024918, DIP_A_CAM_COLOR_CM_W2_SAT_3 */
	DIP_X_REG_CAM_COLOR_CM_W2_SAT_4                 DIP_X_CAM_COLOR_CM_W2_SAT_4;                     /* 291C, 0x1502491C, DIP_A_CAM_COLOR_CM_W2_SAT_4 */
	DIP_X_REG_CAM_COLOR_CM_W3_HUE_0                 DIP_X_CAM_COLOR_CM_W3_HUE_0;                     /* 2920, 0x15024920, DIP_A_CAM_COLOR_CM_W3_HUE_0 */
	DIP_X_REG_CAM_COLOR_CM_W3_HUE_1                 DIP_X_CAM_COLOR_CM_W3_HUE_1;                     /* 2924, 0x15024924, DIP_A_CAM_COLOR_CM_W3_HUE_1 */
	DIP_X_REG_CAM_COLOR_CM_W3_HUE_2                 DIP_X_CAM_COLOR_CM_W3_HUE_2;                     /* 2928, 0x15024928, DIP_A_CAM_COLOR_CM_W3_HUE_2 */
	DIP_X_REG_CAM_COLOR_CM_W3_HUE_3                 DIP_X_CAM_COLOR_CM_W3_HUE_3;                     /* 292C, 0x1502492C, DIP_A_CAM_COLOR_CM_W3_HUE_3 */
	DIP_X_REG_CAM_COLOR_CM_W3_HUE_4                 DIP_X_CAM_COLOR_CM_W3_HUE_4;                     /* 2930, 0x15024930, DIP_A_CAM_COLOR_CM_W3_HUE_4 */
	DIP_X_REG_CAM_COLOR_CM_W3_LUMA_0                DIP_X_CAM_COLOR_CM_W3_LUMA_0;                    /* 2934, 0x15024934, DIP_A_CAM_COLOR_CM_W3_LUMA_0 */
	DIP_X_REG_CAM_COLOR_CM_W3_LUMA_1                DIP_X_CAM_COLOR_CM_W3_LUMA_1;                    /* 2938, 0x15024938, DIP_A_CAM_COLOR_CM_W3_LUMA_1 */
	DIP_X_REG_CAM_COLOR_CM_W3_LUMA_2                DIP_X_CAM_COLOR_CM_W3_LUMA_2;                    /* 293C, 0x1502493C, DIP_A_CAM_COLOR_CM_W3_LUMA_2 */
	DIP_X_REG_CAM_COLOR_CM_W3_LUMA_3                DIP_X_CAM_COLOR_CM_W3_LUMA_3;                    /* 2940, 0x15024940, DIP_A_CAM_COLOR_CM_W3_LUMA_3 */
	DIP_X_REG_CAM_COLOR_CM_W3_LUMA_4                DIP_X_CAM_COLOR_CM_W3_LUMA_4;                    /* 2944, 0x15024944, DIP_A_CAM_COLOR_CM_W3_LUMA_4 */
	DIP_X_REG_CAM_COLOR_CM_W3_SAT_0                 DIP_X_CAM_COLOR_CM_W3_SAT_0;                     /* 2948, 0x15024948, DIP_A_CAM_COLOR_CM_W3_SAT_0 */
	DIP_X_REG_CAM_COLOR_CM_W3_SAT_1                 DIP_X_CAM_COLOR_CM_W3_SAT_1;                     /* 294C, 0x1502494C, DIP_A_CAM_COLOR_CM_W3_SAT_1 */
	DIP_X_REG_CAM_COLOR_CM_W3_SAT_2                 DIP_X_CAM_COLOR_CM_W3_SAT_2;                     /* 2950, 0x15024950, DIP_A_CAM_COLOR_CM_W3_SAT_2 */
	DIP_X_REG_CAM_COLOR_CM_W3_SAT_3                 DIP_X_CAM_COLOR_CM_W3_SAT_3;                     /* 2954, 0x15024954, DIP_A_CAM_COLOR_CM_W3_SAT_3 */
	DIP_X_REG_CAM_COLOR_CM_W3_SAT_4                 DIP_X_CAM_COLOR_CM_W3_SAT_4;                     /* 2958, 0x15024958, DIP_A_CAM_COLOR_CM_W3_SAT_4 */
}dip_x_reg_t;

typedef volatile struct _fdvt_reg_t_	/* 0x1502B200..0x1502B383 */
{
	FDVT_REG_DMA_SOFT_RSTSTAT                       FDVT_DMA_SOFT_RSTSTAT;                           /* 0000, 0x1502B200 */
	FDVT_REG_VERTICAL_FLIP_EN                       FDVT_VERTICAL_FLIP_EN;                           /* 0004, 0x1502B204 */
	FDVT_REG_DMA_SOFT_RESET                         FDVT_DMA_SOFT_RESET;                             /* 0008, 0x1502B208 */
	FDVT_REG_LAST_ULTRA_EN                          FDVT_LAST_ULTRA_EN;                              /* 000C, 0x1502B20C */
	FDVT_REG_SPECIAL_FUN_EN                         FDVT_SPECIAL_FUN_EN;                             /* 0010, 0x1502B210 */
	UINT32                                          rsv_0014[7];                                     /* 0014..002F, 0x1502B214..1502B22F */
	FDVT_REG_WRO_BASE_ADDR                          FDVT_WRO_BASE_ADDR;                              /* 0030, 0x1502B230 */
	FDVT_REG_WRO_BASE_ADDR_2                        FDVT_WRO_BASE_ADDR_2;                            /* 0034, 0x1502B234 */
	FDVT_REG_WRO_OFST_ADDR                          FDVT_WRO_OFST_ADDR;                              /* 0038, 0x1502B238 */
	FDVT_REG_WRO_OFST_ADDR_2                        FDVT_WRO_OFST_ADDR_2;                            /* 003C, 0x1502B23C */
	FDVT_REG_WRO_XSIZE                              FDVT_WRO_XSIZE;                                  /* 0040, 0x1502B240 */
	FDVT_REG_WRO_YSIZE                              FDVT_WRO_YSIZE;                                  /* 0044, 0x1502B244 */
	FDVT_REG_WRO_STRIDE                             FDVT_WRO_STRIDE;                                 /* 0048, 0x1502B248 */
	FDVT_REG_WRO_CON                                FDVT_WRO_CON;                                    /* 004C, 0x1502B24C */
	FDVT_REG_WRO_CON2                               FDVT_WRO_CON2;                                   /* 0050, 0x1502B250 */
	FDVT_REG_WRO_CON3                               FDVT_WRO_CON3;                                   /* 0054, 0x1502B254 */
	UINT32                                          rsv_0058[14];                                    /* 0058..008F, 0x1502B258..1502B28F */
	FDVT_REG_RPI_BASE_ADDR                          FDVT_RPI_BASE_ADDR;                              /* 0090, 0x1502B290 */
	FDVT_REG_RPI_BASE_ADDR_2                        FDVT_RPI_BASE_ADDR_2;                            /* 0094, 0x1502B294 */
	FDVT_REG_RPI_OFST_ADDR                          FDVT_RPI_OFST_ADDR;                              /* 0098, 0x1502B298 */
	FDVT_REG_RPI_OFST_ADDR_2                        FDVT_RPI_OFST_ADDR_2;                            /* 009C, 0x1502B29C */
	FDVT_REG_RPI_XSIZE                              FDVT_RPI_XSIZE;                                  /* 00A0, 0x1502B2A0 */
	FDVT_REG_RPI_YSIZE                              FDVT_RPI_YSIZE;                                  /* 00A4, 0x1502B2A4 */
	FDVT_REG_RPI_STRIDE                             FDVT_RPI_STRIDE;                                 /* 00A8, 0x1502B2A8 */
	FDVT_REG_RPI_CON                                FDVT_RPI_CON;                                    /* 00AC, 0x1502B2AC */
	FDVT_REG_RPI_CON2                               FDVT_RPI_CON2;                                   /* 00B0, 0x1502B2B0 */
	FDVT_REG_RPI_CON3                               FDVT_RPI_CON3;                                   /* 00B4, 0x1502B2B4 */
	UINT32                                          rsv_00B8[2];                                     /* 00B8..00BF, 0x1502B2B8..1502B2BF */
	FDVT_REG_RBI_BASE_ADDR                          FDVT_RBI_BASE_ADDR;                              /* 00C0, 0x1502B2C0 */
	FDVT_REG_RBI_BASE_ADDR_2                        FDVT_RBI_BASE_ADDR_2;                            /* 00C4, 0x1502B2C4 */
	FDVT_REG_RBI_OFST_ADDR                          FDVT_RBI_OFST_ADDR;                              /* 00C8, 0x1502B2C8 */
	FDVT_REG_RBI_OFST_ADDR_2                        FDVT_RBI_OFST_ADDR_2;                            /* 00CC, 0x1502B2CC */
	FDVT_REG_RBI_XSIZE                              FDVT_RBI_XSIZE;                                  /* 00D0, 0x1502B2D0 */
	FDVT_REG_RBI_YSIZE                              FDVT_RBI_YSIZE;                                  /* 00D4, 0x1502B2D4 */
	FDVT_REG_RBI_STRIDE                             FDVT_RBI_STRIDE;                                 /* 00D8, 0x1502B2D8 */
	FDVT_REG_RBI_CON                                FDVT_RBI_CON;                                    /* 00DC, 0x1502B2DC */
	FDVT_REG_RBI_CON2                               FDVT_RBI_CON2;                                   /* 00E0, 0x1502B2E0 */
	FDVT_REG_RBI_CON3                               FDVT_RBI_CON3;                                   /* 00E4, 0x1502B2E4 */
	UINT32                                          rsv_00E8[6];                                     /* 00E8..00FF, 0x1502B2E8..1502B2FF */
	FDVT_REG_DMA_ERR_CTRL                           FDVT_DMA_ERR_CTRL;                               /* 0100, 0x1502B300 */
	FDVT_REG_WRO_ERR_STAT                           FDVT_WRO_ERR_STAT;                               /* 0104, 0x1502B304 */
	FDVT_REG_RPI_ERR_STAT                           FDVT_RPI_ERR_STAT;                               /* 0108, 0x1502B308 */
	FDVT_REG_RBI_ERR_STAT                           FDVT_RBI_ERR_STAT;                               /* 010C, 0x1502B30C */
	FDVT_REG_DMA_DEBUG_ADDR                         FDVT_DMA_DEBUG_ADDR;                             /* 0110, 0x1502B310 */
	FDVT_REG_DMA_RSV1                               FDVT_DMA_RSV1;                                   /* 0114, 0x1502B314 */
	FDVT_REG_DMA_RSV2                               FDVT_DMA_RSV2;                                   /* 0118, 0x1502B318 */
	FDVT_REG_DMA_RSV3                               FDVT_DMA_RSV3;                                   /* 011C, 0x1502B31C */
	FDVT_REG_DMA_RSV4                               FDVT_DMA_RSV4;                                   /* 0120, 0x1502B320 */
	FDVT_REG_DMA_RSV5                               FDVT_DMA_RSV5;                                   /* 0124, 0x1502B324 */
	FDVT_REG_DMA_RSV6                               FDVT_DMA_RSV6;                                   /* 0128, 0x1502B328 */
	FDVT_REG_DMA_DEBUG_SEL                          FDVT_DMA_DEBUG_SEL;                              /* 012C, 0x1502B32C */
	FDVT_REG_DMA_BW_SELF_TEST                       FDVT_DMA_BW_SELF_TEST;                           /* 0130, 0x1502B330 */
	UINT32                                          rsv_0134[20];                                    /* 0134..0183, 1502B334..1502B383 */
}fdvt_reg_t;

typedef volatile struct _cam_uni_reg_t_	/* 0x1A003000..0x1A003647 */
{
	CAM_UNI_REG_TOP_CTL                             CAM_UNI_TOP_CTL;                                 /* 0000, 0x1A003000 */
	CAM_UNI_REG_TOP_MISC                            CAM_UNI_TOP_MISC;                                /* 0004, 0x1A003004 */
	CAM_UNI_REG_TOP_SW_CTL                          CAM_UNI_TOP_SW_CTL;                              /* 0008, 0x1A003008 */
	CAM_UNI_REG_TOP_RAWI_TRIG                       CAM_UNI_TOP_RAWI_TRIG;                           /* 000C, 0x1A00300C */
	CAM_UNI_REG_TOP_MOD_EN                          CAM_UNI_TOP_MOD_EN;                              /* 0010, 0x1A003010 */
	CAM_UNI_REG_TOP_DMA_EN                          CAM_UNI_TOP_DMA_EN;                              /* 0014, 0x1A003014 */
	CAM_UNI_REG_TOP_PATH_SEL                        CAM_UNI_TOP_PATH_SEL;                            /* 0018, 0x1A003018 */
	CAM_UNI_REG_TOP_FMT_SEL                         CAM_UNI_TOP_FMT_SEL;                             /* 001C, 0x1A00301C */
	CAM_UNI_REG_TOP_DMA_INT_EN                      CAM_UNI_TOP_DMA_INT_EN;                          /* 0020, 0x1A003020 */
	CAM_UNI_REG_TOP_DMA_INT_STATUS                  CAM_UNI_TOP_DMA_INT_STATUS;                      /* 0024, 0x1A003024 */
	CAM_UNI_REG_TOP_DMA_INT_STATUSX                 CAM_UNI_TOP_DMA_INT_STATUSX;                     /* 0028, 0x1A003028 */
	CAM_UNI_REG_TOP_DBG_SET                         CAM_UNI_TOP_DBG_SET;                             /* 002C, 0x1A00302C */
	CAM_UNI_REG_TOP_DBG_PORT                        CAM_UNI_TOP_DBG_PORT;                            /* 0030, 0x1A003030 */
	CAM_UNI_REG_TOP_DMA_CCU_INT_EN                  CAM_UNI_TOP_DMA_CCU_INT_EN;                      /* 0034, 0x1A003034 */
	CAM_UNI_REG_TOP_DMA_CCU_INT_STATUS              CAM_UNI_TOP_DMA_CCU_INT_STATUS;                  /* 0038, 0x1A003038 */
	UINT32                                          rsv_003C;                                        /* 003C, 0x1A00303C */
	CAM_UNI_REG_TOP_MOD_DCM_DIS                     CAM_UNI_TOP_MOD_DCM_DIS;                         /* 0040, 0x1A003040 */
	CAM_UNI_REG_TOP_DMA_DCM_DIS                     CAM_UNI_TOP_DMA_DCM_DIS;                         /* 0044, 0x1A003044 */
	UINT32                                          rsv_0048[2];                                     /* 0048..004F, 0x1A003048..1A00304F */
	CAM_UNI_REG_TOP_MOD_DCM_STATUS                  CAM_UNI_TOP_MOD_DCM_STATUS;                      /* 0050, 0x1A003050 */
	CAM_UNI_REG_TOP_DMA_DCM_STATUS                  CAM_UNI_TOP_DMA_DCM_STATUS;                      /* 0054, 0x1A003054 */
	UINT32                                          rsv_0058[2];                                     /* 0058..005F, 0x1A003058..1A00305F */
	CAM_UNI_REG_TOP_MOD_REQ_STATUS                  CAM_UNI_TOP_MOD_REQ_STATUS;                      /* 0060, 0x1A003060 */
	CAM_UNI_REG_TOP_DMA_REQ_STATUS                  CAM_UNI_TOP_DMA_REQ_STATUS;                      /* 0064, 0x1A003064 */
	UINT32                                          rsv_0068[2];                                     /* 0068..006F, 0x1A003068..1A00306F */
	CAM_UNI_REG_TOP_MOD_RDY_STATUS                  CAM_UNI_TOP_MOD_RDY_STATUS;                      /* 0070, 0x1A003070 */
	CAM_UNI_REG_TOP_DMA_RDY_STATUS                  CAM_UNI_TOP_DMA_RDY_STATUS;                      /* 0074, 0x1A003074 */
	UINT32                                          rsv_0078[2];                                     /* 0078..007F, 0x1A003078..1A00307F */
	CAM_UNI_REG_FBC_FLKO_A_CTL1                     CAM_UNI_FBC_FLKO_A_CTL1;                         /* 0080, 0x1A003080 */
	CAM_UNI_REG_FBC_FLKO_A_CTL2                     CAM_UNI_FBC_FLKO_A_CTL2;                         /* 0084, 0x1A003084 */
	CAM_UNI_REG_FBC_EISO_A_CTL1                     CAM_UNI_FBC_EISO_A_CTL1;                         /* 0088, 0x1A003088 */
	CAM_UNI_REG_FBC_EISO_A_CTL2                     CAM_UNI_FBC_EISO_A_CTL2;                         /* 008C, 0x1A00308C */
	CAM_UNI_REG_FBC_RSSO_A_CTL1                     CAM_UNI_FBC_RSSO_A_CTL1;                         /* 0090, 0x1A003090 */
	CAM_UNI_REG_FBC_RSSO_A_CTL2                     CAM_UNI_FBC_RSSO_A_CTL2;                         /* 0094, 0x1A003094 */
	UINT32                                          rsv_0098[90];                                    /* 0098..01FF, 0x1A003098..1A0031FF */
	CAM_UNI_REG_DMA_SOFT_RSTSTAT                    CAM_UNI_DMA_SOFT_RSTSTAT;                        /* 0200, 0x1A003200 */
	CAM_UNI_REG_VERTICAL_FLIP_EN                    CAM_UNI_VERTICAL_FLIP_EN;                        /* 0204, 0x1A003204 */
	CAM_UNI_REG_DMA_SOFT_RESET                      CAM_UNI_DMA_SOFT_RESET;                          /* 0208, 0x1A003208 */
	CAM_UNI_REG_LAST_ULTRA_EN                       CAM_UNI_LAST_ULTRA_EN;                           /* 020C, 0x1A00320C */
	CAM_UNI_REG_SPECIAL_FUN_EN                      CAM_UNI_SPECIAL_FUN_EN;                          /* 0210, 0x1A003210 */
	UINT32                                          rsv_0214[3];                                     /* 0214..021F, 0x1A003214..1A00321F */
	CAM_UNI_REG_EISO_BASE_ADDR                      CAM_UNI_EISO_BASE_ADDR;                          /* 0220, 0x1A003220 */
	UINT32                                          rsv_0224;                                        /* 0224, 0x1A003224 */
	CAM_UNI_REG_EISO_OFST_ADDR                      CAM_UNI_EISO_OFST_ADDR;                          /* 0228, 0x1A003228 */
	UINT32                                          rsv_022C;                                        /* 022C, 0x1A00322C */
	CAM_UNI_REG_EISO_XSIZE                          CAM_UNI_EISO_XSIZE;                              /* 0230, 0x1A003230 */
	CAM_UNI_REG_EISO_YSIZE                          CAM_UNI_EISO_YSIZE;                              /* 0234, 0x1A003234 */
	CAM_UNI_REG_EISO_STRIDE                         CAM_UNI_EISO_STRIDE;                             /* 0238, 0x1A003238 */
	CAM_UNI_REG_EISO_CON                            CAM_UNI_EISO_CON;                                /* 023C, 0x1A00323C */
	CAM_UNI_REG_EISO_CON2                           CAM_UNI_EISO_CON2;                               /* 0240, 0x1A003240 */
	CAM_UNI_REG_EISO_CON3                           CAM_UNI_EISO_CON3;                               /* 0244, 0x1A003244 */
	UINT32                                          rsv_0248[2];                                     /* 0248..024F, 0x1A003248..1A00324F */
	CAM_UNI_REG_FLKO_BASE_ADDR                      CAM_UNI_FLKO_BASE_ADDR;                          /* 0250, 0x1A003250 */
	UINT32                                          rsv_0254;                                        /* 0254, 0x1A003254 */
	CAM_UNI_REG_FLKO_OFST_ADDR                      CAM_UNI_FLKO_OFST_ADDR;                          /* 0258, 0x1A003258 */
	UINT32                                          rsv_025C;                                        /* 025C, 0x1A00325C */
	CAM_UNI_REG_FLKO_XSIZE                          CAM_UNI_FLKO_XSIZE;                              /* 0260, 0x1A003260 */
	CAM_UNI_REG_FLKO_YSIZE                          CAM_UNI_FLKO_YSIZE;                              /* 0264, 0x1A003264 */
	CAM_UNI_REG_FLKO_STRIDE                         CAM_UNI_FLKO_STRIDE;                             /* 0268, 0x1A003268 */
	CAM_UNI_REG_FLKO_CON                            CAM_UNI_FLKO_CON;                                /* 026C, 0x1A00326C */
	CAM_UNI_REG_FLKO_CON2                           CAM_UNI_FLKO_CON2;                               /* 0270, 0x1A003270 */
	CAM_UNI_REG_FLKO_CON3                           CAM_UNI_FLKO_CON3;                               /* 0274, 0x1A003274 */
	UINT32                                          rsv_0278[2];                                     /* 0278..027F, 0x1A003278..1A00327F */
	CAM_UNI_REG_RSSO_A_BASE_ADDR                    CAM_UNI_RSSO_A_BASE_ADDR;                        /* 0280, 0x1A003280 */
	UINT32                                          rsv_0284;                                        /* 0284, 0x1A003284 */
	CAM_UNI_REG_RSSO_A_OFST_ADDR                    CAM_UNI_RSSO_A_OFST_ADDR;                        /* 0288, 0x1A003288 */
	UINT32                                          rsv_028C;                                        /* 028C, 0x1A00328C */
	CAM_UNI_REG_RSSO_A_XSIZE                        CAM_UNI_RSSO_A_XSIZE;                            /* 0290, 0x1A003290 */
	CAM_UNI_REG_RSSO_A_YSIZE                        CAM_UNI_RSSO_A_YSIZE;                            /* 0294, 0x1A003294 */
	CAM_UNI_REG_RSSO_A_STRIDE                       CAM_UNI_RSSO_A_STRIDE;                           /* 0298, 0x1A003298 */
	CAM_UNI_REG_RSSO_A_CON                          CAM_UNI_RSSO_A_CON;                              /* 029C, 0x1A00329C */
	CAM_UNI_REG_RSSO_A_CON2                         CAM_UNI_RSSO_A_CON2;                             /* 02A0, 0x1A0032A0 */
	CAM_UNI_REG_RSSO_A_CON3                         CAM_UNI_RSSO_A_CON3;                             /* 02A4, 0x1A0032A4 */
	UINT32                                          rsv_02A8[2];                                     /* 02A8..02AF, 0x1A0032A8..1A0032AF */
	CAM_UNI_REG_RSSO_B_BASE_ADDR                    CAM_UNI_RSSO_B_BASE_ADDR;                        /* 02B0, 0x1A0032B0 */
	UINT32                                          rsv_02B4;                                        /* 02B4, 0x1A0032B4 */
	CAM_UNI_REG_RSSO_B_OFST_ADDR                    CAM_UNI_RSSO_B_OFST_ADDR;                        /* 02B8, 0x1A0032B8 */
	UINT32                                          rsv_02BC;                                        /* 02BC, 0x1A0032BC */
	CAM_UNI_REG_RSSO_B_XSIZE                        CAM_UNI_RSSO_B_XSIZE;                            /* 02C0, 0x1A0032C0 */
	CAM_UNI_REG_RSSO_B_YSIZE                        CAM_UNI_RSSO_B_YSIZE;                            /* 02C4, 0x1A0032C4 */
	CAM_UNI_REG_RSSO_B_STRIDE                       CAM_UNI_RSSO_B_STRIDE;                           /* 02C8, 0x1A0032C8 */
	CAM_UNI_REG_RSSO_B_CON                          CAM_UNI_RSSO_B_CON;                              /* 02CC, 0x1A0032CC */
	CAM_UNI_REG_RSSO_B_CON2                         CAM_UNI_RSSO_B_CON2;                             /* 02D0, 0x1A0032D0 */
	CAM_UNI_REG_RSSO_B_CON3                         CAM_UNI_RSSO_B_CON3;                             /* 02D4, 0x1A0032D4 */
	UINT32                                          rsv_02D8[26];                                    /* 02D8..033F, 0x1A0032D8..1A00333F */
	CAM_UNI_REG_RAWI_BASE_ADDR                      CAM_UNI_RAWI_BASE_ADDR;                          /* 0340, 0x1A003340 */
	UINT32                                          rsv_0344;                                        /* 0344, 0x1A003344 */
	CAM_UNI_REG_RAWI_OFST_ADDR                      CAM_UNI_RAWI_OFST_ADDR;                          /* 0348, 0x1A003348 */
	UINT32                                          rsv_034C;                                        /* 034C, 0x1A00334C */
	CAM_UNI_REG_RAWI_XSIZE                          CAM_UNI_RAWI_XSIZE;                              /* 0350, 0x1A003350 */
	CAM_UNI_REG_RAWI_YSIZE                          CAM_UNI_RAWI_YSIZE;                              /* 0354, 0x1A003354 */
	CAM_UNI_REG_RAWI_STRIDE                         CAM_UNI_RAWI_STRIDE;                             /* 0358, 0x1A003358 */
	CAM_UNI_REG_RAWI_CON                            CAM_UNI_RAWI_CON;                                /* 035C, 0x1A00335C */
	CAM_UNI_REG_RAWI_CON2                           CAM_UNI_RAWI_CON2;                               /* 0360, 0x1A003360 */
	CAM_UNI_REG_RAWI_CON3                           CAM_UNI_RAWI_CON3;                               /* 0364, 0x1A003364 */
	UINT32                                          rsv_0368[2];                                     /* 0368..036F, 0x1A003368..1A00336F */
	CAM_UNI_REG_DMA_ERR_CTRL                        CAM_UNI_DMA_ERR_CTRL;                            /* 0370, 0x1A003370 */
	CAM_UNI_REG_EISO_ERR_STAT                       CAM_UNI_EISO_ERR_STAT;                           /* 0374, 0x1A003374 */
	CAM_UNI_REG_FLKO_ERR_STAT                       CAM_UNI_FLKO_ERR_STAT;                           /* 0378, 0x1A003378 */
	CAM_UNI_REG_RSSO_A_ERR_STAT                     CAM_UNI_RSSO_A_ERR_STAT;                         /* 037C, 0x1A00337C */
	CAM_UNI_REG_RSSO_B_ERR_STAT                     CAM_UNI_RSSO_B_ERR_STAT;                         /* 0380, 0x1A003380 */
	CAM_UNI_REG_RAWI_ERR_STAT                       CAM_UNI_RAWI_ERR_STAT;                           /* 0384, 0x1A003384 */
	CAM_UNI_REG_DMA_DEBUG_ADDR                      CAM_UNI_DMA_DEBUG_ADDR;                          /* 0388, 0x1A003388 */
	CAM_UNI_REG_DMA_RSV1                            CAM_UNI_DMA_RSV1;                                /* 038C, 0x1A00338C */
	CAM_UNI_REG_DMA_RSV2                            CAM_UNI_DMA_RSV2;                                /* 0390, 0x1A003390 */
	CAM_UNI_REG_DMA_RSV3                            CAM_UNI_DMA_RSV3;                                /* 0394, 0x1A003394 */
	CAM_UNI_REG_DMA_RSV4                            CAM_UNI_DMA_RSV4;                                /* 0398, 0x1A003398 */
	CAM_UNI_REG_DMA_RSV5                            CAM_UNI_DMA_RSV5;                                /* 039C, 0x1A00339C */
	CAM_UNI_REG_DMA_RSV6                            CAM_UNI_DMA_RSV6;                                /* 03A0, 0x1A0033A0 */
	CAM_UNI_REG_DMA_DEBUG_SEL                       CAM_UNI_DMA_DEBUG_SEL;                           /* 03A4, 0x1A0033A4 */
	CAM_UNI_REG_DMA_BW_SELF_TEST                    CAM_UNI_DMA_BW_SELF_TEST;                        /* 03A8, 0x1A0033A8 */
	UINT32                                          rsv_03AC[5];                                     /* 03AC..03BF, 0x1A0033AC..1A0033BF */
	CAM_UNI_REG_DMA_FRAME_HEADER_EN                 CAM_UNI_DMA_FRAME_HEADER_EN;                     /* 03C0, 0x1A0033C0 */
	CAM_UNI_REG_EISO_FH_BASE_ADDR                   CAM_UNI_EISO_FH_BASE_ADDR;                       /* 03C4, 0x1A0033C4 */
	CAM_UNI_REG_FLKO_FH_BASE_ADDR                   CAM_UNI_FLKO_FH_BASE_ADDR;                       /* 03C8, 0x1A0033C8 */
	CAM_UNI_REG_RSSO_A_FH_BASE_ADDR                 CAM_UNI_RSSO_A_FH_BASE_ADDR;                     /* 03CC, 0x1A0033CC */
	CAM_UNI_REG_RSSO_B_FH_BASE_ADDR                 CAM_UNI_RSSO_B_FH_BASE_ADDR;                     /* 03D0, 0x1A0033D0 */
	UINT32                                          rsv_03D4[3];                                     /* 03D4..03DF, 0x1A0033D4..1A0033DF */
	CAM_UNI_REG_EISO_FH_SPARE_2                     CAM_UNI_EISO_FH_SPARE_2;                         /* 03E0, 0x1A0033E0 */
	CAM_UNI_REG_EISO_FH_SPARE_3                     CAM_UNI_EISO_FH_SPARE_3;                         /* 03E4, 0x1A0033E4 */
	CAM_UNI_REG_EISO_FH_SPARE_4                     CAM_UNI_EISO_FH_SPARE_4;                         /* 03E8, 0x1A0033E8 */
	CAM_UNI_REG_EISO_FH_SPARE_5                     CAM_UNI_EISO_FH_SPARE_5;                         /* 03EC, 0x1A0033EC */
	CAM_UNI_REG_EISO_FH_SPARE_6                     CAM_UNI_EISO_FH_SPARE_6;                         /* 03F0, 0x1A0033F0 */
	CAM_UNI_REG_EISO_FH_SPARE_7                     CAM_UNI_EISO_FH_SPARE_7;                         /* 03F4, 0x1A0033F4 */
	CAM_UNI_REG_EISO_FH_SPARE_8                     CAM_UNI_EISO_FH_SPARE_8;                         /* 03F8, 0x1A0033F8 */
	CAM_UNI_REG_EISO_FH_SPARE_9                     CAM_UNI_EISO_FH_SPARE_9;                         /* 03FC, 0x1A0033FC */
	CAM_UNI_REG_EISO_FH_SPARE_10                    CAM_UNI_EISO_FH_SPARE_10;                        /* 0400, 0x1A003400 */
	CAM_UNI_REG_EISO_FH_SPARE_11                    CAM_UNI_EISO_FH_SPARE_11;                        /* 0404, 0x1A003404 */
	CAM_UNI_REG_EISO_FH_SPARE_12                    CAM_UNI_EISO_FH_SPARE_12;                        /* 0408, 0x1A003408 */
	CAM_UNI_REG_EISO_FH_SPARE_13                    CAM_UNI_EISO_FH_SPARE_13;                        /* 040C, 0x1A00340C */
	CAM_UNI_REG_EISO_FH_SPARE_14                    CAM_UNI_EISO_FH_SPARE_14;                        /* 0410, 0x1A003410 */
	CAM_UNI_REG_EISO_FH_SPARE_15                    CAM_UNI_EISO_FH_SPARE_15;                        /* 0414, 0x1A003414 */
	CAM_UNI_REG_EISO_FH_SPARE_16                    CAM_UNI_EISO_FH_SPARE_16;                        /* 0418, 0x1A003418 */
	UINT32                                          rsv_041C;                                        /* 041C, 0x1A00341C */
	CAM_UNI_REG_FLKO_FH_SPARE_2                     CAM_UNI_FLKO_FH_SPARE_2;                         /* 0420, 0x1A003420 */
	CAM_UNI_REG_FLKO_FH_SPARE_3                     CAM_UNI_FLKO_FH_SPARE_3;                         /* 0424, 0x1A003424 */
	CAM_UNI_REG_FLKO_FH_SPARE_4                     CAM_UNI_FLKO_FH_SPARE_4;                         /* 0428, 0x1A003428 */
	CAM_UNI_REG_FLKO_FH_SPARE_5                     CAM_UNI_FLKO_FH_SPARE_5;                         /* 042C, 0x1A00342C */
	CAM_UNI_REG_FLKO_FH_SPARE_6                     CAM_UNI_FLKO_FH_SPARE_6;                         /* 0430, 0x1A003430 */
	CAM_UNI_REG_FLKO_FH_SPARE_7                     CAM_UNI_FLKO_FH_SPARE_7;                         /* 0434, 0x1A003434 */
	CAM_UNI_REG_FLKO_FH_SPARE_8                     CAM_UNI_FLKO_FH_SPARE_8;                         /* 0438, 0x1A003438 */
	CAM_UNI_REG_FLKO_FH_SPARE_9                     CAM_UNI_FLKO_FH_SPARE_9;                         /* 043C, 0x1A00343C */
	CAM_UNI_REG_FLKO_FH_SPARE_10                    CAM_UNI_FLKO_FH_SPARE_10;                        /* 0440, 0x1A003440 */
	CAM_UNI_REG_FLKO_FH_SPARE_11                    CAM_UNI_FLKO_FH_SPARE_11;                        /* 0444, 0x1A003444 */
	CAM_UNI_REG_FLKO_FH_SPARE_12                    CAM_UNI_FLKO_FH_SPARE_12;                        /* 0448, 0x1A003448 */
	CAM_UNI_REG_FLKO_FH_SPARE_13                    CAM_UNI_FLKO_FH_SPARE_13;                        /* 044C, 0x1A00344C */
	CAM_UNI_REG_FLKO_FH_SPARE_14                    CAM_UNI_FLKO_FH_SPARE_14;                        /* 0450, 0x1A003450 */
	CAM_UNI_REG_FLKO_FH_SPARE_15                    CAM_UNI_FLKO_FH_SPARE_15;                        /* 0454, 0x1A003454 */
	CAM_UNI_REG_FLKO_FH_SPARE_16                    CAM_UNI_FLKO_FH_SPARE_16;                        /* 0458, 0x1A003458 */
	UINT32                                          rsv_045C;                                        /* 045C, 0x1A00345C */
	CAM_UNI_REG_RSSO_A_FH_SPARE_2                   CAM_UNI_RSSO_A_FH_SPARE_2;                       /* 0460, 0x1A003460 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_3                   CAM_UNI_RSSO_A_FH_SPARE_3;                       /* 0464, 0x1A003464 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_4                   CAM_UNI_RSSO_A_FH_SPARE_4;                       /* 0468, 0x1A003468 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_5                   CAM_UNI_RSSO_A_FH_SPARE_5;                       /* 046C, 0x1A00346C */
	CAM_UNI_REG_RSSO_A_FH_SPARE_6                   CAM_UNI_RSSO_A_FH_SPARE_6;                       /* 0470, 0x1A003470 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_7                   CAM_UNI_RSSO_A_FH_SPARE_7;                       /* 0474, 0x1A003474 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_8                   CAM_UNI_RSSO_A_FH_SPARE_8;                       /* 0478, 0x1A003478 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_9                   CAM_UNI_RSSO_A_FH_SPARE_9;                       /* 047C, 0x1A00347C */
	CAM_UNI_REG_RSSO_A_FH_SPARE_10                  CAM_UNI_RSSO_A_FH_SPARE_10;                      /* 0480, 0x1A003480 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_11                  CAM_UNI_RSSO_A_FH_SPARE_11;                      /* 0484, 0x1A003484 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_12                  CAM_UNI_RSSO_A_FH_SPARE_12;                      /* 0488, 0x1A003488 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_13                  CAM_UNI_RSSO_A_FH_SPARE_13;                      /* 048C, 0x1A00348C */
	CAM_UNI_REG_RSSO_A_FH_SPARE_14                  CAM_UNI_RSSO_A_FH_SPARE_14;                      /* 0490, 0x1A003490 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_15                  CAM_UNI_RSSO_A_FH_SPARE_15;                      /* 0494, 0x1A003494 */
	CAM_UNI_REG_RSSO_A_FH_SPARE_16                  CAM_UNI_RSSO_A_FH_SPARE_16;                      /* 0498, 0x1A003498 */
	UINT32                                          rsv_049C;                                        /* 049C, 0x1A00349C */
	CAM_UNI_REG_RSSO_B_FH_SPARE_2                   CAM_UNI_RSSO_B_FH_SPARE_2;                       /* 04A0, 0x1A0034A0 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_3                   CAM_UNI_RSSO_B_FH_SPARE_3;                       /* 04A4, 0x1A0034A4 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_4                   CAM_UNI_RSSO_B_FH_SPARE_4;                       /* 04A8, 0x1A0034A8 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_5                   CAM_UNI_RSSO_B_FH_SPARE_5;                       /* 04AC, 0x1A0034AC */
	CAM_UNI_REG_RSSO_B_FH_SPARE_6                   CAM_UNI_RSSO_B_FH_SPARE_6;                       /* 04B0, 0x1A0034B0 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_7                   CAM_UNI_RSSO_B_FH_SPARE_7;                       /* 04B4, 0x1A0034B4 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_8                   CAM_UNI_RSSO_B_FH_SPARE_8;                       /* 04B8, 0x1A0034B8 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_9                   CAM_UNI_RSSO_B_FH_SPARE_9;                       /* 04BC, 0x1A0034BC */
	CAM_UNI_REG_RSSO_B_FH_SPARE_10                  CAM_UNI_RSSO_B_FH_SPARE_10;                      /* 04C0, 0x1A0034C0 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_11                  CAM_UNI_RSSO_B_FH_SPARE_11;                      /* 04C4, 0x1A0034C4 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_12                  CAM_UNI_RSSO_B_FH_SPARE_12;                      /* 04C8, 0x1A0034C8 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_13                  CAM_UNI_RSSO_B_FH_SPARE_13;                      /* 04CC, 0x1A0034CC */
	CAM_UNI_REG_RSSO_B_FH_SPARE_14                  CAM_UNI_RSSO_B_FH_SPARE_14;                      /* 04D0, 0x1A0034D0 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_15                  CAM_UNI_RSSO_B_FH_SPARE_15;                      /* 04D4, 0x1A0034D4 */
	CAM_UNI_REG_RSSO_B_FH_SPARE_16                  CAM_UNI_RSSO_B_FH_SPARE_16;                      /* 04D8, 0x1A0034D8 */
	UINT32                                          rsv_04DC[9];                                     /* 04DC..04FF, 0x1A0034DC..1A0034FF */
	CAM_UNI_REG_UNP2_A_OFST                         CAM_UNI_UNP2_A_OFST;                             /* 0500, 0x1A003500 */
	UINT32                                          rsv_0504[3];                                     /* 0504..050F, 0x1A003504..1A00350F */
	CAM_UNI_REG_QBN3_A_MODE                         CAM_UNI_QBN3_A_MODE;                             /* 0510, 0x1A003510 */
	UINT32                                          rsv_0514[3];                                     /* 0514..051F, 0x1A003514..1A00351F */
	CAM_UNI_REG_SGG3_A_PGN                          CAM_UNI_SGG3_A_PGN;                              /* 0520, 0x1A003520 */
	CAM_UNI_REG_SGG3_A_GMRC_1                       CAM_UNI_SGG3_A_GMRC_1;                           /* 0524, 0x1A003524 */
	CAM_UNI_REG_SGG3_A_GMRC_2                       CAM_UNI_SGG3_A_GMRC_2;                           /* 0528, 0x1A003528 */
	UINT32                                          rsv_052C;                                        /* 052C, 0x1A00352C */
	CAM_UNI_REG_FLK_A_CON                           CAM_UNI_FLK_A_CON;                               /* 0530, 0x1A003530 */
	CAM_UNI_REG_FLK_A_OFST                          CAM_UNI_FLK_A_OFST;                              /* 0534, 0x1A003534 */
	CAM_UNI_REG_FLK_A_SIZE                          CAM_UNI_FLK_A_SIZE;                              /* 0538, 0x1A003538 */
	CAM_UNI_REG_FLK_A_NUM                           CAM_UNI_FLK_A_NUM;                               /* 053C, 0x1A00353C */
	UINT32                                          rsv_0540[4];                                     /* 0540..054F, 0x1A003540..1A00354F */
	CAM_UNI_REG_EIS_A_PREP_ME_CTRL1                 CAM_UNI_EIS_A_PREP_ME_CTRL1;                     /* 0550, 0x1A003550 */
	CAM_UNI_REG_EIS_A_PREP_ME_CTRL2                 CAM_UNI_EIS_A_PREP_ME_CTRL2;                     /* 0554, 0x1A003554 */
	CAM_UNI_REG_EIS_A_LMV_TH                        CAM_UNI_EIS_A_LMV_TH;                            /* 0558, 0x1A003558 */
	CAM_UNI_REG_EIS_A_FL_OFFSET                     CAM_UNI_EIS_A_FL_OFFSET;                         /* 055C, 0x1A00355C */
	CAM_UNI_REG_EIS_A_MB_OFFSET                     CAM_UNI_EIS_A_MB_OFFSET;                         /* 0560, 0x1A003560 */
	CAM_UNI_REG_EIS_A_MB_INTERVAL                   CAM_UNI_EIS_A_MB_INTERVAL;                       /* 0564, 0x1A003564 */
	CAM_UNI_REG_EIS_A_GMV                           CAM_UNI_EIS_A_GMV;                               /* 0568, 0x1A003568 */
	CAM_UNI_REG_EIS_A_ERR_CTRL                      CAM_UNI_EIS_A_ERR_CTRL;                          /* 056C, 0x1A00356C */
	CAM_UNI_REG_EIS_A_IMAGE_CTRL                    CAM_UNI_EIS_A_IMAGE_CTRL;                        /* 0570, 0x1A003570 */
	UINT32                                          rsv_0574[7];                                     /* 0574..058F, 0x1A003574..1A00358F */
	CAM_UNI_REG_SGG2_A_PGN                          CAM_UNI_SGG2_A_PGN;                              /* 0590, 0x1A003590 */
	CAM_UNI_REG_SGG2_A_GMRC_1                       CAM_UNI_SGG2_A_GMRC_1;                           /* 0594, 0x1A003594 */
	CAM_UNI_REG_SGG2_A_GMRC_2                       CAM_UNI_SGG2_A_GMRC_2;                           /* 0598, 0x1A003598 */
	UINT32                                          rsv_059C;                                        /* 059C, 0x1A00359C */
	CAM_UNI_REG_HDS_A_MODE                          CAM_UNI_HDS_A_MODE;                              /* 05A0, 0x1A0035A0 */
	UINT32                                          rsv_05A4[7];                                     /* 05A4..05BF, 0x1A0035A4..1A0035BF */
	CAM_UNI_REG_RSS_A_CONTROL                       CAM_UNI_RSS_A_CONTROL;                           /* 05C0, 0x1A0035C0 */
	CAM_UNI_REG_RSS_A_IN_IMG                        CAM_UNI_RSS_A_IN_IMG;                            /* 05C4, 0x1A0035C4 */
	CAM_UNI_REG_RSS_A_OUT_IMG                       CAM_UNI_RSS_A_OUT_IMG;                           /* 05C8, 0x1A0035C8 */
	CAM_UNI_REG_RSS_A_HORI_STEP                     CAM_UNI_RSS_A_HORI_STEP;                         /* 05CC, 0x1A0035CC */
	CAM_UNI_REG_RSS_A_VERT_STEP                     CAM_UNI_RSS_A_VERT_STEP;                         /* 05D0, 0x1A0035D0 */
	CAM_UNI_REG_RSS_A_HORI_INT_OFST                 CAM_UNI_RSS_A_HORI_INT_OFST;                     /* 05D4, 0x1A0035D4 */
	CAM_UNI_REG_RSS_A_HORI_SUB_OFST                 CAM_UNI_RSS_A_HORI_SUB_OFST;                     /* 05D8, 0x1A0035D8 */
	CAM_UNI_REG_RSS_A_VERT_INT_OFST                 CAM_UNI_RSS_A_VERT_INT_OFST;                     /* 05DC, 0x1A0035DC */
	CAM_UNI_REG_RSS_A_VERT_SUB_OFST                 CAM_UNI_RSS_A_VERT_SUB_OFST;                     /* 05E0, 0x1A0035E0 */
	UINT32                                          rsv_05E4[4];                                     /* 05E4..05F3, 0x1A0035E4..1A0035F3 */
	CAM_UNI_REG_RSS_A_SPARE_1                       CAM_UNI_RSS_A_SPARE_1;                           /* 05F4, 0x1A0035F4 */
	UINT32                                          rsv_05F8[20];                                    /* 05F8..0647, 1A0035F8..1A003647 */
}cam_uni_reg_t;

typedef volatile struct _cam_reg_t_	/* 0x1A004000..0x1A004FFF */
{
	CAM_REG_CTL_START                               CAM_CTL_START;                                   /* 0000, 0x1A004000, CAM_A_CTL_START */
	CAM_REG_CTL_EN                                  CAM_CTL_EN;                                      /* 0004, 0x1A004004, CAM_A_CTL_EN */
	CAM_REG_CTL_DMA_EN                              CAM_CTL_DMA_EN;                                  /* 0008, 0x1A004008, CAM_A_CTL_DMA_EN */
	CAM_REG_CTL_FMT_SEL                             CAM_CTL_FMT_SEL;                                 /* 000C, 0x1A00400C, CAM_A_CTL_FMT_SEL */
	CAM_REG_CTL_SEL                                 CAM_CTL_SEL;                                     /* 0010, 0x1A004010, CAM_A_CTL_SEL */
	CAM_REG_CTL_MISC                                CAM_CTL_MISC;                                    /* 0014, 0x1A004014, CAM_A_CTL_MISC */
	UINT32                                          rsv_0018[2];                                     /* 0018..001F, 0x1A004018..1A00401F */
	CAM_REG_CTL_RAW_INT_EN                          CAM_CTL_RAW_INT_EN;                              /* 0020, 0x1A004020, CAM_A_CTL_RAW_INT_EN */
	CAM_REG_CTL_RAW_INT_STATUS                      CAM_CTL_RAW_INT_STATUS;                          /* 0024, 0x1A004024, CAM_A_CTL_RAW_INT_STATUS */
	CAM_REG_CTL_RAW_INT_STATUSX                     CAM_CTL_RAW_INT_STATUSX;                         /* 0028, 0x1A004028, CAM_A_CTL_RAW_INT_STATUSX */
	UINT32                                          rsv_002C;                                        /* 002C, 0x1A00402C */
	CAM_REG_CTL_RAW_INT2_EN                         CAM_CTL_RAW_INT2_EN;                             /* 0030, 0x1A004030, CAM_A_CTL_RAW_INT2_EN */
	CAM_REG_CTL_RAW_INT2_STATUS                     CAM_CTL_RAW_INT2_STATUS;                         /* 0034, 0x1A004034, CAM_A_CTL_RAW_INT2_STATUS */
	CAM_REG_CTL_RAW_INT2_STATUSX                    CAM_CTL_RAW_INT2_STATUSX;                        /* 0038, 0x1A004038, CAM_A_CTL_RAW_INT2_STATUSX */
	UINT32                                          rsv_003C;                                        /* 003C, 0x1A00403C */
	CAM_REG_CTL_SW_CTL                              CAM_CTL_SW_CTL;                                  /* 0040, 0x1A004040, CAM_A_CTL_SW_CTL */
	CAM_REG_CTL_AB_DONE_SEL                         CAM_CTL_AB_DONE_SEL;                             /* 0044, 0x1A004044, CAM_A_CTL_AB_DONE_SEL */
	CAM_REG_CTL_CD_DONE_SEL                         CAM_CTL_CD_DONE_SEL;                             /* 0048, 0x1A004048, CAM_A_CTL_CD_DONE_SEL */
	CAM_REG_CTL_UNI_DONE_SEL                        CAM_CTL_UNI_DONE_SEL;                            /* 004C, 0x1A00404C, CAM_A_CTL_UNI_DONE_SEL */
    /// Add for twin use: 0x1A0040B0, CAM_CTL_TWIN_STATUS: TWIN_EN
    CAM_REG_CTL_TWIN_STATUS                         CAM_CTL_TWIN_STATUS;                             /* 0050, 0x1A004050, CAM_A_CTL_SPARE0 */
	CAM_REG_CTL_SPARE1                              CAM_CTL_SPARE1;                                  /* 0054, 0x1A004054, CAM_A_CTL_SPARE1 */
	CAM_REG_CTL_SPARE2                              CAM_CTL_SPARE2;                                  /* 0058, 0x1A004058, CAM_A_CTL_SPARE2 */
	CAM_REG_CTL_SW_PASS1_DONE                       CAM_CTL_SW_PASS1_DONE;                           /* 005C, 0x1A00405C, CAM_A_CTL_SW_PASS1_DONE */
	CAM_REG_CTL_FBC_RCNT_INC                        CAM_CTL_FBC_RCNT_INC;                            /* 0060, 0x1A004060, CAM_A_CTL_FBC_RCNT_INC */
	UINT32                                          rsv_0064[3];                                     /* 0064..006F, 0x1A004064..1A00406F */
	CAM_REG_CTL_DBG_SET                             CAM_CTL_DBG_SET;                                 /* 0070, 0x1A004070, CAM_A_CTL_DBG_SET */
	CAM_REG_CTL_DBG_PORT                            CAM_CTL_DBG_PORT;                                /* 0074, 0x1A004074, CAM_A_CTL_DBG_PORT */
	CAM_REG_CTL_DATE_CODE                           CAM_CTL_DATE_CODE;                               /* 0078, 0x1A004078, CAM_A_CTL_DATE_CODE */
	CAM_REG_CTL_PROJ_CODE                           CAM_CTL_PROJ_CODE;                               /* 007C, 0x1A00407C, CAM_A_CTL_PROJ_CODE */
	CAM_REG_CTL_RAW_DCM_DIS                         CAM_CTL_RAW_DCM_DIS;                             /* 0080, 0x1A004080, CAM_A_CTL_RAW_DCM_DIS */
	CAM_REG_CTL_DMA_DCM_DIS                         CAM_CTL_DMA_DCM_DIS;                             /* 0084, 0x1A004084, CAM_A_CTL_DMA_DCM_DIS */
	CAM_REG_CTL_TOP_DCM_DIS                         CAM_CTL_TOP_DCM_DIS;                             /* 0088, 0x1A004088, CAM_A_CTL_TOP_DCM_DIS */
	UINT32                                          rsv_008C;                                        /* 008C, 0x1A00408C */
	CAM_REG_CTL_RAW_DCM_STATUS                      CAM_CTL_RAW_DCM_STATUS;                          /* 0090, 0x1A004090, CAM_A_CTL_RAW_DCM_STATUS */
	CAM_REG_CTL_DMA_DCM_STATUS                      CAM_CTL_DMA_DCM_STATUS;                          /* 0094, 0x1A004094, CAM_A_CTL_DMA_DCM_STATUS */
	CAM_REG_CTL_TOP_DCM_STATUS                      CAM_CTL_TOP_DCM_STATUS;                          /* 0098, 0x1A004098, CAM_A_CTL_TOP_DCM_STATUS */
	UINT32                                          rsv_009C;                                        /* 009C, 0x1A00409C */
	CAM_REG_CTL_RAW_REQ_STATUS                      CAM_CTL_RAW_REQ_STATUS;                          /* 00A0, 0x1A0040A0, CAM_A_CTL_RAW_REQ_STATUS */
	CAM_REG_CTL_DMA_REQ_STATUS                      CAM_CTL_DMA_REQ_STATUS;                          /* 00A4, 0x1A0040A4, CAM_A_CTL_DMA_REQ_STATUS */
	CAM_REG_CTL_RAW_RDY_STATUS                      CAM_CTL_RAW_RDY_STATUS;                          /* 00A8, 0x1A0040A8, CAM_A_CTL_RAW_RDY_STATUS */
	CAM_REG_CTL_DMA_RDY_STATUS                      CAM_CTL_DMA_RDY_STATUS;                          /* 00AC, 0x1A0040AC, CAM_A_CTL_DMA_RDY_STATUS */
	CAM_REG_CTL_RAW_CCU_INT_EN                      CAM_CTL_RAW_CCU_INT_EN;                          /* 00B0, 0x1A0040B0, CAM_A_CTL_RAW_CCU_INT_EN */
	CAM_REG_CTL_RAW_CCU_INT_STATUS                  CAM_CTL_RAW_CCU_INT_STATUS;                      /* 00B4, 0x1A0040B4, CAM_A_CTL_RAW_CCU_INT_STATUS */
	CAM_REG_CTL_RAW_CCU_INT2_EN                     CAM_CTL_RAW_CCU_INT2_EN;                         /* 00B8, 0x1A0040B8, CAM_A_CTL_RAW_CCU_INT2_EN */
	CAM_REG_CTL_RAW_CCU_INT2_STATUS                 CAM_CTL_RAW_CCU_INT2_STATUS;                     /* 00BC, 0x1A0040BC, CAM_A_CTL_RAW_CCU_INT2_STATUS */
	UINT32                                          rsv_00C0[20];                                    /* 00C0..010F, 0x1A0040C0..1A00410F */
	CAM_REG_FBC_IMGO_CTL1                           CAM_FBC_IMGO_CTL1;                               /* 0110, 0x1A004110, CAM_A_FBC_IMGO_CTL1 */
	CAM_REG_FBC_IMGO_CTL2                           CAM_FBC_IMGO_CTL2;                               /* 0114, 0x1A004114, CAM_A_FBC_IMGO_CTL2 */
	CAM_REG_FBC_RRZO_CTL1                           CAM_FBC_RRZO_CTL1;                               /* 0118, 0x1A004118, CAM_A_FBC_RRZO_CTL1 */
	CAM_REG_FBC_RRZO_CTL2                           CAM_FBC_RRZO_CTL2;                               /* 011C, 0x1A00411C, CAM_A_FBC_RRZO_CTL2 */
	CAM_REG_FBC_UFEO_CTL1                           CAM_FBC_UFEO_CTL1;                               /* 0120, 0x1A004120, CAM_A_FBC_UFEO_CTL1 */
	CAM_REG_FBC_UFEO_CTL2                           CAM_FBC_UFEO_CTL2;                               /* 0124, 0x1A004124, CAM_A_FBC_UFEO_CTL2 */
	CAM_REG_FBC_LCSO_CTL1                           CAM_FBC_LCSO_CTL1;                               /* 0128, 0x1A004128, CAM_A_FBC_LCSO_CTL1 */
	CAM_REG_FBC_LCSO_CTL2                           CAM_FBC_LCSO_CTL2;                               /* 012C, 0x1A00412C, CAM_A_FBC_LCSO_CTL2 */
	CAM_REG_FBC_AFO_CTL1                            CAM_FBC_AFO_CTL1;                                /* 0130, 0x1A004130, CAM_A_FBC_AFO_CTL1 */
	CAM_REG_FBC_AFO_CTL2                            CAM_FBC_AFO_CTL2;                                /* 0134, 0x1A004134, CAM_A_FBC_AFO_CTL2 */
	CAM_REG_FBC_AAO_CTL1                            CAM_FBC_AAO_CTL1;                                /* 0138, 0x1A004138, CAM_A_FBC_AAO_CTL1 */
	CAM_REG_FBC_AAO_CTL2                            CAM_FBC_AAO_CTL2;                                /* 013C, 0x1A00413C, CAM_A_FBC_AAO_CTL2 */
	CAM_REG_FBC_PDO_CTL1                            CAM_FBC_PDO_CTL1;                                /* 0140, 0x1A004140, CAM_A_FBC_PDO_CTL1 */
	CAM_REG_FBC_PDO_CTL2                            CAM_FBC_PDO_CTL2;                                /* 0144, 0x1A004144, CAM_A_FBC_PDO_CTL2 */
	CAM_REG_FBC_PSO_CTL1                            CAM_FBC_PSO_CTL1;                                /* 0148, 0x1A004148, CAM_A_FBC_PSO_CTL1 */
	CAM_REG_FBC_PSO_CTL2                            CAM_FBC_PSO_CTL2;                                /* 014C, 0x1A00414C, CAM_A_FBC_PSO_CTL2 */
	UINT32                                          rsv_0150[4];                                     /* 0150..015F, 0x1A004150..1A00415F */
	CAM_REG_CQ_EN                                   CAM_CQ_EN;                                       /* 0160, 0x1A004160, CAM_A_CQ_EN */
	CAM_REG_CQ_THR0_CTL                             CAM_CQ_THR0_CTL;                                 /* 0164, 0x1A004164, CAM_A_CQ_THR0_CTL */
	CAM_REG_CQ_THR0_BASEADDR                        CAM_CQ_THR0_BASEADDR;                            /* 0168, 0x1A004168, CAM_A_CQ_THR0_BASEADDR */
	CAM_REG_CQ_THR0_DESC_SIZE                       CAM_CQ_THR0_DESC_SIZE;                           /* 016C, 0x1A00416C, CAM_A_CQ_THR0_DESC_SIZE */
	CAM_REG_CQ_THR1_CTL                             CAM_CQ_THR1_CTL;                                 /* 0170, 0x1A004170, CAM_A_CQ_THR1_CTL */
	CAM_REG_CQ_THR1_BASEADDR                        CAM_CQ_THR1_BASEADDR;                            /* 0174, 0x1A004174, CAM_A_CQ_THR1_BASEADDR */
	CAM_REG_CQ_THR1_DESC_SIZE                       CAM_CQ_THR1_DESC_SIZE;                           /* 0178, 0x1A004178, CAM_A_CQ_THR1_DESC_SIZE */
	CAM_REG_CQ_THR2_CTL                             CAM_CQ_THR2_CTL;                                 /* 017C, 0x1A00417C, CAM_A_CQ_THR2_CTL */
	CAM_REG_CQ_THR2_BASEADDR                        CAM_CQ_THR2_BASEADDR;                            /* 0180, 0x1A004180, CAM_A_CQ_THR2_BASEADDR */
	CAM_REG_CQ_THR2_DESC_SIZE                       CAM_CQ_THR2_DESC_SIZE;                           /* 0184, 0x1A004184, CAM_A_CQ_THR2_DESC_SIZE */
	CAM_REG_CQ_THR3_CTL                             CAM_CQ_THR3_CTL;                                 /* 0188, 0x1A004188, CAM_A_CQ_THR3_CTL */
	CAM_REG_CQ_THR3_BASEADDR                        CAM_CQ_THR3_BASEADDR;                            /* 018C, 0x1A00418C, CAM_A_CQ_THR3_BASEADDR */
	CAM_REG_CQ_THR3_DESC_SIZE                       CAM_CQ_THR3_DESC_SIZE;                           /* 0190, 0x1A004190, CAM_A_CQ_THR3_DESC_SIZE */
	CAM_REG_CQ_THR4_CTL                             CAM_CQ_THR4_CTL;                                 /* 0194, 0x1A004194, CAM_A_CQ_THR4_CTL */
	CAM_REG_CQ_THR4_BASEADDR                        CAM_CQ_THR4_BASEADDR;                            /* 0198, 0x1A004198, CAM_A_CQ_THR4_BASEADDR */
	CAM_REG_CQ_THR4_DESC_SIZE                       CAM_CQ_THR4_DESC_SIZE;                           /* 019C, 0x1A00419C, CAM_A_CQ_THR4_DESC_SIZE */
	CAM_REG_CQ_THR5_CTL                             CAM_CQ_THR5_CTL;                                 /* 01A0, 0x1A0041A0, CAM_A_CQ_THR5_CTL */
	CAM_REG_CQ_THR5_BASEADDR                        CAM_CQ_THR5_BASEADDR;                            /* 01A4, 0x1A0041A4, CAM_A_CQ_THR5_BASEADDR */
	CAM_REG_CQ_THR5_DESC_SIZE                       CAM_CQ_THR5_DESC_SIZE;                           /* 01A8, 0x1A0041A8, CAM_A_CQ_THR5_DESC_SIZE */
	CAM_REG_CQ_THR6_CTL                             CAM_CQ_THR6_CTL;                                 /* 01AC, 0x1A0041AC, CAM_A_CQ_THR6_CTL */
	CAM_REG_CQ_THR6_BASEADDR                        CAM_CQ_THR6_BASEADDR;                            /* 01B0, 0x1A0041B0, CAM_A_CQ_THR6_BASEADDR */
	CAM_REG_CQ_THR6_DESC_SIZE                       CAM_CQ_THR6_DESC_SIZE;                           /* 01B4, 0x1A0041B4, CAM_A_CQ_THR6_DESC_SIZE */
	CAM_REG_CQ_THR7_CTL                             CAM_CQ_THR7_CTL;                                 /* 01B8, 0x1A0041B8, CAM_A_CQ_THR7_CTL */
	CAM_REG_CQ_THR7_BASEADDR                        CAM_CQ_THR7_BASEADDR;                            /* 01BC, 0x1A0041BC, CAM_A_CQ_THR7_BASEADDR */
	CAM_REG_CQ_THR7_DESC_SIZE                       CAM_CQ_THR7_DESC_SIZE;                           /* 01C0, 0x1A0041C0, CAM_A_CQ_THR7_DESC_SIZE */
	CAM_REG_CQ_THR8_CTL                             CAM_CQ_THR8_CTL;                                 /* 01C4, 0x1A0041C4, CAM_A_CQ_THR8_CTL */
	CAM_REG_CQ_THR8_BASEADDR                        CAM_CQ_THR8_BASEADDR;                            /* 01C8, 0x1A0041C8, CAM_A_CQ_THR8_BASEADDR */
	CAM_REG_CQ_THR8_DESC_SIZE                       CAM_CQ_THR8_DESC_SIZE;                           /* 01CC, 0x1A0041CC, CAM_A_CQ_THR8_DESC_SIZE */
	CAM_REG_CQ_THR9_CTL                             CAM_CQ_THR9_CTL;                                 /* 01D0, 0x1A0041D0, CAM_A_CQ_THR9_CTL */
	CAM_REG_CQ_THR9_BASEADDR                        CAM_CQ_THR9_BASEADDR;                            /* 01D4, 0x1A0041D4, CAM_A_CQ_THR9_BASEADDR */
	CAM_REG_CQ_THR9_DESC_SIZE                       CAM_CQ_THR9_DESC_SIZE;                           /* 01D8, 0x1A0041D8, CAM_A_CQ_THR9_DESC_SIZE */
	CAM_REG_CQ_THR10_CTL                            CAM_CQ_THR10_CTL;                                /* 01DC, 0x1A0041DC, CAM_A_CQ_THR10_CTL */
	CAM_REG_CQ_THR10_BASEADDR                       CAM_CQ_THR10_BASEADDR;                           /* 01E0, 0x1A0041E0, CAM_A_CQ_THR10_BASEADDR */
	CAM_REG_CQ_THR10_DESC_SIZE                      CAM_CQ_THR10_DESC_SIZE;                          /* 01E4, 0x1A0041E4, CAM_A_CQ_THR10_DESC_SIZE */
	CAM_REG_CQ_THR11_CTL                            CAM_CQ_THR11_CTL;                                /* 01E8, 0x1A0041E8, CAM_A_CQ_THR11_CTL */
	CAM_REG_CQ_THR11_BASEADDR                       CAM_CQ_THR11_BASEADDR;                           /* 01EC, 0x1A0041EC, CAM_A_CQ_THR11_BASEADDR */
	CAM_REG_CQ_THR11_DESC_SIZE                      CAM_CQ_THR11_DESC_SIZE;                          /* 01F0, 0x1A0041F0, CAM_A_CQ_THR11_DESC_SIZE */
	CAM_REG_CQ_THR12_CTL                            CAM_CQ_THR12_CTL;                                /* 01F4, 0x1A0041F4, CAM_A_CQ_THR12_CTL */
	CAM_REG_CQ_THR12_BASEADDR                       CAM_CQ_THR12_BASEADDR;                           /* 01F8, 0x1A0041F8, CAM_A_CQ_THR12_BASEADDR */
	CAM_REG_CQ_THR12_DESC_SIZE                      CAM_CQ_THR12_DESC_SIZE;                          /* 01FC, 0x1A0041FC, CAM_A_CQ_THR12_DESC_SIZE */
	CAM_REG_DMA_SOFT_RSTSTAT                        CAM_DMA_SOFT_RSTSTAT;                            /* 0200, 0x1A004200, CAM_A_DMA_SOFT_RSTSTAT */
	CAM_REG_CQ0I_BASE_ADDR                          CAM_CQ0I_BASE_ADDR;                              /* 0204, 0x1A004204, CAM_A_CQ0I_BASE_ADDR */
	CAM_REG_CQ0I_XSIZE                              CAM_CQ0I_XSIZE;                                  /* 0208, 0x1A004208, CAM_A_CQ0I_XSIZE */
	CAM_REG_VERTICAL_FLIP_EN                        CAM_VERTICAL_FLIP_EN;                            /* 020C, 0x1A00420C, CAM_A_VERTICAL_FLIP_EN */
	CAM_REG_DMA_SOFT_RESET                          CAM_DMA_SOFT_RESET;                              /* 0210, 0x1A004210, CAM_A_DMA_SOFT_RESET */
	CAM_REG_LAST_ULTRA_EN                           CAM_LAST_ULTRA_EN;                               /* 0214, 0x1A004214, CAM_A_LAST_ULTRA_EN */
	CAM_REG_SPECIAL_FUN_EN                          CAM_SPECIAL_FUN_EN;                              /* 0218, 0x1A004218, CAM_A_SPECIAL_FUN_EN */
	UINT32                                          rsv_021C;                                        /* 021C, 0x1A00421C */
	CAM_REG_IMGO_BASE_ADDR                          CAM_IMGO_BASE_ADDR;                              /* 0220, 0x1A004220, CAM_A_IMGO_BASE_ADDR */
	UINT32                                          rsv_0224;                                        /* 0224, 0x1A004224 */
	CAM_REG_IMGO_OFST_ADDR                          CAM_IMGO_OFST_ADDR;                              /* 0228, 0x1A004228, CAM_A_IMGO_OFST_ADDR */
	UINT32                                          rsv_022C;                                        /* 022C, 0x1A00422C */
	CAM_REG_IMGO_XSIZE                              CAM_IMGO_XSIZE;                                  /* 0230, 0x1A004230, CAM_A_IMGO_XSIZE */
	CAM_REG_IMGO_YSIZE                              CAM_IMGO_YSIZE;                                  /* 0234, 0x1A004234, CAM_A_IMGO_YSIZE */
	CAM_REG_IMGO_STRIDE                             CAM_IMGO_STRIDE;                                 /* 0238, 0x1A004238, CAM_A_IMGO_STRIDE */
	CAM_REG_IMGO_CON                                CAM_IMGO_CON;                                    /* 023C, 0x1A00423C, CAM_A_IMGO_CON */
	CAM_REG_IMGO_CON2                               CAM_IMGO_CON2;                                   /* 0240, 0x1A004240, CAM_A_IMGO_CON2 */
	CAM_REG_IMGO_CON3                               CAM_IMGO_CON3;                                   /* 0244, 0x1A004244, CAM_A_IMGO_CON3 */
	CAM_REG_IMGO_CROP                               CAM_IMGO_CROP;                                   /* 0248, 0x1A004248, CAM_A_IMGO_CROP */
	UINT32                                          rsv_024C;                                        /* 024C, 0x1A00424C */
	CAM_REG_RRZO_BASE_ADDR                          CAM_RRZO_BASE_ADDR;                              /* 0250, 0x1A004250, CAM_A_RRZO_BASE_ADDR */
	UINT32                                          rsv_0254;                                        /* 0254, 0x1A004254 */
	CAM_REG_RRZO_OFST_ADDR                          CAM_RRZO_OFST_ADDR;                              /* 0258, 0x1A004258, CAM_A_RRZO_OFST_ADDR */
	UINT32                                          rsv_025C;                                        /* 025C, 0x1A00425C */
	CAM_REG_RRZO_XSIZE                              CAM_RRZO_XSIZE;                                  /* 0260, 0x1A004260, CAM_A_RRZO_XSIZE */
	CAM_REG_RRZO_YSIZE                              CAM_RRZO_YSIZE;                                  /* 0264, 0x1A004264, CAM_A_RRZO_YSIZE */
	CAM_REG_RRZO_STRIDE                             CAM_RRZO_STRIDE;                                 /* 0268, 0x1A004268, CAM_A_RRZO_STRIDE */
	CAM_REG_RRZO_CON                                CAM_RRZO_CON;                                    /* 026C, 0x1A00426C, CAM_A_RRZO_CON */
	CAM_REG_RRZO_CON2                               CAM_RRZO_CON2;                                   /* 0270, 0x1A004270, CAM_A_RRZO_CON2 */
	CAM_REG_RRZO_CON3                               CAM_RRZO_CON3;                                   /* 0274, 0x1A004274, CAM_A_RRZO_CON3 */
	CAM_REG_RRZO_CROP                               CAM_RRZO_CROP;                                   /* 0278, 0x1A004278, CAM_A_RRZO_CROP */
	UINT32                                          rsv_027C;                                        /* 027C, 0x1A00427C */
	CAM_REG_AAO_BASE_ADDR                           CAM_AAO_BASE_ADDR;                               /* 0280, 0x1A004280, CAM_A_AAO_BASE_ADDR */
	UINT32                                          rsv_0284;                                        /* 0284, 0x1A004284 */
	CAM_REG_AAO_OFST_ADDR                           CAM_AAO_OFST_ADDR;                               /* 0288, 0x1A004288, CAM_A_AAO_OFST_ADDR */
	UINT32                                          rsv_028C;                                        /* 028C, 0x1A00428C */
	CAM_REG_AAO_XSIZE                               CAM_AAO_XSIZE;                                   /* 0290, 0x1A004290, CAM_A_AAO_XSIZE */
	CAM_REG_AAO_YSIZE                               CAM_AAO_YSIZE;                                   /* 0294, 0x1A004294, CAM_A_AAO_YSIZE */
	CAM_REG_AAO_STRIDE                              CAM_AAO_STRIDE;                                  /* 0298, 0x1A004298, CAM_A_AAO_STRIDE */
	CAM_REG_AAO_CON                                 CAM_AAO_CON;                                     /* 029C, 0x1A00429C, CAM_A_AAO_CON */
	CAM_REG_AAO_CON2                                CAM_AAO_CON2;                                    /* 02A0, 0x1A0042A0, CAM_A_AAO_CON2 */
	CAM_REG_AAO_CON3                                CAM_AAO_CON3;                                    /* 02A4, 0x1A0042A4, CAM_A_AAO_CON3 */
	UINT32                                          rsv_02A8[2];                                     /* 02A8..02AF, 0x1A0042A8..1A0042AF */
	CAM_REG_AFO_BASE_ADDR                           CAM_AFO_BASE_ADDR;                               /* 02B0, 0x1A0042B0, CAM_A_AFO_BASE_ADDR */
	UINT32                                          rsv_02B4;                                        /* 02B4, 0x1A0042B4 */
	CAM_REG_AFO_OFST_ADDR                           CAM_AFO_OFST_ADDR;                               /* 02B8, 0x1A0042B8, CAM_A_AFO_OFST_ADDR */
	UINT32                                          rsv_02BC;                                        /* 02BC, 0x1A0042BC */
	CAM_REG_AFO_XSIZE                               CAM_AFO_XSIZE;                                   /* 02C0, 0x1A0042C0, CAM_A_AFO_XSIZE */
	CAM_REG_AFO_YSIZE                               CAM_AFO_YSIZE;                                   /* 02C4, 0x1A0042C4, CAM_A_AFO_YSIZE */
	CAM_REG_AFO_STRIDE                              CAM_AFO_STRIDE;                                  /* 02C8, 0x1A0042C8, CAM_A_AFO_STRIDE */
	CAM_REG_AFO_CON                                 CAM_AFO_CON;                                     /* 02CC, 0x1A0042CC, CAM_A_AFO_CON */
	CAM_REG_AFO_CON2                                CAM_AFO_CON2;                                    /* 02D0, 0x1A0042D0, CAM_A_AFO_CON2 */
	CAM_REG_AFO_CON3                                CAM_AFO_CON3;                                    /* 02D4, 0x1A0042D4, CAM_A_AFO_CON3 */
	UINT32                                          rsv_02D8[2];                                     /* 02D8..02DF, 0x1A0042D8..1A0042DF */
	CAM_REG_LCSO_BASE_ADDR                          CAM_LCSO_BASE_ADDR;                              /* 02E0, 0x1A0042E0, CAM_A_LCSO_BASE_ADDR */
	UINT32                                          rsv_02E4;                                        /* 02E4, 0x1A0042E4 */
	CAM_REG_LCSO_OFST_ADDR                          CAM_LCSO_OFST_ADDR;                              /* 02E8, 0x1A0042E8, CAM_A_LCSO_OFST_ADDR */
	UINT32                                          rsv_02EC;                                        /* 02EC, 0x1A0042EC */
	CAM_REG_LCSO_XSIZE                              CAM_LCSO_XSIZE;                                  /* 02F0, 0x1A0042F0, CAM_A_LCSO_XSIZE */
	CAM_REG_LCSO_YSIZE                              CAM_LCSO_YSIZE;                                  /* 02F4, 0x1A0042F4, CAM_A_LCSO_YSIZE */
	CAM_REG_LCSO_STRIDE                             CAM_LCSO_STRIDE;                                 /* 02F8, 0x1A0042F8, CAM_A_LCSO_STRIDE */
	CAM_REG_LCSO_CON                                CAM_LCSO_CON;                                    /* 02FC, 0x1A0042FC, CAM_A_LCSO_CON */
	CAM_REG_LCSO_CON2                               CAM_LCSO_CON2;                                   /* 0300, 0x1A004300, CAM_A_LCSO_CON2 */
	CAM_REG_LCSO_CON3                               CAM_LCSO_CON3;                                   /* 0304, 0x1A004304, CAM_A_LCSO_CON3 */
	UINT32                                          rsv_0308[2];                                     /* 0308..030F, 0x1A004308..1A00430F */
	CAM_REG_UFEO_BASE_ADDR                          CAM_UFEO_BASE_ADDR;                              /* 0310, 0x1A004310, CAM_A_UFEO_BASE_ADDR */
	UINT32                                          rsv_0314;                                        /* 0314, 0x1A004314 */
	CAM_REG_UFEO_OFST_ADDR                          CAM_UFEO_OFST_ADDR;                              /* 0318, 0x1A004318, CAM_A_UFEO_OFST_ADDR */
	UINT32                                          rsv_031C;                                        /* 031C, 0x1A00431C */
	CAM_REG_UFEO_XSIZE                              CAM_UFEO_XSIZE;                                  /* 0320, 0x1A004320, CAM_A_UFEO_XSIZE */
	CAM_REG_UFEO_YSIZE                              CAM_UFEO_YSIZE;                                  /* 0324, 0x1A004324, CAM_A_UFEO_YSIZE */
	CAM_REG_UFEO_STRIDE                             CAM_UFEO_STRIDE;                                 /* 0328, 0x1A004328, CAM_A_UFEO_STRIDE */
	CAM_REG_UFEO_CON                                CAM_UFEO_CON;                                    /* 032C, 0x1A00432C, CAM_A_UFEO_CON */
	CAM_REG_UFEO_CON2                               CAM_UFEO_CON2;                                   /* 0330, 0x1A004330, CAM_A_UFEO_CON2 */
	CAM_REG_UFEO_CON3                               CAM_UFEO_CON3;                                   /* 0334, 0x1A004334, CAM_A_UFEO_CON3 */
	UINT32                                          rsv_0338[2];                                     /* 0338..033F, 0x1A004338..1A00433F */
	CAM_REG_PDO_BASE_ADDR                           CAM_PDO_BASE_ADDR;                               /* 0340, 0x1A004340, CAM_A_PDO_BASE_ADDR */
	UINT32                                          rsv_0344;                                        /* 0344, 0x1A004344 */
	CAM_REG_PDO_OFST_ADDR                           CAM_PDO_OFST_ADDR;                               /* 0348, 0x1A004348, CAM_A_PDO_OFST_ADDR */
	UINT32                                          rsv_034C;                                        /* 034C, 0x1A00434C */
	CAM_REG_PDO_XSIZE                               CAM_PDO_XSIZE;                                   /* 0350, 0x1A004350, CAM_A_PDO_XSIZE */
	CAM_REG_PDO_YSIZE                               CAM_PDO_YSIZE;                                   /* 0354, 0x1A004354, CAM_A_PDO_YSIZE */
	CAM_REG_PDO_STRIDE                              CAM_PDO_STRIDE;                                  /* 0358, 0x1A004358, CAM_A_PDO_STRIDE */
	CAM_REG_PDO_CON                                 CAM_PDO_CON;                                     /* 035C, 0x1A00435C, CAM_A_PDO_CON */
	CAM_REG_PDO_CON2                                CAM_PDO_CON2;                                    /* 0360, 0x1A004360, CAM_A_PDO_CON2 */
	CAM_REG_PDO_CON3                                CAM_PDO_CON3;                                    /* 0364, 0x1A004364, CAM_A_PDO_CON3 */
	UINT32                                          rsv_0368[2];                                     /* 0368..036F, 0x1A004368..1A00436F */
	CAM_REG_BPCI_BASE_ADDR                          CAM_BPCI_BASE_ADDR;                              /* 0370, 0x1A004370, CAM_A_BPCI_BASE_ADDR */
	UINT32                                          rsv_0374;                                        /* 0374, 0x1A004374 */
	CAM_REG_BPCI_OFST_ADDR                          CAM_BPCI_OFST_ADDR;                              /* 0378, 0x1A004378, CAM_A_BPCI_OFST_ADDR */
	UINT32                                          rsv_037C;                                        /* 037C, 0x1A00437C */
	CAM_REG_BPCI_XSIZE                              CAM_BPCI_XSIZE;                                  /* 0380, 0x1A004380, CAM_A_BPCI_XSIZE */
	CAM_REG_BPCI_YSIZE                              CAM_BPCI_YSIZE;                                  /* 0384, 0x1A004384, CAM_A_BPCI_YSIZE */
	CAM_REG_BPCI_STRIDE                             CAM_BPCI_STRIDE;                                 /* 0388, 0x1A004388, CAM_A_BPCI_STRIDE */
	CAM_REG_BPCI_CON                                CAM_BPCI_CON;                                    /* 038C, 0x1A00438C, CAM_A_BPCI_CON */
	CAM_REG_BPCI_CON2                               CAM_BPCI_CON2;                                   /* 0390, 0x1A004390, CAM_A_BPCI_CON2 */
	CAM_REG_BPCI_CON3                               CAM_BPCI_CON3;                                   /* 0394, 0x1A004394, CAM_A_BPCI_CON3 */
	UINT32                                          rsv_0398[2];                                     /* 0398..039F, 0x1A004398..1A00439F */
	CAM_REG_CACI_BASE_ADDR                          CAM_CACI_BASE_ADDR;                              /* 03A0, 0x1A0043A0, CAM_A_CACI_BASE_ADDR */
	UINT32                                          rsv_03A4;                                        /* 03A4, 0x1A0043A4 */
	CAM_REG_CACI_OFST_ADDR                          CAM_CACI_OFST_ADDR;                              /* 03A8, 0x1A0043A8, CAM_A_CACI_OFST_ADDR */
	UINT32                                          rsv_03AC;                                        /* 03AC, 0x1A0043AC */
	CAM_REG_CACI_XSIZE                              CAM_CACI_XSIZE;                                  /* 03B0, 0x1A0043B0, CAM_A_CACI_XSIZE */
	CAM_REG_CACI_YSIZE                              CAM_CACI_YSIZE;                                  /* 03B4, 0x1A0043B4, CAM_A_CACI_YSIZE */
	CAM_REG_CACI_STRIDE                             CAM_CACI_STRIDE;                                 /* 03B8, 0x1A0043B8, CAM_A_CACI_STRIDE */
	CAM_REG_CACI_CON                                CAM_CACI_CON;                                    /* 03BC, 0x1A0043BC, CAM_A_CACI_CON */
	CAM_REG_CACI_CON2                               CAM_CACI_CON2;                                   /* 03C0, 0x1A0043C0, CAM_A_CACI_CON2 */
	CAM_REG_CACI_CON3                               CAM_CACI_CON3;                                   /* 03C4, 0x1A0043C4, CAM_A_CACI_CON3 */
	UINT32                                          rsv_03C8[2];                                     /* 03C8..03CF, 0x1A0043C8..1A0043CF */
	CAM_REG_LSCI_BASE_ADDR                          CAM_LSCI_BASE_ADDR;                              /* 03D0, 0x1A0043D0, CAM_A_LSCI_BASE_ADDR */
	UINT32                                          rsv_03D4;                                        /* 03D4, 0x1A0043D4 */
	CAM_REG_LSCI_OFST_ADDR                          CAM_LSCI_OFST_ADDR;                              /* 03D8, 0x1A0043D8, CAM_A_LSCI_OFST_ADDR */
	UINT32                                          rsv_03DC;                                        /* 03DC, 0x1A0043DC */
	CAM_REG_LSCI_XSIZE                              CAM_LSCI_XSIZE;                                  /* 03E0, 0x1A0043E0, CAM_A_LSCI_XSIZE */
	CAM_REG_LSCI_YSIZE                              CAM_LSCI_YSIZE;                                  /* 03E4, 0x1A0043E4, CAM_A_LSCI_YSIZE */
	CAM_REG_LSCI_STRIDE                             CAM_LSCI_STRIDE;                                 /* 03E8, 0x1A0043E8, CAM_A_LSCI_STRIDE */
	CAM_REG_LSCI_CON                                CAM_LSCI_CON;                                    /* 03EC, 0x1A0043EC, CAM_A_LSCI_CON */
	CAM_REG_LSCI_CON2                               CAM_LSCI_CON2;                                   /* 03F0, 0x1A0043F0, CAM_A_LSCI_CON2 */
	CAM_REG_LSCI_CON3                               CAM_LSCI_CON3;                                   /* 03F4, 0x1A0043F4, CAM_A_LSCI_CON3 */
	UINT32                                          rsv_03F8[2];                                     /* 03F8..03FF, 0x1A0043F8..1A0043FF */
	CAM_REG_LSC3I_BASE_ADDR                         CAM_LSC3I_BASE_ADDR;                             /* 0400, 0x1A004400, CAM_A_LSC3I_BASE_ADDR */
	UINT32                                          rsv_0404;                                        /* 0404, 0x1A004404 */
	CAM_REG_LSC3I_OFST_ADDR                         CAM_LSC3I_OFST_ADDR;                             /* 0408, 0x1A004408, CAM_A_LSC3I_OFST_ADDR */
	UINT32                                          rsv_040C;                                        /* 040C, 0x1A00440C */
	CAM_REG_LSC3I_XSIZE                             CAM_LSC3I_XSIZE;                                 /* 0410, 0x1A004410, CAM_A_LSC3I_XSIZE */
	CAM_REG_LSC3I_YSIZE                             CAM_LSC3I_YSIZE;                                 /* 0414, 0x1A004414, CAM_A_LSC3I_YSIZE */
	CAM_REG_LSC3I_STRIDE                            CAM_LSC3I_STRIDE;                                /* 0418, 0x1A004418, CAM_A_LSC3I_STRIDE */
	CAM_REG_LSC3I_CON                               CAM_LSC3I_CON;                                   /* 041C, 0x1A00441C, CAM_A_LSC3I_CON */
	CAM_REG_LSC3I_CON2                              CAM_LSC3I_CON2;                                  /* 0420, 0x1A004420, CAM_A_LSC3I_CON2 */
	CAM_REG_LSC3I_CON3                              CAM_LSC3I_CON3;                                  /* 0424, 0x1A004424, CAM_A_LSC3I_CON3 */
	UINT32                                          rsv_0428[6];                                     /* 0428..043F, 0x1A004428..1A00443F */
	CAM_REG_DMA_ERR_CTRL                            CAM_DMA_ERR_CTRL;                                /* 0440, 0x1A004440, CAM_A_DMA_ERR_CTRL */
	CAM_REG_IMGO_ERR_STAT                           CAM_IMGO_ERR_STAT;                               /* 0444, 0x1A004444, CAM_A_IMGO_ERR_STAT */
	CAM_REG_RRZO_ERR_STAT                           CAM_RRZO_ERR_STAT;                               /* 0448, 0x1A004448, CAM_A_RRZO_ERR_STAT */
	CAM_REG_AAO_ERR_STAT                            CAM_AAO_ERR_STAT;                                /* 044C, 0x1A00444C, CAM_A_AAO_ERR_STAT */
	CAM_REG_AFO_ERR_STAT                            CAM_AFO_ERR_STAT;                                /* 0450, 0x1A004450, CAM_A_AFO_ERR_STAT */
	CAM_REG_LCSO_ERR_STAT                           CAM_LCSO_ERR_STAT;                               /* 0454, 0x1A004454, CAM_A_LCSO_ERR_STAT */
	CAM_REG_UFEO_ERR_STAT                           CAM_UFEO_ERR_STAT;                               /* 0458, 0x1A004458, CAM_A_UFEO_ERR_STAT */
	CAM_REG_PDO_ERR_STAT                            CAM_PDO_ERR_STAT;                                /* 045C, 0x1A00445C, CAM_A_PDO_ERR_STAT */
	CAM_REG_BPCI_ERR_STAT                           CAM_BPCI_ERR_STAT;                               /* 0460, 0x1A004460, CAM_A_BPCI_ERR_STAT */
	CAM_REG_CACI_ERR_STAT                           CAM_CACI_ERR_STAT;                               /* 0464, 0x1A004464, CAM_A_CACI_ERR_STAT */
	CAM_REG_LSCI_ERR_STAT                           CAM_LSCI_ERR_STAT;                               /* 0468, 0x1A004468, CAM_A_LSCI_ERR_STAT */
	CAM_REG_LSC3I_ERR_STAT                          CAM_LSC3I_ERR_STAT;                              /* 046C, 0x1A00446C, CAM_A_LSC3I_ERR_STAT */
	CAM_REG_DMA_DEBUG_ADDR                          CAM_DMA_DEBUG_ADDR;                              /* 0470, 0x1A004470, CAM_A_DMA_DEBUG_ADDR */
	CAM_REG_DMA_RSV1                                CAM_DMA_RSV1;                                    /* 0474, 0x1A004474, CAM_A_DMA_RSV1 */
	CAM_REG_DMA_RSV2                                CAM_DMA_RSV2;                                    /* 0478, 0x1A004478, CAM_A_DMA_RSV2 */
	CAM_REG_DMA_RSV3                                CAM_DMA_RSV3;                                    /* 047C, 0x1A00447C, CAM_A_DMA_RSV3 */
	CAM_REG_DMA_RSV4                                CAM_DMA_RSV4;                                    /* 0480, 0x1A004480, CAM_A_DMA_RSV4 */
	CAM_REG_DMA_RSV5                                CAM_DMA_RSV5;                                    /* 0484, 0x1A004484, CAM_A_DMA_RSV5 */
	CAM_REG_DMA_RSV6                                CAM_DMA_RSV6;                                    /* 0488, 0x1A004488, CAM_A_DMA_RSV6 */
	CAM_REG_DMA_DEBUG_SEL                           CAM_DMA_DEBUG_SEL;                               /* 048C, 0x1A00448C, CAM_A_DMA_DEBUG_SEL */
	CAM_REG_DMA_BW_SELF_TEST                        CAM_DMA_BW_SELF_TEST;                            /* 0490, 0x1A004490, CAM_A_DMA_BW_SELF_TEST */
	UINT32                                          rsv_0494[27];                                    /* 0494..04FF, 0x1A004494..1A0044FF */
	CAM_REG_TG_SEN_MODE                             CAM_TG_SEN_MODE;                                 /* 0500, 0x1A004500, CAM_A_TG_SEN_MODE */
	CAM_REG_TG_VF_CON                               CAM_TG_VF_CON;                                   /* 0504, 0x1A004504, CAM_A_TG_VF_CON */
	CAM_REG_TG_SEN_GRAB_PXL                         CAM_TG_SEN_GRAB_PXL;                             /* 0508, 0x1A004508, CAM_A_TG_SEN_GRAB_PXL */
	CAM_REG_TG_SEN_GRAB_LIN                         CAM_TG_SEN_GRAB_LIN;                             /* 050C, 0x1A00450C, CAM_A_TG_SEN_GRAB_LIN */
	CAM_REG_TG_PATH_CFG                             CAM_TG_PATH_CFG;                                 /* 0510, 0x1A004510, CAM_A_TG_PATH_CFG */
	CAM_REG_TG_MEMIN_CTL                            CAM_TG_MEMIN_CTL;                                /* 0514, 0x1A004514, CAM_A_TG_MEMIN_CTL */
	CAM_REG_TG_INT1                                 CAM_TG_INT1;                                     /* 0518, 0x1A004518, CAM_A_TG_INT1 */
	CAM_REG_TG_INT2                                 CAM_TG_INT2;                                     /* 051C, 0x1A00451C, CAM_A_TG_INT2 */
	CAM_REG_TG_SOF_CNT                              CAM_TG_SOF_CNT;                                  /* 0520, 0x1A004520, CAM_A_TG_SOF_CNT */
	CAM_REG_TG_SOT_CNT                              CAM_TG_SOT_CNT;                                  /* 0524, 0x1A004524, CAM_A_TG_SOT_CNT */
	CAM_REG_TG_EOT_CNT                              CAM_TG_EOT_CNT;                                  /* 0528, 0x1A004528, CAM_A_TG_EOT_CNT */
	CAM_REG_TG_ERR_CTL                              CAM_TG_ERR_CTL;                                  /* 052C, 0x1A00452C, CAM_A_TG_ERR_CTL */
	CAM_REG_TG_DAT_NO                               CAM_TG_DAT_NO;                                   /* 0530, 0x1A004530, CAM_A_TG_DAT_NO */
	CAM_REG_TG_FRM_CNT_ST                           CAM_TG_FRM_CNT_ST;                               /* 0534, 0x1A004534, CAM_A_TG_FRM_CNT_ST */
	CAM_REG_TG_FRMSIZE_ST                           CAM_TG_FRMSIZE_ST;                               /* 0538, 0x1A004538, CAM_A_TG_FRMSIZE_ST */
	CAM_REG_TG_INTER_ST                             CAM_TG_INTER_ST;                                 /* 053C, 0x1A00453C, CAM_A_TG_INTER_ST */
	CAM_REG_TG_FLASHA_CTL                           CAM_TG_FLASHA_CTL;                               /* 0540, 0x1A004540, CAM_A_TG_FLASHA_CTL */
	CAM_REG_TG_FLASHA_LINE_CNT                      CAM_TG_FLASHA_LINE_CNT;                          /* 0544, 0x1A004544, CAM_A_TG_FLASHA_LINE_CNT */
	CAM_REG_TG_FLASHA_POS                           CAM_TG_FLASHA_POS;                               /* 0548, 0x1A004548, CAM_A_TG_FLASHA_POS */
	CAM_REG_TG_FLASHB_CTL                           CAM_TG_FLASHB_CTL;                               /* 054C, 0x1A00454C, CAM_A_TG_FLASHB_CTL */
	CAM_REG_TG_FLASHB_LINE_CNT                      CAM_TG_FLASHB_LINE_CNT;                          /* 0550, 0x1A004550, CAM_A_TG_FLASHB_LINE_CNT */
	CAM_REG_TG_FLASHB_POS                           CAM_TG_FLASHB_POS;                               /* 0554, 0x1A004554, CAM_A_TG_FLASHB_POS */
	CAM_REG_TG_FLASHB_POS1                          CAM_TG_FLASHB_POS1;                              /* 0558, 0x1A004558, CAM_A_TG_FLASHB_POS1 */
	UINT32                                          rsv_055C;                                        /* 055C, 0x1A00455C */
	CAM_REG_TG_I2C_CQ_TRIG                          CAM_TG_I2C_CQ_TRIG;                              /* 0560, 0x1A004560, CAM_A_TG_I2C_CQ_TRIG */
	CAM_REG_TG_CQ_TIMING                            CAM_TG_CQ_TIMING;                                /* 0564, 0x1A004564, CAM_A_TG_CQ_TIMING */
	CAM_REG_TG_CQ_NUM                               CAM_TG_CQ_NUM;                                   /* 0568, 0x1A004568, CAM_A_TG_CQ_NUM */
	UINT32                                          rsv_056C;                                        /* 056C, 0x1A00456C */
	CAM_REG_TG_TIME_STAMP                           CAM_TG_TIME_STAMP;                               /* 0570, 0x1A004570, CAM_A_TG_TIME_STAMP */
	CAM_REG_TG_SUB_PERIOD                           CAM_TG_SUB_PERIOD;                               /* 0574, 0x1A004574, CAM_A_TG_SUB_PERIOD */
	CAM_REG_TG_DAT_NO_R                             CAM_TG_DAT_NO_R;                                 /* 0578, 0x1A004578, CAM_A_TG_DAT_NO_R */
	CAM_REG_TG_FRMSIZE_ST_R                         CAM_TG_FRMSIZE_ST_R;                             /* 057C, 0x1A00457C, CAM_A_TG_FRMSIZE_ST_R */
	CAM_REG_DMX_CTL                                 CAM_DMX_CTL;                                     /* 0580, 0x1A004580, CAM_A_DMX_CTL */
	CAM_REG_DMX_CROP                                CAM_DMX_CROP;                                    /* 0584, 0x1A004584, CAM_A_DMX_CROP */
	CAM_REG_DMX_VSIZE                               CAM_DMX_VSIZE;                                   /* 0588, 0x1A004588, CAM_A_DMX_VSIZE */
	UINT32                                          rsv_058C[5];                                     /* 058C..059F, 0x1A00458C..1A00459F */
	CAM_REG_RMG_HDR_CFG                             CAM_RMG_HDR_CFG;                                 /* 05A0, 0x1A0045A0, CAM_A_RMG_HDR_CFG */
	CAM_REG_RMG_HDR_GAIN                            CAM_RMG_HDR_GAIN;                                /* 05A4, 0x1A0045A4, CAM_A_RMG_HDR_GAIN */
	CAM_REG_RMG_HDR_CFG2                            CAM_RMG_HDR_CFG2;                                /* 05A8, 0x1A0045A8, CAM_A_RMG_HDR_CFG2 */
	UINT32                                          rsv_05AC[5];                                     /* 05AC..05BF, 0x1A0045AC..1A0045BF */
	CAM_REG_RMM_OSC                                 CAM_RMM_OSC;                                     /* 05C0, 0x1A0045C0, CAM_A_RMM_OSC */
	CAM_REG_RMM_MC                                  CAM_RMM_MC;                                      /* 05C4, 0x1A0045C4, CAM_A_RMM_MC */
	CAM_REG_RMM_REVG_1                              CAM_RMM_REVG_1;                                  /* 05C8, 0x1A0045C8, CAM_A_RMM_REVG_1 */
	CAM_REG_RMM_REVG_2                              CAM_RMM_REVG_2;                                  /* 05CC, 0x1A0045CC, CAM_A_RMM_REVG_2 */
	CAM_REG_RMM_LEOS                                CAM_RMM_LEOS;                                    /* 05D0, 0x1A0045D0, CAM_A_RMM_LEOS */
	CAM_REG_RMM_MC2                                 CAM_RMM_MC2;                                     /* 05D4, 0x1A0045D4, CAM_A_RMM_MC2 */
	CAM_REG_RMM_DIFF_LB                             CAM_RMM_DIFF_LB;                                 /* 05D8, 0x1A0045D8, CAM_A_RMM_DIFF_LB */
	CAM_REG_RMM_MA                                  CAM_RMM_MA;                                      /* 05DC, 0x1A0045DC, CAM_A_RMM_MA */
	CAM_REG_RMM_TUNE                                CAM_RMM_TUNE;                                    /* 05E0, 0x1A0045E0, CAM_A_RMM_TUNE */
	UINT32                                          rsv_05E4[3];                                     /* 05E4..05EF, 0x1A0045E4..1A0045EF */
	CAM_REG_OBC_OFFST0                              CAM_OBC_OFFST0;                                  /* 05F0, 0x1A0045F0, CAM_A_OBC_OFFST0 */
	CAM_REG_OBC_OFFST1                              CAM_OBC_OFFST1;                                  /* 05F4, 0x1A0045F4, CAM_A_OBC_OFFST1 */
	CAM_REG_OBC_OFFST2                              CAM_OBC_OFFST2;                                  /* 05F8, 0x1A0045F8, CAM_A_OBC_OFFST2 */
	CAM_REG_OBC_OFFST3                              CAM_OBC_OFFST3;                                  /* 05FC, 0x1A0045FC, CAM_A_OBC_OFFST3 */
	CAM_REG_OBC_GAIN0                               CAM_OBC_GAIN0;                                   /* 0600, 0x1A004600, CAM_A_OBC_GAIN0 */
	CAM_REG_OBC_GAIN1                               CAM_OBC_GAIN1;                                   /* 0604, 0x1A004604, CAM_A_OBC_GAIN1 */
	CAM_REG_OBC_GAIN2                               CAM_OBC_GAIN2;                                   /* 0608, 0x1A004608, CAM_A_OBC_GAIN2 */
	CAM_REG_OBC_GAIN3                               CAM_OBC_GAIN3;                                   /* 060C, 0x1A00460C, CAM_A_OBC_GAIN3 */
	UINT32                                          rsv_0610[4];                                     /* 0610..061F, 0x1A004610..1A00461F */
	CAM_REG_BNR_BPC_CON                             CAM_BNR_BPC_CON;                                 /* 0620, 0x1A004620, CAM_A_BNR_BPC_CON */
	CAM_REG_BNR_BPC_TH1                             CAM_BNR_BPC_TH1;                                 /* 0624, 0x1A004624, CAM_A_BNR_BPC_TH1 */
	CAM_REG_BNR_BPC_TH2                             CAM_BNR_BPC_TH2;                                 /* 0628, 0x1A004628, CAM_A_BNR_BPC_TH2 */
	CAM_REG_BNR_BPC_TH3                             CAM_BNR_BPC_TH3;                                 /* 062C, 0x1A00462C, CAM_A_BNR_BPC_TH3 */
	CAM_REG_BNR_BPC_TH4                             CAM_BNR_BPC_TH4;                                 /* 0630, 0x1A004630, CAM_A_BNR_BPC_TH4 */
	CAM_REG_BNR_BPC_DTC                             CAM_BNR_BPC_DTC;                                 /* 0634, 0x1A004634, CAM_A_BNR_BPC_DTC */
	CAM_REG_BNR_BPC_COR                             CAM_BNR_BPC_COR;                                 /* 0638, 0x1A004638, CAM_A_BNR_BPC_COR */
	CAM_REG_BNR_BPC_TBLI1                           CAM_BNR_BPC_TBLI1;                               /* 063C, 0x1A00463C, CAM_A_BNR_BPC_TBLI1 */
	CAM_REG_BNR_BPC_TBLI2                           CAM_BNR_BPC_TBLI2;                               /* 0640, 0x1A004640, CAM_A_BNR_BPC_TBLI2 */
	CAM_REG_BNR_BPC_TH1_C                           CAM_BNR_BPC_TH1_C;                               /* 0644, 0x1A004644, CAM_A_BNR_BPC_TH1_C */
	CAM_REG_BNR_BPC_TH2_C                           CAM_BNR_BPC_TH2_C;                               /* 0648, 0x1A004648, CAM_A_BNR_BPC_TH2_C */
	CAM_REG_BNR_BPC_TH3_C                           CAM_BNR_BPC_TH3_C;                               /* 064C, 0x1A00464C, CAM_A_BNR_BPC_TH3_C */
	CAM_REG_BNR_NR1_CON                             CAM_BNR_NR1_CON;                                 /* 0650, 0x1A004650, CAM_A_BNR_NR1_CON */
	CAM_REG_BNR_NR1_CT_CON                          CAM_BNR_NR1_CT_CON;                              /* 0654, 0x1A004654, CAM_A_BNR_NR1_CT_CON */
	CAM_REG_BNR_RSV1                                CAM_BNR_RSV1;                                    /* 0658, 0x1A004658, CAM_A_BNR_RSV1 */
	CAM_REG_BNR_RSV2                                CAM_BNR_RSV2;                                    /* 065C, 0x1A00465C, CAM_A_BNR_RSV2 */
	CAM_REG_BNR_PDC_CON                             CAM_BNR_PDC_CON;                                 /* 0660, 0x1A004660, CAM_A_BNR_PDC_CON */
	CAM_REG_BNR_PDC_GAIN_L0                         CAM_BNR_PDC_GAIN_L0;                             /* 0664, 0x1A004664, CAM_A_BNR_PDC_GAIN_L0 */
	CAM_REG_BNR_PDC_GAIN_L1                         CAM_BNR_PDC_GAIN_L1;                             /* 0668, 0x1A004668, CAM_A_BNR_PDC_GAIN_L1 */
	CAM_REG_BNR_PDC_GAIN_L2                         CAM_BNR_PDC_GAIN_L2;                             /* 066C, 0x1A00466C, CAM_A_BNR_PDC_GAIN_L2 */
	CAM_REG_BNR_PDC_GAIN_L3                         CAM_BNR_PDC_GAIN_L3;                             /* 0670, 0x1A004670, CAM_A_BNR_PDC_GAIN_L3 */
	CAM_REG_BNR_PDC_GAIN_L4                         CAM_BNR_PDC_GAIN_L4;                             /* 0674, 0x1A004674, CAM_A_BNR_PDC_GAIN_L4 */
	CAM_REG_BNR_PDC_GAIN_R0                         CAM_BNR_PDC_GAIN_R0;                             /* 0678, 0x1A004678, CAM_A_BNR_PDC_GAIN_R0 */
	CAM_REG_BNR_PDC_GAIN_R1                         CAM_BNR_PDC_GAIN_R1;                             /* 067C, 0x1A00467C, CAM_A_BNR_PDC_GAIN_R1 */
	CAM_REG_BNR_PDC_GAIN_R2                         CAM_BNR_PDC_GAIN_R2;                             /* 0680, 0x1A004680, CAM_A_BNR_PDC_GAIN_R2 */
	CAM_REG_BNR_PDC_GAIN_R3                         CAM_BNR_PDC_GAIN_R3;                             /* 0684, 0x1A004684, CAM_A_BNR_PDC_GAIN_R3 */
	CAM_REG_BNR_PDC_GAIN_R4                         CAM_BNR_PDC_GAIN_R4;                             /* 0688, 0x1A004688, CAM_A_BNR_PDC_GAIN_R4 */
	CAM_REG_BNR_PDC_TH_GB                           CAM_BNR_PDC_TH_GB;                               /* 068C, 0x1A00468C, CAM_A_BNR_PDC_TH_GB */
	CAM_REG_BNR_PDC_TH_IA                           CAM_BNR_PDC_TH_IA;                               /* 0690, 0x1A004690, CAM_A_BNR_PDC_TH_IA */
	CAM_REG_BNR_PDC_TH_HD                           CAM_BNR_PDC_TH_HD;                               /* 0694, 0x1A004694, CAM_A_BNR_PDC_TH_HD */
	CAM_REG_BNR_PDC_SL                              CAM_BNR_PDC_SL;                                  /* 0698, 0x1A004698, CAM_A_BNR_PDC_SL */
	CAM_REG_BNR_PDC_POS                             CAM_BNR_PDC_POS;                                 /* 069C, 0x1A00469C, CAM_A_BNR_PDC_POS */
	UINT32                                          rsv_06A0[4];                                     /* 06A0..06AF, 0x1A0046A0..1A0046AF */
	CAM_REG_SCM_CFG0                                CAM_SCM_CFG0;                                    /* 06B0, 0x1A0046B0, CAM_A_SCM_CFG0 */
	CAM_REG_SCM_CFG1                                CAM_SCM_CFG1;                                    /* 06B4, 0x1A0046B4, CAM_A_SCM_CFG1 */
	UINT32                                          rsv_06B8[2];                                     /* 06B8..06BF, 0x1A0046B8..1A0046BF */
	CAM_REG_RPG_SATU_1                              CAM_RPG_SATU_1;                                  /* 06C0, 0x1A0046C0, CAM_A_RPG_SATU_1 */
	CAM_REG_RPG_SATU_2                              CAM_RPG_SATU_2;                                  /* 06C4, 0x1A0046C4, CAM_A_RPG_SATU_2 */
	CAM_REG_RPG_GAIN_1                              CAM_RPG_GAIN_1;                                  /* 06C8, 0x1A0046C8, CAM_A_RPG_GAIN_1 */
	CAM_REG_RPG_GAIN_2                              CAM_RPG_GAIN_2;                                  /* 06CC, 0x1A0046CC, CAM_A_RPG_GAIN_2 */
	CAM_REG_RPG_OFST_1                              CAM_RPG_OFST_1;                                  /* 06D0, 0x1A0046D0, CAM_A_RPG_OFST_1 */
	CAM_REG_RPG_OFST_2                              CAM_RPG_OFST_2;                                  /* 06D4, 0x1A0046D4, CAM_A_RPG_OFST_2 */
	UINT32                                          rsv_06D8[2];                                     /* 06D8..06DF, 0x1A0046D8..1A0046DF */
	CAM_REG_RRZ_CTL                                 CAM_RRZ_CTL;                                     /* 06E0, 0x1A0046E0, CAM_A_RRZ_CTL */
	CAM_REG_RRZ_IN_IMG                              CAM_RRZ_IN_IMG;                                  /* 06E4, 0x1A0046E4, CAM_A_RRZ_IN_IMG */
	CAM_REG_RRZ_OUT_IMG                             CAM_RRZ_OUT_IMG;                                 /* 06E8, 0x1A0046E8, CAM_A_RRZ_OUT_IMG */
	CAM_REG_RRZ_HORI_STEP                           CAM_RRZ_HORI_STEP;                               /* 06EC, 0x1A0046EC, CAM_A_RRZ_HORI_STEP */
	CAM_REG_RRZ_VERT_STEP                           CAM_RRZ_VERT_STEP;                               /* 06F0, 0x1A0046F0, CAM_A_RRZ_VERT_STEP */
	CAM_REG_RRZ_HORI_INT_OFST                       CAM_RRZ_HORI_INT_OFST;                           /* 06F4, 0x1A0046F4, CAM_A_RRZ_HORI_INT_OFST */
	CAM_REG_RRZ_HORI_SUB_OFST                       CAM_RRZ_HORI_SUB_OFST;                           /* 06F8, 0x1A0046F8, CAM_A_RRZ_HORI_SUB_OFST */
	CAM_REG_RRZ_VERT_INT_OFST                       CAM_RRZ_VERT_INT_OFST;                           /* 06FC, 0x1A0046FC, CAM_A_RRZ_VERT_INT_OFST */
	CAM_REG_RRZ_VERT_SUB_OFST                       CAM_RRZ_VERT_SUB_OFST;                           /* 0700, 0x1A004700, CAM_A_RRZ_VERT_SUB_OFST */
	CAM_REG_RRZ_MODE_TH                             CAM_RRZ_MODE_TH;                                 /* 0704, 0x1A004704, CAM_A_RRZ_MODE_TH */
	CAM_REG_RRZ_MODE_CTL                            CAM_RRZ_MODE_CTL;                                /* 0708, 0x1A004708, CAM_A_RRZ_MODE_CTL */
	UINT32                                          rsv_070C[13];                                    /* 070C..073F, 0x1A00470C..1A00473F */
	CAM_REG_RMX_CTL                                 CAM_RMX_CTL;                                     /* 0740, 0x1A004740, CAM_A_RMX_CTL */
	CAM_REG_RMX_CROP                                CAM_RMX_CROP;                                    /* 0744, 0x1A004744, CAM_A_RMX_CROP */
	CAM_REG_RMX_VSIZE                               CAM_RMX_VSIZE;                                   /* 0748, 0x1A004748, CAM_A_RMX_VSIZE */
	UINT32                                          rsv_074C[5];                                     /* 074C..075F, 0x1A00474C..1A00475F */
	CAM_REG_SGG5_PGN                                CAM_SGG5_PGN;                                    /* 0760, 0x1A004760, CAM_A_SGG5_PGN */
	CAM_REG_SGG5_GMRC_1                             CAM_SGG5_GMRC_1;                                 /* 0764, 0x1A004764, CAM_A_SGG5_GMRC_1 */
	CAM_REG_SGG5_GMRC_2                             CAM_SGG5_GMRC_2;                                 /* 0768, 0x1A004768, CAM_A_SGG5_GMRC_2 */
	UINT32                                          rsv_076C[5];                                     /* 076C..077F, 0x1A00476C..1A00477F */
	CAM_REG_BMX_CTL                                 CAM_BMX_CTL;                                     /* 0780, 0x1A004780, CAM_A_BMX_CTL */
	CAM_REG_BMX_CROP                                CAM_BMX_CROP;                                    /* 0784, 0x1A004784, CAM_A_BMX_CROP */
	CAM_REG_BMX_VSIZE                               CAM_BMX_VSIZE;                                   /* 0788, 0x1A004788, CAM_A_BMX_VSIZE */
	UINT32                                          rsv_078C[13];                                    /* 078C..07BF, 0x1A00478C..1A0047BF */
	CAM_REG_UFE_CON                                 CAM_UFE_CON;                                     /* 07C0, 0x1A0047C0, CAM_A_UFE_CON */
	UINT32                                          rsv_07C4[3];                                     /* 07C4..07CF, 0x1A0047C4..1A0047CF */
	CAM_REG_LSC_CTL1                                CAM_LSC_CTL1;                                    /* 07D0, 0x1A0047D0, CAM_A_LSC_CTL1 */
	CAM_REG_LSC_CTL2                                CAM_LSC_CTL2;                                    /* 07D4, 0x1A0047D4, CAM_A_LSC_CTL2 */
	CAM_REG_LSC_CTL3                                CAM_LSC_CTL3;                                    /* 07D8, 0x1A0047D8, CAM_A_LSC_CTL3 */
	CAM_REG_LSC_LBLOCK                              CAM_LSC_LBLOCK;                                  /* 07DC, 0x1A0047DC, CAM_A_LSC_LBLOCK */
	CAM_REG_LSC_RATIO_0                             CAM_LSC_RATIO_0;                                 /* 07E0, 0x1A0047E0, CAM_A_LSC_RATIO_0 */
	CAM_REG_LSC_TPIPE_OFST                          CAM_LSC_TPIPE_OFST;                              /* 07E4, 0x1A0047E4, CAM_A_LSC_TPIPE_OFST */
	CAM_REG_LSC_TPIPE_SIZE                          CAM_LSC_TPIPE_SIZE;                              /* 07E8, 0x1A0047E8, CAM_A_LSC_TPIPE_SIZE */
	CAM_REG_LSC_GAIN_TH                             CAM_LSC_GAIN_TH;                                 /* 07EC, 0x1A0047EC, CAM_A_LSC_GAIN_TH */
	CAM_REG_LSC_RATIO_1                             CAM_LSC_RATIO_1;                                 /* 07F0, 0x1A0047F0, CAM_A_LSC_RATIO_1 */
	UINT32                                          rsv_07F4[3];                                     /* 07F4..07FF, 0x1A0047F4..1A0047FF */
	CAM_REG_AF_CON                                  CAM_AF_CON;                                      /* 0800, 0x1A004800, CAM_A_AF_CON */
	CAM_REG_AF_TH_0                                 CAM_AF_TH_0;                                     /* 0804, 0x1A004804, CAM_A_AF_TH_0 */
	CAM_REG_AF_TH_1                                 CAM_AF_TH_1;                                     /* 0808, 0x1A004808, CAM_A_AF_TH_1 */
	CAM_REG_AF_FLT_1                                CAM_AF_FLT_1;                                    /* 080C, 0x1A00480C, CAM_A_AF_FLT_1 */
	CAM_REG_AF_FLT_2                                CAM_AF_FLT_2;                                    /* 0810, 0x1A004810, CAM_A_AF_FLT_2 */
	CAM_REG_AF_FLT_3                                CAM_AF_FLT_3;                                    /* 0814, 0x1A004814, CAM_A_AF_FLT_3 */
	CAM_REG_AF_FLT_4                                CAM_AF_FLT_4;                                    /* 0818, 0x1A004818, CAM_A_AF_FLT_4 */
	CAM_REG_AF_FLT_5                                CAM_AF_FLT_5;                                    /* 081C, 0x1A00481C, CAM_A_AF_FLT_5 */
	CAM_REG_AF_FLT_6                                CAM_AF_FLT_6;                                    /* 0820, 0x1A004820, CAM_A_AF_FLT_6 */
	CAM_REG_AF_FLT_7                                CAM_AF_FLT_7;                                    /* 0824, 0x1A004824, CAM_A_AF_FLT_7 */
	CAM_REG_AF_FLT_8                                CAM_AF_FLT_8;                                    /* 0828, 0x1A004828, CAM_A_AF_FLT_8 */
	UINT32                                          rsv_082C;                                        /* 082C, 0x1A00482C */
	CAM_REG_AF_SIZE                                 CAM_AF_SIZE;                                     /* 0830, 0x1A004830, CAM_A_AF_SIZE */
	CAM_REG_AF_VLD                                  CAM_AF_VLD;                                      /* 0834, 0x1A004834, CAM_A_AF_VLD */
	CAM_REG_AF_BLK_0                                CAM_AF_BLK_0;                                    /* 0838, 0x1A004838, CAM_A_AF_BLK_0 */
	CAM_REG_AF_BLK_1                                CAM_AF_BLK_1;                                    /* 083C, 0x1A00483C, CAM_A_AF_BLK_1 */
	CAM_REG_AF_TH_2                                 CAM_AF_TH_2;                                     /* 0840, 0x1A004840, CAM_A_AF_TH_2 */
	UINT32                                          rsv_0844[15];                                    /* 0844..087F, 0x1A004844..1A00487F */
	CAM_REG_LCS25_CON                               CAM_LCS25_CON;                                   /* 0880, 0x1A004880, CAM_A_LCS25_CON */
	CAM_REG_LCS25_ST                                CAM_LCS25_ST;                                    /* 0884, 0x1A004884, CAM_A_LCS25_ST */
	CAM_REG_LCS25_AWS                               CAM_LCS25_AWS;                                   /* 0888, 0x1A004888, CAM_A_LCS25_AWS */
	CAM_REG_LCS25_FLR                               CAM_LCS25_FLR;                                   /* 088C, 0x1A00488C, CAM_A_LCS25_FLR */
	CAM_REG_LCS25_LRZR_1                            CAM_LCS25_LRZR_1;                                /* 0890, 0x1A004890, CAM_A_LCS25_LRZR_1 */
	CAM_REG_LCS25_LRZR_2                            CAM_LCS25_LRZR_2;                                /* 0894, 0x1A004894, CAM_A_LCS25_LRZR_2 */
	CAM_REG_LCS25_SATU_1                            CAM_LCS25_SATU_1;                                /* 0898, 0x1A004898, CAM_A_LCS25_SATU_1 */
	CAM_REG_LCS25_SATU_2                            CAM_LCS25_SATU_2;                                /* 089C, 0x1A00489C, CAM_A_LCS25_SATU_2 */
	CAM_REG_LCS25_GAIN_1                            CAM_LCS25_GAIN_1;                                /* 08A0, 0x1A0048A0, CAM_A_LCS25_GAIN_1 */
	CAM_REG_LCS25_GAIN_2                            CAM_LCS25_GAIN_2;                                /* 08A4, 0x1A0048A4, CAM_A_LCS25_GAIN_2 */
	CAM_REG_LCS25_OFST_1                            CAM_LCS25_OFST_1;                                /* 08A8, 0x1A0048A8, CAM_A_LCS25_OFST_1 */
	CAM_REG_LCS25_OFST_2                            CAM_LCS25_OFST_2;                                /* 08AC, 0x1A0048AC, CAM_A_LCS25_OFST_2 */
	CAM_REG_LCS25_G2G_CNV_1                         CAM_LCS25_G2G_CNV_1;                             /* 08B0, 0x1A0048B0, CAM_A_LCS25_G2G_CNV_1 */
	CAM_REG_LCS25_G2G_CNV_2                         CAM_LCS25_G2G_CNV_2;                             /* 08B4, 0x1A0048B4, CAM_A_LCS25_G2G_CNV_2 */
	CAM_REG_LCS25_G2G_CNV_3                         CAM_LCS25_G2G_CNV_3;                             /* 08B8, 0x1A0048B8, CAM_A_LCS25_G2G_CNV_3 */
	CAM_REG_LCS25_G2G_CNV_4                         CAM_LCS25_G2G_CNV_4;                             /* 08BC, 0x1A0048BC, CAM_A_LCS25_G2G_CNV_4 */
	CAM_REG_LCS25_G2G_CNV_5                         CAM_LCS25_G2G_CNV_5;                             /* 08C0, 0x1A0048C0, CAM_A_LCS25_G2G_CNV_5 */
	CAM_REG_LCS25_LPF                               CAM_LCS25_LPF;                                   /* 08C4, 0x1A0048C4, CAM_A_LCS25_LPF */
	UINT32                                          rsv_08C8[10];                                    /* 08C8..08EF, 0x1A0048C8..1A0048EF */
	CAM_REG_RCP_CROP_CON1                           CAM_RCP_CROP_CON1;                               /* 08F0, 0x1A0048F0, CAM_A_RCP_CROP_CON1 */
	CAM_REG_RCP_CROP_CON2                           CAM_RCP_CROP_CON2;                               /* 08F4, 0x1A0048F4, CAM_A_RCP_CROP_CON2 */
	UINT32                                          rsv_08F8[2];                                     /* 08F8..08FF, 0x1A0048F8..1A0048FF */
	CAM_REG_SGG1_PGN                                CAM_SGG1_PGN;                                    /* 0900, 0x1A004900, CAM_A_SGG1_PGN */
	CAM_REG_SGG1_GMRC_1                             CAM_SGG1_GMRC_1;                                 /* 0904, 0x1A004904, CAM_A_SGG1_GMRC_1 */
	CAM_REG_SGG1_GMRC_2                             CAM_SGG1_GMRC_2;                                 /* 0908, 0x1A004908, CAM_A_SGG1_GMRC_2 */
	UINT32                                          rsv_090C;                                        /* 090C, 0x1A00490C */
	CAM_REG_QBN2_MODE                               CAM_QBN2_MODE;                                   /* 0910, 0x1A004910, CAM_A_QBN2_MODE */
	UINT32                                          rsv_0914[3];                                     /* 0914..091F, 0x1A004914..1A00491F */
	CAM_REG_AWB_WIN_ORG                             CAM_AWB_WIN_ORG;                                 /* 0920, 0x1A004920, CAM_A_AWB_WIN_ORG */
	CAM_REG_AWB_WIN_SIZE                            CAM_AWB_WIN_SIZE;                                /* 0924, 0x1A004924, CAM_A_AWB_WIN_SIZE */
	CAM_REG_AWB_WIN_PIT                             CAM_AWB_WIN_PIT;                                 /* 0928, 0x1A004928, CAM_A_AWB_WIN_PIT */
	CAM_REG_AWB_WIN_NUM                             CAM_AWB_WIN_NUM;                                 /* 092C, 0x1A00492C, CAM_A_AWB_WIN_NUM */
	CAM_REG_AWB_GAIN1_0                             CAM_AWB_GAIN1_0;                                 /* 0930, 0x1A004930, CAM_A_AWB_GAIN1_0 */
	CAM_REG_AWB_GAIN1_1                             CAM_AWB_GAIN1_1;                                 /* 0934, 0x1A004934, CAM_A_AWB_GAIN1_1 */
	CAM_REG_AWB_LMT1_0                              CAM_AWB_LMT1_0;                                  /* 0938, 0x1A004938, CAM_A_AWB_LMT1_0 */
	CAM_REG_AWB_LMT1_1                              CAM_AWB_LMT1_1;                                  /* 093C, 0x1A00493C, CAM_A_AWB_LMT1_1 */
	CAM_REG_AWB_LOW_THR                             CAM_AWB_LOW_THR;                                 /* 0940, 0x1A004940, CAM_A_AWB_LOW_THR */
	CAM_REG_AWB_HI_THR                              CAM_AWB_HI_THR;                                  /* 0944, 0x1A004944, CAM_A_AWB_HI_THR */
	CAM_REG_AWB_PIXEL_CNT0                          CAM_AWB_PIXEL_CNT0;                              /* 0948, 0x1A004948, CAM_A_AWB_PIXEL_CNT0 */
	CAM_REG_AWB_PIXEL_CNT1                          CAM_AWB_PIXEL_CNT1;                              /* 094C, 0x1A00494C, CAM_A_AWB_PIXEL_CNT1 */
	CAM_REG_AWB_PIXEL_CNT2                          CAM_AWB_PIXEL_CNT2;                              /* 0950, 0x1A004950, CAM_A_AWB_PIXEL_CNT2 */
	CAM_REG_AWB_ERR_THR                             CAM_AWB_ERR_THR;                                 /* 0954, 0x1A004954, CAM_A_AWB_ERR_THR */
	CAM_REG_AWB_ROT                                 CAM_AWB_ROT;                                     /* 0958, 0x1A004958, CAM_A_AWB_ROT */
	CAM_REG_AWB_L0_X                                CAM_AWB_L0_X;                                    /* 095C, 0x1A00495C, CAM_A_AWB_L0_X */
	CAM_REG_AWB_L0_Y                                CAM_AWB_L0_Y;                                    /* 0960, 0x1A004960, CAM_A_AWB_L0_Y */
	CAM_REG_AWB_L1_X                                CAM_AWB_L1_X;                                    /* 0964, 0x1A004964, CAM_A_AWB_L1_X */
	CAM_REG_AWB_L1_Y                                CAM_AWB_L1_Y;                                    /* 0968, 0x1A004968, CAM_A_AWB_L1_Y */
	CAM_REG_AWB_L2_X                                CAM_AWB_L2_X;                                    /* 096C, 0x1A00496C, CAM_A_AWB_L2_X */
	CAM_REG_AWB_L2_Y                                CAM_AWB_L2_Y;                                    /* 0970, 0x1A004970, CAM_A_AWB_L2_Y */
	CAM_REG_AWB_L3_X                                CAM_AWB_L3_X;                                    /* 0974, 0x1A004974, CAM_A_AWB_L3_X */
	CAM_REG_AWB_L3_Y                                CAM_AWB_L3_Y;                                    /* 0978, 0x1A004978, CAM_A_AWB_L3_Y */
	CAM_REG_AWB_L4_X                                CAM_AWB_L4_X;                                    /* 097C, 0x1A00497C, CAM_A_AWB_L4_X */
	CAM_REG_AWB_L4_Y                                CAM_AWB_L4_Y;                                    /* 0980, 0x1A004980, CAM_A_AWB_L4_Y */
	CAM_REG_AWB_L5_X                                CAM_AWB_L5_X;                                    /* 0984, 0x1A004984, CAM_A_AWB_L5_X */
	CAM_REG_AWB_L5_Y                                CAM_AWB_L5_Y;                                    /* 0988, 0x1A004988, CAM_A_AWB_L5_Y */
	CAM_REG_AWB_L6_X                                CAM_AWB_L6_X;                                    /* 098C, 0x1A00498C, CAM_A_AWB_L6_X */
	CAM_REG_AWB_L6_Y                                CAM_AWB_L6_Y;                                    /* 0990, 0x1A004990, CAM_A_AWB_L6_Y */
	CAM_REG_AWB_L7_X                                CAM_AWB_L7_X;                                    /* 0994, 0x1A004994, CAM_A_AWB_L7_X */
	CAM_REG_AWB_L7_Y                                CAM_AWB_L7_Y;                                    /* 0998, 0x1A004998, CAM_A_AWB_L7_Y */
	CAM_REG_AWB_L8_X                                CAM_AWB_L8_X;                                    /* 099C, 0x1A00499C, CAM_A_AWB_L8_X */
	CAM_REG_AWB_L8_Y                                CAM_AWB_L8_Y;                                    /* 09A0, 0x1A0049A0, CAM_A_AWB_L8_Y */
	CAM_REG_AWB_L9_X                                CAM_AWB_L9_X;                                    /* 09A4, 0x1A0049A4, CAM_A_AWB_L9_X */
	CAM_REG_AWB_L9_Y                                CAM_AWB_L9_Y;                                    /* 09A8, 0x1A0049A8, CAM_A_AWB_L9_Y */
	CAM_REG_AWB_SPARE                               CAM_AWB_SPARE;                                   /* 09AC, 0x1A0049AC, CAM_A_AWB_SPARE */
	CAM_REG_AWB_MOTION_THR                          CAM_AWB_MOTION_THR;                              /* 09B0, 0x1A0049B0, CAM_A_AWB_MOTION_THR */
	CAM_REG_AWB_RC_CNV_0                            CAM_AWB_RC_CNV_0;                                /* 09B4, 0x1A0049B4, CAM_A_AWB_RC_CNV_0 */
	CAM_REG_AWB_RC_CNV_1                            CAM_AWB_RC_CNV_1;                                /* 09B8, 0x1A0049B8, CAM_A_AWB_RC_CNV_1 */
	CAM_REG_AWB_RC_CNV_2                            CAM_AWB_RC_CNV_2;                                /* 09BC, 0x1A0049BC, CAM_A_AWB_RC_CNV_2 */
	CAM_REG_AWB_RC_CNV_3                            CAM_AWB_RC_CNV_3;                                /* 09C0, 0x1A0049C0, CAM_A_AWB_RC_CNV_3 */
	CAM_REG_AWB_RC_CNV_4                            CAM_AWB_RC_CNV_4;                                /* 09C4, 0x1A0049C4, CAM_A_AWB_RC_CNV_4 */
	UINT32                                          rsv_09C8[6];                                     /* 09C8..09DF, 0x1A0049C8..1A0049DF */
	CAM_REG_AE_HST_CTL                              CAM_AE_HST_CTL;                                  /* 09E0, 0x1A0049E0, CAM_A_AE_HST_CTL */
	CAM_REG_AE_GAIN2_0                              CAM_AE_GAIN2_0;                                  /* 09E4, 0x1A0049E4, CAM_A_AE_GAIN2_0 */
	CAM_REG_AE_GAIN2_1                              CAM_AE_GAIN2_1;                                  /* 09E8, 0x1A0049E8, CAM_A_AE_GAIN2_1 */
	CAM_REG_AE_LMT2_0                               CAM_AE_LMT2_0;                                   /* 09EC, 0x1A0049EC, CAM_A_AE_LMT2_0 */
	CAM_REG_AE_LMT2_1                               CAM_AE_LMT2_1;                                   /* 09F0, 0x1A0049F0, CAM_A_AE_LMT2_1 */
	CAM_REG_AE_RC_CNV_0                             CAM_AE_RC_CNV_0;                                 /* 09F4, 0x1A0049F4, CAM_A_AE_RC_CNV_0 */
	CAM_REG_AE_RC_CNV_1                             CAM_AE_RC_CNV_1;                                 /* 09F8, 0x1A0049F8, CAM_A_AE_RC_CNV_1 */
	CAM_REG_AE_RC_CNV_2                             CAM_AE_RC_CNV_2;                                 /* 09FC, 0x1A0049FC, CAM_A_AE_RC_CNV_2 */
	CAM_REG_AE_RC_CNV_3                             CAM_AE_RC_CNV_3;                                 /* 0A00, 0x1A004A00, CAM_A_AE_RC_CNV_3 */
	CAM_REG_AE_RC_CNV_4                             CAM_AE_RC_CNV_4;                                 /* 0A04, 0x1A004A04, CAM_A_AE_RC_CNV_4 */
	CAM_REG_AE_YGAMMA_0                             CAM_AE_YGAMMA_0;                                 /* 0A08, 0x1A004A08, CAM_A_AE_YGAMMA_0 */
	CAM_REG_AE_YGAMMA_1                             CAM_AE_YGAMMA_1;                                 /* 0A0C, 0x1A004A0C, CAM_A_AE_YGAMMA_1 */
	CAM_REG_AE_HST_SET                              CAM_AE_HST_SET;                                  /* 0A10, 0x1A004A10, CAM_A_AE_HST_SET */
	CAM_REG_AE_HST0_RNG                             CAM_AE_HST0_RNG;                                 /* 0A14, 0x1A004A14, CAM_A_AE_HST0_RNG */
	CAM_REG_AE_HST1_RNG                             CAM_AE_HST1_RNG;                                 /* 0A18, 0x1A004A18, CAM_A_AE_HST1_RNG */
	CAM_REG_AE_HST2_RNG                             CAM_AE_HST2_RNG;                                 /* 0A1C, 0x1A004A1C, CAM_A_AE_HST2_RNG */
	CAM_REG_AE_HST3_RNG                             CAM_AE_HST3_RNG;                                 /* 0A20, 0x1A004A20, CAM_A_AE_HST3_RNG */
	CAM_REG_AE_SPARE                                CAM_AE_SPARE;                                    /* 0A24, 0x1A004A24, CAM_A_AE_SPARE */
	CAM_REG_AE_OVER_EXPO_CFG                        CAM_AE_OVER_EXPO_CFG;                            /* 0A28, 0x1A004A28, CAM_A_AE_OVER_EXPO_CFG */
	CAM_REG_AE_PIX_HST_CTL                          CAM_AE_PIX_HST_CTL;                              /* 0A2C, 0x1A004A2C, CAM_A_AE_PIX_HST_CTL */
	CAM_REG_AE_PIX_HST_SET                          CAM_AE_PIX_HST_SET;                              /* 0A30, 0x1A004A30, CAM_A_AE_PIX_HST_SET */
	CAM_REG_AE_PIX_HST0_YRNG                        CAM_AE_PIX_HST0_YRNG;                            /* 0A34, 0x1A004A34, CAM_A_AE_PIX_HST0_YRNG */
	CAM_REG_AE_PIX_HST0_XRNG                        CAM_AE_PIX_HST0_XRNG;                            /* 0A38, 0x1A004A38, CAM_A_AE_PIX_HST0_XRNG */
	CAM_REG_AE_PIX_HST1_YRNG                        CAM_AE_PIX_HST1_YRNG;                            /* 0A3C, 0x1A004A3C, CAM_A_AE_PIX_HST1_YRNG */
	CAM_REG_AE_PIX_HST1_XRNG                        CAM_AE_PIX_HST1_XRNG;                            /* 0A40, 0x1A004A40, CAM_A_AE_PIX_HST1_XRNG */
	CAM_REG_AE_PIX_HST2_YRNG                        CAM_AE_PIX_HST2_YRNG;                            /* 0A44, 0x1A004A44, CAM_A_AE_PIX_HST2_YRNG */
	CAM_REG_AE_PIX_HST2_XRNG                        CAM_AE_PIX_HST2_XRNG;                            /* 0A48, 0x1A004A48, CAM_A_AE_PIX_HST2_XRNG */
	CAM_REG_AE_PIX_HST3_YRNG                        CAM_AE_PIX_HST3_YRNG;                            /* 0A4C, 0x1A004A4C, CAM_A_AE_PIX_HST3_YRNG */
	CAM_REG_AE_PIX_HST3_XRNG                        CAM_AE_PIX_HST3_XRNG;                            /* 0A50, 0x1A004A50, CAM_A_AE_PIX_HST3_XRNG */
	CAM_REG_AE_HST_SEL                              CAM_AE_HST_SEL;                                  /* 0A54, 0x1A004A54, CAM_A_AE_HST_SEL */
	CAM_REG_AE_STAT_EN                              CAM_AE_STAT_EN;                                  /* 0A58, 0x1A004A58, CAM_A_AE_STAT_EN */
	CAM_REG_AE_YCOEF                                CAM_AE_YCOEF;                                    /* 0A5C, 0x1A004A5C, CAM_A_AE_YCOEF */
	UINT32                                          rsv_0A60[24];                                    /* 0A60..0ABF, 0x1A004A60..1A004ABF */
	CAM_REG_QBN1_MODE                               CAM_QBN1_MODE;                                   /* 0AC0, 0x1A004AC0, CAM_A_QBN1_MODE */
	UINT32                                          rsv_0AC4[3];                                     /* 0AC4..0ACF, 0x1A004AC4..1A004ACF */
	CAM_REG_CPG_SATU_1                              CAM_CPG_SATU_1;                                  /* 0AD0, 0x1A004AD0, CAM_A_CPG_SATU_1 */
	CAM_REG_CPG_SATU_2                              CAM_CPG_SATU_2;                                  /* 0AD4, 0x1A004AD4, CAM_A_CPG_SATU_2 */
	CAM_REG_CPG_GAIN_1                              CAM_CPG_GAIN_1;                                  /* 0AD8, 0x1A004AD8, CAM_A_CPG_GAIN_1 */
	CAM_REG_CPG_GAIN_2                              CAM_CPG_GAIN_2;                                  /* 0ADC, 0x1A004ADC, CAM_A_CPG_GAIN_2 */
	CAM_REG_CPG_OFST_1                              CAM_CPG_OFST_1;                                  /* 0AE0, 0x1A004AE0, CAM_A_CPG_OFST_1 */
	CAM_REG_CPG_OFST_2                              CAM_CPG_OFST_2;                                  /* 0AE4, 0x1A004AE4, CAM_A_CPG_OFST_2 */
	UINT32                                          rsv_0AE8[2];                                     /* 0AE8..0AEF, 0x1A004AE8..1A004AEF */
	CAM_REG_CAC_TILE_SIZE                           CAM_CAC_TILE_SIZE;                               /* 0AF0, 0x1A004AF0, CAM_A_CAC_TILE_SIZE */
	CAM_REG_CAC_TILE_OFFSET                         CAM_CAC_TILE_OFFSET;                             /* 0AF4, 0x1A004AF4, CAM_A_CAC_TILE_OFFSET */
	UINT32                                          rsv_0AF8[2];                                     /* 0AF8..0AFF, 0x1A004AF8..1A004AFF */
	CAM_REG_PMX_CTL                                 CAM_PMX_CTL;                                     /* 0B00, 0x1A004B00, CAM_A_PMX_CTL */
	CAM_REG_PMX_CROP                                CAM_PMX_CROP;                                    /* 0B04, 0x1A004B04, CAM_A_PMX_CROP */
	CAM_REG_PMX_VSIZE                               CAM_PMX_VSIZE;                                   /* 0B08, 0x1A004B08, CAM_A_PMX_VSIZE */
	UINT32                                          rsv_0B0C[13];                                    /* 0B0C..0B3F, 0x1A004B0C..1A004B3F */
	CAM_REG_VBN_GAIN                                CAM_VBN_GAIN;                                    /* 0B40, 0x1A004B40, CAM_A_VBN_GAIN */
	CAM_REG_VBN_OFST                                CAM_VBN_OFST;                                    /* 0B44, 0x1A004B44, CAM_A_VBN_OFST */
	CAM_REG_VBN_TYPE                                CAM_VBN_TYPE;                                    /* 0B48, 0x1A004B48, CAM_A_VBN_TYPE */
	CAM_REG_VBN_SPARE                               CAM_VBN_SPARE;                                   /* 0B4C, 0x1A004B4C, CAM_A_VBN_SPARE */
	UINT32                                          rsv_0B50[4];                                     /* 0B50..0B5F, 0x1A004B50..1A004B5F */
	CAM_REG_AMX_CTL                                 CAM_AMX_CTL;                                     /* 0B60, 0x1A004B60, CAM_A_AMX_CTL */
	CAM_REG_AMX_CROP                                CAM_AMX_CROP;                                    /* 0B64, 0x1A004B64, CAM_A_AMX_CROP */
	CAM_REG_AMX_VSIZE                               CAM_AMX_VSIZE;                                   /* 0B68, 0x1A004B68, CAM_A_AMX_VSIZE */
	UINT32                                          rsv_0B6C[5];                                     /* 0B6C..0B7F, 0x1A004B6C..1A004B7F */
	CAM_REG_BIN_CTL                                 CAM_BIN_CTL;                                     /* 0B80, 0x1A004B80, CAM_A_BIN_CTL */
	CAM_REG_BIN_FTH                                 CAM_BIN_FTH;                                     /* 0B84, 0x1A004B84, CAM_A_BIN_FTH */
	CAM_REG_BIN_SPARE                               CAM_BIN_SPARE;                                   /* 0B88, 0x1A004B88, CAM_A_BIN_SPARE */
	UINT32                                          rsv_0B8C[5];                                     /* 0B8C..0B9F, 0x1A004B8C..1A004B9F */
	CAM_REG_DBN_GAIN                                CAM_DBN_GAIN;                                    /* 0BA0, 0x1A004BA0, CAM_A_DBN_GAIN */
	CAM_REG_DBN_OFST                                CAM_DBN_OFST;                                    /* 0BA4, 0x1A004BA4, CAM_A_DBN_OFST */
	CAM_REG_DBN_SPARE                               CAM_DBN_SPARE;                                   /* 0BA8, 0x1A004BA8, CAM_A_DBN_SPARE */
	UINT32                                          rsv_0BAC;                                        /* 0BAC, 0x1A004BAC */
	CAM_REG_PBN_TYPE                                CAM_PBN_TYPE;                                    /* 0BB0, 0x1A004BB0, CAM_A_PBN_TYPE */
	CAM_REG_PBN_LST                                 CAM_PBN_LST;                                     /* 0BB4, 0x1A004BB4, CAM_A_PBN_LST */
	CAM_REG_PBN_VSIZE                               CAM_PBN_VSIZE;                                   /* 0BB8, 0x1A004BB8, CAM_A_PBN_VSIZE */
	UINT32                                          rsv_0BBC;                                        /* 0BBC, 0x1A004BBC */
	CAM_REG_RCP3_CROP_CON1                          CAM_RCP3_CROP_CON1;                              /* 0BC0, 0x1A004BC0, CAM_A_RCP3_CROP_CON1 */
	CAM_REG_RCP3_CROP_CON2                          CAM_RCP3_CROP_CON2;                              /* 0BC4, 0x1A004BC4, CAM_A_RCP3_CROP_CON2 */
	UINT32                                          rsv_0BC8[14];                                    /* 0BC8..0BFF, 0x1A004BC8..1A004BFF */
	CAM_REG_DBS_SIGMA                               CAM_DBS_SIGMA;                                   /* 0C00, 0x1A004C00, CAM_A_DBS_SIGMA */
	CAM_REG_DBS_BSTBL_0                             CAM_DBS_BSTBL_0;                                 /* 0C04, 0x1A004C04, CAM_A_DBS_BSTBL_0 */
	CAM_REG_DBS_BSTBL_1                             CAM_DBS_BSTBL_1;                                 /* 0C08, 0x1A004C08, CAM_A_DBS_BSTBL_1 */
	CAM_REG_DBS_BSTBL_2                             CAM_DBS_BSTBL_2;                                 /* 0C0C, 0x1A004C0C, CAM_A_DBS_BSTBL_2 */
	CAM_REG_DBS_BSTBL_3                             CAM_DBS_BSTBL_3;                                 /* 0C10, 0x1A004C10, CAM_A_DBS_BSTBL_3 */
	CAM_REG_DBS_CTL                                 CAM_DBS_CTL;                                     /* 0C14, 0x1A004C14, CAM_A_DBS_CTL */
	CAM_REG_DBS_CTL_2                               CAM_DBS_CTL_2;                                   /* 0C18, 0x1A004C18, CAM_A_DBS_CTL_2 */
	CAM_REG_DBS_SIGMA_2                             CAM_DBS_SIGMA_2;                                 /* 0C1C, 0x1A004C1C, CAM_A_DBS_SIGMA_2 */
	CAM_REG_DBS_YGN                                 CAM_DBS_YGN;                                     /* 0C20, 0x1A004C20, CAM_A_DBS_YGN */
	CAM_REG_DBS_SL_Y12                              CAM_DBS_SL_Y12;                                  /* 0C24, 0x1A004C24, CAM_A_DBS_SL_Y12 */
	CAM_REG_DBS_SL_Y34                              CAM_DBS_SL_Y34;                                  /* 0C28, 0x1A004C28, CAM_A_DBS_SL_Y34 */
	CAM_REG_DBS_SL_G12                              CAM_DBS_SL_G12;                                  /* 0C2C, 0x1A004C2C, CAM_A_DBS_SL_G12 */
	CAM_REG_DBS_SL_G34                              CAM_DBS_SL_G34;                                  /* 0C30, 0x1A004C30, CAM_A_DBS_SL_G34 */
	UINT32                                          rsv_0C34[3];                                     /* 0C34..0C3F, 0x1A004C34..1A004C3F */
	CAM_REG_SL2F_CEN                                CAM_SL2F_CEN;                                    /* 0C40, 0x1A004C40, CAM_A_SL2F_CEN */
	CAM_REG_SL2F_RR_CON0                            CAM_SL2F_RR_CON0;                                /* 0C44, 0x1A004C44, CAM_A_SL2F_RR_CON0 */
	CAM_REG_SL2F_RR_CON1                            CAM_SL2F_RR_CON1;                                /* 0C48, 0x1A004C48, CAM_A_SL2F_RR_CON1 */
	CAM_REG_SL2F_GAIN                               CAM_SL2F_GAIN;                                   /* 0C4C, 0x1A004C4C, CAM_A_SL2F_GAIN */
	CAM_REG_SL2F_RZ                                 CAM_SL2F_RZ;                                     /* 0C50, 0x1A004C50, CAM_A_SL2F_RZ */
	CAM_REG_SL2F_XOFF                               CAM_SL2F_XOFF;                                   /* 0C54, 0x1A004C54, CAM_A_SL2F_XOFF */
	CAM_REG_SL2F_YOFF                               CAM_SL2F_YOFF;                                   /* 0C58, 0x1A004C58, CAM_A_SL2F_YOFF */
	CAM_REG_SL2F_SLP_CON0                           CAM_SL2F_SLP_CON0;                               /* 0C5C, 0x1A004C5C, CAM_A_SL2F_SLP_CON0 */
	CAM_REG_SL2F_SLP_CON1                           CAM_SL2F_SLP_CON1;                               /* 0C60, 0x1A004C60, CAM_A_SL2F_SLP_CON1 */
	CAM_REG_SL2F_SIZE                               CAM_SL2F_SIZE;                                   /* 0C64, 0x1A004C64, CAM_A_SL2F_SIZE */
	UINT32                                          rsv_0C68[38];                                    /* 0C68..0CFF, 0x1A004C68..1A004CFF */
	CAM_REG_QBN4_MODE                               CAM_QBN4_MODE;                                   /* 0D00, 0x1A004D00, CAM_A_QBN4_MODE */
	UINT32                                          rsv_0D04[3];                                     /* 0D04..0D0F, 0x1A004D04..1A004D0F */
	CAM_REG_PS_AWB_WIN_ORG                          CAM_PS_AWB_WIN_ORG;                              /* 0D10, 0x1A004D10, CAM_A_PS_AWB_WIN_ORG */
	CAM_REG_PS_AWB_WIN_SIZE                         CAM_PS_AWB_WIN_SIZE;                             /* 0D14, 0x1A004D14, CAM_A_PS_AWB_WIN_SIZE */
	CAM_REG_PS_AWB_WIN_PIT                          CAM_PS_AWB_WIN_PIT;                              /* 0D18, 0x1A004D18, CAM_A_PS_AWB_WIN_PIT */
	CAM_REG_PS_AWB_WIN_NUM                          CAM_PS_AWB_WIN_NUM;                              /* 0D1C, 0x1A004D1C, CAM_A_PS_AWB_WIN_NUM */
	CAM_REG_PS_AWB_PIXEL_CNT0                       CAM_PS_AWB_PIXEL_CNT0;                           /* 0D20, 0x1A004D20, CAM_A_PS_AWB_PIXEL_CNT0 */
	CAM_REG_PS_AWB_PIXEL_CNT1                       CAM_PS_AWB_PIXEL_CNT1;                           /* 0D24, 0x1A004D24, CAM_A_PS_AWB_PIXEL_CNT1 */
	CAM_REG_PS_AWB_PIXEL_CNT2                       CAM_PS_AWB_PIXEL_CNT2;                           /* 0D28, 0x1A004D28, CAM_A_PS_AWB_PIXEL_CNT2 */
	CAM_REG_PS_AWB_PIXEL_CNT3                       CAM_PS_AWB_PIXEL_CNT3;                           /* 0D2C, 0x1A004D2C, CAM_A_PS_AWB_PIXEL_CNT3 */
	CAM_REG_PS_AE_YCOEF0                            CAM_PS_AE_YCOEF0;                                /* 0D30, 0x1A004D30, CAM_A_PS_AE_YCOEF0 */
	CAM_REG_PS_AE_YCOEF1                            CAM_PS_AE_YCOEF1;                                /* 0D34, 0x1A004D34, CAM_A_PS_AE_YCOEF1 */
	UINT32                                          rsv_0D38[18];                                    /* 0D38..0D7F, 0x1A004D38..1A004D7F */
	CAM_REG_PSO_BASE_ADDR                           CAM_PSO_BASE_ADDR;                               /* 0D80, 0x1A004D80, CAM_A_PSO_BASE_ADDR */
	UINT32                                          rsv_0D84;                                        /* 0D84, 0x1A004D84 */
	CAM_REG_PSO_OFST_ADDR                           CAM_PSO_OFST_ADDR;                               /* 0D88, 0x1A004D88, CAM_A_PSO_OFST_ADDR */
	UINT32                                          rsv_0D8C;                                        /* 0D8C, 0x1A004D8C */
	CAM_REG_PSO_XSIZE                               CAM_PSO_XSIZE;                                   /* 0D90, 0x1A004D90, CAM_A_PSO_XSIZE */
	CAM_REG_PSO_YSIZE                               CAM_PSO_YSIZE;                                   /* 0D94, 0x1A004D94, CAM_A_PSO_YSIZE */
	CAM_REG_PSO_STRIDE                              CAM_PSO_STRIDE;                                  /* 0D98, 0x1A004D98, CAM_A_PSO_STRIDE */
	CAM_REG_PSO_CON                                 CAM_PSO_CON;                                     /* 0D9C, 0x1A004D9C, CAM_A_PSO_CON */
	CAM_REG_PSO_CON2                                CAM_PSO_CON2;                                    /* 0DA0, 0x1A004DA0, CAM_A_PSO_CON2 */
	CAM_REG_PSO_CON3                                CAM_PSO_CON3;                                    /* 0DA4, 0x1A004DA4, CAM_A_PSO_CON3 */
	CAM_REG_PSO_ERR_STAT                            CAM_PSO_ERR_STAT;                                /* 0DA8, 0x1A004DA8, CAM_A_PSO_ERR_STAT */
	UINT32                                          rsv_0DAC;                                        /* 0DAC, 0x1A004DAC */
	CAM_REG_PSO_FH_SPARE_2                          CAM_PSO_FH_SPARE_2;                              /* 0DB0, 0x1A004DB0, CAM_A_PSO_FH_SPARE_2 */
	CAM_REG_PSO_FH_SPARE_3                          CAM_PSO_FH_SPARE_3;                              /* 0DB4, 0x1A004DB4, CAM_A_PSO_FH_SPARE_3 */
	CAM_REG_PSO_FH_SPARE_4                          CAM_PSO_FH_SPARE_4;                              /* 0DB8, 0x1A004DB8, CAM_A_PSO_FH_SPARE_4 */
	CAM_REG_PSO_FH_SPARE_5                          CAM_PSO_FH_SPARE_5;                              /* 0DBC, 0x1A004DBC, CAM_A_PSO_FH_SPARE_5 */
	CAM_REG_PSO_FH_SPARE_6                          CAM_PSO_FH_SPARE_6;                              /* 0DC0, 0x1A004DC0, CAM_A_PSO_FH_SPARE_6 */
	CAM_REG_PSO_FH_SPARE_7                          CAM_PSO_FH_SPARE_7;                              /* 0DC4, 0x1A004DC4, CAM_A_PSO_FH_SPARE_7 */
	CAM_REG_PSO_FH_SPARE_8                          CAM_PSO_FH_SPARE_8;                              /* 0DC8, 0x1A004DC8, CAM_A_PSO_FH_SPARE_8 */
	CAM_REG_PSO_FH_SPARE_9                          CAM_PSO_FH_SPARE_9;                              /* 0DCC, 0x1A004DCC, CAM_A_PSO_FH_SPARE_9 */
	CAM_REG_PSO_FH_SPARE_10                         CAM_PSO_FH_SPARE_10;                             /* 0DD0, 0x1A004DD0, CAM_A_PSO_FH_SPARE_10 */
	CAM_REG_PSO_FH_SPARE_11                         CAM_PSO_FH_SPARE_11;                             /* 0DD4, 0x1A004DD4, CAM_A_PSO_FH_SPARE_11 */
	CAM_REG_PSO_FH_SPARE_12                         CAM_PSO_FH_SPARE_12;                             /* 0DD8, 0x1A004DD8, CAM_A_PSO_FH_SPARE_12 */
	CAM_REG_PSO_FH_SPARE_13                         CAM_PSO_FH_SPARE_13;                             /* 0DDC, 0x1A004DDC, CAM_A_PSO_FH_SPARE_13 */
	CAM_REG_PSO_FH_SPARE_14                         CAM_PSO_FH_SPARE_14;                             /* 0DE0, 0x1A004DE0, CAM_A_PSO_FH_SPARE_14 */
	CAM_REG_PSO_FH_SPARE_15                         CAM_PSO_FH_SPARE_15;                             /* 0DE4, 0x1A004DE4, CAM_A_PSO_FH_SPARE_15 */
	CAM_REG_PSO_FH_SPARE_16                         CAM_PSO_FH_SPARE_16;                             /* 0DE8, 0x1A004DE8, CAM_A_PSO_FH_SPARE_16 */
	UINT32                                          rsv_0DEC[5];                                     /* 0DEC..0DFF, 0x1A004DEC..1A004DFF */
	CAM_REG_DMA_FRAME_HEADER_EN                     CAM_DMA_FRAME_HEADER_EN;                         /* 0E00, 0x1A004E00, CAM_A_DMA_FRAME_HEADER_EN */
	CAM_REG_IMGO_FH_BASE_ADDR                       CAM_IMGO_FH_BASE_ADDR;                           /* 0E04, 0x1A004E04, CAM_A_IMGO_FH_BASE_ADDR */
	CAM_REG_RRZO_FH_BASE_ADDR                       CAM_RRZO_FH_BASE_ADDR;                           /* 0E08, 0x1A004E08, CAM_A_RRZO_FH_BASE_ADDR */
	CAM_REG_AAO_FH_BASE_ADDR                        CAM_AAO_FH_BASE_ADDR;                            /* 0E0C, 0x1A004E0C, CAM_A_AAO_FH_BASE_ADDR */
	CAM_REG_AFO_FH_BASE_ADDR                        CAM_AFO_FH_BASE_ADDR;                            /* 0E10, 0x1A004E10, CAM_A_AFO_FH_BASE_ADDR */
	CAM_REG_LCSO_FH_BASE_ADDR                       CAM_LCSO_FH_BASE_ADDR;                           /* 0E14, 0x1A004E14, CAM_A_LCSO_FH_BASE_ADDR */
	CAM_REG_UFEO_FH_BASE_ADDR                       CAM_UFEO_FH_BASE_ADDR;                           /* 0E18, 0x1A004E18, CAM_A_UFEO_FH_BASE_ADDR */
	CAM_REG_PDO_FH_BASE_ADDR                        CAM_PDO_FH_BASE_ADDR;                            /* 0E1C, 0x1A004E1C, CAM_A_PDO_FH_BASE_ADDR */
	CAM_REG_PSO_FH_BASE_ADDR                        CAM_PSO_FH_BASE_ADDR;                            /* 0E20, 0x1A004E20, CAM_A_PSO_FH_BASE_ADDR */
	UINT32                                          rsv_0E24[3];                                     /* 0E24..0E2F, 0x1A004E24..1A004E2F */
	CAM_REG_IMGO_FH_SPARE_2                         CAM_IMGO_FH_SPARE_2;                             /* 0E30, 0x1A004E30, CAM_A_IMGO_FH_SPARE_2 */
	CAM_REG_IMGO_FH_SPARE_3                         CAM_IMGO_FH_SPARE_3;                             /* 0E34, 0x1A004E34, CAM_A_IMGO_FH_SPARE_3 */
	CAM_REG_IMGO_FH_SPARE_4                         CAM_IMGO_FH_SPARE_4;                             /* 0E38, 0x1A004E38, CAM_A_IMGO_FH_SPARE_4 */
	CAM_REG_IMGO_FH_SPARE_5                         CAM_IMGO_FH_SPARE_5;                             /* 0E3C, 0x1A004E3C, CAM_A_IMGO_FH_SPARE_5 */
	CAM_REG_IMGO_FH_SPARE_6                         CAM_IMGO_FH_SPARE_6;                             /* 0E40, 0x1A004E40, CAM_A_IMGO_FH_SPARE_6 */
	CAM_REG_IMGO_FH_SPARE_7                         CAM_IMGO_FH_SPARE_7;                             /* 0E44, 0x1A004E44, CAM_A_IMGO_FH_SPARE_7 */
	CAM_REG_IMGO_FH_SPARE_8                         CAM_IMGO_FH_SPARE_8;                             /* 0E48, 0x1A004E48, CAM_A_IMGO_FH_SPARE_8 */
	CAM_REG_IMGO_FH_SPARE_9                         CAM_IMGO_FH_SPARE_9;                             /* 0E4C, 0x1A004E4C, CAM_A_IMGO_FH_SPARE_9 */
	CAM_REG_IMGO_FH_SPARE_10                        CAM_IMGO_FH_SPARE_10;                            /* 0E50, 0x1A004E50, CAM_A_IMGO_FH_SPARE_10 */
	CAM_REG_IMGO_FH_SPARE_11                        CAM_IMGO_FH_SPARE_11;                            /* 0E54, 0x1A004E54, CAM_A_IMGO_FH_SPARE_11 */
	CAM_REG_IMGO_FH_SPARE_12                        CAM_IMGO_FH_SPARE_12;                            /* 0E58, 0x1A004E58, CAM_A_IMGO_FH_SPARE_12 */
	CAM_REG_IMGO_FH_SPARE_13                        CAM_IMGO_FH_SPARE_13;                            /* 0E5C, 0x1A004E5C, CAM_A_IMGO_FH_SPARE_13 */
	CAM_REG_IMGO_FH_SPARE_14                        CAM_IMGO_FH_SPARE_14;                            /* 0E60, 0x1A004E60, CAM_A_IMGO_FH_SPARE_14 */
	CAM_REG_IMGO_FH_SPARE_15                        CAM_IMGO_FH_SPARE_15;                            /* 0E64, 0x1A004E64, CAM_A_IMGO_FH_SPARE_15 */
	CAM_REG_IMGO_FH_SPARE_16                        CAM_IMGO_FH_SPARE_16;                            /* 0E68, 0x1A004E68, CAM_A_IMGO_FH_SPARE_16 */
	UINT32                                          rsv_0E6C;                                        /* 0E6C, 0x1A004E6C */
	CAM_REG_RRZO_FH_SPARE_2                         CAM_RRZO_FH_SPARE_2;                             /* 0E70, 0x1A004E70, CAM_A_RRZO_FH_SPARE_2 */
	CAM_REG_RRZO_FH_SPARE_3                         CAM_RRZO_FH_SPARE_3;                             /* 0E74, 0x1A004E74, CAM_A_RRZO_FH_SPARE_3 */
	CAM_REG_RRZO_FH_SPARE_4                         CAM_RRZO_FH_SPARE_4;                             /* 0E78, 0x1A004E78, CAM_A_RRZO_FH_SPARE_4 */
	CAM_REG_RRZO_FH_SPARE_5                         CAM_RRZO_FH_SPARE_5;                             /* 0E7C, 0x1A004E7C, CAM_A_RRZO_FH_SPARE_5 */
	CAM_REG_RRZO_FH_SPARE_6                         CAM_RRZO_FH_SPARE_6;                             /* 0E80, 0x1A004E80, CAM_A_RRZO_FH_SPARE_6 */
	CAM_REG_RRZO_FH_SPARE_7                         CAM_RRZO_FH_SPARE_7;                             /* 0E84, 0x1A004E84, CAM_A_RRZO_FH_SPARE_7 */
	CAM_REG_RRZO_FH_SPARE_8                         CAM_RRZO_FH_SPARE_8;                             /* 0E88, 0x1A004E88, CAM_A_RRZO_FH_SPARE_8 */
	CAM_REG_RRZO_FH_SPARE_9                         CAM_RRZO_FH_SPARE_9;                             /* 0E8C, 0x1A004E8C, CAM_A_RRZO_FH_SPARE_9 */
	CAM_REG_RRZO_FH_SPARE_10                        CAM_RRZO_FH_SPARE_10;                            /* 0E90, 0x1A004E90, CAM_A_RRZO_FH_SPARE_10 */
	CAM_REG_RRZO_FH_SPARE_11                        CAM_RRZO_FH_SPARE_11;                            /* 0E94, 0x1A004E94, CAM_A_RRZO_FH_SPARE_11 */
	CAM_REG_RRZO_FH_SPARE_12                        CAM_RRZO_FH_SPARE_12;                            /* 0E98, 0x1A004E98, CAM_A_RRZO_FH_SPARE_12 */
	CAM_REG_RRZO_FH_SPARE_13                        CAM_RRZO_FH_SPARE_13;                            /* 0E9C, 0x1A004E9C, CAM_A_RRZO_FH_SPARE_13 */
	CAM_REG_RRZO_FH_SPARE_14                        CAM_RRZO_FH_SPARE_14;                            /* 0EA0, 0x1A004EA0, CAM_A_RRZO_FH_SPARE_14 */
	CAM_REG_RRZO_FH_SPARE_15                        CAM_RRZO_FH_SPARE_15;                            /* 0EA4, 0x1A004EA4, CAM_A_RRZO_FH_SPARE_15 */
	CAM_REG_RRZO_FH_SPARE_16                        CAM_RRZO_FH_SPARE_16;                            /* 0EA8, 0x1A004EA8, CAM_A_RRZO_FH_SPARE_16 */
	UINT32                                          rsv_0EAC;                                        /* 0EAC, 0x1A004EAC */
	CAM_REG_AAO_FH_SPARE_2                          CAM_AAO_FH_SPARE_2;                              /* 0EB0, 0x1A004EB0, CAM_A_AAO_FH_SPARE_2 */
	CAM_REG_AAO_FH_SPARE_3                          CAM_AAO_FH_SPARE_3;                              /* 0EB4, 0x1A004EB4, CAM_A_AAO_FH_SPARE_3 */
	CAM_REG_AAO_FH_SPARE_4                          CAM_AAO_FH_SPARE_4;                              /* 0EB8, 0x1A004EB8, CAM_A_AAO_FH_SPARE_4 */
	CAM_REG_AAO_FH_SPARE_5                          CAM_AAO_FH_SPARE_5;                              /* 0EBC, 0x1A004EBC, CAM_A_AAO_FH_SPARE_5 */
	CAM_REG_AAO_FH_SPARE_6                          CAM_AAO_FH_SPARE_6;                              /* 0EC0, 0x1A004EC0, CAM_A_AAO_FH_SPARE_6 */
	CAM_REG_AAO_FH_SPARE_7                          CAM_AAO_FH_SPARE_7;                              /* 0EC4, 0x1A004EC4, CAM_A_AAO_FH_SPARE_7 */
	CAM_REG_AAO_FH_SPARE_8                          CAM_AAO_FH_SPARE_8;                              /* 0EC8, 0x1A004EC8, CAM_A_AAO_FH_SPARE_8 */
	CAM_REG_AAO_FH_SPARE_9                          CAM_AAO_FH_SPARE_9;                              /* 0ECC, 0x1A004ECC, CAM_A_AAO_FH_SPARE_9 */
	CAM_REG_AAO_FH_SPARE_10                         CAM_AAO_FH_SPARE_10;                             /* 0ED0, 0x1A004ED0, CAM_A_AAO_FH_SPARE_10 */
	CAM_REG_AAO_FH_SPARE_11                         CAM_AAO_FH_SPARE_11;                             /* 0ED4, 0x1A004ED4, CAM_A_AAO_FH_SPARE_11 */
	CAM_REG_AAO_FH_SPARE_12                         CAM_AAO_FH_SPARE_12;                             /* 0ED8, 0x1A004ED8, CAM_A_AAO_FH_SPARE_12 */
	CAM_REG_AAO_FH_SPARE_13                         CAM_AAO_FH_SPARE_13;                             /* 0EDC, 0x1A004EDC, CAM_A_AAO_FH_SPARE_13 */
	CAM_REG_AAO_FH_SPARE_14                         CAM_AAO_FH_SPARE_14;                             /* 0EE0, 0x1A004EE0, CAM_A_AAO_FH_SPARE_14 */
	CAM_REG_AAO_FH_SPARE_15                         CAM_AAO_FH_SPARE_15;                             /* 0EE4, 0x1A004EE4, CAM_A_AAO_FH_SPARE_15 */
	CAM_REG_AAO_FH_SPARE_16                         CAM_AAO_FH_SPARE_16;                             /* 0EE8, 0x1A004EE8, CAM_A_AAO_FH_SPARE_16 */
	UINT32                                          rsv_0EEC;                                        /* 0EEC, 0x1A004EEC */
	CAM_REG_AFO_FH_SPARE_2                          CAM_AFO_FH_SPARE_2;                              /* 0EF0, 0x1A004EF0, CAM_A_AFO_FH_SPARE_2 */
	CAM_REG_AFO_FH_SPARE_3                          CAM_AFO_FH_SPARE_3;                              /* 0EF4, 0x1A004EF4, CAM_A_AFO_FH_SPARE_3 */
	CAM_REG_AFO_FH_SPARE_4                          CAM_AFO_FH_SPARE_4;                              /* 0EF8, 0x1A004EF8, CAM_A_AFO_FH_SPARE_4 */
	CAM_REG_AFO_FH_SPARE_5                          CAM_AFO_FH_SPARE_5;                              /* 0EFC, 0x1A004EFC, CAM_A_AFO_FH_SPARE_5 */
	CAM_REG_AFO_FH_SPARE_6                          CAM_AFO_FH_SPARE_6;                              /* 0F00, 0x1A004F00, CAM_A_AFO_FH_SPARE_6 */
	CAM_REG_AFO_FH_SPARE_7                          CAM_AFO_FH_SPARE_7;                              /* 0F04, 0x1A004F04, CAM_A_AFO_FH_SPARE_7 */
	CAM_REG_AFO_FH_SPARE_8                          CAM_AFO_FH_SPARE_8;                              /* 0F08, 0x1A004F08, CAM_A_AFO_FH_SPARE_8 */
	CAM_REG_AFO_FH_SPARE_9                          CAM_AFO_FH_SPARE_9;                              /* 0F0C, 0x1A004F0C, CAM_A_AFO_FH_SPARE_9 */
	CAM_REG_AFO_FH_SPARE_10                         CAM_AFO_FH_SPARE_10;                             /* 0F10, 0x1A004F10, CAM_A_AFO_FH_SPARE_10 */
	CAM_REG_AFO_FH_SPARE_11                         CAM_AFO_FH_SPARE_11;                             /* 0F14, 0x1A004F14, CAM_A_AFO_FH_SPARE_11 */
	CAM_REG_AFO_FH_SPARE_12                         CAM_AFO_FH_SPARE_12;                             /* 0F18, 0x1A004F18, CAM_A_AFO_FH_SPARE_12 */
	CAM_REG_AFO_FH_SPARE_13                         CAM_AFO_FH_SPARE_13;                             /* 0F1C, 0x1A004F1C, CAM_A_AFO_FH_SPARE_13 */
	CAM_REG_AFO_FH_SPARE_14                         CAM_AFO_FH_SPARE_14;                             /* 0F20, 0x1A004F20, CAM_A_AFO_FH_SPARE_14 */
	CAM_REG_AFO_FH_SPARE_15                         CAM_AFO_FH_SPARE_15;                             /* 0F24, 0x1A004F24, CAM_A_AFO_FH_SPARE_15 */
	CAM_REG_AFO_FH_SPARE_16                         CAM_AFO_FH_SPARE_16;                             /* 0F28, 0x1A004F28, CAM_A_AFO_FH_SPARE_16 */
	UINT32                                          rsv_0F2C;                                        /* 0F2C, 0x1A004F2C */
	CAM_REG_LCSO_FH_SPARE_2                         CAM_LCSO_FH_SPARE_2;                             /* 0F30, 0x1A004F30, CAM_A_LCSO_FH_SPARE_2 */
	CAM_REG_LCSO_FH_SPARE_3                         CAM_LCSO_FH_SPARE_3;                             /* 0F34, 0x1A004F34, CAM_A_LCSO_FH_SPARE_3 */
	CAM_REG_LCSO_FH_SPARE_4                         CAM_LCSO_FH_SPARE_4;                             /* 0F38, 0x1A004F38, CAM_A_LCSO_FH_SPARE_4 */
	CAM_REG_LCSO_FH_SPARE_5                         CAM_LCSO_FH_SPARE_5;                             /* 0F3C, 0x1A004F3C, CAM_A_LCSO_FH_SPARE_5 */
	CAM_REG_LCSO_FH_SPARE_6                         CAM_LCSO_FH_SPARE_6;                             /* 0F40, 0x1A004F40, CAM_A_LCSO_FH_SPARE_6 */
	CAM_REG_LCSO_FH_SPARE_7                         CAM_LCSO_FH_SPARE_7;                             /* 0F44, 0x1A004F44, CAM_A_LCSO_FH_SPARE_7 */
	CAM_REG_LCSO_FH_SPARE_8                         CAM_LCSO_FH_SPARE_8;                             /* 0F48, 0x1A004F48, CAM_A_LCSO_FH_SPARE_8 */
	CAM_REG_LCSO_FH_SPARE_9                         CAM_LCSO_FH_SPARE_9;                             /* 0F4C, 0x1A004F4C, CAM_A_LCSO_FH_SPARE_9 */
	CAM_REG_LCSO_FH_SPARE_10                        CAM_LCSO_FH_SPARE_10;                            /* 0F50, 0x1A004F50, CAM_A_LCSO_FH_SPARE_10 */
	CAM_REG_LCSO_FH_SPARE_11                        CAM_LCSO_FH_SPARE_11;                            /* 0F54, 0x1A004F54, CAM_A_LCSO_FH_SPARE_11 */
	CAM_REG_LCSO_FH_SPARE_12                        CAM_LCSO_FH_SPARE_12;                            /* 0F58, 0x1A004F58, CAM_A_LCSO_FH_SPARE_12 */
	CAM_REG_LCSO_FH_SPARE_13                        CAM_LCSO_FH_SPARE_13;                            /* 0F5C, 0x1A004F5C, CAM_A_LCSO_FH_SPARE_13 */
	CAM_REG_LCSO_FH_SPARE_14                        CAM_LCSO_FH_SPARE_14;                            /* 0F60, 0x1A004F60, CAM_A_LCSO_FH_SPARE_14 */
	CAM_REG_LCSO_FH_SPARE_15                        CAM_LCSO_FH_SPARE_15;                            /* 0F64, 0x1A004F64, CAM_A_LCSO_FH_SPARE_15 */
	CAM_REG_LCSO_FH_SPARE_16                        CAM_LCSO_FH_SPARE_16;                            /* 0F68, 0x1A004F68, CAM_A_LCSO_FH_SPARE_16 */
	UINT32                                          rsv_0F6C;                                        /* 0F6C, 0x1A004F6C */
	CAM_REG_UFEO_FH_SPARE_2                         CAM_UFEO_FH_SPARE_2;                             /* 0F70, 0x1A004F70, CAM_A_UFEO_FH_SPARE_2 */
	CAM_REG_UFEO_FH_SPARE_3                         CAM_UFEO_FH_SPARE_3;                             /* 0F74, 0x1A004F74, CAM_A_UFEO_FH_SPARE_3 */
	CAM_REG_UFEO_FH_SPARE_4                         CAM_UFEO_FH_SPARE_4;                             /* 0F78, 0x1A004F78, CAM_A_UFEO_FH_SPARE_4 */
	CAM_REG_UFEO_FH_SPARE_5                         CAM_UFEO_FH_SPARE_5;                             /* 0F7C, 0x1A004F7C, CAM_A_UFEO_FH_SPARE_5 */
	CAM_REG_UFEO_FH_SPARE_6                         CAM_UFEO_FH_SPARE_6;                             /* 0F80, 0x1A004F80, CAM_A_UFEO_FH_SPARE_6 */
	CAM_REG_UFEO_FH_SPARE_7                         CAM_UFEO_FH_SPARE_7;                             /* 0F84, 0x1A004F84, CAM_A_UFEO_FH_SPARE_7 */
	CAM_REG_UFEO_FH_SPARE_8                         CAM_UFEO_FH_SPARE_8;                             /* 0F88, 0x1A004F88, CAM_A_UFEO_FH_SPARE_8 */
	CAM_REG_UFEO_FH_SPARE_9                         CAM_UFEO_FH_SPARE_9;                             /* 0F8C, 0x1A004F8C, CAM_A_UFEO_FH_SPARE_9 */
	CAM_REG_UFEO_FH_SPARE_10                        CAM_UFEO_FH_SPARE_10;                            /* 0F90, 0x1A004F90, CAM_A_UFEO_FH_SPARE_10 */
	CAM_REG_UFEO_FH_SPARE_11                        CAM_UFEO_FH_SPARE_11;                            /* 0F94, 0x1A004F94, CAM_A_UFEO_FH_SPARE_11 */
	CAM_REG_UFEO_FH_SPARE_12                        CAM_UFEO_FH_SPARE_12;                            /* 0F98, 0x1A004F98, CAM_A_UFEO_FH_SPARE_12 */
	CAM_REG_UFEO_FH_SPARE_13                        CAM_UFEO_FH_SPARE_13;                            /* 0F9C, 0x1A004F9C, CAM_A_UFEO_FH_SPARE_13 */
	CAM_REG_UFEO_FH_SPARE_14                        CAM_UFEO_FH_SPARE_14;                            /* 0FA0, 0x1A004FA0, CAM_A_UFEO_FH_SPARE_14 */
	CAM_REG_UFEO_FH_SPARE_15                        CAM_UFEO_FH_SPARE_15;                            /* 0FA4, 0x1A004FA4, CAM_A_UFEO_FH_SPARE_15 */
	CAM_REG_UFEO_FH_SPARE_16                        CAM_UFEO_FH_SPARE_16;                            /* 0FA8, 0x1A004FA8, CAM_A_UFEO_FH_SPARE_16 */
	UINT32                                          rsv_0FAC;                                        /* 0FAC, 0x1A004FAC */
	CAM_REG_PDO_FH_SPARE_2                          CAM_PDO_FH_SPARE_2;                              /* 0FB0, 0x1A004FB0, CAM_A_PDO_FH_SPARE_2 */
	CAM_REG_PDO_FH_SPARE_3                          CAM_PDO_FH_SPARE_3;                              /* 0FB4, 0x1A004FB4, CAM_A_PDO_FH_SPARE_3 */
	CAM_REG_PDO_FH_SPARE_4                          CAM_PDO_FH_SPARE_4;                              /* 0FB8, 0x1A004FB8, CAM_A_PDO_FH_SPARE_4 */
	CAM_REG_PDO_FH_SPARE_5                          CAM_PDO_FH_SPARE_5;                              /* 0FBC, 0x1A004FBC, CAM_A_PDO_FH_SPARE_5 */
	CAM_REG_PDO_FH_SPARE_6                          CAM_PDO_FH_SPARE_6;                              /* 0FC0, 0x1A004FC0, CAM_A_PDO_FH_SPARE_6 */
	CAM_REG_PDO_FH_SPARE_7                          CAM_PDO_FH_SPARE_7;                              /* 0FC4, 0x1A004FC4, CAM_A_PDO_FH_SPARE_7 */
	CAM_REG_PDO_FH_SPARE_8                          CAM_PDO_FH_SPARE_8;                              /* 0FC8, 0x1A004FC8, CAM_A_PDO_FH_SPARE_8 */
	CAM_REG_PDO_FH_SPARE_9                          CAM_PDO_FH_SPARE_9;                              /* 0FCC, 0x1A004FCC, CAM_A_PDO_FH_SPARE_9 */
	CAM_REG_PDO_FH_SPARE_10                         CAM_PDO_FH_SPARE_10;                             /* 0FD0, 0x1A004FD0, CAM_A_PDO_FH_SPARE_10 */
	CAM_REG_PDO_FH_SPARE_11                         CAM_PDO_FH_SPARE_11;                             /* 0FD4, 0x1A004FD4, CAM_A_PDO_FH_SPARE_11 */
	CAM_REG_PDO_FH_SPARE_12                         CAM_PDO_FH_SPARE_12;                             /* 0FD8, 0x1A004FD8, CAM_A_PDO_FH_SPARE_12 */
	CAM_REG_PDO_FH_SPARE_13                         CAM_PDO_FH_SPARE_13;                             /* 0FDC, 0x1A004FDC, CAM_A_PDO_FH_SPARE_13 */
	CAM_REG_PDO_FH_SPARE_14                         CAM_PDO_FH_SPARE_14;                             /* 0FE0, 0x1A004FE0, CAM_A_PDO_FH_SPARE_14 */
	CAM_REG_PDO_FH_SPARE_15                         CAM_PDO_FH_SPARE_15;                             /* 0FE4, 0x1A004FE4, CAM_A_PDO_FH_SPARE_15 */
	CAM_REG_PDO_FH_SPARE_16                         CAM_PDO_FH_SPARE_16;                             /* 0FE8, 0x1A004FE8, CAM_A_PDO_FH_SPARE_16 */
	UINT32                                          rsv_0FEC[5];                                     /* 0FEC..0FFF, 1A004FEC..1A004FFF */
    //below para is over 0x1000, for CQ baseaddr only.
    //in order to reduce memory space, because of inner register is at  + 0x8000, a special flag will be set when over 0x1000.
    MUINT32                                         CAM_CQ_THRE0_ADDR_INNER;                        // should map to 0x4168 + 0x8000,  0E00
    MUINT32                                         dummy0[5];
    MUINT32                                         CAM_CQ_THRE1_ADDR_INNER;                        // should map to 0x4174 + 0x8000,  0E18
    MUINT32                                         dummy1[2];
    MUINT32                                         CAM_CQ_THRE2_ADDR_INNER;                        // should map to 0x4180 + 0x8000,  0E24
    MUINT32                                         dummy2[2];
    MUINT32                                         CAM_CQ_THRE3_ADDR_INNER;                        // should map to 0x418c + 0x8000,  0E30
    MUINT32                                         dummy3[2];
    MUINT32                                         CAM_CQ_THRE4_ADDR_INNER;                        // should map to 0x4198 + 0x8000,  0E3C
    MUINT32                                         dummy4[2];
    MUINT32                                         CAM_CQ_THRE5_ADDR_INNER;                        // should map to 0x41a4 + 0x8000,  0E48
    MUINT32                                         dummy5[2];
    MUINT32                                         CAM_CQ_THRE6_ADDR_INNER;                        // should map to 0x41b0 + 0x8000,  0E54
    MUINT32                                         dummy6[2];
    MUINT32                                         CAM_CQ_THRE7_ADDR_INNER;                        // should map to 0x41bc + 0x8000,  0E60
    MUINT32                                         dummy7[2];
    MUINT32                                         CAM_CQ_THRE8_ADDR_INNER;                        // should map to 0x41c8 + 0x8000,  0E6C
    MUINT32                                         dummy8[2];
    MUINT32                                         CAM_CQ_THRE9_ADDR_INNER;                        // should map to 0x41d4 + 0x8000,  0E78
    MUINT32                                         dummy9[2];
    MUINT32                                         CAM_CQ_THRE10_ADDR_INNER;                       // should map to 0x41e0 + 0x8000,  0E84
    MUINT32                                         dummy10[2];
    MUINT32                                         CAM_CQ_THRE11_ADDR_INNER;                       // should map to 0x41ec + 0x8000,  0E90         /* 0DEC..0DFF, 1A004DEC..1A004DFF */
    MUINT32                                         dummy11[2];
    MUINT32                                         CAM_CQ_THRE12_ADDR_INNER;                       // should map to 0x41f8 + 0x8000,  0E9C
}cam_reg_t;

typedef volatile struct _camsv_reg_t_	/* 0x1A050000..0x1A050EBE */
{
	CAMSV_REG_TOP_DEBUG                             CAMSV_TOP_DEBUG;                                 /* 0000, 0x1A050000, CAMSV_0_TOP_DEBUG */
	UINT32                                          rsv_0004[3];                                     /* 0004..000F, 0x1A050004..1A05000F */
	CAMSV_REG_MODULE_EN                             CAMSV_MODULE_EN;                                 /* 0010, 0x1A050010, CAMSV_0_MODULE_EN */
	CAMSV_REG_FMT_SEL                               CAMSV_FMT_SEL;                                   /* 0014, 0x1A050014, CAMSV_0_FMT_SEL */
	CAMSV_REG_INT_EN                                CAMSV_INT_EN;                                    /* 0018, 0x1A050018, CAMSV_0_INT_EN */
	CAMSV_REG_INT_STATUS                            CAMSV_INT_STATUS;                                /* 001C, 0x1A05001C, CAMSV_0_INT_STATUS */
	CAMSV_REG_SW_CTL                                CAMSV_SW_CTL;                                    /* 0020, 0x1A050020, CAMSV_0_SW_CTL */
	CAMSV_REG_SPARE0                                CAMSV_SPARE0;                                    /* 0024, 0x1A050024, CAMSV_0_SPARE0 */
	CAMSV_REG_SPARE1                                CAMSV_SPARE1;                                    /* 0028, 0x1A050028, CAMSV_0_SPARE1 */
	CAMSV_REG_IMGO_FBC                              CAMSV_IMGO_FBC;                                  /* 002C, 0x1A05002C, CAMSV_0_IMGO_FBC */
	CAMSV_REG_CLK_EN                                CAMSV_CLK_EN;                                    /* 0030, 0x1A050030, CAMSV_0_CLK_EN */
	CAMSV_REG_DBG_SET                               CAMSV_DBG_SET;                                   /* 0034, 0x1A050034, CAMSV_0_DBG_SET */
	CAMSV_REG_DBG_PORT                              CAMSV_DBG_PORT;                                  /* 0038, 0x1A050038, CAMSV_0_DBG_PORT */
	CAMSV_REG_DATE_CODE                             CAMSV_DATE_CODE;                                 /* 003C, 0x1A05003C, CAMSV_0_DATE_CODE */
	CAMSV_REG_PROJ_CODE                             CAMSV_PROJ_CODE;                                 /* 0040, 0x1A050040, CAMSV_0_PROJ_CODE */
	CAMSV_REG_DCM_DIS                               CAMSV_DCM_DIS;                                   /* 0044, 0x1A050044, CAMSV_0_DCM_DIS */
	CAMSV_REG_DCM_STATUS                            CAMSV_DCM_STATUS;                                /* 0048, 0x1A050048, CAMSV_0_DCM_STATUS */
	CAMSV_REG_PAK                                   CAMSV_PAK;                                       /* 004C, 0x1A05004C, CAMSV_0_PAK */
	UINT32                                          rsv_0050[48];                                    /* 0050..010F, 0x1A050050..1A05010F */
	CAMSV_REG_FBC_IMGO_CTL1                         CAMSV_FBC_IMGO_CTL1;                             /* 0110, 0x1A050110, CAMSV_0_FBC_IMGO_CTL1 */
	CAMSV_REG_FBC_IMGO_CTL2                         CAMSV_FBC_IMGO_CTL2;                             /* 0114, 0x1A050114, CAMSV_0_FBC_IMGO_CTL2 */
	CAMSV_REG_FBC_IMGO_ENQ_ADDR                     CAMSV_FBC_IMGO_ENQ_ADDR;                         /* 0118, 0x1A050118, CAMSV_0_FBC_IMGO_ENQ_ADDR */
	CAMSV_REG_FBC_IMGO_CUR_ADDR                     CAMSV_FBC_IMGO_CUR_ADDR;                         /* 011C, 0x1A05011C, CAMSV_0_FBC_IMGO_CUR_ADDR */
	UINT32                                          rsv_0120[56];                                    /* 0120..01FF, 0x1A050120..1A0501FF */
	CAMSV_REG_DMA_SOFT_RSTSTAT                      CAMSV_DMA_SOFT_RSTSTAT;                          /* 0200, 0x1A050200, CAMSV_0_DMA_SOFT_RSTSTAT */
	CAMSV_REG_CQ0I_BASE_ADDR                        CAMSV_CQ0I_BASE_ADDR;                            /* 0204, 0x1A050204, CAMSV_0_CQ0I_BASE_ADDR */
	CAMSV_REG_CQ0I_XSIZE                            CAMSV_CQ0I_XSIZE;                                /* 0208, 0x1A050208, CAMSV_0_CQ0I_XSIZE */
	CAMSV_REG_VERTICAL_FLIP_EN                      CAMSV_VERTICAL_FLIP_EN;                          /* 020C, 0x1A05020C, CAMSV_0_VERTICAL_FLIP_EN */
	CAMSV_REG_DMA_SOFT_RESET                        CAMSV_DMA_SOFT_RESET;                            /* 0210, 0x1A050210, CAMSV_0_DMA_SOFT_RESET */
	CAMSV_REG_LAST_ULTRA_EN                         CAMSV_LAST_ULTRA_EN;                             /* 0214, 0x1A050214, CAMSV_0_LAST_ULTRA_EN */
	CAMSV_REG_SPECIAL_FUN_EN                        CAMSV_SPECIAL_FUN_EN;                            /* 0218, 0x1A050218, CAMSV_0_SPECIAL_FUN_EN */
	UINT32                                          rsv_021C;                                        /* 021C, 0x1A05021C */
	CAMSV_REG_IMGO_BASE_ADDR                        CAMSV_IMGO_BASE_ADDR;                            /* 0220, 0x1A050220, CAMSV_0_IMGO_BASE_ADDR */
	UINT32                                          rsv_0224;                                        /* 0224, 0x1A050224 */
	CAMSV_REG_IMGO_OFST_ADDR                        CAMSV_IMGO_OFST_ADDR;                            /* 0228, 0x1A050228, CAMSV_0_IMGO_OFST_ADDR */
	UINT32                                          rsv_022C;                                        /* 022C, 0x1A05022C */
	CAMSV_REG_IMGO_XSIZE                            CAMSV_IMGO_XSIZE;                                /* 0230, 0x1A050230, CAMSV_0_IMGO_XSIZE */
	CAMSV_REG_IMGO_YSIZE                            CAMSV_IMGO_YSIZE;                                /* 0234, 0x1A050234, CAMSV_0_IMGO_YSIZE */
	CAMSV_REG_IMGO_STRIDE                           CAMSV_IMGO_STRIDE;                               /* 0238, 0x1A050238, CAMSV_0_IMGO_STRIDE */
	CAMSV_REG_IMGO_CON                              CAMSV_IMGO_CON;                                  /* 023C, 0x1A05023C, CAMSV_0_IMGO_CON */
	CAMSV_REG_IMGO_CON2                             CAMSV_IMGO_CON2;                                 /* 0240, 0x1A050240, CAMSV_0_IMGO_CON2 */
	CAMSV_REG_IMGO_CON3                             CAMSV_IMGO_CON3;                                 /* 0244, 0x1A050244, CAMSV_0_IMGO_CON3 */
	CAMSV_REG_IMGO_CROP                             CAMSV_IMGO_CROP;                                 /* 0248, 0x1A050248, CAMSV_0_IMGO_CROP */
	UINT32                                          rsv_024C[125];                                   /* 024C..043F, 0x1A05024C..1A05043F */
	CAMSV_REG_DMA_ERR_CTRL                          CAMSV_DMA_ERR_CTRL;                              /* 0440, 0x1A050440, CAMSV_0_DMA_ERR_CTRL */
	CAMSV_REG_IMGO_ERR_STAT                         CAMSV_IMGO_ERR_STAT;                             /* 0444, 0x1A050444, CAMSV_0_IMGO_ERR_STAT */
	UINT32                                          rsv_0448[10];                                    /* 0448..046F, 0x1A050448..1A05046F */
	CAMSV_REG_DMA_DEBUG_ADDR                        CAMSV_DMA_DEBUG_ADDR;                            /* 0470, 0x1A050470, CAMSV_0_DMA_DEBUG_ADDR */
	CAMSV_REG_DMA_RSV1                              CAMSV_DMA_RSV1;                                  /* 0474, 0x1A050474, CAMSV_0_DMA_RSV1 */
	CAMSV_REG_DMA_RSV2                              CAMSV_DMA_RSV2;                                  /* 0478, 0x1A050478, CAMSV_0_DMA_RSV2 */
	CAMSV_REG_DMA_RSV3                              CAMSV_DMA_RSV3;                                  /* 047C, 0x1A05047C, CAMSV_0_DMA_RSV3 */
	CAMSV_REG_DMA_RSV4                              CAMSV_DMA_RSV4;                                  /* 0480, 0x1A050480, CAMSV_0_DMA_RSV4 */
	CAMSV_REG_DMA_RSV5                              CAMSV_DMA_RSV5;                                  /* 0484, 0x1A050484, CAMSV_0_DMA_RSV5 */
	CAMSV_REG_DMA_RSV6                              CAMSV_DMA_RSV6;                                  /* 0488, 0x1A050488, CAMSV_0_DMA_RSV6 */
	CAMSV_REG_DMA_DEBUG_SEL                         CAMSV_DMA_DEBUG_SEL;                             /* 048C, 0x1A05048C, CAMSV_0_DMA_DEBUG_SEL */
	CAMSV_REG_DMA_BW_SELF_TEST                      CAMSV_DMA_BW_SELF_TEST;                          /* 0490, 0x1A050490, CAMSV_0_DMA_BW_SELF_TEST */
	UINT32                                          rsv_0494[27];                                    /* 0494..04FF, 0x1A050494..1A0504FF */
	CAMSV_REG_TG_SEN_MODE                           CAMSV_TG_SEN_MODE;                               /* 0500, 0x1A050500, CAMSV_0_TG_SEN_MODE */
	CAMSV_REG_TG_VF_CON                             CAMSV_TG_VF_CON;                                 /* 0504, 0x1A050504, CAMSV_0_TG_VF_CON */
	CAMSV_REG_TG_SEN_GRAB_PXL                       CAMSV_TG_SEN_GRAB_PXL;                           /* 0508, 0x1A050508, CAMSV_0_TG_SEN_GRAB_PXL */
	CAMSV_REG_TG_SEN_GRAB_LIN                       CAMSV_TG_SEN_GRAB_LIN;                           /* 050C, 0x1A05050C, CAMSV_0_TG_SEN_GRAB_LIN */
	CAMSV_REG_TG_PATH_CFG                           CAMSV_TG_PATH_CFG;                               /* 0510, 0x1A050510, CAMSV_0_TG_PATH_CFG */
	CAMSV_REG_TG_MEMIN_CTL                          CAMSV_TG_MEMIN_CTL;                              /* 0514, 0x1A050514, CAMSV_0_TG_MEMIN_CTL */
	CAMSV_REG_TG_INT1                               CAMSV_TG_INT1;                                   /* 0518, 0x1A050518, CAMSV_0_TG_INT1 */
	CAMSV_REG_TG_INT2                               CAMSV_TG_INT2;                                   /* 051C, 0x1A05051C, CAMSV_0_TG_INT2 */
	CAMSV_REG_TG_SOF_CNT                            CAMSV_TG_SOF_CNT;                                /* 0520, 0x1A050520, CAMSV_0_TG_SOF_CNT */
	CAMSV_REG_TG_SOT_CNT                            CAMSV_TG_SOT_CNT;                                /* 0524, 0x1A050524, CAMSV_0_TG_SOT_CNT */
	CAMSV_REG_TG_EOT_CNT                            CAMSV_TG_EOT_CNT;                                /* 0528, 0x1A050528, CAMSV_0_TG_EOT_CNT */
	CAMSV_REG_TG_ERR_CTL                            CAMSV_TG_ERR_CTL;                                /* 052C, 0x1A05052C, CAMSV_0_TG_ERR_CTL */
	CAMSV_REG_TG_DAT_NO                             CAMSV_TG_DAT_NO;                                 /* 0530, 0x1A050530, CAMSV_0_TG_DAT_NO */
	CAMSV_REG_TG_FRM_CNT_ST                         CAMSV_TG_FRM_CNT_ST;                             /* 0534, 0x1A050534, CAMSV_0_TG_FRM_CNT_ST */
	CAMSV_REG_TG_FRMSIZE_ST                         CAMSV_TG_FRMSIZE_ST;                             /* 0538, 0x1A050538, CAMSV_0_TG_FRMSIZE_ST */
	CAMSV_REG_TG_INTER_ST                           CAMSV_TG_INTER_ST;                               /* 053C, 0x1A05053C, CAMSV_0_TG_INTER_ST */
	CAMSV_REG_TG_FLASHA_CTL                         CAMSV_TG_FLASHA_CTL;                             /* 0540, 0x1A050540, CAMSV_0_TG_FLASHA_CTL */
	CAMSV_REG_TG_FLASHA_LINE_CNT                    CAMSV_TG_FLASHA_LINE_CNT;                        /* 0544, 0x1A050544, CAMSV_0_TG_FLASHA_LINE_CNT */
	CAMSV_REG_TG_FLASHA_POS                         CAMSV_TG_FLASHA_POS;                             /* 0548, 0x1A050548, CAMSV_0_TG_FLASHA_POS */
	CAMSV_REG_TG_FLASHB_CTL                         CAMSV_TG_FLASHB_CTL;                             /* 054C, 0x1A05054C, CAMSV_0_TG_FLASHB_CTL */
	CAMSV_REG_TG_FLASHB_LINE_CNT                    CAMSV_TG_FLASHB_LINE_CNT;                        /* 0550, 0x1A050550, CAMSV_0_TG_FLASHB_LINE_CNT */
	CAMSV_REG_TG_FLASHB_POS                         CAMSV_TG_FLASHB_POS;                             /* 0554, 0x1A050554, CAMSV_0_TG_FLASHB_POS */
	CAMSV_REG_TG_FLASHB_POS1                        CAMSV_TG_FLASHB_POS1;                            /* 0558, 0x1A050558, CAMSV_0_TG_FLASHB_POS1 */
	UINT32                                          rsv_055C;                                        /* 055C, 0x1A05055C */
	CAMSV_REG_TG_I2C_CQ_TRIG                        CAMSV_TG_I2C_CQ_TRIG;                            /* 0560, 0x1A050560, CAMSV_0_TG_I2C_CQ_TRIG */
	CAMSV_REG_TG_CQ_TIMING                          CAMSV_TG_CQ_TIMING;                              /* 0564, 0x1A050564, CAMSV_0_TG_CQ_TIMING */
	CAMSV_REG_TG_CQ_NUM                             CAMSV_TG_CQ_NUM;                                 /* 0568, 0x1A050568, CAMSV_0_TG_CQ_NUM */
	UINT32                                          rsv_056C;                                        /* 056C, 0x1A05056C */
	CAMSV_REG_TG_TIME_STAMP                         CAMSV_TG_TIME_STAMP;                             /* 0570, 0x1A050570, CAMSV_0_TG_TIME_STAMP */
	CAMSV_REG_TG_SUB_PERIOD                         CAMSV_TG_SUB_PERIOD;                             /* 0574, 0x1A050574, CAMSV_0_TG_SUB_PERIOD */
	CAMSV_REG_TG_DAT_NO_R                           CAMSV_TG_DAT_NO_R;                               /* 0578, 0x1A050578, CAMSV_0_TG_DAT_NO_R */
	CAMSV_REG_TG_FRMSIZE_ST_R                       CAMSV_TG_FRMSIZE_ST_R;                           /* 057C, 0x1A05057C, CAMSV_0_TG_FRMSIZE_ST_R */
	UINT32                                          rsv_0580[544];                                   /* 0580..0DFF, 0x1A050580..1A050DFF */
	CAMSV_REG_DMA_FRAME_HEADER_EN                   CAMSV_DMA_FRAME_HEADER_EN;                       /* 0E00, 0x1A050E00, CAMSV_0_DMA_FRAME_HEADER_EN */
	CAMSV_REG_IMGO_FH_BASE_ADDR                     CAMSV_IMGO_FH_BASE_ADDR;                         /* 0E04, 0x1A050E04, CAMSV_0_IMGO_FH_BASE_ADDR */
	CAMSV_REG_RRZO_FH_BASE_ADDR                     CAMSV_RRZO_FH_BASE_ADDR;                         /* 0E08, 0x1A050E08, CAMSV_0_RRZO_FH_BASE_ADDR */
	CAMSV_REG_AAO_FH_BASE_ADDR                      CAMSV_AAO_FH_BASE_ADDR;                          /* 0E0C, 0x1A050E0C, CAMSV_0_AAO_FH_BASE_ADDR */
	CAMSV_REG_AFO_FH_BASE_ADDR                      CAMSV_AFO_FH_BASE_ADDR;                          /* 0E10, 0x1A050E10, CAMSV_0_AFO_FH_BASE_ADDR */
	CAMSV_REG_LCSO_FH_BASE_ADDR                     CAMSV_LCSO_FH_BASE_ADDR;                         /* 0E14, 0x1A050E14, CAMSV_0_LCSO_FH_BASE_ADDR */
	CAMSV_REG_UFEO_FH_BASE_ADDR                     CAMSV_UFEO_FH_BASE_ADDR;                         /* 0E18, 0x1A050E18, CAMSV_0_UFEO_FH_BASE_ADDR */
	CAMSV_REG_PDO_FH_BASE_ADDR                      CAMSV_PDO_FH_BASE_ADDR;                          /* 0E1C, 0x1A050E1C, CAMSV_0_PDO_FH_BASE_ADDR */
	UINT32                                          rsv_0E20[4];                                     /* 0E20..0E2F, 0x1A050E20..1A050E2F */
	CAMSV_REG_IMGO_FH_SPARE_2                       CAMSV_IMGO_FH_SPARE_2;                           /* 0E30, 0x1A050E30, CAMSV_0_IMGO_FH_SPARE_2 */
	CAMSV_REG_IMGO_FH_SPARE_3                       CAMSV_IMGO_FH_SPARE_3;                           /* 0E34, 0x1A050E34, CAMSV_0_IMGO_FH_SPARE_3 */
	CAMSV_REG_IMGO_FH_SPARE_4                       CAMSV_IMGO_FH_SPARE_4;                           /* 0E38, 0x1A050E38, CAMSV_0_IMGO_FH_SPARE_4 */
	CAMSV_REG_IMGO_FH_SPARE_5                       CAMSV_IMGO_FH_SPARE_5;                           /* 0E3C, 0x1A050E3C, CAMSV_0_IMGO_FH_SPARE_5 */
	CAMSV_REG_IMGO_FH_SPARE_6                       CAMSV_IMGO_FH_SPARE_6;                           /* 0E40, 0x1A050E40, CAMSV_0_IMGO_FH_SPARE_6 */
	CAMSV_REG_IMGO_FH_SPARE_7                       CAMSV_IMGO_FH_SPARE_7;                           /* 0E44, 0x1A050E44, CAMSV_0_IMGO_FH_SPARE_7 */
	CAMSV_REG_IMGO_FH_SPARE_8                       CAMSV_IMGO_FH_SPARE_8;                           /* 0E48, 0x1A050E48, CAMSV_0_IMGO_FH_SPARE_8 */
	CAMSV_REG_IMGO_FH_SPARE_9                       CAMSV_IMGO_FH_SPARE_9;                           /* 0E4C, 0x1A050E4C, CAMSV_0_IMGO_FH_SPARE_9 */
	CAMSV_REG_IMGO_FH_SPARE_10                      CAMSV_IMGO_FH_SPARE_10;                          /* 0E50, 0x1A050E50, CAMSV_0_IMGO_FH_SPARE_10 */
	CAMSV_REG_IMGO_FH_SPARE_11                      CAMSV_IMGO_FH_SPARE_11;                          /* 0E54, 0x1A050E54, CAMSV_0_IMGO_FH_SPARE_11 */
	CAMSV_REG_IMGO_FH_SPARE_12                      CAMSV_IMGO_FH_SPARE_12;                          /* 0E58, 0x1A050E58, CAMSV_0_IMGO_FH_SPARE_12 */
	CAMSV_REG_IMGO_FH_SPARE_13                      CAMSV_IMGO_FH_SPARE_13;                          /* 0E5C, 0x1A050E5C, CAMSV_0_IMGO_FH_SPARE_13 */
	CAMSV_REG_IMGO_FH_SPARE_14                      CAMSV_IMGO_FH_SPARE_14;                          /* 0E60, 0x1A050E60, CAMSV_0_IMGO_FH_SPARE_14 */
	CAMSV_REG_IMGO_FH_SPARE_15                      CAMSV_IMGO_FH_SPARE_15;                          /* 0E64, 0x1A050E64, CAMSV_0_IMGO_FH_SPARE_15 */
	CAMSV_REG_IMGO_FH_SPARE_16                      CAMSV_IMGO_FH_SPARE_16;                          /* 0E68, 0x1A050E68, CAMSV_0_IMGO_FH_SPARE_16 */
	UINT32                                          rsv_0E6C[20];                                    /* 0E6C..0EBE, 1A050E6C..1A050EBE */
}camsv_reg_t;
#if 0
typedef volatile struct _seninf_reg_t_	/* 0x1A040000..0x1A041DAB */
{
	SENINF_REG_TOP_CTRL                             SENINF_TOP_CTRL;                                 /* 0000, 0x1A040000 */
	SENINF_REG_TOP_CMODEL_PAR                       SENINF_TOP_CMODEL_PAR;                           /* 0004, 0x1A040004 */
	SENINF_REG_TOP_MUX_CTRL                         SENINF_TOP_MUX_CTRL;                             /* 0008, 0x1A040008 */
	UINT32                                          rsv_000C[45];                                    /* 000C..00BF, 0x1A04000C..1A0400BF */
	SENINF_REG_N3D_CTL                              SENINF_N3D_CTL;                                  /* 00C0, 0x1A0400C0 */
	SENINF_REG_N3D_POS                              SENINF_N3D_POS;                                  /* 00C4, 0x1A0400C4 */
	SENINF_REG_N3D_TRIG                             SENINF_N3D_TRIG;                                 /* 00C8, 0x1A0400C8 */
	SENINF_REG_N3D_INT                              SENINF_N3D_INT;                                  /* 00CC, 0x1A0400CC */
	SENINF_REG_N3D_CNT0                             SENINF_N3D_CNT0;                                 /* 00D0, 0x1A0400D0 */
	SENINF_REG_N3D_CNT1                             SENINF_N3D_CNT1;                                 /* 00D4, 0x1A0400D4 */
	SENINF_REG_N3D_DBG                              SENINF_N3D_DBG;                                  /* 00D8, 0x1A0400D8 */
	SENINF_REG_N3D_DIFF_THR                         SENINF_N3D_DIFF_THR;                             /* 00DC, 0x1A0400DC */
	SENINF_REG_N3D_DIFF_CNT                         SENINF_N3D_DIFF_CNT;                             /* 00E0, 0x1A0400E0 */
	SENINF_REG_N3D_DBG_1                            SENINF_N3D_DBG_1;                                /* 00E4, 0x1A0400E4 */
	SENINF_REG_N3D_VALID_TG_CNT                     SENINF_N3D_VALID_TG_CNT;                         /* 00E8, 0x1A0400E8 */
	SENINF_REG_N3D_SYNC_A_PERIOD                    SENINF_N3D_SYNC_A_PERIOD;                        /* 00EC, 0x1A0400EC */
	SENINF_REG_N3D_SYNC_B_PERIOD                    SENINF_N3D_SYNC_B_PERIOD;                        /* 00F0, 0x1A0400F0 */
	SENINF_REG_N3D_SYNC_A_PULSE_LEN                 SENINF_N3D_SYNC_A_PULSE_LEN;                     /* 00F4, 0x1A0400F4 */
	SENINF_REG_N3D_SYNC_B_PULSE_LEN                 SENINF_N3D_SYNC_B_PULSE_LEN;                     /* 00F8, 0x1A0400F8 */
	UINT32                                          rsv_00FC;                                        /* 00FC, 0x1A0400FC */
	SENINF1_REG_CTRL                                SENINF1_CTRL;                                    /* 0100, 0x1A040100 */
	UINT32                                          rsv_0104[7];                                     /* 0104..011F, 0x1A040104..1A04011F */
	SENINF1_REG_MUX_CTRL                            SENINF1_MUX_CTRL;                                /* 0120, 0x1A040120 */
	SENINF1_REG_MUX_INTEN                           SENINF1_MUX_INTEN;                               /* 0124, 0x1A040124 */
	SENINF1_REG_MUX_INTSTA                          SENINF1_MUX_INTSTA;                              /* 0128, 0x1A040128 */
	SENINF1_REG_MUX_SIZE                            SENINF1_MUX_SIZE;                                /* 012C, 0x1A04012C */
	SENINF1_REG_MUX_DEBUG_1                         SENINF1_MUX_DEBUG_1;                             /* 0130, 0x1A040130 */
	SENINF1_REG_MUX_DEBUG_2                         SENINF1_MUX_DEBUG_2;                             /* 0134, 0x1A040134 */
	SENINF1_REG_MUX_DEBUG_3                         SENINF1_MUX_DEBUG_3;                             /* 0138, 0x1A040138 */
	SENINF1_REG_MUX_DEBUG_4                         SENINF1_MUX_DEBUG_4;                             /* 013C, 0x1A04013C */
	SENINF1_REG_MUX_DEBUG_5                         SENINF1_MUX_DEBUG_5;                             /* 0140, 0x1A040140 */
	SENINF1_REG_MUX_DEBUG_6                         SENINF1_MUX_DEBUG_6;                             /* 0144, 0x1A040144 */
	SENINF1_REG_MUX_DEBUG_7                         SENINF1_MUX_DEBUG_7;                             /* 0148, 0x1A040148 */
	SENINF1_REG_MUX_SPARE                           SENINF1_MUX_SPARE;                               /* 014C, 0x1A04014C */
	SENINF1_REG_MUX_DATA                            SENINF1_MUX_DATA;                                /* 0150, 0x1A040150 */
	SENINF1_REG_MUX_DATA_CNT                        SENINF1_MUX_DATA_CNT;                            /* 0154, 0x1A040154 */
	SENINF1_REG_MUX_CROP                            SENINF1_MUX_CROP;                                /* 0158, 0x1A040158 */
	UINT32                                          rsv_015C[41];                                    /* 015C..01FF, 0x1A04015C..1A0401FF */
	SENINF_REG_TG1_PH_CNT                           SENINF_TG1_PH_CNT;                               /* 0200, 0x1A040200 */
	SENINF_REG_TG1_SEN_CK                           SENINF_TG1_SEN_CK;                               /* 0204, 0x1A040204 */
	SENINF_REG_TG1_TM_CTL                           SENINF_TG1_TM_CTL;                               /* 0208, 0x1A040208 */
	SENINF_REG_TG1_TM_SIZE                          SENINF_TG1_TM_SIZE;                              /* 020C, 0x1A04020C */
	SENINF_REG_TG1_TM_CLK                           SENINF_TG1_TM_CLK;                               /* 0210, 0x1A040210 */
	SENINF_REG_TG1_TM_STP                           SENINF_TG1_TM_STP;                               /* 0214, 0x1A040214 */
	UINT32                                          rsv_0218[58];                                    /* 0218..02FF, 0x1A040218..1A0402FF */
	MIPI_REG_RX_CON00_CSI0                          MIPI_RX_CON00_CSI0;                              /* 0300, 0x1A040300 */
	MIPI_REG_RX_CON04_CSI0                          MIPI_RX_CON04_CSI0;                              /* 0304, 0x1A040304 */
	MIPI_REG_RX_CON08_CSI0                          MIPI_RX_CON08_CSI0;                              /* 0308, 0x1A040308 */
	MIPI_REG_RX_CON0C_CSI0                          MIPI_RX_CON0C_CSI0;                              /* 030C, 0x1A04030C */
	MIPI_REG_RX_CON10_CSI0                          MIPI_RX_CON10_CSI0;                              /* 0310, 0x1A040310 */
	UINT32                                          rsv_0314[4];                                     /* 0314..0323, 0x1A040314..1A040323 */
	MIPI_REG_RX_CON24_CSI0                          MIPI_RX_CON24_CSI0;                              /* 0324, 0x1A040324 */
	MIPI_REG_RX_CON28_CSI0                          MIPI_RX_CON28_CSI0;                              /* 0328, 0x1A040328 */
	UINT32                                          rsv_032C[2];                                     /* 032C..0333, 0x1A04032C..1A040333 */
	MIPI_REG_RX_CON34_CSI0                          MIPI_RX_CON34_CSI0;                              /* 0334, 0x1A040334 */
	MIPI_REG_RX_CON38_CSI0                          MIPI_RX_CON38_CSI0;                              /* 0338, 0x1A040338 */
	MIPI_REG_RX_CON3C_CSI0                          MIPI_RX_CON3C_CSI0;                              /* 033C, 0x1A04033C */
	MIPI_REG_RX_CON40_CSI0                          MIPI_RX_CON40_CSI0;                              /* 0340, 0x1A040340 */
	MIPI_REG_RX_CON44_CSI0                          MIPI_RX_CON44_CSI0;                              /* 0344, 0x1A040344 */
	MIPI_REG_RX_CON48_CSI0                          MIPI_RX_CON48_CSI0;                              /* 0348, 0x1A040348 */
	UINT32                                          rsv_034C;                                        /* 034C, 0x1A04034C */
	MIPI_REG_RX_CON50_CSI0                          MIPI_RX_CON50_CSI0;                              /* 0350, 0x1A040350 */
	UINT32                                          rsv_0354[3];                                     /* 0354..035F, 0x1A040354..1A04035F */
	SENINF1_REG_CSI2_CTRL                           SENINF1_CSI2_CTRL;                               /* 0360, 0x1A040360 */
	SENINF1_REG_CSI2_DELAY                          SENINF1_CSI2_DELAY;                              /* 0364, 0x1A040364 */
	SENINF1_REG_CSI2_INTEN                          SENINF1_CSI2_INTEN;                              /* 0368, 0x1A040368 */
	SENINF1_REG_CSI2_INTSTA                         SENINF1_CSI2_INTSTA;                             /* 036C, 0x1A04036C */
	SENINF1_REG_CSI2_ECCDBG                         SENINF1_CSI2_ECCDBG;                             /* 0370, 0x1A040370 */
	SENINF1_REG_CSI2_CRCDBG                         SENINF1_CSI2_CRCDBG;                             /* 0374, 0x1A040374 */
	SENINF1_REG_CSI2_DBG                            SENINF1_CSI2_DBG;                                /* 0378, 0x1A040378 */
	SENINF1_REG_CSI2_VER                            SENINF1_CSI2_VER;                                /* 037C, 0x1A04037C */
	SENINF1_REG_CSI2_SHORT_INFO                     SENINF1_CSI2_SHORT_INFO;                         /* 0380, 0x1A040380 */
	SENINF1_REG_CSI2_LNFSM                          SENINF1_CSI2_LNFSM;                              /* 0384, 0x1A040384 */
	SENINF1_REG_CSI2_LNMUX                          SENINF1_CSI2_LNMUX;                              /* 0388, 0x1A040388 */
	SENINF1_REG_CSI2_HSYNC_CNT                      SENINF1_CSI2_HSYNC_CNT;                          /* 038C, 0x1A04038C */
	SENINF1_REG_CSI2_CAL                            SENINF1_CSI2_CAL;                                /* 0390, 0x1A040390 */
	SENINF1_REG_CSI2_DS                             SENINF1_CSI2_DS;                                 /* 0394, 0x1A040394 */
	SENINF1_REG_CSI2_VS                             SENINF1_CSI2_VS;                                 /* 0398, 0x1A040398 */
	SENINF1_REG_CSI2_BIST                           SENINF1_CSI2_BIST;                               /* 039C, 0x1A04039C */
	SENINF1_REG_NCSI2_CTL                           SENINF1_NCSI2_CTL;                               /* 03A0, 0x1A0403A0 */
	SENINF1_REG_NCSI2_LNRC_TIMING                   SENINF1_NCSI2_LNRC_TIMING;                       /* 03A4, 0x1A0403A4 */
	SENINF1_REG_NCSI2_LNRD_TIMING                   SENINF1_NCSI2_LNRD_TIMING;                       /* 03A8, 0x1A0403A8 */
	SENINF1_REG_NCSI2_DPCM                          SENINF1_NCSI2_DPCM;                              /* 03AC, 0x1A0403AC */
	SENINF1_REG_NCSI2_INT_EN                        SENINF1_NCSI2_INT_EN;                            /* 03B0, 0x1A0403B0 */
	SENINF1_REG_NCSI2_INT_STATUS                    SENINF1_NCSI2_INT_STATUS;                        /* 03B4, 0x1A0403B4 */
	SENINF1_REG_NCSI2_DGB_SEL                       SENINF1_NCSI2_DGB_SEL;                           /* 03B8, 0x1A0403B8 */
	SENINF1_REG_NCSI2_DBG_PORT                      SENINF1_NCSI2_DBG_PORT;                          /* 03BC, 0x1A0403BC */
	SENINF1_REG_NCSI2_SPARE0                        SENINF1_NCSI2_SPARE0;                            /* 03C0, 0x1A0403C0 */
	SENINF1_REG_NCSI2_SPARE1                        SENINF1_NCSI2_SPARE1;                            /* 03C4, 0x1A0403C4 */
	SENINF1_REG_NCSI2_LNRC_FSM                      SENINF1_NCSI2_LNRC_FSM;                          /* 03C8, 0x1A0403C8 */
	SENINF1_REG_NCSI2_LNRD_FSM                      SENINF1_NCSI2_LNRD_FSM;                          /* 03CC, 0x1A0403CC */
	SENINF1_REG_NCSI2_FRAME_LINE_NUM                SENINF1_NCSI2_FRAME_LINE_NUM;                    /* 03D0, 0x1A0403D0 */
	SENINF1_REG_NCSI2_GENERIC_SHORT                 SENINF1_NCSI2_GENERIC_SHORT;                     /* 03D4, 0x1A0403D4 */
	SENINF1_REG_NCSI2_HSRX_DBG                      SENINF1_NCSI2_HSRX_DBG;                          /* 03D8, 0x1A0403D8 */
	SENINF1_REG_NCSI2_DI                            SENINF1_NCSI2_DI;                                /* 03DC, 0x1A0403DC */
	SENINF1_REG_NCSI2_HS_TRAIL                      SENINF1_NCSI2_HS_TRAIL;                          /* 03E0, 0x1A0403E0 */
	SENINF1_REG_NCSI2_DI_CTRL                       SENINF1_NCSI2_DI_CTRL;                           /* 03E4, 0x1A0403E4 */
	SENINF1_REG_NCSI2_DI_1                          SENINF1_NCSI2_DI_1;                              /* 03E8, 0x1A0403E8 */
	SENINF1_REG_NCSI2_DI_CTRL_1                     SENINF1_NCSI2_DI_CTRL_1;                         /* 03EC, 0x1A0403EC */
	SENINF1_REG_NCSI2_RAW10_DI_CTRL                 SENINF1_NCSI2_RAW10_DI_CTRL;                     /* 03F0, 0x1A0403F0 */
	SENINF1_REG_NCSI2_RAW12_DI_CTRL                 SENINF1_NCSI2_RAW12_DI_CTRL;                     /* 03F4, 0x1A0403F4 */
	SENINF1_REG_NCSI2_RAW14_DI_CTRL                 SENINF1_NCSI2_RAW14_DI_CTRL;                     /* 03F8, 0x1A0403F8 */
	UINT32                                          rsv_03FC[65];                                    /* 03FC..04FF, 0x1A0403FC..1A0404FF */
	SENINF2_REG_CTRL                                SENINF2_CTRL;                                    /* 0500, 0x1A040500 */
	UINT32                                          rsv_0504[7];                                     /* 0504..051F, 0x1A040504..1A04051F */
	SENINF2_REG_MUX_CTRL                            SENINF2_MUX_CTRL;                                /* 0520, 0x1A040520 */
	SENINF2_REG_MUX_INTEN                           SENINF2_MUX_INTEN;                               /* 0524, 0x1A040524 */
	SENINF2_REG_MUX_INTSTA                          SENINF2_MUX_INTSTA;                              /* 0528, 0x1A040528 */
	SENINF2_REG_MUX_SIZE                            SENINF2_MUX_SIZE;                                /* 052C, 0x1A04052C */
	SENINF2_REG_MUX_DEBUG_1                         SENINF2_MUX_DEBUG_1;                             /* 0530, 0x1A040530 */
	SENINF2_REG_MUX_DEBUG_2                         SENINF2_MUX_DEBUG_2;                             /* 0534, 0x1A040534 */
	SENINF2_REG_MUX_DEBUG_3                         SENINF2_MUX_DEBUG_3;                             /* 0538, 0x1A040538 */
	SENINF2_REG_MUX_DEBUG_4                         SENINF2_MUX_DEBUG_4;                             /* 053C, 0x1A04053C */
	SENINF2_REG_MUX_DEBUG_5                         SENINF2_MUX_DEBUG_5;                             /* 0540, 0x1A040540 */
	SENINF2_REG_MUX_DEBUG_6                         SENINF2_MUX_DEBUG_6;                             /* 0544, 0x1A040544 */
	SENINF2_REG_MUX_DEBUG_7                         SENINF2_MUX_DEBUG_7;                             /* 0548, 0x1A040548 */
	SENINF2_REG_MUX_SPARE                           SENINF2_MUX_SPARE;                               /* 054C, 0x1A04054C */
	SENINF2_REG_MUX_DATA                            SENINF2_MUX_DATA;                                /* 0550, 0x1A040550 */
	SENINF2_REG_MUX_DATA_CNT                        SENINF2_MUX_DATA_CNT;                            /* 0554, 0x1A040554 */
	SENINF2_REG_MUX_CROP                            SENINF2_MUX_CROP;                                /* 0558, 0x1A040558 */
	UINT32                                          rsv_055C[41];                                    /* 055C..05FF, 0x1A04055C..1A0405FF */
	SENINF_REG_TG2_PH_CNT                           SENINF_TG2_PH_CNT;                               /* 0600, 0x1A040600 */
	SENINF_REG_TG2_SEN_CK                           SENINF_TG2_SEN_CK;                               /* 0604, 0x1A040604 */
	SENINF_REG_TG2_TM_CTL                           SENINF_TG2_TM_CTL;                               /* 0608, 0x1A040608 */
	SENINF_REG_TG2_TM_SIZE                          SENINF_TG2_TM_SIZE;                              /* 060C, 0x1A04060C */
	SENINF_REG_TG2_TM_CLK                           SENINF_TG2_TM_CLK;                               /* 0610, 0x1A040610 */
	SENINF_REG_TG2_TM_STP                           SENINF_TG2_TM_STP;                               /* 0614, 0x1A040614 */
	UINT32                                          rsv_0618[58];                                    /* 0618..06FF, 0x1A040618..1A0406FF */
	MIPI_REG_RX_CON00_CSI1                          MIPI_RX_CON00_CSI1;                              /* 0700, 0x1A040700 */
	MIPI_REG_RX_CON04_CSI1                          MIPI_RX_CON04_CSI1;                              /* 0704, 0x1A040704 */
	MIPI_REG_RX_CON08_CSI1                          MIPI_RX_CON08_CSI1;                              /* 0708, 0x1A040708 */
	MIPI_REG_RX_CON0C_CSI1                          MIPI_RX_CON0C_CSI1;                              /* 070C, 0x1A04070C */
	MIPI_REG_RX_CON10_CSI1                          MIPI_RX_CON10_CSI1;                              /* 0710, 0x1A040710 */
	UINT32                                          rsv_0714[4];                                     /* 0714..0723, 0x1A040714..1A040723 */
	MIPI_REG_RX_CON24_CSI1                          MIPI_RX_CON24_CSI1;                              /* 0724, 0x1A040724 */
	MIPI_REG_RX_CON28_CSI1                          MIPI_RX_CON28_CSI1;                              /* 0728, 0x1A040728 */
	UINT32                                          rsv_072C[2];                                     /* 072C..0733, 0x1A04072C..1A040733 */
	MIPI_REG_RX_CON34_CSI1                          MIPI_RX_CON34_CSI1;                              /* 0734, 0x1A040734 */
	MIPI_REG_RX_CON38_CSI1                          MIPI_RX_CON38_CSI1;                              /* 0738, 0x1A040738 */
	MIPI_REG_RX_CON3C_CSI1                          MIPI_RX_CON3C_CSI1;                              /* 073C, 0x1A04073C */
	MIPI_REG_RX_CON40_CSI1                          MIPI_RX_CON40_CSI1;                              /* 0740, 0x1A040740 */
	MIPI_REG_RX_CON44_CSI1                          MIPI_RX_CON44_CSI1;                              /* 0744, 0x1A040744 */
	MIPI_REG_RX_CON48_CSI1                          MIPI_RX_CON48_CSI1;                              /* 0748, 0x1A040748 */
	UINT32                                          rsv_074C;                                        /* 074C, 0x1A04074C */
	MIPI_REG_RX_CON50_CSI1                          MIPI_RX_CON50_CSI1;                              /* 0750, 0x1A040750 */
	UINT32                                          rsv_0754[3];                                     /* 0754..075F, 0x1A040754..1A04075F */
	SENINF2_REG_CSI2_CTRL                           SENINF2_CSI2_CTRL;                               /* 0760, 0x1A040760 */
	SENINF2_REG_CSI2_DELAY                          SENINF2_CSI2_DELAY;                              /* 0764, 0x1A040764 */
	SENINF2_REG_CSI2_INTEN                          SENINF2_CSI2_INTEN;                              /* 0768, 0x1A040768 */
	SENINF2_REG_CSI2_INTSTA                         SENINF2_CSI2_INTSTA;                             /* 076C, 0x1A04076C */
	SENINF2_REG_CSI2_ECCDBG                         SENINF2_CSI2_ECCDBG;                             /* 0770, 0x1A040770 */
	SENINF2_REG_CSI2_CRCDBG                         SENINF2_CSI2_CRCDBG;                             /* 0774, 0x1A040774 */
	SENINF2_REG_CSI2_DBG                            SENINF2_CSI2_DBG;                                /* 0778, 0x1A040778 */
	SENINF2_REG_CSI2_VER                            SENINF2_CSI2_VER;                                /* 077C, 0x1A04077C */
	SENINF2_REG_CSI2_SHORT_INFO                     SENINF2_CSI2_SHORT_INFO;                         /* 0780, 0x1A040780 */
	SENINF2_REG_CSI2_LNFSM                          SENINF2_CSI2_LNFSM;                              /* 0784, 0x1A040784 */
	SENINF2_REG_CSI2_LNMUX                          SENINF2_CSI2_LNMUX;                              /* 0788, 0x1A040788 */
	SENINF2_REG_CSI2_HSYNC_CNT                      SENINF2_CSI2_HSYNC_CNT;                          /* 078C, 0x1A04078C */
	SENINF2_REG_CSI2_CAL                            SENINF2_CSI2_CAL;                                /* 0790, 0x1A040790 */
	SENINF2_REG_CSI2_DS                             SENINF2_CSI2_DS;                                 /* 0794, 0x1A040794 */
	SENINF2_REG_CSI2_VS                             SENINF2_CSI2_VS;                                 /* 0798, 0x1A040798 */
	SENINF2_REG_CSI2_BIST                           SENINF2_CSI2_BIST;                               /* 079C, 0x1A04079C */
	SENINF2_REG_NCSI2_CTL                           SENINF2_NCSI2_CTL;                               /* 07A0, 0x1A0407A0 */
	SENINF2_REG_NCSI2_LNRC_TIMING                   SENINF2_NCSI2_LNRC_TIMING;                       /* 07A4, 0x1A0407A4 */
	SENINF2_REG_NCSI2_LNRD_TIMING                   SENINF2_NCSI2_LNRD_TIMING;                       /* 07A8, 0x1A0407A8 */
	SENINF2_REG_NCSI2_DPCM                          SENINF2_NCSI2_DPCM;                              /* 07AC, 0x1A0407AC */
	SENINF2_REG_NCSI2_INT_EN                        SENINF2_NCSI2_INT_EN;                            /* 07B0, 0x1A0407B0 */
	SENINF2_REG_NCSI2_INT_STATUS                    SENINF2_NCSI2_INT_STATUS;                        /* 07B4, 0x1A0407B4 */
	SENINF2_REG_NCSI2_DGB_SEL                       SENINF2_NCSI2_DGB_SEL;                           /* 07B8, 0x1A0407B8 */
	SENINF2_REG_NCSI2_DBG_PORT                      SENINF2_NCSI2_DBG_PORT;                          /* 07BC, 0x1A0407BC */
	SENINF2_REG_NCSI2_SPARE0                        SENINF2_NCSI2_SPARE0;                            /* 07C0, 0x1A0407C0 */
	SENINF2_REG_NCSI2_SPARE1                        SENINF2_NCSI2_SPARE1;                            /* 07C4, 0x1A0407C4 */
	SENINF2_REG_NCSI2_LNRC_FSM                      SENINF2_NCSI2_LNRC_FSM;                          /* 07C8, 0x1A0407C8 */
	SENINF2_REG_NCSI2_LNRD_FSM                      SENINF2_NCSI2_LNRD_FSM;                          /* 07CC, 0x1A0407CC */
	SENINF2_REG_NCSI2_FRAME_LINE_NUM                SENINF2_NCSI2_FRAME_LINE_NUM;                    /* 07D0, 0x1A0407D0 */
	SENINF2_REG_NCSI2_GENERIC_SHORT                 SENINF2_NCSI2_GENERIC_SHORT;                     /* 07D4, 0x1A0407D4 */
	SENINF2_REG_NCSI2_HSRX_DBG                      SENINF2_NCSI2_HSRX_DBG;                          /* 07D8, 0x1A0407D8 */
	SENINF2_REG_NCSI2_DI                            SENINF2_NCSI2_DI;                                /* 07DC, 0x1A0407DC */
	SENINF2_REG_NCSI2_HS_TRAIL                      SENINF2_NCSI2_HS_TRAIL;                          /* 07E0, 0x1A0407E0 */
	SENINF2_REG_NCSI2_DI_CTRL                       SENINF2_NCSI2_DI_CTRL;                           /* 07E4, 0x1A0407E4 */
	SENINF2_REG_NCSI2_DI_1                          SENINF2_NCSI2_DI_1;                              /* 07E8, 0x1A0407E8 */
	SENINF2_REG_NCSI2_DI_CTRL_1                     SENINF2_NCSI2_DI_CTRL_1;                         /* 07EC, 0x1A0407EC */
	SENINF2_REG_NCSI2_RAW10_DI_CTRL                 SENINF2_NCSI2_RAW10_DI_CTRL;                     /* 07F0, 0x1A0407F0 */
	SENINF2_REG_NCSI2_RAW12_DI_CTRL                 SENINF2_NCSI2_RAW12_DI_CTRL;                     /* 07F4, 0x1A0407F4 */
	SENINF2_REG_NCSI2_RAW14_DI_CTRL                 SENINF2_NCSI2_RAW14_DI_CTRL;                     /* 07F8, 0x1A0407F8 */
	UINT32                                          rsv_07FC[65];                                    /* 07FC..08FF, 0x1A0407FC..1A0408FF */
	SENINF3_REG_CTRL                                SENINF3_CTRL;                                    /* 0900, 0x1A040900 */
	UINT32                                          rsv_0904[7];                                     /* 0904..091F, 0x1A040904..1A04091F */
	SENINF3_REG_MUX_CTRL                            SENINF3_MUX_CTRL;                                /* 0920, 0x1A040920 */
	SENINF3_REG_MUX_INTEN                           SENINF3_MUX_INTEN;                               /* 0924, 0x1A040924 */
	SENINF3_REG_MUX_INTSTA                          SENINF3_MUX_INTSTA;                              /* 0928, 0x1A040928 */
	SENINF3_REG_MUX_SIZE                            SENINF3_MUX_SIZE;                                /* 092C, 0x1A04092C */
	SENINF3_REG_MUX_DEBUG_1                         SENINF3_MUX_DEBUG_1;                             /* 0930, 0x1A040930 */
	SENINF3_REG_MUX_DEBUG_2                         SENINF3_MUX_DEBUG_2;                             /* 0934, 0x1A040934 */
	SENINF3_REG_MUX_DEBUG_3                         SENINF3_MUX_DEBUG_3;                             /* 0938, 0x1A040938 */
	SENINF3_REG_MUX_DEBUG_4                         SENINF3_MUX_DEBUG_4;                             /* 093C, 0x1A04093C */
	SENINF3_REG_MUX_DEBUG_5                         SENINF3_MUX_DEBUG_5;                             /* 0940, 0x1A040940 */
	SENINF3_REG_MUX_DEBUG_6                         SENINF3_MUX_DEBUG_6;                             /* 0944, 0x1A040944 */
	SENINF3_REG_MUX_DEBUG_7                         SENINF3_MUX_DEBUG_7;                             /* 0948, 0x1A040948 */
	SENINF3_REG_MUX_SPARE                           SENINF3_MUX_SPARE;                               /* 094C, 0x1A04094C */
	SENINF3_REG_MUX_DATA                            SENINF3_MUX_DATA;                                /* 0950, 0x1A040950 */
	SENINF3_REG_MUX_DATA_CNT                        SENINF3_MUX_DATA_CNT;                            /* 0954, 0x1A040954 */
	SENINF3_REG_MUX_CROP                            SENINF3_MUX_CROP;                                /* 0958, 0x1A040958 */
	UINT32                                          rsv_095C[41];                                    /* 095C..09FF, 0x1A04095C..1A0409FF */
	SENINF_REG_TG3_PH_CNT                           SENINF_TG3_PH_CNT;                               /* 0A00, 0x1A040A00 */
	SENINF_REG_TG3_SEN_CK                           SENINF_TG3_SEN_CK;                               /* 0A04, 0x1A040A04 */
	SENINF_REG_TG3_TM_CTL                           SENINF_TG3_TM_CTL;                               /* 0A08, 0x1A040A08 */
	SENINF_REG_TG3_TM_SIZE                          SENINF_TG3_TM_SIZE;                              /* 0A0C, 0x1A040A0C */
	SENINF_REG_TG3_TM_CLK                           SENINF_TG3_TM_CLK;                               /* 0A10, 0x1A040A10 */
	SENINF_REG_TG3_TM_STP                           SENINF_TG3_TM_STP;                               /* 0A14, 0x1A040A14 */
	UINT32                                          rsv_0A18[186];                                   /* 0A18..0CFF, 0x1A040A18..1A040CFF */
	SENINF4_REG_CTRL                                SENINF4_CTRL;                                    /* 0D00, 0x1A040D00 */
	UINT32                                          rsv_0D04[7];                                     /* 0D04..0D1F, 0x1A040D04..1A040D1F */
	SENINF4_REG_MUX_CTRL                            SENINF4_MUX_CTRL;                                /* 0D20, 0x1A040D20 */
	SENINF4_REG_MUX_INTEN                           SENINF4_MUX_INTEN;                               /* 0D24, 0x1A040D24 */
	SENINF4_REG_MUX_INTSTA                          SENINF4_MUX_INTSTA;                              /* 0D28, 0x1A040D28 */
	SENINF4_REG_MUX_SIZE                            SENINF4_MUX_SIZE;                                /* 0D2C, 0x1A040D2C */
	SENINF4_REG_MUX_DEBUG_1                         SENINF4_MUX_DEBUG_1;                             /* 0D30, 0x1A040D30 */
	SENINF4_REG_MUX_DEBUG_2                         SENINF4_MUX_DEBUG_2;                             /* 0D34, 0x1A040D34 */
	SENINF4_REG_MUX_DEBUG_3                         SENINF4_MUX_DEBUG_3;                             /* 0D38, 0x1A040D38 */
	SENINF4_REG_MUX_DEBUG_4                         SENINF4_MUX_DEBUG_4;                             /* 0D3C, 0x1A040D3C */
	SENINF4_REG_MUX_DEBUG_5                         SENINF4_MUX_DEBUG_5;                             /* 0D40, 0x1A040D40 */
	SENINF4_REG_MUX_DEBUG_6                         SENINF4_MUX_DEBUG_6;                             /* 0D44, 0x1A040D44 */
	SENINF4_REG_MUX_DEBUG_7                         SENINF4_MUX_DEBUG_7;                             /* 0D48, 0x1A040D48 */
	SENINF4_REG_MUX_SPARE                           SENINF4_MUX_SPARE;                               /* 0D4C, 0x1A040D4C */
	SENINF4_REG_MUX_DATA                            SENINF4_MUX_DATA;                                /* 0D50, 0x1A040D50 */
	SENINF4_REG_MUX_DATA_CNT                        SENINF4_MUX_DATA_CNT;                            /* 0D54, 0x1A040D54 */
	SENINF4_REG_MUX_CROP                            SENINF4_MUX_CROP;                                /* 0D58, 0x1A040D58 */
	UINT32                                          rsv_0D5C[41];                                    /* 0D5C..0DFF, 0x1A040D5C..1A040DFF */
	SENINF_REG_TG4_PH_CNT                           SENINF_TG4_PH_CNT;                               /* 0E00, 0x1A040E00 */
	SENINF_REG_TG4_SEN_CK                           SENINF_TG4_SEN_CK;                               /* 0E04, 0x1A040E04 */
	SENINF_REG_TG4_TM_CTL                           SENINF_TG4_TM_CTL;                               /* 0E08, 0x1A040E08 */
	SENINF_REG_TG4_TM_SIZE                          SENINF_TG4_TM_SIZE;                              /* 0E0C, 0x1A040E0C */
	SENINF_REG_TG4_TM_CLK                           SENINF_TG4_TM_CLK;                               /* 0E10, 0x1A040E10 */
	SENINF_REG_TG4_TM_STP                           SENINF_TG4_TM_STP;                               /* 0E14, 0x1A040E14 */
	UINT32                                          rsv_0E18[42];                                    /* 0E18..0EBF, 0x1A040E18..1A040EBF */
	CCIR656_REG_CTL                                 CCIR656_CTL;                                     /* 0EC0, 0x1A040EC0 */
	CCIR656_REG_H                                   CCIR656_H;                                       /* 0EC4, 0x1A040EC4 */
	CCIR656_REG_PTGEN_H_1                           CCIR656_PTGEN_H_1;                               /* 0EC8, 0x1A040EC8 */
	CCIR656_REG_PTGEN_H_2                           CCIR656_PTGEN_H_2;                               /* 0ECC, 0x1A040ECC */
	CCIR656_REG_PTGEN_V_1                           CCIR656_PTGEN_V_1;                               /* 0ED0, 0x1A040ED0 */
	CCIR656_REG_PTGEN_V_2                           CCIR656_PTGEN_V_2;                               /* 0ED4, 0x1A040ED4 */
	CCIR656_REG_PTGEN_CTL1                          CCIR656_PTGEN_CTL1;                              /* 0ED8, 0x1A040ED8 */
	CCIR656_REG_PTGEN_CTL2                          CCIR656_PTGEN_CTL2;                              /* 0EDC, 0x1A040EDC */
	CCIR656_REG_PTGEN_CTL3                          CCIR656_PTGEN_CTL3;                              /* 0EE0, 0x1A040EE0 */
	CCIR656_REG_STATUS                              CCIR656_STATUS;                                  /* 0EE4, 0x1A040EE4 */
	UINT32                                          rsv_0EE8[142];                                   /* 0EE8..111F, 0x1A040EE8..1A04111F */
	SENINF5_REG_MUX_CTRL                            SENINF5_MUX_CTRL;                                /* 1120, 0x1A041120 */
	SENINF5_REG_MUX_INTEN                           SENINF5_MUX_INTEN;                               /* 1124, 0x1A041124 */
	SENINF5_REG_MUX_INTSTA                          SENINF5_MUX_INTSTA;                              /* 1128, 0x1A041128 */
	SENINF5_REG_MUX_SIZE                            SENINF5_MUX_SIZE;                                /* 112C, 0x1A04112C */
	SENINF5_REG_MUX_DEBUG_1                         SENINF5_MUX_DEBUG_1;                             /* 1130, 0x1A041130 */
	SENINF5_REG_MUX_DEBUG_2                         SENINF5_MUX_DEBUG_2;                             /* 1134, 0x1A041134 */
	SENINF5_REG_MUX_DEBUG_3                         SENINF5_MUX_DEBUG_3;                             /* 1138, 0x1A041138 */
	SENINF5_REG_MUX_DEBUG_4                         SENINF5_MUX_DEBUG_4;                             /* 113C, 0x1A04113C */
	SENINF5_REG_MUX_DEBUG_5                         SENINF5_MUX_DEBUG_5;                             /* 1140, 0x1A041140 */
	SENINF5_REG_MUX_DEBUG_6                         SENINF5_MUX_DEBUG_6;                             /* 1144, 0x1A041144 */
	SENINF5_REG_MUX_DEBUG_7                         SENINF5_MUX_DEBUG_7;                             /* 1148, 0x1A041148 */
	SENINF5_REG_MUX_SPARE                           SENINF5_MUX_SPARE;                               /* 114C, 0x1A04114C */
	SENINF5_REG_MUX_DATA                            SENINF5_MUX_DATA;                                /* 1150, 0x1A041150 */
	SENINF5_REG_MUX_DATA_CNT                        SENINF5_MUX_DATA_CNT;                            /* 1154, 0x1A041154 */
	SENINF5_REG_MUX_CROP                            SENINF5_MUX_CROP;                                /* 1158, 0x1A041158 */
	UINT32                                          rsv_115C[241];                                   /* 115C..151F, 0x1A04115C..1A04151F */
	SENINF6_REG_MUX_CTRL                            SENINF6_MUX_CTRL;                                /* 1520, 0x1A041520 */
	SENINF6_REG_MUX_INTEN                           SENINF6_MUX_INTEN;                               /* 1524, 0x1A041524 */
	SENINF6_REG_MUX_INTSTA                          SENINF6_MUX_INTSTA;                              /* 1528, 0x1A041528 */
	SENINF6_REG_MUX_SIZE                            SENINF6_MUX_SIZE;                                /* 152C, 0x1A04152C */
	SENINF6_REG_MUX_DEBUG_1                         SENINF6_MUX_DEBUG_1;                             /* 1530, 0x1A041530 */
	SENINF6_REG_MUX_DEBUG_2                         SENINF6_MUX_DEBUG_2;                             /* 1534, 0x1A041534 */
	SENINF6_REG_MUX_DEBUG_3                         SENINF6_MUX_DEBUG_3;                             /* 1538, 0x1A041538 */
	SENINF6_REG_MUX_DEBUG_4                         SENINF6_MUX_DEBUG_4;                             /* 153C, 0x1A04153C */
	SENINF6_REG_MUX_DEBUG_5                         SENINF6_MUX_DEBUG_5;                             /* 1540, 0x1A041540 */
	SENINF6_REG_MUX_DEBUG_6                         SENINF6_MUX_DEBUG_6;                             /* 1544, 0x1A041544 */
	SENINF6_REG_MUX_DEBUG_7                         SENINF6_MUX_DEBUG_7;                             /* 1548, 0x1A041548 */
	SENINF6_REG_MUX_SPARE                           SENINF6_MUX_SPARE;                               /* 154C, 0x1A04154C */
	SENINF6_REG_MUX_DATA                            SENINF6_MUX_DATA;                                /* 1550, 0x1A041550 */
	SENINF6_REG_MUX_DATA_CNT                        SENINF6_MUX_DATA_CNT;                            /* 1554, 0x1A041554 */
	SENINF6_REG_MUX_CROP                            SENINF6_MUX_CROP;                                /* 1558, 0x1A041558 */
	UINT32                                          rsv_155C[241];                                   /* 155C..191F, 0x1A04155C..1A04191F */
	SENINF7_REG_MUX_CTRL                            SENINF7_MUX_CTRL;                                /* 1920, 0x1A041920 */
	SENINF7_REG_MUX_INTEN                           SENINF7_MUX_INTEN;                               /* 1924, 0x1A041924 */
	SENINF7_REG_MUX_INTSTA                          SENINF7_MUX_INTSTA;                              /* 1928, 0x1A041928 */
	SENINF7_REG_MUX_SIZE                            SENINF7_MUX_SIZE;                                /* 192C, 0x1A04192C */
	SENINF7_REG_MUX_DEBUG_1                         SENINF7_MUX_DEBUG_1;                             /* 1930, 0x1A041930 */
	SENINF7_REG_MUX_DEBUG_2                         SENINF7_MUX_DEBUG_2;                             /* 1934, 0x1A041934 */
	SENINF7_REG_MUX_DEBUG_3                         SENINF7_MUX_DEBUG_3;                             /* 1938, 0x1A041938 */
	SENINF7_REG_MUX_DEBUG_4                         SENINF7_MUX_DEBUG_4;                             /* 193C, 0x1A04193C */
	SENINF7_REG_MUX_DEBUG_5                         SENINF7_MUX_DEBUG_5;                             /* 1940, 0x1A041940 */
	SENINF7_REG_MUX_DEBUG_6                         SENINF7_MUX_DEBUG_6;                             /* 1944, 0x1A041944 */
	SENINF7_REG_MUX_DEBUG_7                         SENINF7_MUX_DEBUG_7;                             /* 1948, 0x1A041948 */
	SENINF7_REG_MUX_SPARE                           SENINF7_MUX_SPARE;                               /* 194C, 0x1A04194C */
	SENINF7_REG_MUX_DATA                            SENINF7_MUX_DATA;                                /* 1950, 0x1A041950 */
	SENINF7_REG_MUX_DATA_CNT                        SENINF7_MUX_DATA_CNT;                            /* 1954, 0x1A041954 */
	SENINF7_REG_MUX_CROP                            SENINF7_MUX_CROP;                                /* 1958, 0x1A041958 */
	UINT32                                          rsv_195C[241];                                   /* 195C..1D1F, 0x1A04195C..1A041D1F */
	SENINF8_REG_MUX_CTRL                            SENINF8_MUX_CTRL;                                /* 1D20, 0x1A041D20 */
	SENINF8_REG_MUX_INTEN                           SENINF8_MUX_INTEN;                               /* 1D24, 0x1A041D24 */
	SENINF8_REG_MUX_INTSTA                          SENINF8_MUX_INTSTA;                              /* 1D28, 0x1A041D28 */
	SENINF8_REG_MUX_SIZE                            SENINF8_MUX_SIZE;                                /* 1D2C, 0x1A041D2C */
	SENINF8_REG_MUX_DEBUG_1                         SENINF8_MUX_DEBUG_1;                             /* 1D30, 0x1A041D30 */
	SENINF8_REG_MUX_DEBUG_2                         SENINF8_MUX_DEBUG_2;                             /* 1D34, 0x1A041D34 */
	SENINF8_REG_MUX_DEBUG_3                         SENINF8_MUX_DEBUG_3;                             /* 1D38, 0x1A041D38 */
	SENINF8_REG_MUX_DEBUG_4                         SENINF8_MUX_DEBUG_4;                             /* 1D3C, 0x1A041D3C */
	SENINF8_REG_MUX_DEBUG_5                         SENINF8_MUX_DEBUG_5;                             /* 1D40, 0x1A041D40 */
	SENINF8_REG_MUX_DEBUG_6                         SENINF8_MUX_DEBUG_6;                             /* 1D44, 0x1A041D44 */
	SENINF8_REG_MUX_DEBUG_7                         SENINF8_MUX_DEBUG_7;                             /* 1D48, 0x1A041D48 */
	SENINF8_REG_MUX_SPARE                           SENINF8_MUX_SPARE;                               /* 1D4C, 0x1A041D4C */
	SENINF8_REG_MUX_DATA                            SENINF8_MUX_DATA;                                /* 1D50, 0x1A041D50 */
	SENINF8_REG_MUX_DATA_CNT                        SENINF8_MUX_DATA_CNT;                            /* 1D54, 0x1A041D54 */
	SENINF8_REG_MUX_CROP                            SENINF8_MUX_CROP;                                /* 1D58, 0x1A041D58 */
	UINT32                                          rsv_1D5C[20];                                    /* 1D5C..1DAB, 1A041D5C..1A041DAB */
}seninf_reg_t;
#endif
/* temp use, NEED TO REMOVE IT */
#define ISP_BASE_HW     0x15000000
#define ISP_BASE_RANGE  0x60000
/* auto insert ralf auto gen above */

#endif // _ISP_REG_H_
